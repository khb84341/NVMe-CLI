!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := ${NAME}$/;"	m
ABSOLUTE_ZERO_CELSIUS	util/types.h	12;"	d
ADD_SMART_ITEMS	plugins/shannon/shannon-nvme.c	/^	ADD_SMART_ITEMS,$/;"	e	enum:__anon7	file:
AF_ALG	nvme-rpmb.c	41;"	d	file:
AMZN_NVME	plugins/amzn/amzn-nvme.h	6;"	d
ARGS	libnvme-wrap.c	14;"	d	file:
ARRAY_LABEL_LEN	plugins/netapp/netapp-nvme.c	75;"	d	file:
ARRAY_NAME_LEN	plugins/dell/dell-nvme.c	18;"	d	file:
ARRAY_NAME_LEN	plugins/huawei/huawei-nvme.c	41;"	d	file:
ARRAY_SIZE	common.h	9;"	d
ARRAY_SIZE	unit/test-argconfig-parse.c	12;"	d	file:
ARRAY_SIZE	unit/test-suffix-binary-parse.c	11;"	d	file:
ARRAY_SIZE	unit/test-suffix-si-parse.c	12;"	d	file:
ARRAY_SIZE	unit/test-uint128-si.c	9;"	d	file:
ARRAY_SIZE	unit/test-uint128.c	9;"	d	file:
ASSERTLOG	plugins/solidigm/solidigm-internal-logs.c	/^	ASSERTLOG = 2,$/;"	e	enum:log_type	file:
AttrCF	plugins/seagate/seagate-diag.h	/^   vendor_log_page_CF_Attr      AttrCF;$/;"	m	struct:_vendor_log_page_CF
AttributeNumber	plugins/seagate/seagate-diag.h	/^   __u8  AttributeNumber;                                      $/;"	m	struct:_SmartVendorSpecific
AttributeNumber	plugins/seagate/seagate-diag.h	/^   __u8  AttributeNumber;         $/;"	m	struct:vendor_smart_attribute_data
BASE_RANGE_BITS_4_0	plugins/solidigm/solidigm-latency-tracking.c	25;"	d	file:
BASE_RANGE_BITS_4_1	plugins/solidigm/solidigm-latency-tracking.c	26;"	d	file:
BE16_TO_CPU	ccan/ccan/endian/endian.h	227;"	d
BE16_TO_CPU	ccan/ccan/endian/endian.h	235;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	221;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	234;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	215;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	233;"	d
BE_scan_unc_cnt	plugins/inspur/inspur-utils.h	/^    __u32 BE_scan_unc_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
BINARY	nvme.h	/^	BINARY	= 1 << 3,	\/* binary dump raw bytes *\/$/;"	e	enum:nvme_print_flags
BITS_IN_BYTE	plugins/solidigm/solidigm-telemetry/data-area.c	17;"	d	file:
BSWAP_16	ccan/ccan/endian/endian.h	18;"	d
BSWAP_32	ccan/ccan/endian/endian.h	33;"	d
BSWAP_64	ccan/ccan/endian/endian.h	50;"	d
BUCKET_LABEL_MAX_SIZE	plugins/solidigm/solidigm-latency-tracking.c	58;"	d	file:
BUCKET_LIST_SIZE_4_0	plugins/solidigm/solidigm-latency-tracking.c	22;"	d	file:
BUCKET_LIST_SIZE_4_1	plugins/solidigm/solidigm-latency-tracking.c	23;"	d	file:
BUFSIZE	plugins/intel/intel-nvme.c	525;"	d	file:
BUILD-DIR	Makefile	/^BUILD-DIR     := .build$/;"	m
BUILD_ASSERT	ccan/ccan/build_assert/build_assert.h	22;"	d
BUILD_ASSERT_OR_ZERO	ccan/ccan/build_assert/build_assert.h	37;"	d
BYTE_OF_128	plugins/inspur/inspur-utils.h	11;"	d
BYTE_OF_16K	plugins/inspur/inspur-utils.h	7;"	d
BYTE_OF_256	plugins/inspur/inspur-utils.h	10;"	d
BYTE_OF_32K	plugins/inspur/inspur-utils.h	6;"	d
BYTE_OF_4K	plugins/inspur/inspur-utils.h	8;"	d
BYTE_OF_512	plugins/inspur/inspur-utils.h	9;"	d
BYTE_OF_64K	plugins/inspur/inspur-utils.h	5;"	d
BadDllpErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   BadDllpErrCnt;$/;"	m	struct:pcie_error_log_page
BadTlpErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   BadTlpErrCnt;$/;"	m	struct:pcie_error_log_page
BootloaderVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	char BootloaderVersion[12];	\/\/! Bootloader version string$/;"	m	struct:reason_indentifier_1_0	file:
BootloaderVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	char BootloaderVersion[12];	\/\/! Bootloader version string$/;"	m	struct:reason_indentifier_1_1	file:
C0_GUID_LENGTH	plugins/ocp/ocp-smart-extended-log.c	20;"	d	file:
C0_SMART_CLOUD_ATTR_LEN	plugins/ocp/ocp-smart-extended-log.c	18;"	d	file:
C0_SMART_CLOUD_ATTR_OPCODE	plugins/ocp/ocp-smart-extended-log.c	19;"	d	file:
C0_log_size	plugins/micron/micron-nvme.c	31;"	d	file:
C1_ERROR_RECOVERY_LOG_BUF_LEN	plugins/ocp/ocp-nvme.c	1438;"	d	file:
C1_ERROR_RECOVERY_OPCODE	plugins/ocp/ocp-nvme.c	1439;"	d	file:
C1_ERROR_RECOVERY_VERSION	plugins/ocp/ocp-nvme.c	1440;"	d	file:
C1_GUID_LENGTH	plugins/ocp/ocp-nvme.c	1441;"	d	file:
C2_log_size	plugins/micron/micron-nvme.c	32;"	d	file:
C3_ACTIVE_BUCKET_TIMER_INCREMENT	plugins/ocp/ocp-nvme.c	47;"	d	file:
C3_ACTIVE_THRESHOLD_INCREMENT	plugins/ocp/ocp-nvme.c	48;"	d	file:
C3_BUCKET_NUM	plugins/ocp/ocp-nvme.c	50;"	d	file:
C3_GUID_LENGTH	plugins/ocp/ocp-nvme.c	44;"	d	file:
C3_LATENCY_MON_LOG_BUF_LEN	plugins/ocp/ocp-nvme.c	41;"	d	file:
C3_LATENCY_MON_OPCODE	plugins/ocp/ocp-nvme.c	42;"	d	file:
C3_LATENCY_MON_VERSION	plugins/ocp/ocp-nvme.c	43;"	d	file:
C3_MINIMUM_WINDOW_INCREMENT	plugins/ocp/ocp-nvme.c	49;"	d	file:
C4_DEV_CAP_REQ_LEN	plugins/ocp/ocp-nvme.c	1658;"	d	file:
C4_DEV_CAP_REQ_OPCODE	plugins/ocp/ocp-nvme.c	1659;"	d	file:
C4_DEV_CAP_REQ_VERSION	plugins/ocp/ocp-nvme.c	1660;"	d	file:
C4_GUID_LENGTH	plugins/ocp/ocp-nvme.c	1661;"	d	file:
C5_GUID_LENGTH	plugins/ocp/ocp-nvme.c	1232;"	d	file:
C5_NUM_UNSUPPORTED_REQ_ENTRIES	plugins/ocp/ocp-nvme.c	1236;"	d	file:
C5_UNSUPPORTED_REQS_LEN	plugins/ocp/ocp-nvme.c	1233;"	d	file:
C5_UNSUPPORTED_REQS_LOG_VERSION	plugins/ocp/ocp-nvme.c	1235;"	d	file:
C5_UNSUPPORTED_REQS_OPCODE	plugins/ocp/ocp-nvme.c	1234;"	d	file:
C5_log_size	plugins/micron/micron-nvme.c	30;"	d	file:
CCAN_BUILD_ASSERT_H	ccan/ccan/build_assert/build_assert.h	3;"	d
CCAN_CHECK_TYPE_H	ccan/ccan/check_type/check_type.h	3;"	d
CCAN_COMPILER_H	ccan/ccan/compiler/compiler.h	3;"	d
CCAN_CONTAINER_OF_H	ccan/ccan/container_of/container_of.h	3;"	d
CCAN_ENDIAN_H	ccan/ccan/endian/endian.h	3;"	d
CCAN_HASH_H	ccan/ccan/hash/hash.h	3;"	d
CCAN_HTABLE_H	ccan/ccan/htable/htable.h	3;"	d
CCAN_HTABLE_TYPE_H	ccan/ccan/htable/htable_type.h	3;"	d
CCAN_LIKELY_H	ccan/ccan/likely/likely.h	3;"	d
CCAN_LIST_H	ccan/ccan/list/list.h	3;"	d
CCAN_SHORT_TYPES_H	ccan/ccan/short_types/short_types.h	3;"	d
CCAN_STRSET_H	ccan/ccan/strset/strset.h	2;"	d
CCAN_STR_DEBUG_H	ccan/ccan/str/str_debug.h	3;"	d
CCAN_STR_H	ccan/ccan/str/str.h	3;"	d
CCAN_TYPESAFE_CB_H	ccan/ccan/typesafe_cb/typesafe_cb.h	3;"	d
CFG_BYTE	util/argconfig.h	/^	CFG_BYTE,$/;"	e	enum:argconfig_types
CFG_DOUBLE	util/argconfig.h	/^	CFG_DOUBLE,$/;"	e	enum:argconfig_types
CFG_FLAG	util/argconfig.h	/^	CFG_FLAG,$/;"	e	enum:argconfig_types
CFG_INCREMENT	util/argconfig.h	/^	CFG_INCREMENT,$/;"	e	enum:argconfig_types
CFG_INT	util/argconfig.h	/^	CFG_INT,$/;"	e	enum:argconfig_types
CFG_LONG	util/argconfig.h	/^	CFG_LONG,$/;"	e	enum:argconfig_types
CFG_LONG_SUFFIX	util/argconfig.h	/^	CFG_LONG_SUFFIX,$/;"	e	enum:argconfig_types
CFG_POSITIVE	util/argconfig.h	/^	CFG_POSITIVE,$/;"	e	enum:argconfig_types
CFG_SHORT	util/argconfig.h	/^	CFG_SHORT,$/;"	e	enum:argconfig_types
CFG_SIZE	util/argconfig.h	/^	CFG_SIZE,$/;"	e	enum:argconfig_types
CFG_STRING	util/argconfig.h	/^	CFG_STRING,$/;"	e	enum:argconfig_types
CMD_HEADER_MULTI_READ	define_cmd.h	11;"	d
CMD_HEADER_MULTI_READ	define_cmd.h	17;"	d
CMD_INCLUDE	define_cmd.h	9;"	d
CMD_INC_FILE	nvme-builtin.h	2;"	d
CMD_INC_FILE	nvme-builtin.h	3;"	d
CMD_INC_FILE	plugins/amzn/amzn-nvme.h	2;"	d
CMD_INC_FILE	plugins/amzn/amzn-nvme.h	3;"	d
CMD_INC_FILE	plugins/dell/dell-nvme.h	2;"	d
CMD_INC_FILE	plugins/dell/dell-nvme.h	3;"	d
CMD_INC_FILE	plugins/dera/dera-nvme.h	2;"	d
CMD_INC_FILE	plugins/dera/dera-nvme.h	3;"	d
CMD_INC_FILE	plugins/fdp/fdp.h	2;"	d
CMD_INC_FILE	plugins/fdp/fdp.h	3;"	d
CMD_INC_FILE	plugins/huawei/huawei-nvme.h	2;"	d
CMD_INC_FILE	plugins/huawei/huawei-nvme.h	3;"	d
CMD_INC_FILE	plugins/innogrit/innogrit-nvme.h	2;"	d
CMD_INC_FILE	plugins/innogrit/innogrit-nvme.h	3;"	d
CMD_INC_FILE	plugins/inspur/inspur-nvme.h	2;"	d
CMD_INC_FILE	plugins/inspur/inspur-nvme.h	3;"	d
CMD_INC_FILE	plugins/intel/intel-nvme.h	2;"	d
CMD_INC_FILE	plugins/intel/intel-nvme.h	3;"	d
CMD_INC_FILE	plugins/memblaze/memblaze-nvme.h	2;"	d
CMD_INC_FILE	plugins/memblaze/memblaze-nvme.h	3;"	d
CMD_INC_FILE	plugins/micron/micron-nvme.h	2;"	d
CMD_INC_FILE	plugins/micron/micron-nvme.h	3;"	d
CMD_INC_FILE	plugins/nbft/nbft-plugin.h	2;"	d
CMD_INC_FILE	plugins/nbft/nbft-plugin.h	3;"	d
CMD_INC_FILE	plugins/netapp/netapp-nvme.h	2;"	d
CMD_INC_FILE	plugins/netapp/netapp-nvme.h	3;"	d
CMD_INC_FILE	plugins/nvidia/nvidia-nvme.h	2;"	d
CMD_INC_FILE	plugins/nvidia/nvidia-nvme.h	3;"	d
CMD_INC_FILE	plugins/ocp/ocp-nvme.h	8;"	d
CMD_INC_FILE	plugins/ocp/ocp-nvme.h	9;"	d
CMD_INC_FILE	plugins/scaleflux/sfx-nvme.h	2;"	d
CMD_INC_FILE	plugins/scaleflux/sfx-nvme.h	3;"	d
CMD_INC_FILE	plugins/seagate/seagate-nvme.h	25;"	d
CMD_INC_FILE	plugins/seagate/seagate-nvme.h	26;"	d
CMD_INC_FILE	plugins/shannon/shannon-nvme.h	2;"	d
CMD_INC_FILE	plugins/shannon/shannon-nvme.h	3;"	d
CMD_INC_FILE	plugins/solidigm/solidigm-nvme.h	8;"	d
CMD_INC_FILE	plugins/solidigm/solidigm-nvme.h	9;"	d
CMD_INC_FILE	plugins/toshiba/toshiba-nvme.h	2;"	d
CMD_INC_FILE	plugins/toshiba/toshiba-nvme.h	3;"	d
CMD_INC_FILE	plugins/transcend/transcend-nvme.h	2;"	d
CMD_INC_FILE	plugins/transcend/transcend-nvme.h	3;"	d
CMD_INC_FILE	plugins/virtium/virtium-nvme.h	2;"	d
CMD_INC_FILE	plugins/virtium/virtium-nvme.h	3;"	d
CMD_INC_FILE	plugins/wdc/wdc-nvme.h	2;"	d
CMD_INC_FILE	plugins/wdc/wdc-nvme.h	3;"	d
CMD_INC_FILE	plugins/ymtc/ymtc-nvme.h	2;"	d
CMD_INC_FILE	plugins/ymtc/ymtc-nvme.h	3;"	d
CMD_INC_FILE	plugins/zns/zns.h	2;"	d
CMD_INC_FILE	plugins/zns/zns.h	3;"	d
CODE_0	plugins/toshiba/toshiba-nvme.c	/^	CODE_0 = 0x0D,$/;"	e	enum:__anon24	file:
CODE_1	plugins/toshiba/toshiba-nvme.c	/^	CODE_1 = 0x10$/;"	e	enum:__anon24	file:
COLD	ccan/ccan/compiler/compiler.h	20;"	d
COLD	ccan/ccan/compiler/compiler.h	22;"	d
COL_WIDTH	plugins/intel/intel-nvme.c	524;"	d	file:
COL_WIDTH	plugins/solidigm/solidigm-latency-tracking.c	57;"	d	file:
COMMAND_EFFECTS_C0	plugins/toshiba/toshiba-nvme.c	/^	COMMAND_EFFECTS_C0,$/;"	e	enum:LOG_PAGE_C0	file:
COMMAND_LIST	cmd.h	8;"	d
COMMAND_LIST	cmd.h	9;"	d
COMMAND_LIST	cmd_handler.h	15;"	d
COMMAND_LIST	cmd_handler.h	16;"	d
COMMAND_LIST	cmd_handler.h	52;"	d
COMMAND_LIST	cmd_handler.h	53;"	d
COMMAND_LIST	cmd_handler.h	72;"	d
COMMAND_LIST	cmd_handler.h	73;"	d
COMMAND_LIST	cmd_handler.h	93;"	d
COMMAND_LIST	cmd_handler.h	94;"	d
CONFIG_JSONC	.build/config.h	9;"	d
CONFIG_LIBHUGETLBFS	.build/config.h	12;"	d
CONST_FUNCTION	ccan/ccan/compiler/compiler.h	74;"	d
CONST_FUNCTION	ccan/ccan/compiler/compiler.h	76;"	d
CONTROLLER	plugins/solidigm/solidigm-internal-logs.c	/^	CONTROLLER$/;"	e	enum:telemetry_type	file:
CORRECT_PCIE_PORT0	plugins/memblaze/memblaze-utils.h	/^	\/*10*\/CORRECT_PCIE_PORT0,$/;"	e	enum:__anon11
CORRECT_PCIE_PORT1	plugins/memblaze/memblaze-utils.h	/^	\/*11*\/CORRECT_PCIE_PORT1,$/;"	e	enum:__anon11
CPU_TO_BE16	ccan/ccan/endian/endian.h	209;"	d
CPU_TO_BE16	ccan/ccan/endian/endian.h	232;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	203;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	231;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	197;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	230;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	163;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	186;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	157;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	185;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	151;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	184;"	d
CRC_ERR_CNT	plugins/shannon/shannon-nvme.c	/^	CRC_ERR_CNT,$/;"	e	enum:__anon7	file:
CREATE_CMD	define_cmd.h	19;"	d
CREATE_CMD	define_cmd.h	3;"	d
CREATE_CMD	nvme-rpmb.c	37;"	d	file:
CREATE_CMD	nvme.c	69;"	d	file:
CREATE_CMD	plugins/amzn/amzn-nvme.c	14;"	d	file:
CREATE_CMD	plugins/dell/dell-nvme.c	15;"	d	file:
CREATE_CMD	plugins/dera/dera-nvme.c	19;"	d	file:
CREATE_CMD	plugins/fdp/fdp.c	17;"	d	file:
CREATE_CMD	plugins/huawei/huawei-nvme.c	37;"	d	file:
CREATE_CMD	plugins/innogrit/innogrit-nvme.c	16;"	d	file:
CREATE_CMD	plugins/inspur/inspur-nvme.c	20;"	d	file:
CREATE_CMD	plugins/intel/intel-nvme.c	16;"	d	file:
CREATE_CMD	plugins/memblaze/memblaze-nvme.c	17;"	d	file:
CREATE_CMD	plugins/micron/micron-nvme.c	20;"	d	file:
CREATE_CMD	plugins/nbft/nbft-plugin.c	13;"	d	file:
CREATE_CMD	plugins/netapp/netapp-nvme.c	32;"	d	file:
CREATE_CMD	plugins/nvidia/nvidia-nvme.c	14;"	d	file:
CREATE_CMD	plugins/ocp/ocp-nvme.c	31;"	d	file:
CREATE_CMD	plugins/scaleflux/sfx-nvme.c	25;"	d	file:
CREATE_CMD	plugins/seagate/seagate-nvme.c	43;"	d	file:
CREATE_CMD	plugins/shannon/shannon-nvme.c	16;"	d	file:
CREATE_CMD	plugins/solidigm/solidigm-nvme.c	10;"	d	file:
CREATE_CMD	plugins/toshiba/toshiba-nvme.c	17;"	d	file:
CREATE_CMD	plugins/transcend/transcend-nvme.c	13;"	d	file:
CREATE_CMD	plugins/virtium/virtium-nvme.c	19;"	d	file:
CREATE_CMD	plugins/wdc/wdc-nvme.c	42;"	d	file:
CREATE_CMD	plugins/ymtc/ymtc-nvme.c	14;"	d	file:
CREATE_CMD	plugins/zns/zns.c	16;"	d	file:
CURRENT_LOG_FUNCTION_CODE	plugins/toshiba/toshiba-nvme.c	/^static const __u16 CURRENT_LOG_FUNCTION_CODE = 0x0001;$/;"	v	file:
CmpltnTOErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   CmpltnTOErrCnt;$/;"	m	struct:pcie_error_log_page
CommonChunkSize	plugins/micron/micron-nvme.c	37;"	d	file:
ContentSizeBytes	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint32_t ContentSizeBytes;$/;"	m	struct:toc_item	file:
CoreId	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint8_t CoreId;$/;"	m	struct:telemetry_object_header	file:
CplTlpCAErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   CplTlpCAErrCnt;$/;"	m	struct:pcie_error_log_page
CplTlpPoisonedErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   CplTlpPoisonedErrCnt;$/;"	m	struct:pcie_error_log_page
CplTlpURErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   CplTlpURErrCnt;$/;"	m	struct:pcie_error_log_page
D0_log_size	plugins/micron/micron-nvme.c	33;"	d	file:
DA	plugins/memblaze/memblaze-utils.h	180;"	d
DAI	plugins/memblaze/memblaze-utils.h	171;"	d
DARG	plugins/memblaze/memblaze-utils.h	196;"	d
DAS	plugins/memblaze/memblaze-utils.h	189;"	d
DC	plugins/memblaze/memblaze-utils.h	175;"	d
DD	plugins/memblaze/memblaze-utils.h	163;"	d
DE	plugins/memblaze/memblaze-utils.h	164;"	d
DEBRUIJN_IDX32	ccan/ccan/ilog/ilog.c	/^static UNNEEDED const unsigned char DEBRUIJN_IDX32[32]={$/;"	v	file:
DECLARE_CLEANUP_FUNC	util/cleanup.h	7;"	d
DEFAULT_PDC_ENABLED	.build/config.h	14;"	d
DEFAULT_TEST_NAME	plugins/virtium/virtium-nvme.c	28;"	d	file:
DEFINE_CLEANUP_FUNC	util/cleanup.h	10;"	d
DELL_NVME	plugins/dell/dell-nvme.h	6;"	d
DERA_NVME	plugins/dera/dera-nvme.h	6;"	d
DEVICE_SELF_TEST_C0	plugins/toshiba/toshiba-nvme.c	/^	DEVICE_SELF_TEST_C0,$/;"	e	enum:LOG_PAGE_C0	file:
DEVICE_STATUS_BUSY	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_BUSY = 0x06,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_CARD_READ_ONLY	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_CARD_READ_ONLY = 0x04,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_FATAL_ERROR	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_FATAL_ERROR = 0x05,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_FULL_REBUILDING	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_FULL_REBUILDING = 0x02,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_QUICK_REBUILDING	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_QUICK_REBUILDING = 0x01,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_RAW_REBUILDING	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_RAW_REBUILDING = 0x03,$/;"	e	enum:dera_device_status	file:
DEVICE_STATUS_READY	plugins/dera/dera-nvme.c	/^	DEVICE_STATUS_READY = 0x00,$/;"	e	enum:dera_device_status	file:
DEVICE_STAUTS_FW_COMMITING	plugins/dera/dera-nvme.c	/^	DEVICE_STAUTS_FW_COMMITING = 0x08,$/;"	e	enum:dera_device_status	file:
DEVICE_STAUTS_LOW_LEVEL_FORMAT	plugins/dera/dera-nvme.c	/^	DEVICE_STAUTS_LOW_LEVEL_FORMAT = 0x07,$/;"	e	enum:dera_device_status	file:
DEVICE_STAUTS__OVER_TEMPRATURE	plugins/dera/dera-nvme.c	/^	DEVICE_STAUTS__OVER_TEMPRATURE = 0x09,$/;"	e	enum:dera_device_status	file:
DI	plugins/memblaze/memblaze-utils.h	167;"	d
DO_PRINT_FLAG	plugins/memblaze/memblaze-nvme.c	33;"	d	file:
DPA	plugins/memblaze/memblaze-utils.h	182;"	d
DPC	plugins/memblaze/memblaze-utils.h	177;"	d
DPI	plugins/memblaze/memblaze-utils.h	169;"	d
DPS	plugins/memblaze/memblaze-utils.h	187;"	d
DP_CLASS_ID_FULL	plugins/seagate/seagate-diag.h	386;"	d
DR	plugins/memblaze/memblaze-utils.h	193;"	d
DS	plugins/memblaze/memblaze-utils.h	185;"	d
DW10_BAD_BLOCK	plugins/transcend/transcend-nvme.c	/^static const __u32 DW10_BAD_BLOCK = 0x400;$/;"	v	file:
DW10_SCT_COMMAND_TRANSFER	plugins/toshiba/toshiba-nvme.c	/^static const __u32 DW10_SCT_COMMAND_TRANSFER = 0x1;$/;"	v	file:
DW10_SCT_STATUS_COMMAND	plugins/toshiba/toshiba-nvme.c	/^static const __u32 DW10_SCT_STATUS_COMMAND;$/;"	v	file:
DW11_SCT_COMMAND_TRANSFER	plugins/toshiba/toshiba-nvme.c	/^static const __u32 DW11_SCT_COMMAND_TRANSFER;$/;"	v	file:
DW11_SCT_STATUS_COMMAND	plugins/toshiba/toshiba-nvme.c	/^static const __u32 DW11_SCT_STATUS_COMMAND;$/;"	v	file:
DW12_BAD_BLOCK	plugins/transcend/transcend-nvme.c	/^static const __u32 DW12_BAD_BLOCK = 0x5a;$/;"	v	file:
DWORD_SIZE	plugins/solidigm/solidigm-internal-logs.c	23;"	d	file:
DataArea1LastBlock	plugins/ocp/ocp-nvme.c	/^	__le16 DataArea1LastBlock;$/;"	m	struct:telemetry_initiated_log	file:
DataArea2LastBlock	plugins/ocp/ocp-nvme.c	/^	__le16 DataArea2LastBlock;$/;"	m	struct:telemetry_initiated_log	file:
DataArea3LastBlock	plugins/ocp/ocp-nvme.c	/^	__le16 DataArea3LastBlock;$/;"	m	struct:telemetry_initiated_log	file:
DataAreaSize	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint32_t DataAreaSize;$/;"	m	struct:data_area_header	file:
DataAvailable	plugins/ocp/ocp-nvme.c	/^	__u8  DataAvailable;$/;"	m	struct:telemetry_initiated_log	file:
DataFieldMapUid	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t DataFieldMapUid;       \/\/!The data field unique identifier value$/;"	m	struct:cod_item	file:
DataFieldOffset	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint64_t DataFieldOffset;$/;"	m	struct:cod_item	file:
DataFieldSizeInBytes	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t DataFieldSizeInBytes;$/;"	m	struct:cod_item	file:
DataGenerationNumber	plugins/ocp/ocp-nvme.c	/^	__u8  DataGenerationNumber;$/;"	m	struct:telemetry_initiated_log	file:
DataUnitsReadToDramNamespace	plugins/seagate/seagate-diag.h	/^   U128     DataUnitsReadToDramNamespace;      $/;"	m	struct:_vendor_log_page_CF_Attr
DataUnitsWrittenToDramNamespace	plugins/seagate/seagate-diag.h	/^   U128     DataUnitsWrittenToDramNamespace;   $/;"	m	struct:_vendor_log_page_CF_Attr
DllpProtocolErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   DllpProtocolErrCnt;$/;"	m	struct:pcie_error_log_page
Documentation	Documentation/asciidoctor-extensions.rb	/^  module Documentation$/;"	m	class:Nvme
DramCorrectableErrorCount	plugins/seagate/seagate-diag.h	/^   __u64    DramCorrectableErrorCount;         $/;"	m	struct:_vendor_log_page_CF_Attr
DramUncorrectableErrorCount	plugins/seagate/seagate-diag.h	/^   __u64    DramUncorrectableErrorCount;       $/;"	m	struct:_vendor_log_page_CF_Attr
DriveStatus	plugins/solidigm/solidigm-telemetry/header.c	/^	char DriveStatus[20];		\/\/! Drive Status String (for example: "Healthy", "*BAD_CONTEXT_2020")$/;"	m	struct:reason_indentifier_1_0	file:
DriveStatus	plugins/solidigm/solidigm-telemetry/header.c	/^	char DriveStatus[20];		\/\/! Drive Status String (for example: "Healthy", "*BAD_CONTEXT_2020")$/;"	m	struct:reason_indentifier_1_1	file:
DriveStatus	plugins/solidigm/solidigm-telemetry/header.c	/^	char DriveStatus[20];		\/\/! Drive Status String (for example: "Healthy", "*BAD_CONTEXT_2020")$/;"	m	struct:reason_indentifier_1_2	file:
DualPortReserved	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t DualPortReserved[40];	\/\/! Reserved for dual port$/;"	m	struct:reason_indentifier_1_2	file:
E1_log_size	plugins/micron/micron-nvme.c	35;"	d	file:
E2E_ERR_CNT	plugins/shannon/shannon-nvme.c	/^	E2E_ERR_CNT,$/;"	e	enum:__anon7	file:
ENDIAN_CAST	ccan/ccan/endian/endian.h	132;"	d
ENDIAN_CAST	ccan/ccan/endian/endian.h	135;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	133;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	136;"	d
ENTRY	cmd_handler.h	11;"	d
ENTRY	cmd_handler.h	12;"	d
ENTRY	cmd_handler.h	48;"	d
ENTRY	cmd_handler.h	49;"	d
ENTRY	cmd_handler.h	69;"	d
ENTRY	cmd_handler.h	70;"	d
ENTRY_SEL	cmd_handler.h	45;"	d
ENTRY_SEL	cmd_handler.h	46;"	d
ENTRY_WO_ALIAS	cmd_handler.h	41;"	d
ENTRY_WO_ALIAS	cmd_handler.h	42;"	d
ENTRY_W_ALIAS	cmd_handler.h	32;"	d
ENTRY_W_ALIAS	cmd_handler.h	33;"	d
EOL_ECCR	plugins/wdc/wdc-nvme.c	/^	EOL_ECCR                = 80,	\/* ECC Rate *\/$/;"	e	enum:__anon5	file:
EOL_EFC	plugins/wdc/wdc-nvme.c	/^	EOL_EFC                 = 100,	\/* Erase Fail Count *\/$/;"	e	enum:__anon5	file:
EOL_PFC	plugins/wdc/wdc-nvme.c	/^	EOL_PFC                 = 96,	\/* Program Fail Count *\/$/;"	e	enum:__anon5	file:
EOL_PLR	plugins/wdc/wdc-nvme.c	/^	EOL_PLR                 = 88,	\/* Percent Life Remaining *\/$/;"	e	enum:__anon5	file:
EOL_RBC	plugins/wdc/wdc-nvme.c	/^	EOL_RBC                 = 76,	\/* Realloc Block Count *\/$/;"	e	enum:__anon5	file:
EOL_RRER	plugins/wdc/wdc-nvme.c	/^	EOL_RRER                = 108,	\/* Raw Read Error Rate *\/$/;"	e	enum:__anon5	file:
EOL_RSVBC	plugins/wdc/wdc-nvme.c	/^	EOL_RSVBC               = 92,	\/* Reserved Block Count *\/$/;"	e	enum:__anon5	file:
EOL_WRA	plugins/wdc/wdc-nvme.c	/^	EOL_WRA                 = 84,	\/* Write Amp *\/$/;"	e	enum:__anon5	file:
ERASE_FAIL	plugins/memblaze/memblaze-utils.h	/^	\/*13*\/ERASE_FAIL,$/;"	e	enum:__anon11
ERASE_FAIL_CNT	plugins/shannon/shannon-nvme.c	/^	ERASE_FAIL_CNT,$/;"	e	enum:__anon7	file:
ERROR_LOG_C0	plugins/toshiba/toshiba-nvme.c	/^	ERROR_LOG_C0 = 0,$/;"	e	enum:LOG_PAGE_C0	file:
ERROR_MSG_LEN	nvme-print-json.c	12;"	d	file:
EVENTLOG	plugins/solidigm/solidigm-internal-logs.c	/^	EVENTLOG = 1,$/;"	e	enum:log_type	file:
EVLOG_SIG	plugins/innogrit/typedef.h	9;"	d
EXTENDED_SMART_INFO_T	plugins/seagate/seagate-diag.h	/^}  EXTENDED_SMART_INFO_T;$/;"	t	typeref:struct:_EXTENDED_SMART_INFO_T
EXTENDED_SMART_VERSION	plugins/seagate/seagate-diag.h	/^} EXTENDED_SMART_VERSION;$/;"	t	typeref:enum:_EXTENDED_SMART_VERSION_
EXTENDED_SMART_VERSION_GEN	plugins/seagate/seagate-diag.h	/^    EXTENDED_SMART_VERSION_GEN,$/;"	e	enum:_EXTENDED_SMART_VERSION_
EXTENDED_SMART_VERSION_NONE	plugins/seagate/seagate-diag.h	/^    EXTENDED_SMART_VERSION_NONE,$/;"	e	enum:_EXTENDED_SMART_VERSION_
EXTENDED_SMART_VERSION_VENDOR1	plugins/seagate/seagate-diag.h	/^    EXTENDED_SMART_VERSION_VENDOR1,$/;"	e	enum:_EXTENDED_SMART_VERSION_
EcrcErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   EcrcErrCnt;$/;"	m	struct:pcie_error_log_page
EntryCount	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t EntryCount;     \/\/!Total number of entries in the entry list$/;"	m	struct:cod_header	file:
FB_log_size	plugins/micron/micron-nvme.c	34;"	d	file:
FCProtocolErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   FCProtocolErrCnt;$/;"	m	struct:pcie_error_log_page
FDP_NVME	plugins/fdp/fdp.h	6;"	d
FID_ARBITRATION	plugins/wdc/wdc-nvme.c	/^	FID_ARBITRATION                                 = 0x01,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_ASYNCHRONOUS_EVENT_CONFIGURATION	plugins/wdc/wdc-nvme.c	/^	FID_ASYNCHRONOUS_EVENT_CONFIGURATION            = 0x0B,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_AUTONOMOUS_POWER_STATE_TRANSITION	plugins/wdc/wdc-nvme.c	/^	FID_AUTONOMOUS_POWER_STATE_TRANSITION           = 0x0C,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_C1_LOG_FILENAME	plugins/memblaze/memblaze-nvme.c	35;"	d	file:
FID_C2_LOG_FILENAME	plugins/memblaze/memblaze-nvme.c	36;"	d	file:
FID_C3_LOG_FILENAME	plugins/memblaze/memblaze-nvme.c	37;"	d	file:
FID_ERROR_RECOVERY	plugins/wdc/wdc-nvme.c	/^	FID_ERROR_RECOVERY                              = 0x05,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_HOST_IDENTIFIER	plugins/wdc/wdc-nvme.c	/^	FID_HOST_IDENTIFIER                             = 0x81,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_INTERRUPT_COALESCING	plugins/wdc/wdc-nvme.c	/^	FID_INTERRUPT_COALESCING                        = 0x08,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_INTERRUPT_VECTOR_CONFIGURATION	plugins/wdc/wdc-nvme.c	/^	FID_INTERRUPT_VECTOR_CONFIGURATION              = 0x09,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_LBA_RANGE_TYPE	plugins/wdc/wdc-nvme.c	/^	FID_LBA_RANGE_TYPE                              = 0x03,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_NUMBER_OF_QUEUES	plugins/wdc/wdc-nvme.c	/^	FID_NUMBER_OF_QUEUES                            = 0x07,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_POWER_MANAGEMENT	plugins/wdc/wdc-nvme.c	/^	FID_POWER_MANAGEMENT                            = 0x02,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_RESERVATION_NOTIFICATION_MASK	plugins/wdc/wdc-nvme.c	/^	FID_RESERVATION_NOTIFICATION_MASK               = 0x82,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_RESERVATION_PERSISTENCE	plugins/wdc/wdc-nvme.c	/^	FID_RESERVATION_PERSISTENCE                     = 0x83$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_SOFTWARE_PROGRESS_MARKER	plugins/wdc/wdc-nvme.c	/^	FID_SOFTWARE_PROGRESS_MARKER                    = 0x80,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_TEMPERATURE_THRESHOLD	plugins/wdc/wdc-nvme.c	/^	FID_TEMPERATURE_THRESHOLD                       = 0x04,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_VOLATILE_WRITE_CACHE	plugins/wdc/wdc-nvme.c	/^	FID_VOLATILE_WRITE_CACHE                        = 0x06,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FID_WRITE_ATOMICITY	plugins/wdc/wdc-nvme.c	/^	FID_WRITE_ATOMICITY                             = 0x0A,$/;"	e	enum:NVME_FEATURE_IDENTIFIERS	file:
FILE_NAME_SIZE	plugins/ocp/ocp-nvme.c	827;"	d	file:
FIRMWARE_SLOT_INFO_C0	plugins/toshiba/toshiba-nvme.c	/^	FIRMWARE_SLOT_INFO_C0,$/;"	e	enum:LOG_PAGE_C0	file:
FN	libnvme-wrap.c	25;"	d	file:
FOUR_KB	plugins/seagate/seagate-diag.h	38;"	d
FS_CURRENT	plugins/wdc/wdc-nvme.c	/^	FS_CURRENT                      = 0,$/;"	e	enum:_NVME_FEATURES_SELECT	file:
FS_DEFAULT	plugins/wdc/wdc-nvme.c	/^	FS_DEFAULT                      = 1,$/;"	e	enum:_NVME_FEATURES_SELECT	file:
FS_SAVED	plugins/wdc/wdc-nvme.c	/^	FS_SAVED                        = 2,$/;"	e	enum:_NVME_FEATURES_SELECT	file:
FS_SUPPORTED_CAPBILITIES	plugins/wdc/wdc-nvme.c	/^	FS_SUPPORTED_CAPBILITIES        = 3$/;"	e	enum:_NVME_FEATURES_SELECT	file:
FirmwareVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	char FirmwareVersion[12];	\/\/! Similar to IdentifyController.FR$/;"	m	struct:reason_indentifier_1_0	file:
FirmwareVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	char FirmwareVersion[12];	\/\/! Similar to IdentifyController.FR$/;"	m	struct:reason_indentifier_1_1	file:
FormatUnit	plugins/intel/intel-nvme.c	/^enum FormatUnit {$/;"	g	file:
GIT_VERSION	.build/config.h	16;"	d
GLP_ID_VU_GET_HIGH_LATENCY_LOG	plugins/memblaze/memblaze-nvme.c	/^	GLP_ID_VU_GET_HIGH_LATENCY_LOG = 0xC3,$/;"	e	enum:__anon14	file:
GLP_ID_VU_GET_READ_LATENCY_HISTOGRAM	plugins/memblaze/memblaze-nvme.c	/^	GLP_ID_VU_GET_READ_LATENCY_HISTOGRAM = 0xC1,$/;"	e	enum:__anon14	file:
GLP_ID_VU_GET_WRITE_LATENCY_HISTOGRAM	plugins/memblaze/memblaze-nvme.c	/^	GLP_ID_VU_GET_WRITE_LATENCY_HISTOGRAM = 0xC2,$/;"	e	enum:__anon14	file:
GUID	plugins/micron/micron-nvme.c	/^	__u8                               GUID[16];$/;"	m	struct:micron_fw_activation_history_table	file:
GetCommonLogPage	plugins/micron/micron-nvme.c	/^static int GetCommonLogPage(int nFD, unsigned char ucLogID,$/;"	f	file:
GetCtrlIDDInfo	plugins/micron/micron-nvme.c	/^static void GetCtrlIDDInfo(const char *dir, struct nvme_id_ctrl *ctrlp)$/;"	f	file:
GetDriveInfo	plugins/micron/micron-nvme.c	/^static void GetDriveInfo(const char *strOSDirName, int nFD,$/;"	f	file:
GetDriveModel	plugins/micron/micron-nvme.c	/^static enum eDriveModel GetDriveModel(int idx)$/;"	f	file:
GetErrorlogData	plugins/micron/micron-nvme.c	/^static void GetErrorlogData(int fd, int entries, const char *dir)$/;"	f	file:
GetFeatureSettings	plugins/micron/micron-nvme.c	/^static int GetFeatureSettings(int fd, const char *dir)$/;"	f	file:
GetGenericLogs	plugins/micron/micron-nvme.c	/^static void GetGenericLogs(int fd, const char *dir)$/;"	f	file:
GetLogPageSize	plugins/micron/micron-nvme.c	/^static int GetLogPageSize(int nFD, unsigned char ucLogID, int *nLogSize)$/;"	f	file:
GetNSIDDInfo	plugins/micron/micron-nvme.c	/^static void GetNSIDDInfo(int fd, const char *dir, int nsid)$/;"	f	file:
GetOSConfig	plugins/micron/micron-nvme.c	/^static void GetOSConfig(const char *strOSDirName)$/;"	f	file:
GetSmartlogData	plugins/micron/micron-nvme.c	/^static void GetSmartlogData(int fd, const char *dir)$/;"	f	file:
GetTelemetryData	plugins/micron/micron-nvme.c	/^static int GetTelemetryData(int fd, const char *dir)$/;"	f	file:
GetTimestampInfo	plugins/micron/micron-nvme.c	/^static void GetTimestampInfo(const char *strOSDirName)$/;"	f	file:
HASHLEN	ccan/ccan/hash/hash.c	736;"	d	file:
HASHSTATE	ccan/ccan/hash/hash.c	735;"	d	file:
HASH_BIG_ENDIAN	ccan/ccan/hash/hash.c	74;"	d	file:
HASH_BIG_ENDIAN	ccan/ccan/hash/hash.c	77;"	d	file:
HASH_LITTLE_ENDIAN	ccan/ccan/hash/hash.c	73;"	d	file:
HASH_LITTLE_ENDIAN	ccan/ccan/hash/hash.c	76;"	d	file:
HAVE_BIG_ENDIAN	.build/config.h	19;"	d
HAVE_BSWAP_64	.build/config.h	22;"	d
HAVE_BUILTIN_TYPES_COMPATIBLE_P	.build/config.h	25;"	d
HAVE_BYTESWAP_H	.build/config.h	28;"	d
HAVE_ISBLANK	.build/config.h	31;"	d
HAVE_LITTLE_ENDIAN	.build/config.h	34;"	d
HAVE_SYS_RANDOM	.build/config.h	37;"	d
HAVE_TYPEOF	.build/config.h	40;"	d
HFIS_LEN	plugins/nbft/nbft-plugin.c	421;"	d	file:
HMAC_SHA256_ALGO_NAME	nvme-rpmb.c	47;"	d	file:
HMAC_SHA256_HASH_SIZE	nvme-rpmb.c	49;"	d	file:
HOSTGENNEW	plugins/solidigm/solidigm-internal-logs.c	/^	HOSTGENNEW,$/;"	e	enum:telemetry_type	file:
HOSTGENOLD	plugins/solidigm/solidigm-internal-logs.c	/^	HOSTGENOLD,$/;"	e	enum:telemetry_type	file:
HOST_WRITE	plugins/memblaze/memblaze-utils.h	/^	\/*8*\/HOST_WRITE,$/;"	e	enum:__anon11
HOST_WRITE	plugins/shannon/shannon-nvme.c	/^	HOST_WRITE,$/;"	e	enum:__anon7	file:
HOUR_IN_SECONDS	plugins/virtium/virtium-nvme.c	24;"	d	file:
HTABLE_DEFINE_TYPE	ccan/ccan/htable/htable_type.h	62;"	d
HTABLE_DELETED	ccan/ccan/htable/htable.c	12;"	d	file:
HTABLE_INITIALIZER	ccan/ccan/htable/htable.h	51;"	d
HTABLE_KTYPE	ccan/ccan/htable/htable_type.h	181;"	d
HTABLE_KTYPE	ccan/ccan/htable/htable_type.h	185;"	d
HTABLE_LOC	ccan/ccan/htable/htable.h	11;"	d
HUAWEI_NVME	plugins/huawei/huawei-nvme.h	6;"	d
HUGE_MIN	nvme.c	198;"	d	file:
HW_SSD_PCI_VENDOR_ID	plugins/huawei/huawei-nvme.c	40;"	d	file:
IDEMA_CAP	plugins/scaleflux/sfx-nvme.c	34;"	d	file:
IDEMA_CAP2GB	plugins/scaleflux/sfx-nvme.c	35;"	d	file:
ID_SIZE	plugins/memblaze/memblaze-utils.h	8;"	d
ID_SIZE	plugins/ymtc/ymtc-utils.h	7;"	d
IEEE	plugins/ocp/ocp-nvme.c	/^	__u8  IEEE[3];$/;"	m	struct:telemetry_initiated_log	file:
IGVSC_SIG	plugins/innogrit/typedef.h	10;"	d
INNOGRIT_NVME	plugins/innogrit/innogrit-nvme.h	6;"	d
INSPUR_NVME	plugins/inspur/inspur-nvme.h	6;"	d
INTEL_FORMAT	plugins/memblaze/memblaze-nvme.c	68;"	d	file:
INTEL_NVME	plugins/intel/intel-nvme.h	6;"	d
INTERNAL_LOG_ACTION_CODE	plugins/toshiba/toshiba-nvme.c	/^static const __u16 INTERNAL_LOG_ACTION_CODE = 0xFFFB;$/;"	v	file:
INTERNAL_LOG_MAX_BYTE_TRANSFER	plugins/solidigm/solidigm-internal-logs.c	159;"	d	file:
INTERNAL_LOG_MAX_DWORD_TRANSFER	plugins/solidigm/solidigm-internal-logs.c	160;"	d	file:
IO_read_fail	plugins/inspur/inspur-utils.h	/^    __u32 IO_read_fail : 1;$/;"	m	struct:vendor_warning_bit
IO_write_fail	plugins/inspur/inspur-utils.h	/^    __u32 IO_write_fail : 1;$/;"	m	struct:vendor_warning_bit
IS_COMPILE_CONSTANT	ccan/ccan/compiler/compiler.h	204;"	d
IS_COMPILE_CONSTANT	ccan/ccan/compiler/compiler.h	207;"	d
IS_KUMQUAT	plugins/memblaze/memblaze-nvme.c	75;"	d	file:
IS_LOQUAT	plugins/memblaze/memblaze-nvme.c	77;"	d	file:
IS_PAPAYA	plugins/memblaze/memblaze-nvme.c	71;"	d	file:
IS_RAISIN	plugins/memblaze/memblaze-nvme.c	73;"	d	file:
JSON	nvme.h	/^	JSON	= 1 << 1,	\/* display in json format *\/$/;"	e	enum:nvme_print_flags
LAST_ARG_NULL	ccan/ccan/compiler/compiler.h	297;"	d
LAST_ARG_NULL	ccan/ccan/compiler/compiler.h	299;"	d
LATENCY_BUCKET_COUNT	plugins/micron/micron-nvme.c	2555;"	d	file:
LATENCY_BUCKET_RSVD	plugins/micron/micron-nvme.c	2556;"	d	file:
LATENCY_LOG_BUCKET_READ	plugins/wdc/wdc-nvme.c	987;"	d	file:
LATENCY_LOG_BUCKET_RESERVED	plugins/wdc/wdc-nvme.c	990;"	d	file:
LATENCY_LOG_BUCKET_TRIM	plugins/wdc/wdc-nvme.c	989;"	d	file:
LATENCY_LOG_BUCKET_WRITE	plugins/wdc/wdc-nvme.c	988;"	d	file:
LATENCY_LOG_ENTRIES	plugins/micron/micron-nvme.c	2481;"	d	file:
LATENCY_LOG_MEASURED_LAT_READ	plugins/wdc/wdc-nvme.c	992;"	d	file:
LATENCY_LOG_MEASURED_LAT_TRIM	plugins/wdc/wdc-nvme.c	994;"	d	file:
LATENCY_LOG_MEASURED_LAT_WRITE	plugins/wdc/wdc-nvme.c	993;"	d	file:
LATENCY_STATS_V4_BASE_BITS	plugins/intel/intel-nvme.c	663;"	d	file:
LATENCY_STATS_V4_BASE_VAL	plugins/intel/intel-nvme.c	664;"	d	file:
LATENCY_TRACKING_FID	plugins/solidigm/solidigm-latency-tracking.c	269;"	d	file:
LATENCY_TRACKING_FID_DATA_LEN	plugins/solidigm/solidigm-latency-tracking.c	270;"	d	file:
LE16_TO_CPU	ccan/ccan/endian/endian.h	181;"	d
LE16_TO_CPU	ccan/ccan/endian/endian.h	189;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	175;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	188;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	169;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	187;"	d
LIST_HEAD	ccan/ccan/list/list.h	129;"	d
LIST_HEAD_INIT	ccan/ccan/list/list.h	114;"	d
LIST_LOC	ccan/ccan/list/list.h	93;"	d
LOG_ENTRY_HEADER_SIZE	plugins/solidigm/solidigm-telemetry/nlog.c	14;"	d	file:
LOG_ENTRY_MAX_SIZE	plugins/solidigm/solidigm-telemetry/nlog.c	17;"	d	file:
LOG_ENTRY_NUM_ARGS_MAX	plugins/solidigm/solidigm-telemetry/nlog.c	16;"	d	file:
LOG_ENTRY_TIMESTAMP_SIZE	plugins/solidigm/solidigm-telemetry/nlog.c	15;"	d	file:
LOG_PAGE_C0	plugins/toshiba/toshiba-nvme.c	/^enum LOG_PAGE_C0 {$/;"	g	file:
LOG_PAGE_DIRECTORY_C0	plugins/toshiba/toshiba-nvme.c	/^	LOG_PAGE_DIRECTORY_C0,$/;"	e	enum:LOG_PAGE_C0	file:
LOG_PAGE_SIZE	plugins/memblaze/memblaze-nvme.c	32;"	d	file:
LSDword	plugins/seagate/seagate-diag.h	/^   __u32 LSDword;                 $/;"	m	struct:vendor_smart_attribute_data
LS__u64	plugins/seagate/seagate-diag.h	/^    __u64 LS__u64;$/;"	m	struct:_U128
LifetimeWorstValue	plugins/seagate/seagate-diag.h	/^   __u8  LifetimeWorstValue;                               $/;"	m	struct:_SmartVendorSpecific
LinkNvmeProcessor	Documentation/asciidoctor-extensions.rb	/^    class LinkNvmeProcessor < Asciidoctor::Extensions::InlineMacroProcessor$/;"	c	class:Nvme.Documentation
LogIdentifier	plugins/ocp/ocp-nvme.c	/^	__u8  LogIdentifier;$/;"	m	struct:telemetry_initiated_log	file:
LogPageEntry	plugins/seagate/seagate-diag.h	/^   log_page_map_entry LogPageEntry[ MAX_SUPPORTED_LOG_PAGE_ENTRIES ];$/;"	m	struct:log_page_map
LogPageHeader_t	plugins/micron/micron-nvme.c	/^struct LogPageHeader_t {$/;"	s	file:
LogPageID	plugins/seagate/seagate-diag.h	/^   __u32 LogPageID;$/;"	m	struct:log_page_map_entry
LogPageSignature	plugins/seagate/seagate-diag.h	/^   __u32 LogPageSignature;$/;"	m	struct:log_page_map_entry
LogPageVersion	plugins/seagate/seagate-diag.h	/^   __u32 LogPageVersion;$/;"	m	struct:log_page_map_entry
M51AX	plugins/micron/micron-nvme.c	/^	M51AX,$/;"	e	enum:eDriveModel	file:
M51BX	plugins/micron/micron-nvme.c	/^	M51BX,$/;"	e	enum:eDriveModel	file:
M51CX	plugins/micron/micron-nvme.c	/^	M51CX,$/;"	e	enum:eDriveModel	file:
M5407	plugins/micron/micron-nvme.c	/^	M5407,$/;"	e	enum:eDriveModel	file:
M5410	plugins/micron/micron-nvme.c	/^	M5410 = 0,$/;"	e	enum:eDriveModel	file:
M5411	plugins/micron/micron-nvme.c	/^	M5411,$/;"	e	enum:eDriveModel	file:
MARKET_LOG_MAX_SIZE	plugins/solidigm/solidigm-market-log.c	23;"	d	file:
MASK_0	plugins/toshiba/toshiba-nvme.c	/^	MASK_0 = 1 << 0,$/;"	e	enum:__anon23	file:
MASK_1	plugins/toshiba/toshiba-nvme.c	/^	MASK_1 = 1 << 1,$/;"	e	enum:__anon23	file:
MASK_IGNORE	plugins/toshiba/toshiba-nvme.c	/^	MASK_IGNORE = 0$/;"	e	enum:__anon23	file:
MAXLEN	ccan/ccan/hash/hash.c	738;"	d	file:
MAXPAIR	ccan/ccan/hash/hash.c	737;"	d	file:
MAX_16BIT_NUM_AS_STRING_SIZE	plugins/solidigm/solidigm-telemetry/config.c	13;"	d	file:
MAX_ARRAY_RANK	plugins/solidigm/solidigm-telemetry/data-area.c	20;"	d	file:
MAX_DISC_ARGS	fabrics.c	51;"	d	file:
MAX_DISC_RETRIES	fabrics.c	52;"	d	file:
MAX_HEADER_BUFF	plugins/virtium/virtium-nvme.c	26;"	d	file:
MAX_HEADER_MISMATCH_TRACK	plugins/solidigm/solidigm-telemetry/nlog.c	20;"	d	file:
MAX_LOG_BUFF	plugins/virtium/virtium-nvme.c	27;"	d	file:
MAX_PATH_LEN	plugins/wdc/wdc-utils.h	56;"	d
MAX_SUPPORTED_LOG_PAGE_ENTRIES	plugins/seagate/seagate-diag.h	95;"	d
MAX_WARNING_SIZE	plugins/solidigm/solidigm-telemetry/data-area.c	19;"	d	file:
MB_FEAT_CLEAR_ERRORLOG	plugins/memblaze/memblaze-nvme.c	/^	MB_FEAT_CLEAR_ERRORLOG = 0xF7,$/;"	e	enum:__anon14	file:
MB_FEAT_HIGH_LATENCY	plugins/memblaze/memblaze-nvme.c	/^	MB_FEAT_HIGH_LATENCY = 0xE1,$/;"	e	enum:__anon14	file:
MB_FEAT_HIGH_LATENCY_VALUE_SHIFT	plugins/memblaze/memblaze-nvme.c	565;"	d	file:
MB_FEAT_POWER_MGMT	plugins/memblaze/memblaze-nvme.c	/^	MB_FEAT_POWER_MGMT = 0x02,$/;"	e	enum:__anon14	file:
MD5_HASH_ALGO_NAME	nvme-rpmb.c	48;"	d	file:
MD5_HASH_HASH_SIZE	nvme-rpmb.c	50;"	d	file:
MEDIA_MAJOR_IDX	plugins/intel/intel-nvme.c	494;"	d	file:
MEDIA_MAX_LEN	plugins/intel/intel-nvme.c	496;"	d	file:
MEDIA_MINOR_IDX	plugins/intel/intel-nvme.c	495;"	d	file:
MEMBER_SIZE	plugins/solidigm/solidigm-telemetry/header.c	/^	      MEMBER_SIZE(struct nvme_telemetry_log, rsnident),$/;"	v
MEMBER_SIZE	plugins/solidigm/solidigm-telemetry/telemetry-log.h	22;"	d
MEMBLAZE_FORMAT	plugins/memblaze/memblaze-nvme.c	67;"	d	file:
MEMBLAZE_NVME	plugins/memblaze/memblaze-nvme.h	6;"	d
MICRON_FEATURE_CLEAR_FW_ACTIVATION_HISTORY	plugins/micron/micron-nvme.c	25;"	d	file:
MICRON_FEATURE_CLEAR_PCI_CORRECTABLE_ERRORS	plugins/micron/micron-nvme.c	24;"	d	file:
MICRON_FEATURE_SMBUS_OPTION	plugins/micron/micron-nvme.c	27;"	d	file:
MICRON_FEATURE_TELEMETRY_CONTROL_OPTION	plugins/micron/micron-nvme.c	26;"	d	file:
MICRON_FID_LATENCY_MONITOR	plugins/micron/micron-nvme.c	2320;"	d	file:
MICRON_LOG_LATENCY_MONITOR	plugins/micron/micron-nvme.c	2321;"	d	file:
MICRON_NVME	plugins/micron/micron-nvme.h	6;"	d
MICRON_VENDOR_ID	plugins/micron/micron-nvme.c	61;"	d	file:
MIN2	plugins/virtium/virtium-nvme.c	22;"	d	file:
MIN_ARRAY_NAME_LEN	plugins/huawei/huawei-nvme.c	44;"	d	file:
MIN_LOG_SIZE	plugins/micron/micron-nvme.c	3324;"	d	file:
MIN_NS_NAME_LEN	plugins/huawei/huawei-nvme.c	45;"	d	file:
MIN_VENDOR_LID	plugins/solidigm/solidigm-log-page-dir.c	19;"	d	file:
MS	plugins/intel/intel-nvme.c	/^	MS,$/;"	e	enum:FormatUnit	file:
MSDword	plugins/seagate/seagate-diag.h	/^   __u32 MSDword;                 $/;"	m	struct:vendor_smart_attribute_data
MS__u64	plugins/seagate/seagate-diag.h	/^    __u64 MS__u64;$/;"	m	struct:_U128
MYRTLE_MAJOR_IDX	plugins/scaleflux/sfx-nvme.c	40;"	d	file:
MYRTLE_MINOR_IDX	plugins/scaleflux/sfx-nvme.c	41;"	d	file:
MalformedTlpErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   MalformedTlpErrCnt;$/;"	m	struct:pcie_error_log_page
MapSizeInBytes	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t MapSizeInBytes; \/\/!Total size of the map data structure in bytes$/;"	m	struct:cod_header	file:
MaxLogChunk	plugins/micron/micron-nvme.c	36;"	d	file:
MemRdTlpPoisonedErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   MemRdTlpPoisonedErrCnt;$/;"	m	struct:pcie_error_log_page
NAME	Makefile	/^NAME          := nvme$/;"	m
NAME	cmd_handler.h	29;"	d
NAME	cmd_handler.h	30;"	d
NAME	cmd_handler.h	66;"	d
NAME	cmd_handler.h	67;"	d
NAME	cmd_handler.h	8;"	d
NAME	cmd_handler.h	90;"	d
NAME	cmd_handler.h	91;"	d
NAME	cmd_handler.h	9;"	d
NAND_LAT_STATS_LEN	plugins/intel/intel-nvme.c	499;"	d	file:
NAND_WRITE	plugins/shannon/shannon-nvme.c	/^	NAND_WRITE,$/;"	e	enum:__anon7	file:
NBFT	plugins/nbft/nbft-plugin.h	6;"	d
NBFT_SYSFS_FILENAME	nbft.c	15;"	d	file:
NBFT_SYSFS_PATH	nbft.h	5;"	d
NCOLUMN	plugins/netapp/netapp-nvme.c	/^	NCOLUMN,$/;"	e	enum:__anon15	file:
NEEDED	ccan/ccan/compiler/compiler.h	131;"	d
NEEDED	ccan/ccan/compiler/compiler.h	134;"	d
NEEDED	ccan/ccan/compiler/compiler.h	160;"	d
NEGINF	plugins/intel/intel-nvme.c	/^	NEGINF,$/;"	e	enum:inf_bound_type	file:
NETAPP_NVME	plugins/netapp/netapp-nvme.h	6;"	d
NJSON	plugins/netapp/netapp-nvme.c	/^	NJSON,$/;"	e	enum:__anon15	file:
NLOG	plugins/solidigm/solidigm-internal-logs.c	/^	NLOG = 0,$/;"	e	enum:log_type	file:
NLOG_OBJ_PREFIX	plugins/solidigm/solidigm-telemetry/config.c	16;"	d	file:
NM_SIZE	plugins/memblaze/memblaze-utils.h	9;"	d
NM_SIZE	plugins/ymtc/ymtc-utils.h	8;"	d
NNORMAL	plugins/netapp/netapp-nvme.c	/^	NNORMAL,$/;"	e	enum:__anon15	file:
NOINF	plugins/intel/intel-nvme.c	/^	NOINF$/;"	e	enum:inf_bound_type	file:
NON_NULL_ARGS	ccan/ccan/compiler/compiler.h	268;"	d
NON_NULL_ARGS	ccan/ccan/compiler/compiler.h	271;"	d
NORETURN	ccan/ccan/compiler/compiler.h	40;"	d
NORETURN	ccan/ccan/compiler/compiler.h	42;"	d
NORMAL	nvme.h	/^	NORMAL	= 0,$/;"	e	enum:nvme_print_flags
NOT_PRINT_FLAG	plugins/memblaze/memblaze-nvme.c	34;"	d	file:
NO_NULL_ARGS	ccan/ccan/compiler/compiler.h	257;"	d
NO_NULL_ARGS	ccan/ccan/compiler/compiler.h	270;"	d
NO_PERFECT_BIT	ccan/ccan/htable/htable.c	15;"	d	file:
NR_SMART_ITEMS	plugins/memblaze/memblaze-utils.h	/^	\/*16*\/NR_SMART_ITEMS = RAISIN_SI_VD_SMART_INFO_ITEMS_MAX,$/;"	e	enum:__anon11
NR_SMART_ITEMS	plugins/ymtc/ymtc-utils.h	/^    NR_SMART_ITEMS,$/;"	e	enum:__anon9
NR_SMART_ITEMS_C0	plugins/toshiba/toshiba-nvme.c	/^	NR_SMART_ITEMS_C0,$/;"	e	enum:LOG_PAGE_C0	file:
NS_NAME_LEN	plugins/huawei/huawei-nvme.c	42;"	d	file:
NUMBER_EXTENDED_SMART_ATTRIBUTES	plugins/seagate/seagate-diag.h	107;"	d
NUM_ARGS_MASK	plugins/solidigm/solidigm-telemetry/nlog.c	19;"	d	file:
NVIDIA_NVME	plugins/nvidia/nvidia-nvme.h	6;"	d
NVMEGetLogPage	plugins/micron/micron-nvme.c	/^static int NVMEGetLogPage(int nFD, unsigned char ucLogID, unsigned char *pBuffer, int nBuffSize)$/;"	f	file:
NVMEResetLog	plugins/micron/micron-nvme.c	/^static int NVMEResetLog(int nFD, unsigned char ucLogID, int nBufferSize,$/;"	f	file:
NVME_BUILTIN	nvme-builtin.h	6;"	d
NVME_CLI_TOPO_CTRL	nvme.h	/^	NVME_CLI_TOPO_CTRL,$/;"	e	enum:nvme_cli_topo_ranking
NVME_CLI_TOPO_NAMESPACE	nvme.h	/^	NVME_CLI_TOPO_NAMESPACE,$/;"	e	enum:nvme_cli_topo_ranking
NVME_DEV_DIRECT	nvme.h	/^	NVME_DEV_DIRECT,$/;"	e	enum:nvme_dev_type
NVME_DEV_MI	nvme.h	/^	NVME_DEV_MI,$/;"	e	enum:nvme_dev_type
NVME_DE_LOGPAGE_C0	plugins/wdc/wdc-nvme.c	/^	NVME_DE_LOGPAGE_C0 = 0x02$/;"	e	enum:NVME_VU_DE_LOGPAGE_NAMES	file:
NVME_DE_LOGPAGE_E3	plugins/wdc/wdc-nvme.c	/^	NVME_DE_LOGPAGE_E3 = 0x01,$/;"	e	enum:NVME_VU_DE_LOGPAGE_NAMES	file:
NVME_FEATURE_IDENTIFIERS	plugins/wdc/wdc-nvme.c	/^enum NVME_FEATURE_IDENTIFIERS {$/;"	g	file:
NVME_FEAT_OCP_LATENCY_MONITOR	plugins/ocp/ocp-nvme.c	45;"	d	file:
NVME_FEAT_TIMESTAMP_DATA_SIZE	nvme.c	5981;"	d	file:
NVME_ID_CTRL_MODEL_NUMBER_SIZE	plugins/wdc/wdc-nvme.c	434;"	d	file:
NVME_ID_CTRL_SERIAL_NUMBER_SIZE	plugins/wdc/wdc-nvme.c	435;"	d	file:
NVME_IOCTL_CLR_CARD	plugins/scaleflux/sfx-nvme.c	32;"	d	file:
NVME_LOG_PERSISTENT_EVENT	plugins/wdc/wdc-nvme.c	367;"	d	file:
NVME_MODEL_H	nvme-models.h	3;"	d
NVME_PRINT_H	nvme-print.h	3;"	d
NVME_VERSION	.build/config.h	42;"	d
NVME_VSC_CLEAN_EVENT_LOG	plugins/innogrit/typedef.h	6;"	d
NVME_VSC_GET	plugins/innogrit/typedef.h	7;"	d
NVME_VSC_GET_EVENT_LOG	plugins/innogrit/typedef.h	5;"	d
NVME_VU_DE_LOGPAGE_LIST	plugins/wdc/wdc-nvme.c	/^struct NVME_VU_DE_LOGPAGE_LIST {$/;"	s	file:
NVME_VU_DE_LOGPAGE_NAMES	plugins/wdc/wdc-nvme.c	/^enum NVME_VU_DE_LOGPAGE_NAMES {$/;"	g	file:
NVMF_ARGS	fabrics.c	90;"	d	file:
NVMF_DEF_DISC_TMO	fabrics.c	54;"	d	file:
NominalValue	plugins/seagate/seagate-diag.h	/^   __u8  NominalValue;                                     $/;"	m	struct:_SmartVendorSpecific
NumLogPages	plugins/seagate/seagate-diag.h	/^   __u32 NumLogPages;$/;"	m	struct:log_page_map
Nvme	Documentation/asciidoctor-extensions.rb	/^module Nvme$/;"	m
OBJ_NAME_PREFIX	plugins/solidigm/solidigm-telemetry/config.c	15;"	d	file:
OCP_FID_CLEAR_FW_ACTIVATION_HISTORY	plugins/ocp/ocp-clear-fw-update-history.c	/^static const __u8 OCP_FID_CLEAR_FW_ACTIVATION_HISTORY = 0xC1;$/;"	v	file:
OCP_FID_CLEAR_PCIE_CORRECTABLE_ERROR_COUNTERS	plugins/ocp/ocp-nvme.c	/^static const __u8 OCP_FID_CLEAR_PCIE_CORRECTABLE_ERROR_COUNTERS = 0xC3;$/;"	v	file:
OCP_FIRMWARE_ACTIVATION_HISTORY_H	plugins/ocp/ocp-fw-activation-history.h	9;"	d
OCP_NVME	plugins/ocp/ocp-nvme.h	12;"	d
OCP_SMART_EXTENDED_LOG_H	plugins/ocp/ocp-smart-extended-log.h	10;"	d
OEMSIGNATURE	plugins/solidigm/solidigm-telemetry/cod.c	64;"	d	file:
ONE_MB	plugins/seagate/seagate-diag.h	36;"	d
ONTAP_C2_LOG_ID	plugins/netapp/netapp-nvme.c	35;"	d	file:
ONTAP_C2_LOG_NSINFO_LSP	plugins/netapp/netapp-nvme.c	/^	ONTAP_C2_LOG_NSINFO_LSP		= 0x1,$/;"	e	enum:__anon16	file:
ONTAP_C2_LOG_SIZE	plugins/netapp/netapp-nvme.c	36;"	d	file:
ONTAP_C2_LOG_SUPPORTED_LSP	plugins/netapp/netapp-nvme.c	/^	ONTAP_C2_LOG_SUPPORTED_LSP	= 0x0,$/;"	e	enum:__anon16	file:
ONTAP_LABEL_LEN	plugins/netapp/netapp-nvme.c	37;"	d	file:
ONTAP_NS_PATHLEN	plugins/netapp/netapp-nvme.c	38;"	d	file:
ONTAP_NS_TLV	plugins/netapp/netapp-nvme.c	/^	ONTAP_NS_TLV			= 0x13,$/;"	e	enum:__anon17	file:
ONTAP_VOLUME_TLV	plugins/netapp/netapp-nvme.c	/^	ONTAP_VOLUME_TLV		= 0x12,$/;"	e	enum:__anon17	file:
ONTAP_VSERVER_TLV	plugins/netapp/netapp-nvme.c	/^	ONTAP_VSERVER_TLV		= 0x11,$/;"	e	enum:__anon17	file:
OPTANE_V1000_BUCKET_LEN	plugins/intel/intel-nvme.c	497;"	d	file:
OPTANE_V1000_BUCKET_LEN	plugins/intel/intel-nvme.c	498;"	d	file:
OPT_ARGS	util/argconfig.h	58;"	d
OPT_BYTE	util/argconfig.h	81;"	d
OPT_DOUBLE	util/argconfig.h	78;"	d
OPT_END	util/argconfig.h	61;"	d
OPT_FILE	util/argconfig.h	94;"	d
OPT_FLAG	util/argconfig.h	63;"	d
OPT_FMT	util/argconfig.h	93;"	d
OPT_INCR	util/argconfig.h	87;"	d
OPT_INT	util/argconfig.h	72;"	d
OPT_LIST	util/argconfig.h	95;"	d
OPT_LONG	util/argconfig.h	75;"	d
OPT_SHRT	util/argconfig.h	84;"	d
OPT_STR	util/argconfig.h	96;"	d
OPT_STRING	util/argconfig.h	90;"	d
OPT_SUFFIX	util/argconfig.h	66;"	d
OPT_UINT	util/argconfig.h	69;"	d
OPT_VALS	util/argconfig.h	98;"	d
OP_BAD_BLOCK	plugins/transcend/transcend-nvme.c	/^static const __u32 OP_BAD_BLOCK = 0xc2;$/;"	v	file:
OP_SCT_COMMAND_TRANSFER	plugins/toshiba/toshiba-nvme.c	/^static const __u32 OP_SCT_COMMAND_TRANSFER = 0xE0;$/;"	v	file:
OP_SCT_DATA_TRANSFER	plugins/toshiba/toshiba-nvme.c	/^static const __u32 OP_SCT_DATA_TRANSFER = 0xE1;$/;"	v	file:
OP_SCT_STATUS	plugins/toshiba/toshiba-nvme.c	/^static const __u32 OP_SCT_STATUS = 0xE0;$/;"	v	file:
OemDataMapOffset	plugins/solidigm/solidigm-telemetry/header.c	/^	uint64_t OemDataMapOffset;	\/\/! Customer Data Map Object Log Offset$/;"	m	struct:reason_indentifier_1_1	file:
OemDataMapOffset	plugins/solidigm/solidigm-telemetry/header.c	/^	uint64_t OemDataMapOffset;	\/\/! Customer Data Map Object Log Offset$/;"	m	struct:reason_indentifier_1_2	file:
OffsetBytes	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint32_t OffsetBytes;$/;"	m	struct:toc_item	file:
P2MAX	plugins/memblaze/memblaze-nvme.c	564;"	d	file:
P2MIN	plugins/memblaze/memblaze-nvme.c	563;"	d	file:
PATH_NVMF_CONFIG	fabrics.c	49;"	d	file:
PATH_NVMF_DISC	fabrics.c	48;"	d	file:
PATH_NVMF_RUNDIR	fabrics.c	50;"	d	file:
PCI_BUS	plugins/nbft/nbft-plugin.c	19;"	d	file:
PCI_DEV	plugins/nbft/nbft-plugin.c	20;"	d	file:
PCI_FUNC	plugins/nbft/nbft-plugin.c	21;"	d	file:
PCI_SEGMENT	plugins/nbft/nbft-plugin.c	18;"	d	file:
PERSIST_CHUNK	plugins/seagate/seagate-diag.h	37;"	d
PERSIST_FILE_SIZE	plugins/seagate/seagate-diag.h	35;"	d
PLL_LOCK_LOSS	plugins/shannon/shannon-nvme.c	/^	PLL_LOCK_LOSS,$/;"	e	enum:__anon7	file:
PLUGIN	cmd.h	5;"	d
PLUGIN	cmd.h	6;"	d
PLUGIN	cmd_handler.h	18;"	d
PLUGIN	cmd_handler.h	19;"	d
PLUGIN	cmd_handler.h	55;"	d
PLUGIN	cmd_handler.h	56;"	d
PLUGIN	cmd_handler.h	79;"	d
PLUGIN	cmd_handler.h	80;"	d
PLUGIN	cmd_handler.h	96;"	d
PLUGIN	cmd_handler.h	97;"	d
PLUGIN_H	plugin.h	3;"	d
POSINF	plugins/intel/intel-nvme.c	/^	POSINF,$/;"	e	enum:inf_bound_type	file:
POWER_CONSUMPTION	plugins/memblaze/memblaze-utils.h	/^	\/*4*\/POWER_CONSUMPTION,$/;"	e	enum:__anon11
POWER_LOSS_PROTECTION	plugins/memblaze/memblaze-utils.h	/^	\/*6*\/POWER_LOSS_PROTECTION,$/;"	e	enum:__anon11
PRINTF_FMT	ccan/ccan/compiler/compiler.h	58;"	d
PRINTF_FMT	ccan/ccan/compiler/compiler.h	61;"	d
PROGRAM_FAIL	plugins/memblaze/memblaze-utils.h	/^	\/*14*\/PROGRAM_FAIL,$/;"	e	enum:__anon11
PROGRAM_FAIL_CNT	plugins/shannon/shannon-nvme.c	/^	PROGRAM_FAIL_CNT,$/;"	e	enum:__anon7	file:
PROTO	libnvme-wrap.c	13;"	d	file:
PURE_FUNCTION	ccan/ccan/compiler/compiler.h	87;"	d
PURE_FUNCTION	ccan/ccan/compiler/compiler.h	89;"	d
PUtilsTimeInfo	plugins/wdc/wdc-utils.h	/^} UtilsTimeInfo, *PUtilsTimeInfo;$/;"	t	typeref:struct:_UtilsTimeInfo
ProductFamilyId	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t ProductFamilyId;$/;"	m	struct:reason_indentifier_1_2	file:
RAISIN_SI_VD_E2E_DECTECTION_COUNT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_E2E_DECTECTION_COUNT = 3, \/* 0xB8 *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_E2E_DECTECTION_COUNT_ID	plugins/memblaze/memblaze-utils.h	17;"	d
RAISIN_SI_VD_ERASE_FAIL	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_ERASE_FAIL = 1,   \/* 0xAC *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_ERASE_FAIL_ID	plugins/memblaze/memblaze-utils.h	15;"	d
RAISIN_SI_VD_FLASH_MEDIA_ERROR	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_FLASH_MEDIA_ERROR = 21, \/* 0xED *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_FLASH_MEDIA_ERROR_ID	plugins/memblaze/memblaze-utils.h	35;"	d
RAISIN_SI_VD_HOST_WRITE	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_HOST_WRITE = 12, \/* 0xF5, unit is 32MiB *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_HOST_WRITE_ID	plugins/memblaze/memblaze-utils.h	26;"	d
RAISIN_SI_VD_PCIE_CRC_ERR_COUNT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_PCIE_CRC_ERR_COUNT = 4, \/* 0xC7, 2 port data in one attribute *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_PCIE_CRC_ERR_COUNT_ID	plugins/memblaze/memblaze-utils.h	18;"	d
RAISIN_SI_VD_PLL_LOCK_LOSS_COUNT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_PLL_LOCK_LOSS_COUNT = 10, \/* 0xF3, unknown definition*\/$/;"	e	enum:__anon10
RAISIN_SI_VD_PLL_LOCK_LOSS_COUNT_ID	plugins/memblaze/memblaze-utils.h	24;"	d
RAISIN_SI_VD_POWER_CONSUMPTION	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_POWER_CONSUMPTION = 16, \/* 0xE8 *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_POWER_CONSUMPTION_ID	plugins/memblaze/memblaze-utils.h	30;"	d
RAISIN_SI_VD_POWER_LOSS_PROTECTION	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_POWER_LOSS_PROTECTION = 18, \/* 0xEC *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_POWER_LOSS_PROTECTION_ID	plugins/memblaze/memblaze-utils.h	32;"	d
RAISIN_SI_VD_PROGRAM_FAIL	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_PROGRAM_FAIL = 0, \/* 0xAB *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_PROGRAM_FAIL_ID	plugins/memblaze/memblaze-utils.h	14;"	d
RAISIN_SI_VD_READ_FAIL	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_READ_FAIL = 19, \/* 0xF2 *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_READ_FAIL_ID	plugins/memblaze/memblaze-utils.h	33;"	d
RAISIN_SI_VD_RETRY_BUFF_OVERFLOW_COUNT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_RETRY_BUFF_OVERFLOW_COUNT = 9, \/* 0xF0, unknown definition*\/$/;"	e	enum:__anon10
RAISIN_SI_VD_RETRY_BUFF_OVERFLOW_COUNT_ID	plugins/memblaze/memblaze-utils.h	23;"	d
RAISIN_SI_VD_SMART_INFO_ITEMS_MAX	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_SMART_INFO_ITEMS_MAX,$/;"	e	enum:__anon10
RAISIN_SI_VD_SYSTEM_AREA_LIFE_LEFT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_SYSTEM_AREA_LIFE_LEFT = 13, \/* 0xF6, unknown definition*\/$/;"	e	enum:__anon10
RAISIN_SI_VD_SYSTEM_AREA_LIFE_LEFT_ID	plugins/memblaze/memblaze-utils.h	27;"	d
RAISIN_SI_VD_TEMPT_SINCE_BOOTUP	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TEMPT_SINCE_BOOTUP = 17, \/* 0xAF *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TEMPT_SINCE_BOOTUP_ID	plugins/memblaze/memblaze-utils.h	31;"	d
RAISIN_SI_VD_TEMPT_SINCE_BORN	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TEMPT_SINCE_BORN = 15, \/* 0xE7 *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TEMPT_SINCE_BORN_ID	plugins/memblaze/memblaze-utils.h	29;"	d
RAISIN_SI_VD_THERMAL_THROTTLE_STATUS	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_THERMAL_THROTTLE_STATUS = 8, \/* 0xEA *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_THERMAL_THROTTLE_STATUS_ID	plugins/memblaze/memblaze-utils.h	22;"	d
RAISIN_SI_VD_THERMAL_THROTTLE_TIME	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_THERMAL_THROTTLE_TIME = 20, \/* 0xEB *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_THERMAL_THROTTLE_TIME_ID	plugins/memblaze/memblaze-utils.h	34;"	d
RAISIN_SI_VD_TIMED_WORKLOAD_HOST_READ	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TIMED_WORKLOAD_HOST_READ = 6, \/* 0xE3 , unknown definition *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TIMED_WORKLOAD_HOST_READ_ID	plugins/memblaze/memblaze-utils.h	20;"	d
RAISIN_SI_VD_TIMED_WORKLOAD_MEDIA_WEAR	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TIMED_WORKLOAD_MEDIA_WEAR = 5, \/* 0xE2 , unknown definition*\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TIMED_WORKLOAD_MEDIA_WEAR_ID	plugins/memblaze/memblaze-utils.h	19;"	d
RAISIN_SI_VD_TIMED_WORKLOAD_TIMER	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TIMED_WORKLOAD_TIMER = 7, \/* 0xE4 , unknown definition *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TIMED_WORKLOAD_TIMER_ID	plugins/memblaze/memblaze-utils.h	21;"	d
RAISIN_SI_VD_TOTAL_READ	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TOTAL_READ = 14, \/* 0xFA, unit is 32MiB *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TOTAL_READ_ID	plugins/memblaze/memblaze-utils.h	28;"	d
RAISIN_SI_VD_TOTAL_WRITE	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_TOTAL_WRITE = 11, \/* 0xF4, unit is 32MiB *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_TOTAL_WRITE_ID	plugins/memblaze/memblaze-utils.h	25;"	d
RAISIN_SI_VD_WEARLEVELING_COUNT	plugins/memblaze/memblaze-utils.h	/^	RAISIN_SI_VD_WEARLEVELING_COUNT = 2,\/* 0xAD *\/$/;"	e	enum:__anon10
RAISIN_SI_VD_WEARLEVELING_COUNT_ID	plugins/memblaze/memblaze-utils.h	16;"	d
RAISIN_si_vendor_smart_item_e	plugins/memblaze/memblaze-utils.h	/^} RAISIN_si_vendor_smart_item_e;$/;"	t	typeref:enum:__anon10
RAW_SIZE	plugins/memblaze/memblaze-utils.h	10;"	d
RAW_SIZE	plugins/ymtc/ymtc-utils.h	9;"	d
READ	plugins/ocp/ocp-nvme.c	59;"	d	file:
READ_FAIL	plugins/memblaze/memblaze-utils.h	/^	\/*15*\/READ_FAIL,$/;"	e	enum:__anon11
READ_LOG_ID	plugins/solidigm/solidigm-latency-tracking.c	334;"	d	file:
REBUILD_FAIL	plugins/memblaze/memblaze-utils.h	/^	\/*12*\/REBUILD_FAIL,$/;"	e	enum:__anon11
RESERVED	plugins/ocp/ocp-nvme.c	62;"	d	file:
RETRY_BUFFER_OVERFLOW	plugins/shannon/shannon-nvme.c	/^	RETRY_BUFFER_OVERFLOW,$/;"	e	enum:__anon7	file:
RETURNS_NONNULL	ccan/ccan/compiler/compiler.h	283;"	d
RETURNS_NONNULL	ccan/ccan/compiler/compiler.h	285;"	d
RPMB_DATA_FRAME_SIZE	nvme-rpmb.c	272;"	d	file:
RPMB_NVME_SECP	nvme-rpmb.c	273;"	d	file:
RPMB_NVME_SPSP	nvme-rpmb.c	274;"	d	file:
RPMB_REQ_AUTH_DATA_READ	nvme-rpmb.c	/^	RPMB_REQ_AUTH_DATA_READ   = 0x0004,$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_AUTH_DATA_WRITE	nvme-rpmb.c	/^	RPMB_REQ_AUTH_DATA_WRITE  = 0x0003,$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_AUTH_DCB_READ	nvme-rpmb.c	/^	RPMB_REQ_AUTH_DCB_READ    = 0x0007$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_AUTH_DCB_WRITE	nvme-rpmb.c	/^	RPMB_REQ_AUTH_DCB_WRITE   = 0x0006,$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_AUTH_KEY_PROGRAM	nvme-rpmb.c	/^	RPMB_REQ_AUTH_KEY_PROGRAM = 0x0001,$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_READ_RESULT	nvme-rpmb.c	/^	RPMB_REQ_READ_RESULT      = 0x0005,$/;"	e	enum:rpmb_request_type	file:
RPMB_REQ_READ_WRITE_CNTR	nvme-rpmb.c	/^	RPMB_REQ_READ_WRITE_CNTR  = 0x0002,$/;"	e	enum:rpmb_request_type	file:
RPMB_RSP_AUTH_DATA_READ	nvme-rpmb.c	/^	RPMB_RSP_AUTH_DATA_READ   = (RPMB_REQ_AUTH_DATA_READ   << 8),$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_AUTH_DATA_WRITE	nvme-rpmb.c	/^	RPMB_RSP_AUTH_DATA_WRITE  = (RPMB_REQ_AUTH_DATA_WRITE  << 8),$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_AUTH_DCB_READ	nvme-rpmb.c	/^	RPMB_RSP_AUTH_DCB_READ    = (RPMB_REQ_AUTH_DCB_READ    << 8)$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_AUTH_DCB_WRITE	nvme-rpmb.c	/^	RPMB_RSP_AUTH_DCB_WRITE   = (RPMB_REQ_AUTH_DCB_WRITE   << 8),$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_AUTH_KEY_PROGRAM	nvme-rpmb.c	/^	RPMB_RSP_AUTH_KEY_PROGRAM = (RPMB_REQ_AUTH_KEY_PROGRAM << 8),$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_READ_RESULT	nvme-rpmb.c	/^	RPMB_RSP_READ_RESULT      = (RPMB_REQ_READ_RESULT      << 8),$/;"	e	enum:rpmb_response_type	file:
RPMB_RSP_READ_WRITE_CNTR	nvme-rpmb.c	/^	RPMB_RSP_READ_WRITE_CNTR  = (RPMB_REQ_READ_WRITE_CNTR  << 8),$/;"	e	enum:rpmb_response_type	file:
RUNDIR	.build/config.h	44;"	d
Raw0_3	plugins/seagate/seagate-diag.h	/^   __u32 Raw0_3;                                                           $/;"	m	struct:_SmartVendorSpecific
RawHigh	plugins/seagate/seagate-diag.h	/^   __u8  RawHigh[3];                                               $/;"	m	struct:_SmartVendorSpecific
RcvrErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   RcvrErrCnt;$/;"	m	struct:pcie_error_log_page
RcvrQOverflowErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   RcvrQOverflowErrCnt;$/;"	m	struct:pcie_error_log_page
ReadSysFile	plugins/micron/micron-nvme.c	/^static int ReadSysFile(const char *file, unsigned short *id)$/;"	f	file:
ReasonIdentifier	plugins/ocp/ocp-nvme.c	/^	__u8  ReasonIdentifier[128];$/;"	m	struct:telemetry_initiated_log	file:
ReplayNumRolloverErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   ReplayNumRolloverErrCnt;$/;"	m	struct:pcie_error_log_page
ReplayTOErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   ReplayTOErrCnt;$/;"	m	struct:pcie_error_log_page
ReqCAErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   ReqCAErrCnt;$/;"	m	struct:pcie_error_log_page
ReqURErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   ReqURErrCnt;$/;"	m	struct:pcie_error_log_page
Reserved	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint8_t Reserved[12];$/;"	m	struct:cod_header	file:
Reserved	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint8_t Reserved[3];$/;"	m	struct:telemetry_object_header	file:
Reserved	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint8_t Reserved[8];$/;"	m	struct:data_area_header	file:
Reserved	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t Reserved[46];		\/\/! Reserved for future usage$/;"	m	struct:reason_indentifier_1_1	file:
Reserved	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t Reserved[56];		\/\/! Reserved for future usage$/;"	m	struct:reason_indentifier_1_0	file:
Reserved1	plugins/ocp/ocp-nvme.c	/^	__u8  Reserved1[4];$/;"	m	struct:telemetry_initiated_log	file:
Reserved1	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint8_t Reserved1[4];$/;"	m	struct:cod_item	file:
Reserved1	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t Reserved1[24];		\/\/! pad over Fields removed from version 1.1$/;"	m	struct:reason_indentifier_1_2	file:
Reserved2	plugins/ocp/ocp-nvme.c	/^	__u8  Reserved2[368];$/;"	m	struct:telemetry_initiated_log	file:
Reserved2	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint8_t Reserved2[8];$/;"	m	struct:cod_item	file:
Reserved2	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t Reserved2[5];		\/\/! Reserved for future usage$/;"	m	struct:reason_indentifier_1_2	file:
Reserved5to7	plugins/seagate/seagate-diag.h	/^   __u8     Reserved5to7[3];                   $/;"	m	struct:_vendor_log_page_CF_Attr
Rsvd	plugins/seagate/seagate-diag.h	/^   __u8  Rsvd[3];                 $/;"	m	struct:vendor_smart_attribute_data
S	plugins/intel/intel-nvme.c	/^	S$/;"	e	enum:FormatUnit	file:
SAVED_LOG_FUNCTION_CODE	plugins/toshiba/toshiba-nvme.c	/^static const __u16 SAVED_LOG_FUNCTION_CODE = 0x0002;$/;"	v	file:
SCAO_BSNBN	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_BSNBN	= 46,	\/* Bad system nand blocks normalized *\/$/;"	e	enum:__anon6	file:
SCAO_BSNBN	plugins/wdc/wdc-nvme.c	/^	SCAO_BSNBN              = 46,	\/* Bad system nand blocks normalized *\/$/;"	e	enum:__anon4	file:
SCAO_BSNBR	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_BSNBR	= 40,	\/* Bad system nand blocks raw *\/$/;"	e	enum:__anon6	file:
SCAO_BSNBR	plugins/wdc/wdc-nvme.c	/^	SCAO_BSNBR              = 40,	\/* Bad system nand blocks raw *\/$/;"	e	enum:__anon4	file:
SCAO_BUNBN	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_BUNBN	= 38,	\/* Bad user nand blocks normalized *\/$/;"	e	enum:__anon6	file:
SCAO_BUNBN	plugins/wdc/wdc-nvme.c	/^	SCAO_BUNBN              = 38,	\/* Bad user nand blocks normalized *\/$/;"	e	enum:__anon4	file:
SCAO_BUNBR	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_BUNBR	= 32,	\/* Bad user nand blocks raw *\/$/;"	e	enum:__anon6	file:
SCAO_BUNBR	plugins/wdc/wdc-nvme.c	/^	SCAO_BUNBR              = 32,	\/* Bad user nand blocks raw *\/$/;"	e	enum:__anon4	file:
SCAO_CPH	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_CPH	= 128,	\/* Capacitor health *\/$/;"	e	enum:__anon6	file:
SCAO_CPH	plugins/wdc/wdc-nvme.c	/^	SCAO_CPH                = 128,	\/* Capacitor health *\/$/;"	e	enum:__anon4	file:
SCAO_CTS	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_CTS	= 97,	\/* Current throttling status *\/$/;"	e	enum:__anon6	file:
SCAO_CTS	plugins/wdc/wdc-nvme.c	/^	SCAO_CTS                = 97,	\/* Current throttling status *\/$/;"	e	enum:__anon4	file:
SCAO_EECE	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_EECE	= 76,	\/* End to end corrected errors *\/$/;"	e	enum:__anon6	file:
SCAO_EECE	plugins/wdc/wdc-nvme.c	/^	SCAO_EECE               = 72,	\/* End to end corrected errors *\/$/;"	e	enum:__anon4	file:
SCAO_EEDC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_EEDC	= 72,	\/* End to end detected errors *\/$/;"	e	enum:__anon6	file:
SCAO_EEDC	plugins/wdc/wdc-nvme.c	/^	SCAO_EEDC               = 76,	\/* End to end detected errors *\/$/;"	e	enum:__anon4	file:
SCAO_EEST	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_EEST	= 176,	\/* Endurance estimate *\/$/;"	e	enum:__anon6	file:
SCAO_EEST	plugins/wdc/wdc-nvme.c	/^	SCAO_EEST               = 176,	\/* Endurance estimate *\/$/;"	e	enum:__anon4	file:
SCAO_EVF	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_EVF	= 98,	\/* Errata Version Field *\/$/;"	e	enum:__anon6	file:
SCAO_EVF	plugins/wdc/wdc-nvme.c	/^	SCAO_EVF                = 98,      \/* Errata Version Field *\/$/;"	e	enum:__anon4	file:
SCAO_ICS	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_ICS	= 112,	\/* Incomplete shutdowns *\/$/;"	e	enum:__anon6	file:
SCAO_ICS	plugins/wdc/wdc-nvme.c	/^	SCAO_ICS                = 112,	\/* Incomplete shutdowns *\/$/;"	e	enum:__anon4	file:
SCAO_LPG	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_LPG	= 496,	\/* Log page GUID *\/$/;"	e	enum:__anon6	file:
SCAO_LPG	plugins/wdc/wdc-nvme.c	/^	SCAO_LPG                = 496,	\/* Log page GUID *\/$/;"	e	enum:__anon4	file:
SCAO_LPV	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_LPV	= 494,	\/* Log page version *\/$/;"	e	enum:__anon6	file:
SCAO_LPV	plugins/wdc/wdc-nvme.c	/^	SCAO_LPV                = 494,	\/* Log page version *\/$/;"	e	enum:__anon4	file:
SCAO_MAVF	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_MAVF	= 103,	\/* Major Version Field *\/$/;"	e	enum:__anon6	file:
SCAO_MAVF	plugins/wdc/wdc-nvme.c	/^	SCAO_MAVF               = 103,     \/* Major Version Field *\/$/;"	e	enum:__anon4	file:
SCAO_MIVF	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_MIVF	= 101,	\/* Minor Version Field *\/$/;"	e	enum:__anon6	file:
SCAO_MIVF	plugins/wdc/wdc-nvme.c	/^	SCAO_MIVF               = 101,     \/* Minor Version Field *\/$/;"	e	enum:__anon4	file:
SCAO_MNUDEC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_MNUDEC	= 92,	\/* Min User data erase counts *\/$/;"	e	enum:__anon6	file:
SCAO_MNUDEC	plugins/wdc/wdc-nvme.c	/^	SCAO_MNUDEC             = 92,	\/* Min User data erase counts *\/$/;"	e	enum:__anon4	file:
SCAO_MXUDEC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_MXUDEC	= 88,	\/* Max User data erase counts *\/$/;"	e	enum:__anon6	file:
SCAO_MXUDEC	plugins/wdc/wdc-nvme.c	/^	SCAO_MXUDEC             = 88,	\/* Max User data erase counts *\/$/;"	e	enum:__anon4	file:
SCAO_NEV	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_NEV	= 130,  \/* NVMe Errata Version *\/$/;"	e	enum:__anon6	file:
SCAO_NEV	plugins/wdc/wdc-nvme.c	/^	SCAO_NEV                = 130,     \/* NVMe Errata Version *\/$/;"	e	enum:__anon4	file:
SCAO_NTTE	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_NTTE	= 96,	\/* Number of Thermal throttling events *\/$/;"	e	enum:__anon6	file:
SCAO_NTTE	plugins/wdc/wdc-nvme.c	/^	SCAO_NTTE               = 96,	\/* Number of Thermal throttling events *\/$/;"	e	enum:__anon4	file:
SCAO_NUSE	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_NUSE	= 152,	\/* NUSE - Namespace utilization *\/$/;"	e	enum:__anon6	file:
SCAO_NUSE	plugins/wdc/wdc-nvme.c	/^	SCAO_NUSE               = 152,	\/* NUSE - Namespace utilization *\/$/;"	e	enum:__anon4	file:
SCAO_PCEC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PCEC	= 104,	\/* PCIe correctable error count *\/$/;"	e	enum:__anon6	file:
SCAO_PCEC	plugins/wdc/wdc-nvme.c	/^	SCAO_PCEC               = 104,	\/* PCIe correctable error count *\/$/;"	e	enum:__anon4	file:
SCAO_PFB	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PFB	= 120,	\/* Percent free blocks *\/$/;"	e	enum:__anon6	file:
SCAO_PFB	plugins/wdc/wdc-nvme.c	/^	SCAO_PFB                = 120,	\/* Percent free blocks *\/$/;"	e	enum:__anon4	file:
SCAO_PLRC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PLRC	= 192,	\/* PCIe Link Retraining Count *\/$/;"	e	enum:__anon6	file:
SCAO_PLRC	plugins/wdc/wdc-nvme.c	/^	SCAO_PLRC               = 192,     \/* PCIe Link Retraining Count *\/$/;"	e	enum:__anon4	file:
SCAO_PMUR	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PMUR	= 16,	\/* Physical media units read *\/$/;"	e	enum:__anon6	file:
SCAO_PMUR	plugins/wdc/wdc-nvme.c	/^	SCAO_PMUR               = 16,	\/* Physical media units read *\/$/;"	e	enum:__anon4	file:
SCAO_PMUW	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PMUW	= 0,	\/* Physical media units written *\/$/;"	e	enum:__anon6	file:
SCAO_PMUW	plugins/wdc/wdc-nvme.c	/^	SCAO_PMUW               =  0,	\/* Physical media units written *\/$/;"	e	enum:__anon4	file:
SCAO_PSC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PSC	= 160,	\/* PLP start count *\/$/;"	e	enum:__anon6	file:
SCAO_PSC	plugins/wdc/wdc-nvme.c	/^	SCAO_PSC                = 160,	\/* PLP start count *\/$/;"	e	enum:__anon4	file:
SCAO_PSCC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PSCC	= 200,	\/* Power State Change Count *\/$/;"	e	enum:__anon6	file:
SCAO_PSCC	plugins/wdc/wdc-nvme.c	/^	SCAO_PSCC               = 200,	\/* Power State Change Count *\/$/;"	e	enum:__anon4	file:
SCAO_PVF	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_PVF	= 99,	\/* Point Version Field *\/$/;"	e	enum:__anon6	file:
SCAO_PVF	plugins/wdc/wdc-nvme.c	/^	SCAO_PVF                = 99,      \/* Point Version Field *\/$/;"	e	enum:__anon4	file:
SCAO_RFSC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_RFSC	= 81,	\/* Refresh counts *\/$/;"	e	enum:__anon6	file:
SCAO_RFSC	plugins/wdc/wdc-nvme.c	/^	SCAO_RFSC               = 81,	\/* Refresh counts *\/$/;"	e	enum:__anon4	file:
SCAO_SDPU	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_SDPU	= 80,	\/* System data percent used *\/$/;"	e	enum:__anon6	file:
SCAO_SDPU	plugins/wdc/wdc-nvme.c	/^	SCAO_SDPU               = 80,	\/* System data percent used *\/$/;"	e	enum:__anon4	file:
SCAO_SEEC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_SEEC	= 64,	\/* Soft ecc error count *\/$/;"	e	enum:__anon6	file:
SCAO_SEEC	plugins/wdc/wdc-nvme.c	/^	SCAO_SEEC               = 64,	\/* Soft ecc error count *\/$/;"	e	enum:__anon4	file:
SCAO_SVN	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_SVN	= 144,	\/* Security Version Number *\/$/;"	e	enum:__anon6	file:
SCAO_SVN	plugins/wdc/wdc-nvme.c	/^	SCAO_SVN                = 144,	\/* Security Version Number *\/$/;"	e	enum:__anon4	file:
SCAO_UIO	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_UIO	= 136,	\/* Unaligned I\/O *\/$/;"	e	enum:__anon6	file:
SCAO_UIO	plugins/wdc/wdc-nvme.c	/^	SCAO_UIO                = 136,	\/* Unaligned I\/O *\/$/;"	e	enum:__anon4	file:
SCAO_UREC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_UREC	= 56,	\/* Uncorrectable read error count *\/$/;"	e	enum:__anon6	file:
SCAO_UREC	plugins/wdc/wdc-nvme.c	/^	SCAO_UREC               = 56,	\/* Uncorrectable read error count *\/$/;"	e	enum:__anon4	file:
SCAO_V1_AVEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_AVEC               = 124,	\/* Average Erase counts (SLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_AVUDEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_AVUDEC             = 100,	\/* Average User data erase counts (TLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_BBPG	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_BBPG               = 198,	\/* Background Back-Pressure Gauge *\/$/;"	e	enum:__anon3	file:
SCAO_V1_BSNBN	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_BSNBN              = 218,	\/* Bad system nand blocks normalized *\/$/;"	e	enum:__anon3	file:
SCAO_V1_BSNBR	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_BSNBR              = 220,	\/* Bad system nand blocks raw *\/$/;"	e	enum:__anon3	file:
SCAO_V1_BUNBN	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_BUNBN              = 32,	\/* Bad user nand blocks normalized *\/$/;"	e	enum:__anon3	file:
SCAO_V1_BUNBR	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_BUNBR              = 34,	\/* Bad user nand blocks raw *\/$/;"	e	enum:__anon3	file:
SCAO_V1_DCC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_DCC                = 172,	\/* Deallocate Commands Completed *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EECE	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EECE               = 56,	\/* End to end corrected errors *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EEDE	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EEDE               = 64,	\/* End to end detected errors *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EEST	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EEST               = 226,	\/* Endurance estimate *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EEUE	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EEUE               = 72,	\/* End to end uncorrected errors *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EFCN	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EFCN               = 140,	\/* Erase fail count normalized *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EFCR	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EFCR               = 142,	\/* Erase fail count raw *\/$/;"	e	enum:__anon3	file:
SCAO_V1_EVF	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_EVF                = 306,	\/* Boot SSD errata version field *\/$/;"	e	enum:__anon3	file:
SCAO_V1_FCC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_FCC                = 196,	\/* Format NVM Commands Completed *\/$/;"	e	enum:__anon3	file:
SCAO_V1_FTLUS	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_FTLUS              = 308,	\/* FTL Unit Size *\/$/;"	e	enum:__anon3	file:
SCAO_V1_LPG	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_LPG                = 496,	\/* Log page GUID *\/$/;"	e	enum:__anon3	file:
SCAO_V1_LPV	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_LPV                = 494,	\/* Log page version - 0x0001 *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MAVF	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MAVF               = 300,	\/* Boot SSD major version field *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MIVF	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MIVF               = 302,	\/* Boot SSD minor version field *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MNEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MNEC               = 108,	\/* Min Erase counts (SLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MNUDEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MNUDEC             = 84,	\/* Min User data erase counts (TLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MXEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MXEC               = 116,	\/* Max Erase counts (SLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_MXUDEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_MXUDEC             = 92,	\/* Max User data erase counts (TLC) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PCEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PCEC               = 148,	\/* PCIe correctable error count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PFBS	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PFBS               = 168,	\/* Percent free blocks (System) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PFBU	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PFBU               = 156,	\/* Percent free blocks (User) *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PFCN	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PFCN               = 132,	\/* Program fail count normalized *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PFCR	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PFCR               = 134,	\/* Program fail count raw *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PLRC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PLRC               = 284,	\/* PCIe Link Retraining Count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PMUR	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PMUR               = 252,	\/* Physical media units read *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PMUWS	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PMUWS              = 16,	\/* Physical media units written SLC *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PMUWT	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PMUWT              =  0,	\/* Physical media units written TLC *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PSCC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PSCC               = 292,	\/* Power State Change Count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_PVF	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_PVF                = 304,	\/* Boot SSD point version field *\/$/;"	e	enum:__anon3	file:
SCAO_V1_RFSC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_RFSC               = 210,	\/* Refresh count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_RTOC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_RTOC               = 268,	\/* Read command timeout count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_SDPU	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_SDPU               = 80,	\/* System data percent used *\/$/;"	e	enum:__anon3	file:
SCAO_V1_SEEC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_SEEC               = 202,	\/* Soft ECC error count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_SVN	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_SVN                = 160,	\/* Security Version Number *\/$/;"	e	enum:__anon3	file:
SCAO_V1_TCGOS	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_TCGOS              = 312,	\/* TCG Ownership Status *\/$/;"	e	enum:__anon3	file:
SCAO_V1_TNU	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_TNU                = 188,	\/* Total Namespace Utilization *\/$/;"	e	enum:__anon3	file:
SCAO_V1_TTC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_TTC                = 242,	\/* Thermal throttling count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_TTOC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_TTOC               = 276,	\/* Trim command timeout count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_UIO	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_UIO                = 244,	\/* Unaligned I\/O *\/$/;"	e	enum:__anon3	file:
SCAO_V1_UREC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_UREC               = 48,	\/* Uncorrectable read error count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_WTOC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_WTOC               = 272,	\/* Write command timeout count *\/$/;"	e	enum:__anon3	file:
SCAO_V1_XRC	plugins/wdc/wdc-nvme.c	/^	SCAO_V1_XRC                = 40,	\/* XOR recovery count *\/$/;"	e	enum:__anon3	file:
SCAO_XRC	plugins/ocp/ocp-smart-extended-log.c	/^	SCAO_XRC	= 48,	\/* XOR recovery count *\/$/;"	e	enum:__anon6	file:
SCAO_XRC	plugins/wdc/wdc-nvme.c	/^	SCAO_XRC                = 48,	\/* XOR recovery count *\/$/;"	e	enum:__anon4	file:
SEAGATE_NVME	plugins/seagate/seagate-nvme.h	29;"	d
SEAGATE_NVME_H	plugins/seagate/seagate-diag.h	27;"	d
SEAGATE_OCP_PLUGIN_VERSION_MAJOR	plugins/seagate/seagate-diag.h	32;"	d
SEAGATE_OCP_PLUGIN_VERSION_MINOR	plugins/seagate/seagate-diag.h	33;"	d
SEAGATE_PLUGIN_VERSION_MAJOR	plugins/seagate/seagate-diag.h	29;"	d
SEAGATE_PLUGIN_VERSION_MINOR	plugins/seagate/seagate-diag.h	30;"	d
SECONDS_IN_MIN	plugins/wdc/wdc-utils.h	55;"	d
SECTOR_SHIFT	plugins/scaleflux/sfx-nvme.c	29;"	d	file:
SFX_FEAT_ATOMIC	plugins/scaleflux/sfx-nvme.c	/^	SFX_FEAT_ATOMIC			= 0x01,$/;"	e	enum:__anon18	file:
SFX_FEAT_CLR_CARD	plugins/scaleflux/sfx-nvme.c	/^	SFX_FEAT_CLR_CARD		= 0xdc,$/;"	e	enum:__anon18	file:
SFX_FEAT_UP_P_CAP	plugins/scaleflux/sfx-nvme.c	/^	SFX_FEAT_UP_P_CAP		= 0xac,$/;"	e	enum:__anon18	file:
SFX_GET_FREESPACE	plugins/scaleflux/sfx-nvme.c	31;"	d	file:
SFX_LOG_BBT	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_BBT			= 0xc7,$/;"	e	enum:__anon18	file:
SFX_LOG_IDENTIFY	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_IDENTIFY		= 0xcc,$/;"	e	enum:__anon18	file:
SFX_LOG_LATENCY_READ_STATS	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_LATENCY_READ_STATS	= 0xc1,$/;"	e	enum:__anon18	file:
SFX_LOG_LATENCY_WRITE_STATS	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_LATENCY_WRITE_STATS	= 0xc3,$/;"	e	enum:__anon18	file:
SFX_LOG_MEDIA	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_MEDIA			= 0xc6,$/;"	e	enum:__anon18	file:
SFX_LOG_MISMATCHLBA	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_MISMATCHLBA		= 0xc5,$/;"	e	enum:__anon18	file:
SFX_LOG_QUAL	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_QUAL			= 0xc4,$/;"	e	enum:__anon18	file:
SFX_LOG_SMART	plugins/scaleflux/sfx-nvme.c	/^	SFX_LOG_SMART			= 0xc2,$/;"	e	enum:__anon18	file:
SFX_NVME	plugins/scaleflux/sfx-nvme.h	6;"	d
SFX_PAGE_SHIFT	plugins/scaleflux/sfx-nvme.c	28;"	d	file:
SHANNON_NVME	plugins/shannon/shannon-nvme.h	6;"	d
SIGNED_INT_PREFIX	plugins/solidigm/solidigm-telemetry/data-area.c	16;"	d	file:
SIZE_16K	plugins/innogrit/typedef.h	3;"	d
SIZE_4K	plugins/innogrit/typedef.h	2;"	d
SI_VD_E2E_DECTECTION_COUNT	plugins/ymtc/ymtc-utils.h	/^    SI_VD_E2E_DECTECTION_COUNT = 3, \/* 0xB8 *\/$/;"	e	enum:__anon9
SI_VD_E2E_DECTECTION_COUNT_ID	plugins/ymtc/ymtc-utils.h	17;"	d
SI_VD_ERASE_FAIL	plugins/ymtc/ymtc-utils.h	/^    SI_VD_ERASE_FAIL = 1,   \/* 0xAC *\/$/;"	e	enum:__anon9
SI_VD_ERASE_FAIL_ID	plugins/ymtc/ymtc-utils.h	15;"	d
SI_VD_FLASH_MEDIA_ERROR	plugins/ymtc/ymtc-utils.h	/^    SI_VD_FLASH_MEDIA_ERROR = 21, \/* 0xED *\/$/;"	e	enum:__anon9
SI_VD_FLASH_MEDIA_ERROR_ID	plugins/ymtc/ymtc-utils.h	35;"	d
SI_VD_HOST_WRITE	plugins/ymtc/ymtc-utils.h	/^    SI_VD_HOST_WRITE = 12, \/* 0xF5, unit is 32MiB *\/$/;"	e	enum:__anon9
SI_VD_HOST_WRITE_ID	plugins/ymtc/ymtc-utils.h	26;"	d
SI_VD_PCIE_CRC_ERR_COUNT	plugins/ymtc/ymtc-utils.h	/^    SI_VD_PCIE_CRC_ERR_COUNT = 4, \/* 0xC7, 2 port data in one attribute *\/$/;"	e	enum:__anon9
SI_VD_PCIE_CRC_ERR_COUNT_ID	plugins/ymtc/ymtc-utils.h	18;"	d
SI_VD_PLL_LOCK_LOSS_COUNT_ID	plugins/ymtc/ymtc-utils.h	24;"	d
SI_VD_POWER_CONSUMPTION	plugins/ymtc/ymtc-utils.h	/^    SI_VD_POWER_CONSUMPTION = 16, \/* 0xE8 *\/$/;"	e	enum:__anon9
SI_VD_POWER_CONSUMPTION_ID	plugins/ymtc/ymtc-utils.h	30;"	d
SI_VD_POWER_LOSS_PROTECTION	plugins/ymtc/ymtc-utils.h	/^    SI_VD_POWER_LOSS_PROTECTION = 18, \/* 0xEC *\/$/;"	e	enum:__anon9
SI_VD_POWER_LOSS_PROTECTION_ID	plugins/ymtc/ymtc-utils.h	32;"	d
SI_VD_PROGRAM_FAIL	plugins/ymtc/ymtc-utils.h	/^    SI_VD_PROGRAM_FAIL = 0, \/* 0xAB *\/$/;"	e	enum:__anon9
SI_VD_PROGRAM_FAIL_ID	plugins/ymtc/ymtc-utils.h	14;"	d
SI_VD_READ_FAIL	plugins/ymtc/ymtc-utils.h	/^    SI_VD_READ_FAIL = 19, \/* 0xF2 *\/$/;"	e	enum:__anon9
SI_VD_READ_FAIL_ID	plugins/ymtc/ymtc-utils.h	33;"	d
SI_VD_RETRY_BUFF_OVERFLOW_COUNT_ID	plugins/ymtc/ymtc-utils.h	23;"	d
SI_VD_SYSTEM_AREA_LIFE_LEFT_ID	plugins/ymtc/ymtc-utils.h	27;"	d
SI_VD_TEMPT_SINCE_BOOTUP	plugins/ymtc/ymtc-utils.h	/^    SI_VD_TEMPT_SINCE_BOOTUP = 17, \/* 0xAF *\/$/;"	e	enum:__anon9
SI_VD_TEMPT_SINCE_BOOTUP_ID	plugins/ymtc/ymtc-utils.h	31;"	d
SI_VD_TEMPT_SINCE_BORN	plugins/ymtc/ymtc-utils.h	/^    SI_VD_TEMPT_SINCE_BORN = 15, \/* 0xE7 *\/$/;"	e	enum:__anon9
SI_VD_TEMPT_SINCE_BORN_ID	plugins/ymtc/ymtc-utils.h	29;"	d
SI_VD_THERMAL_THROTTLE_STATUS	plugins/ymtc/ymtc-utils.h	/^    SI_VD_THERMAL_THROTTLE_STATUS = 8, \/* 0xEA *\/$/;"	e	enum:__anon9
SI_VD_THERMAL_THROTTLE_STATUS_ID	plugins/ymtc/ymtc-utils.h	22;"	d
SI_VD_THERMAL_THROTTLE_TIME	plugins/ymtc/ymtc-utils.h	/^    SI_VD_THERMAL_THROTTLE_TIME = 20, \/* 0xEB *\/$/;"	e	enum:__anon9
SI_VD_THERMAL_THROTTLE_TIME_ID	plugins/ymtc/ymtc-utils.h	34;"	d
SI_VD_TIMED_WORKLOAD_HOST_READ_ID	plugins/ymtc/ymtc-utils.h	20;"	d
SI_VD_TIMED_WORKLOAD_MEDIA_WEAR_ID	plugins/ymtc/ymtc-utils.h	19;"	d
SI_VD_TIMED_WORKLOAD_TIMER_ID	plugins/ymtc/ymtc-utils.h	21;"	d
SI_VD_TOTAL_READ	plugins/ymtc/ymtc-utils.h	/^    SI_VD_TOTAL_READ = 14, \/* 0xFA, unit is 32MiB *\/$/;"	e	enum:__anon9
SI_VD_TOTAL_READ_ID	plugins/ymtc/ymtc-utils.h	28;"	d
SI_VD_TOTAL_WRITE	plugins/ymtc/ymtc-utils.h	/^    SI_VD_TOTAL_WRITE = 11, \/* 0xF4, unit is 32MiB *\/$/;"	e	enum:__anon9
SI_VD_TOTAL_WRITE_ID	plugins/ymtc/ymtc-utils.h	25;"	d
SI_VD_WEARLEVELING_COUNT	plugins/ymtc/ymtc-utils.h	/^    SI_VD_WEARLEVELING_COUNT = 2,\/* 0xAD *\/$/;"	e	enum:__anon9
SI_VD_WEARLEVELING_COUNT_ID	plugins/ymtc/ymtc-utils.h	16;"	d
SMART_ATTRIBUTES_C0	plugins/toshiba/toshiba-nvme.c	/^	SMART_ATTRIBUTES_C0,$/;"	e	enum:LOG_PAGE_C0	file:
SMART_HEALTH_LOG_C0	plugins/toshiba/toshiba-nvme.c	/^	SMART_HEALTH_LOG_C0,$/;"	e	enum:LOG_PAGE_C0	file:
SMART_INFO_NEW_SIZE	plugins/memblaze/memblaze-utils.h	6;"	d
SMART_INFO_OLD_SIZE	plugins/memblaze/memblaze-utils.h	5;"	d
SMART_INFO_SIZE	plugins/ymtc/ymtc-utils.h	5;"	d
SN730_GET_COREDUMP_LOG_LENGTH	plugins/wdc/wdc-nvme.c	169;"	d	file:
SN730_GET_CORE_LOG_SUBOPCODE	plugins/wdc/wdc-nvme.c	174;"	d	file:
SN730_GET_EXTENDED_LOG_LENGTH	plugins/wdc/wdc-nvme.c	170;"	d	file:
SN730_GET_EXTEND_LOG_SUBOPCODE	plugins/wdc/wdc-nvme.c	175;"	d	file:
SN730_GET_FULL_LOG_LENGTH	plugins/wdc/wdc-nvme.c	167;"	d	file:
SN730_GET_FULL_LOG_SUBOPCODE	plugins/wdc/wdc-nvme.c	172;"	d	file:
SN730_GET_KEY_LOG_LENGTH	plugins/wdc/wdc-nvme.c	168;"	d	file:
SN730_GET_KEY_LOG_SUBOPCODE	plugins/wdc/wdc-nvme.c	173;"	d	file:
SN730_LOG_CHUNK_SIZE	plugins/wdc/wdc-nvme.c	176;"	d	file:
SN730_NVME_GET_LOG_OPCODE	plugins/wdc/wdc-nvme.c	166;"	d	file:
SOLIDIGM_LOG_PAGE_DIRECTORY_H	plugins/solidigm/solidigm-log-page-dir.h	9;"	d
SOLIDIGM_LOG_WARNING	plugins/solidigm/solidigm-telemetry/telemetry-log.h	20;"	d
SOLIDIGM_MAX_UUID	plugins/solidigm/solidigm-log-page-dir.c	20;"	d	file:
SOLIDIGM_NVME	plugins/solidigm/solidigm-nvme.h	12;"	d
SOLIDIGM_PLUGIN_VERSION	plugins/solidigm/solidigm-nvme.h	16;"	d
SOL_ALG	nvme-rpmb.c	44;"	d	file:
SRAM_ERROR_CNT	plugins/shannon/shannon-nvme.c	/^	SRAM_ERROR_CNT,$/;"	e	enum:__anon7	file:
SRB_SIGNATURE	plugins/innogrit/typedef.h	11;"	d
STATIC_ILOG0	ccan/ccan/ilog/ilog.h	142;"	d
STATIC_ILOG1	ccan/ccan/ilog/ilog.h	143;"	d
STATIC_ILOG2	ccan/ccan/ilog/ilog.h	144;"	d
STATIC_ILOG3	ccan/ccan/ilog/ilog.h	145;"	d
STATIC_ILOG4	ccan/ccan/ilog/ilog.h	147;"	d
STATIC_ILOG5	ccan/ccan/ilog/ilog.h	149;"	d
STATIC_ILOG6	ccan/ccan/ilog/ilog.h	151;"	d
STATIC_ILOG_32	ccan/ccan/ilog/ilog.h	86;"	d
STATIC_ILOG_64	ccan/ccan/ilog/ilog.h	97;"	d
STRTOUL_AUTO_BASE	nvme.c	5980;"	d	file:
STR_HEX32_SIZE	plugins/solidigm/solidigm-telemetry/config.h	10;"	d
STR_MAX_CHARS	ccan/ccan/str/str.h	90;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	96;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	99;"	d
STR_VER_SIZE	plugins/memblaze/memblaze-nvme.c	79;"	d	file:
STX_EXT_SMART_LOG_PAGE_C0	plugins/seagate/seagate-diag.h	/^} STX_EXT_SMART_LOG_PAGE_C0;$/;"	t	typeref:struct:_STX_EXT_SMART_LOG_PAGE_C0
STX_NUM_LEGACY_DRV	plugins/seagate/seagate-diag.h	39;"	d
SYSCONFDIR	.build/config.h	46;"	d
SYS_NVME	nvme.h	46;"	d
SensorCount	plugins/micron/micron-nvme.c	40;"	d	file:
SerialNumber	plugins/solidigm/solidigm-telemetry/header.c	/^	char SerialNumber[20];		\/\/! Device serial number$/;"	m	struct:reason_indentifier_1_0	file:
SerialNumber	plugins/solidigm/solidigm-telemetry/header.c	/^	char SerialNumber[20];		\/\/! Device serial number$/;"	m	struct:reason_indentifier_1_1	file:
SerialNumber	plugins/solidigm/solidigm-telemetry/header.c	/^	char SerialNumber[20];		\/\/! Device serial number$/;"	m	struct:reason_indentifier_1_2	file:
SetupDebugDataDirectories	plugins/micron/micron-nvme.c	/^static int SetupDebugDataDirectories(char *strSN, char *strFilePath,$/;"	f	file:
Signature	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t Signature;      \/\/!Fixed signature value (0x504D4443) for identification and validation$/;"	m	struct:cod_header	file:
SmartStatus	plugins/seagate/seagate-diag.h	/^   __u16 SmartStatus;                                          $/;"	m	struct:_SmartVendorSpecific
SmartVendorSpecific	plugins/seagate/seagate-diag.h	/^} SmartVendorSpecific;$/;"	t	typeref:struct:_SmartVendorSpecific
SuperCapCurrentTemperature	plugins/seagate/seagate-diag.h	/^   __u16    SuperCapCurrentTemperature;        $/;"	m	struct:_vendor_log_page_CF_Attr
SuperCapMaximumTemperature	plugins/seagate/seagate-diag.h	/^   __u16    SuperCapMaximumTemperature;        $/;"	m	struct:_vendor_log_page_CF_Attr
SuperCapStatus	plugins/seagate/seagate-diag.h	/^   __u8     SuperCapStatus;                    $/;"	m	struct:_vendor_log_page_CF_Attr
TELEMETRY_BLOCKS_TO_READ	plugins/seagate/seagate-diag.h	381;"	d
TELEMETRY_BYTE_PER_BLOCK	plugins/ocp/ocp-nvme.c	825;"	d	file:
TELEMETRY_HEADER_SIZE	plugins/ocp/ocp-nvme.c	824;"	d	file:
TELEMETRY_TRANSFER_SIZE	plugins/ocp/ocp-nvme.c	826;"	d	file:
TELEMETRY_TYPE	plugins/ocp/ocp-nvme.c	/^enum TELEMETRY_TYPE {$/;"	g	file:
TELEMETRY_TYPE_CONTROLLER	plugins/ocp/ocp-nvme.c	/^	TELEMETRY_TYPE_CONTROLLER = 8,$/;"	e	enum:TELEMETRY_TYPE	file:
TELEMETRY_TYPE_HOST	plugins/ocp/ocp-nvme.c	/^	TELEMETRY_TYPE_HOST       = 7,$/;"	e	enum:TELEMETRY_TYPE	file:
TELEMETRY_TYPE_HOST_0	plugins/ocp/ocp-nvme.c	/^	TELEMETRY_TYPE_HOST_0     = 9,$/;"	e	enum:TELEMETRY_TYPE	file:
TELEMETRY_TYPE_HOST_1	plugins/ocp/ocp-nvme.c	/^	TELEMETRY_TYPE_HOST_1     = 10,$/;"	e	enum:TELEMETRY_TYPE	file:
TELEMETRY_TYPE_NONE	plugins/ocp/ocp-nvme.c	/^	TELEMETRY_TYPE_NONE       = 0,$/;"	e	enum:TELEMETRY_TYPE	file:
TEMPT_SINCE_BOOTUP	plugins/memblaze/memblaze-utils.h	/^	\/*5*\/TEMPT_SINCE_BOOTUP,$/;"	e	enum:__anon11
TEMPT_SINCE_RESET	plugins/memblaze/memblaze-utils.h	/^	\/*3*\/TEMPT_SINCE_RESET,$/;"	e	enum:__anon11
THERMAL_THROTTLE	plugins/memblaze/memblaze-utils.h	/^	\/*2*\/THERMAL_THROTTLE,$/;"	e	enum:__anon11
THERMAL_THROTTLE	plugins/shannon/shannon-nvme.c	/^	THERMAL_THROTTLE,$/;"	e	enum:__anon7	file:
THERMAL_THROTTLE_CNT	plugins/memblaze/memblaze-utils.h	/^	\/*9*\/THERMAL_THROTTLE_CNT,$/;"	e	enum:__anon11
TIME_STR_SIZE	plugins/memblaze/memblaze-nvme.c	675;"	d	file:
TIME_WORKLOAD_HOST_READS	plugins/shannon/shannon-nvme.c	/^	TIME_WORKLOAD_HOST_READS,$/;"	e	enum:__anon7	file:
TIME_WORKLOAD_MEDIA_WEAR	plugins/shannon/shannon-nvme.c	/^	TIME_WORKLOAD_MEDIA_WEAR,$/;"	e	enum:__anon7	file:
TIME_WORKLOAD_TIMER	plugins/shannon/shannon-nvme.c	/^	TIME_WORKLOAD_TIMER,$/;"	e	enum:__anon7	file:
TOSHIBA_NVME	plugins/toshiba/toshiba-nvme.h	6;"	d
TOTAL_READ	plugins/memblaze/memblaze-utils.h	/^	\/*1*\/TOTAL_READ,$/;"	e	enum:__anon11
TOTAL_WRITE	plugins/memblaze/memblaze-utils.h	/^	\/*0*\/TOTAL_WRITE = 0,$/;"	e	enum:__anon11
TRANSCEND_NVME	plugins/transcend/transcend-nvme.h	6;"	d
TRIM	plugins/ocp/ocp-nvme.c	61;"	d	file:
TableOfContentsCount	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint16_t TableOfContentsCount;$/;"	m	struct:data_area_header	file:
TelemetryMajorVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t TelemetryMajorVersion;	\/\/! Shadow of version in TOC$/;"	m	struct:reason_indentifier_1_1	file:
TelemetryMajorVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t TelemetryMajorVersion;	\/\/! Shadow of version in TOC$/;"	m	struct:reason_indentifier_1_2	file:
TelemetryMinorVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t TelemetryMinorVersion;	\/\/! Shadow of version in TOC$/;"	m	struct:reason_indentifier_1_1	file:
TelemetryMinorVersion	plugins/solidigm/solidigm-telemetry/header.c	/^	uint8_t TelemetryMinorVersion;	\/\/! Shadow of version in TOC$/;"	m	struct:reason_indentifier_1_2	file:
TestNVMe	tests/nvme_test.py	/^class TestNVMe(unittest.TestCase):$/;"	c
TestNVMeAttachDetachNSCmd	tests/nvme_attach_detach_ns_test.py	/^class TestNVMeAttachDetachNSCmd(TestNVMe):$/;"	c
TestNVMeCompareCmd	tests/nvme_compare_test.py	/^class TestNVMeCompareCmd(TestNVMeIO):$/;"	c
TestNVMeCopy	tests/nvme_copy_test.py	/^class TestNVMeCopy(TestNVMe):$/;"	c
TestNVMeCreateMaxNS	tests/nvme_create_max_ns_test.py	/^class TestNVMeCreateMaxNS(TestNVMe):$/;"	c
TestNVMeCtrlReset	tests/nvme_ctrl_reset_test.py	/^class TestNVMeCtrlReset(TestNVMe):$/;"	c
TestNVMeDsm	tests/nvme_dsm_test.py	/^class TestNVMeDsm(TestNVMe):$/;"	c
TestNVMeErrorLogCmd	tests/nvme_error_log_test.py	/^class TestNVMeErrorLogCmd(TestNVMe):$/;"	c
TestNVMeFlushCmd	tests/nvme_flush_test.py	/^class TestNVMeFlushCmd(TestNVMe):$/;"	c
TestNVMeFormatCmd	tests/nvme_format_test.py	/^class TestNVMeFormatCmd(TestNVMe):$/;"	c
TestNVMeFwLogCmd	tests/nvme_fw_log_test.py	/^class TestNVMeFwLogCmd(TestNVMe):$/;"	c
TestNVMeGetLbaStatusCmd	tests/nvme_get_lba_status_test.py	/^class TestNVMeGetLbaStatusCmd(TestNVMe):$/;"	c
TestNVMeGetMandatoryFeatures	tests/nvme_get_features_test.py	/^class TestNVMeGetMandatoryFeatures(TestNVMe):$/;"	c
TestNVMeIO	tests/nvme_test_io.py	/^class TestNVMeIO(TestNVMe):$/;"	c
TestNVMeIdctrlCmd	tests/nvme_id_ctrl_test.py	/^class TestNVMeIdctrlCmd(TestNVMe):$/;"	c
TestNVMeIdentifyNamespace	tests/nvme_id_ns_test.py	/^class TestNVMeIdentifyNamespace(TestNVMe):$/;"	c
TestNVMeLbaStatLogCmd	tests/nvme_lba_status_log_test.py	/^class TestNVMeLbaStatLogCmd(TestNVMe):$/;"	c
TestNVMeLogger	tests/nvme_test_logger.py	/^class TestNVMeLogger():$/;"	c
TestNVMeReadWriteTest	tests/nvme_read_write_test.py	/^class TestNVMeReadWriteTest(TestNVMeIO):$/;"	c
TestNVMeSimpleTestTemplate	tests/nvme_simple_template_test.py	/^class TestNVMeSimpleTestTemplate(TestNVMe):$/;"	c
TestNVMeSmartLogCmd	tests/nvme_smart_log_test.py	/^class TestNVMeSmartLogCmd(TestNVMe):$/;"	c
TestNVMeUncor	tests/nvme_writeuncor_test.py	/^class TestNVMeUncor(TestNVMeIO):$/;"	c
TestNVMeVerify	tests/nvme_verify_test.py	/^class TestNVMeVerify(TestNVMe):$/;"	c
TestNVMeWriteZeros	tests/nvme_writezeros_test.py	/^class TestNVMeWriteZeros(TestNVMeIO):$/;"	c
TocEntry	Documentation/nvme-admin-passthru.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ana-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-attach-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-boot-part-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-capacity-mgmt.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-changed-ns-list-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-check-dhchap-key.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-cmdset-ind-id-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-compare.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-connect-all.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-connect.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-copy.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-create-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-delete-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-dera-stat.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-detach-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-device-self-test.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-dim.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-dir-receive.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-dir-send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-disconnect-all.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-disconnect.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-discover.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-dsm.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-effects-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-endurance-event-agg-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-endurance-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-error-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-configs.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-events.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-set-events.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-status.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-update.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fdp-usage.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fid-support-effects-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-flush.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-format.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fw-commit.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fw-download.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-fw-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-gen-dhchap-key.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-gen-hostnqn.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-get-feature.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-get-lba-status.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-get-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-get-ns-id.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-get-property.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-help.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-huawei-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-huawei-list.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-domain.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-iocs.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-ns-lba-format.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-id-nvmset.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-inspur-nvme-vendor-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-internal-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-lat-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-market-name.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-smart-log-add.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-intel-temp-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-io-mgmt-recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-io-mgmt-send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-io-passthru.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-lba-status-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-list-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-list-endgrp.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-list-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-list-subsys.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-list.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-lockdown.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-media-unit-stat-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-mi-cmd-support-effects-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-clear-pcie-errors.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-internal-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-nand-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-pcie-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-selective-download.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-micron-temperature-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-netapp-ontapdevices.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-netapp-smdevices.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ns-descs.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ns-rescan.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-nvm-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-nvm-id-ns-lba-format.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-nvm-id-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-nvme-mi-recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-nvme-mi-send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ocp-clear-fw-activate-history.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ocp-clear-pcie-correctable-error-counters.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ocp-eol-plp-failure-mode.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ocp-latency-monitor-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-ocp-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-persistent-event-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-pred-lat-event-agg-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-predictable-lat-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-primary-ctrl-caps.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-read.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-reset.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-resv-acquire.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-resv-notif-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-resv-register.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-resv-release.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-resv-report.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-rpmb.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-sanitize-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-sanitize.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-clear-fw-activate-history.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-clear-pcie-correctable-errors.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-cloud-SSD-plugin-version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-get-ctrl-tele.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-get-host-tele.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-help.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-plugin-version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-fw-activate-history.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-internal-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-log-page-sup.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-pcie-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-seagate-vs-temperature-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-security-recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-security-send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-self-test-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-set-feature.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-set-property.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-show-hostnqn.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-show-regs.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-show-topology.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-smart-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-subsystem-reset.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-supported-log-pages.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-telemetry-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-toshiba-clear-pcie-correctable-errors.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-toshiba-vs-internal-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-toshiba-vs-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-transcend-badblock.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-transcend-healthvalue.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-verify.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-virtium-save-smart-to-vtview-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-virtium-show-identify.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-cap-diag.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-capabilities.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-clear-assert-dump.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-clear-fw-activate-history.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-clear-pcie-corr.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-clear-pcie-correctable-errors.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-cloud-SSD-plugin-version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-cloud-boot-SSD-version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-drive-essentials.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-drive-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-drive-resize.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-enc-get-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-crash-dump.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-dev-capabilities-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-drive-status.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-error-recovery-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-latency-monitor-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-pfail-dump.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-get-unsupported-reqs-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-log-page-directory.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-namespace-resize.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-purge-monitor.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-purge.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-cloud-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-device-waf.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-drive-info.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-error-reason-identifier.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-fw-activate-history.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-hw-rev-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-internal-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-nand-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-smart-add-log.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-telemetry-controller-option.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-wdc-vs-temperature-stats.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-write-uncor.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-write-zeroes.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-write.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-changed-zone-list.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-close-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-finish-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-id-ctrl.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-id-ns.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-offline-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-open-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-report-zones.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-reset-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-set-zone-desc.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-zone-append.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-zone-mgmt-recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-zone-mgmt-send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme-zns-zrwa-flush-zone.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	Documentation/nvme.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
Token	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint32_t Token;$/;"	m	struct:telemetry_object_header	file:
U128	plugins/seagate/seagate-diag.h	/^} U128;$/;"	t	typeref:struct:_U128
U128	unit/test-uint128-si.c	13;"	d	file:
U128	unit/test-uint128.c	13;"	d	file:
UNKNOWN_MODEL	plugins/micron/micron-nvme.c	/^	UNKNOWN_MODEL$/;"	e	enum:eDriveModel	file:
UNNEEDED	ccan/ccan/compiler/compiler.h	112;"	d
UNNEEDED	ccan/ccan/compiler/compiler.h	157;"	d
UNUSED	ccan/ccan/compiler/compiler.h	153;"	d
UNUSED	ccan/ccan/compiler/compiler.h	163;"	d
US	plugins/intel/intel-nvme.c	/^	US,$/;"	e	enum:FormatUnit	file:
US_IN_MS	plugins/intel/intel-nvme.c	527;"	d	file:
US_IN_MS	plugins/solidigm/solidigm-latency-tracking.c	61;"	d	file:
US_IN_S	plugins/intel/intel-nvme.c	526;"	d	file:
US_IN_S	plugins/solidigm/solidigm-latency-tracking.c	60;"	d	file:
UnexpectedCplTlpErrCnt	plugins/seagate/seagate-diag.h	/^   __u32   UnexpectedCplTlpErrCnt;$/;"	m	struct:pcie_error_log_page
UtilsTimeInfo	plugins/wdc/wdc-utils.h	/^} UtilsTimeInfo, *PUtilsTimeInfo;$/;"	t	typeref:struct:_UtilsTimeInfo
VAL_BYTE	util/argconfig.h	121;"	d
VAL_DOUBLE	util/argconfig.h	118;"	d
VAL_END	util/argconfig.h	101;"	d
VAL_FLAG	util/argconfig.h	103;"	d
VAL_INCR	util/argconfig.h	127;"	d
VAL_INT	util/argconfig.h	112;"	d
VAL_LONG	util/argconfig.h	115;"	d
VAL_LONG_SUFFIX	util/argconfig.h	106;"	d
VAL_SHRT	util/argconfig.h	124;"	d
VAL_STRING	util/argconfig.h	130;"	d
VAL_TEST	unit/test-argconfig-parse.c	80;"	d	file:
VAL_UINT	util/argconfig.h	109;"	d
VANDA_MAJOR_IDX	plugins/scaleflux/sfx-nvme.c	37;"	d	file:
VANDA_MINOR_IDX	plugins/scaleflux/sfx-nvme.c	38;"	d	file:
VA_ARGS	plugins/solidigm/solidigm-telemetry/telemetry-log.h	19;"	d
VENDOR_SMART_LOG_PAGE	plugins/inspur/inspur-utils.h	/^    VENDOR_SMART_LOG_PAGE = 0xc0,$/;"	e	enum:__anon20
VERBOSE	nvme.h	/^	VERBOSE	= 1 << 0,	\/* verbosely decode complex values for humans *\/$/;"	e	enum:nvme_print_flags
VIRTIUM_NVME	plugins/virtium/virtium-nvme.h	6;"	d
VOID_FN	libnvme-wrap.c	16;"	d	file:
VOLUME_LABEL_LEN	plugins/netapp/netapp-nvme.c	76;"	d	file:
VS	nvme.h	/^	VS	= 1 << 2,	\/* hex dump vendor specific data areas *\/$/;"	e	enum:nvme_print_flags
VSC_FN_GET_CDUMP	plugins/innogrit/typedef.h	8;"	d
VS_ATTR_AVG_ERASE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_AVG_ERASE_COUNT,                     \/* 12   OFFSET : 146 -157   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_BAD_BLOCK_COUNT_SYSTEM	plugins/seagate/seagate-diag.h	/^   VS_ATTR_BAD_BLOCK_COUNT_SYSTEM,              \/* 37   OFFSET : 446-457    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_BAD_BLOCK_COUNT_USER	plugins/seagate/seagate-diag.h	/^   VS_ATTR_BAD_BLOCK_COUNT_USER,                \/* 38   OFFSET : 458-469    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_DEVICE_POWER_CYCLE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_DEVICE_POWER_CYCLE_COUNT,            \/* 4    OFFSET : 50 -61     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_DRIVE_LIFE_PROTECTION_STATUS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_DRIVE_LIFE_PROTECTION_STATUS,        \/* 19   OFFSET : 230 -241   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_END_TO_END_CRC_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_END_TO_END_CRC_ERROR_COUNT,          \/* 16   OFFSET : 194 -205   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_ERASE_FAIL_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ERASE_FAIL_COUNT,                    \/* 11   OFFSET : 134 -145   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_FREE_SPACE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_FREE_SPACE,                          \/* 24   OFFSET : 290 -301   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_GB_ERASED	plugins/seagate/seagate-diag.h	/^   VS_ATTR_GB_ERASED,                           \/* 5    OFFSET : 62 -73     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_ID_ALL_PCIE_CORRECTABLE_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_ALL_PCIE_CORRECTABLE_ERROR_COUNT = 47,$/;"	e	enum:__anon2
VS_ATTR_ID_ALL_PCIE_UNCORRECTABLE_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_ALL_PCIE_UNCORRECTABLE_ERROR_COUNT = 48,$/;"	e	enum:__anon2
VS_ATTR_ID_AVG_ERASE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_AVG_ERASE_COUNT = 173,$/;"	e	enum:__anon2
VS_ATTR_ID_BAD_BLOCK_COUNT_SYSTEM	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_BAD_BLOCK_COUNT_SYSTEM = 45,$/;"	e	enum:__anon2
VS_ATTR_ID_BAD_BLOCK_COUNT_USER	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_BAD_BLOCK_COUNT_USER = 44,$/;"	e	enum:__anon2
VS_ATTR_ID_DEVICE_POWER_CYCLE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_DEVICE_POWER_CYCLE_COUNT = 12,$/;"	e	enum:__anon2
VS_ATTR_ID_DRIVE_LIFE_PROTECTION_STATUS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_DRIVE_LIFE_PROTECTION_STATUS = 230,$/;"	e	enum:__anon2
VS_ATTR_ID_END_2_END_CORRECTION_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_END_2_END_CORRECTION_COUNT = 41,$/;"	e	enum:__anon2
VS_ATTR_ID_END_TO_END_CRC_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_END_TO_END_CRC_ERROR_COUNT = 184,$/;"	e	enum:__anon2
VS_ATTR_ID_ERASE_FAIL_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_ERASE_FAIL_COUNT = 172,$/;"	e	enum:__anon2
VS_ATTR_ID_FREE_SPACE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_FREE_SPACE = 245,$/;"	e	enum:__anon2
VS_ATTR_ID_GB_ERASED_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_GB_ERASED_LSB = 100,$/;"	e	enum:__anon2
VS_ATTR_ID_GB_ERASED_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_GB_ERASED_MSB = 101,$/;"	e	enum:__anon2
VS_ATTR_ID_GROWN_BAD_BLOCK_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_GROWN_BAD_BLOCK_COUNT = 40,$/;"	e	enum:__anon2
VS_ATTR_ID_INCOMPLETE_SHUTDOWN_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_INCOMPLETE_SHUTDOWN_COUNT = 49,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_DEVSLEEP_EXIT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_DEVSLEEP_EXIT_COUNT = 104,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_ENTERING_PS3_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_ENTERING_PS3_COUNT = 103,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_ENTERING_PS4_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_ENTERING_PS4_COUNT = 102,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_READS_TO_HOST_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_READS_TO_HOST_LSB = 243,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_READS_TO_HOST_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_READS_TO_HOST_MSB = 244,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_WRITES_FROM_HOST_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_WRITES_FROM_HOST_LSB = 241,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_WRITES_FROM_HOST_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_WRITES_FROM_HOST_MSB = 242,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_WRITES_TO_FLASH_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_WRITES_TO_FLASH_LSB = 233,$/;"	e	enum:__anon2
VS_ATTR_ID_LIFETIME_WRITES_TO_FLASH_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_LIFETIME_WRITES_TO_FLASH_MSB = 234,$/;"	e	enum:__anon2
VS_ATTR_ID_MAX_LIFE_TEMPERATURE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_MAX_LIFE_TEMPERATURE = 194,$/;"	e	enum:__anon2
VS_ATTR_ID_MAX_SOC_LIFE_TEMPERATURE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_MAX_SOC_LIFE_TEMPERATURE = 253,$/;"	e	enum:__anon2
VS_ATTR_ID_MIN_MAX_WEAR_RANGE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_MIN_MAX_WEAR_RANGE_COUNT = 42,$/;"	e	enum:__anon2
VS_ATTR_ID_OP_PERCENTAGE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_OP_PERCENTAGE = 252,$/;"	e	enum:__anon2
VS_ATTR_ID_POWER_FAIL_EVENT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_POWER_FAIL_EVENT_COUNT = 11,$/;"	e	enum:__anon2
VS_ATTR_ID_POWER_ON_HOURS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_POWER_ON_HOURS = 9,$/;"	e	enum:__anon2
VS_ATTR_ID_PROGRAM_FAILURE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_PROGRAM_FAILURE_COUNT = 171,$/;"	e	enum:__anon2
VS_ATTR_ID_RAISE_ECC_CORRECTABLE_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_RAISE_ECC_CORRECTABLE_ERROR_COUNT = 195,$/;"	e	enum:__anon2
VS_ATTR_ID_RAW_READ_ERROR_RATE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_RAW_READ_ERROR_RATE = 13,$/;"	e	enum:__anon2
VS_ATTR_ID_REALLOCATED_SECTOR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_REALLOCATED_SECTOR_COUNT  = 5,$/;"	e	enum:__anon2
VS_ATTR_ID_REFRESH_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_REFRESH_COUNT = 43,$/;"	e	enum:__anon2
VS_ATTR_ID_REMAINING_SSD_LIFE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_REMAINING_SSD_LIFE  = 231,$/;"	e	enum:__anon2
VS_ATTR_ID_RETIRED_BLOCK_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_RETIRED_BLOCK_COUNT = 170,$/;"	e	enum:__anon2
VS_ATTR_ID_SATA_INTERFACE_DOWNSHIFT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_SATA_INTERFACE_DOWNSHIFT_COUNT = 183,$/;"	e	enum:__anon2
VS_ATTR_ID_SOFT_READ_ERROR_RATE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_SOFT_READ_ERROR_RATE = 1,$/;"	e	enum:__anon2
VS_ATTR_ID_THERMAL_THROTTLING_STATUS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_THERMAL_THROTTLING_STATUS = 46,$/;"	e	enum:__anon2
VS_ATTR_ID_TRIM_COUNT_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_TRIM_COUNT_LSB = 250,$/;"	e	enum:__anon2
VS_ATTR_ID_TRIM_COUNT_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_TRIM_COUNT_MSB = 251,$/;"	e	enum:__anon2
VS_ATTR_ID_UNCORRECTABLE_RAISE_ERRORS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_UNCORRECTABLE_RAISE_ERRORS = 198,$/;"	e	enum:__anon2
VS_ATTR_ID_UNCORRECTABLE_READ_ERRORS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_UNCORRECTABLE_READ_ERRORS = 188,$/;"	e	enum:__anon2
VS_ATTR_ID_UNEXPECTED_POWER_LOSS_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_UNEXPECTED_POWER_LOSS_COUNT = 174,$/;"	e	enum:__anon2
VS_ATTR_ID_WEAR_RANGE_DELTA	plugins/seagate/seagate-diag.h	/^   VS_ATTR_ID_WEAR_RANGE_DELTA = 177,$/;"	e	enum:__anon2
VS_ATTR_LIFETIME_DEVSLEEP_EXIT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_DEVSLEEP_EXIT_COUNT,        \/* 6    OFFSET : 74 -85     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_ENTERING_PS3_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_ENTERING_PS3_COUNT,         \/* 8    OFFSET : 98 -109    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_ENTERING_PS4_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_ENTERING_PS4_COUNT,         \/* 7    OFFSET : 86 -97     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_READ0_FROM_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_READ0_FROM_HOST,            \/* 34   OFFSET : 410-421    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_READ1_FROM_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_READ1_FROM_HOST,            \/* 35   OFFSET : 422-433    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_READS_TO_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_READS_TO_HOST,              \/* 23   OFFSET : 278 -289   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES0_FROM_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES0_FROM_HOST,          \/* 32   OFFSET : 386-397    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES0_TO_FLASH	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES0_TO_FLASH,           \/* 30   OFFSET : 362-372    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES1_FROM_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES1_FROM_HOST,          \/* 33   OFFSET : 398-409    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES1_TO_FLASH	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES1_TO_FLASH,           \/* 31   OFFSET : 374-385    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES_FROM_HOST	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES_FROM_HOST,           \/* 22   OFFSET : 266 -277   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_LIFETIME_WRITES_TO_FLASH	plugins/seagate/seagate-diag.h	/^   VS_ATTR_LIFETIME_WRITES_TO_FLASH,            \/* 21   OFFSET : 254 -265   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_MAX_LIFE_TEMPERATURE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_MAX_LIFE_TEMPERATURE,                \/* 17   OFFSET : 206 -217   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_MAX_SOC_LIFE_TEMPERATURE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_MAX_SOC_LIFE_TEMPERATURE,            \/* 41   OFFSET : 494-505    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_OP_PERCENTAGE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_OP_PERCENTAGE,                       \/* 27   OFFSET : 326 -337   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_PCIE_PHY_CRC_ERROR	plugins/seagate/seagate-diag.h	/^   VS_ATTR_PCIE_PHY_CRC_ERROR,                  \/* 36   OFFSET : 434-445    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_POWER_CONSUMPTION	plugins/seagate/seagate-diag.h	/^   VS_ATTR_POWER_CONSUMPTION,                   \/* 40   OFFSET : 482-493    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_POWER_FAIL_EVENT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_POWER_FAIL_EVENT_COUNT,              \/* 3    OFFSET : 38 -49     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_POWER_ON_HOURS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_POWER_ON_HOURS,                      \/* 2    OFFSET : 26 -37     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_PROGRAM_FAILURE_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_PROGRAM_FAILURE_COUNT,               \/* 10   OFFSET : 122 -133   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_RAISE_ECC_CORRECTABLE_ERROR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_RAISE_ECC_CORRECTABLE_ERROR_COUNT, 	\/* 28   OFFSET : 338 -349   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_REALLOCATED_SECTOR_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_REALLOCATED_SECTOR_COUNT,            \/* 1    OFFSET : 14 -25     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_REMAINING_SSD_LIFE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_REMAINING_SSD_LIFE,                  \/* 20   OFFSET : 242 -253   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_RETIRED_BLOCK_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_RETIRED_BLOCK_COUNT,                 \/* 9    OFFSET : 110 -121   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_SATA_INTERFACE_DOWNSHIFT_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_SATA_INTERFACE_DOWNSHIFT_COUNT,      \/* 15   OFFSET : 182 -193   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_SOFT_READ_ERROR_RATE	plugins/seagate/seagate-diag.h	/^   VS_ATTR_SOFT_READ_ERROR_RATE,                \/* 0    OFFSET : 02 -13     bytes *\/$/;"	e	enum:__anon1
VS_ATTR_THERMAL_THROTTLING_STATUS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_THERMAL_THROTTLING_STATUS,           \/* 39   OFFSET : 470-481    bytes *\/$/;"	e	enum:__anon1
VS_ATTR_TRIM_COUNT_LSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_TRIM_COUNT_LSB,                      \/* 25   OFFSET : 302 -313   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_TRIM_COUNT_MSB	plugins/seagate/seagate-diag.h	/^   VS_ATTR_TRIM_COUNT_MSB,                      \/* 26   OFFSET : 314 -325   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_UNCORRECTABLE_ECC_ERRORS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_UNCORRECTABLE_ECC_ERRORS ,           \/* 29   OFFSET : 350 -361   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_UNCORRECTABLE_RAISE_ERRORS	plugins/seagate/seagate-diag.h	/^   VS_ATTR_UNCORRECTABLE_RAISE_ERRORS,          \/* 18   OFFSET : 218 -229   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_UNEXPECTED_POWER_LOSS_COUNT	plugins/seagate/seagate-diag.h	/^   VS_ATTR_UNEXPECTED_POWER_LOSS_COUNT,         \/* 13   OFFSET : 158 -169   bytes *\/$/;"	e	enum:__anon1
VS_ATTR_WEAR_RANGE_DELTA	plugins/seagate/seagate-diag.h	/^   VS_ATTR_WEAR_RANGE_DELTA,                    \/* 14   OFFSET : 170 -181   bytes *\/$/;"	e	enum:__anon1
VS_MAX_ATTR_NUMBER	plugins/seagate/seagate-diag.h	/^   VS_MAX_ATTR_NUMBER$/;"	e	enum:__anon1
VU_GC_MAX_ITEMS	plugins/solidigm/solidigm-garbage-collection.c	29;"	d	file:
VU_SMART_MAX_ITEMS	plugins/solidigm/solidigm-smart.c	45;"	d	file:
VU_SMART_PAGE_SIZE	plugins/solidigm/solidigm-smart.c	44;"	d	file:
Vendor_Specific_Reserved	plugins/seagate/seagate-diag.h	/^   __u8                         Vendor_Specific_Reserved[ 456 ];     \/* 56-511 *\/$/;"	m	struct:_vendor_log_page_CF
Version	plugins/seagate/seagate-diag.h	/^   __u16 Version;                                                                                       $/;"	m	struct:_EXTENDED_SMART_INFO_T
Version	plugins/seagate/seagate-diag.h	/^   __u32   Version;$/;"	m	struct:pcie_error_log_page
WARN_DEPRECATED	ccan/ccan/compiler/compiler.h	242;"	d
WARN_DEPRECATED	ccan/ccan/compiler/compiler.h	244;"	d
WARN_UNUSED_RESULT	ccan/ccan/compiler/compiler.h	226;"	d
WARN_UNUSED_RESULT	ccan/ccan/compiler/compiler.h	228;"	d
WDC_ADD_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	298;"	d	file:
WDC_ALL_PAGE_MASK	plugins/wdc/wdc-nvme.c	190;"	d	file:
WDC_ASSERT_DUMP_NOT_PRESENT	plugins/wdc/wdc-nvme.c	318;"	d	file:
WDC_ASSERT_DUMP_PRESENT	plugins/wdc/wdc-nvme.c	319;"	d	file:
WDC_BD_CA_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	331;"	d	file:
WDC_C0_GUID_LENGTH	plugins/wdc/wdc-nvme.c	506;"	d	file:
WDC_C0_PAGE_MASK	plugins/wdc/wdc-nvme.c	191;"	d	file:
WDC_C1_PAGE_MASK	plugins/wdc/wdc-nvme.c	192;"	d	file:
WDC_C2_ASSERT_DUMP_PRESENT_ID	plugins/wdc/wdc-nvme.c	310;"	d	file:
WDC_C2_CUSTOMER_ID_ID	plugins/wdc/wdc-nvme.c	308;"	d	file:
WDC_C2_FORMAT_CORRUPT_REASON_ID	plugins/wdc/wdc-nvme.c	314;"	d	file:
WDC_C2_GUID_LENGTH	plugins/wdc/wdc-nvme.c	349;"	d	file:
WDC_C2_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	306;"	d	file:
WDC_C2_LOG_PAGES_SUPPORTED_ID	plugins/wdc/wdc-nvme.c	307;"	d	file:
WDC_C2_SYSTEM_EOL_STATE_ID	plugins/wdc/wdc-nvme.c	313;"	d	file:
WDC_C2_THERMAL_THROTTLE_STATUS_ID	plugins/wdc/wdc-nvme.c	309;"	d	file:
WDC_C2_USER_EOL_STATE_ID	plugins/wdc/wdc-nvme.c	312;"	d	file:
WDC_C2_USER_EOL_STATUS_ID	plugins/wdc/wdc-nvme.c	311;"	d	file:
WDC_C3_GUID_LENGTH	plugins/wdc/wdc-nvme.c	356;"	d	file:
WDC_CA_PAGE_MASK	plugins/wdc/wdc-nvme.c	193;"	d	file:
WDC_CUSTOMER_ID_0x1004	plugins/wdc/wdc-nvme.c	185;"	d	file:
WDC_CUSTOMER_ID_0x1005	plugins/wdc/wdc-nvme.c	183;"	d	file:
WDC_CUSTOMER_ID_0x1008	plugins/wdc/wdc-nvme.c	186;"	d	file:
WDC_CUSTOMER_ID_0x1304	plugins/wdc/wdc-nvme.c	187;"	d	file:
WDC_CUSTOMER_ID_BD	plugins/wdc/wdc-nvme.c	181;"	d	file:
WDC_CUSTOMER_ID_GD	plugins/wdc/wdc-nvme.c	180;"	d	file:
WDC_CUSTOMER_ID_GN	plugins/wdc/wdc-nvme.c	179;"	d	file:
WDC_D0_PAGE_MASK	plugins/wdc/wdc-nvme.c	194;"	d	file:
WDC_DEV_CAP_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	1223;"	d	file:
WDC_DEV_CAP_LOG_ID	plugins/wdc/wdc-nvme.c	1224;"	d	file:
WDC_DEV_CAP_LOG_VERSION	plugins/wdc/wdc-nvme.c	1225;"	d	file:
WDC_DE_CORE_DUMP_FILE_NAME	plugins/wdc/wdc-nvme.c	429;"	d	file:
WDC_DE_CSA_FEATURE_ID_LIST	plugins/wdc/wdc-nvme.c	/^struct WDC_DE_CSA_FEATURE_ID_LIST {$/;"	s	file:
WDC_DE_DEFAULT_NAMESPACE_ID	plugins/wdc/wdc-nvme.c	406;"	d	file:
WDC_DE_DEFAULT_NUMBER_OF_ERROR_ENTRIES	plugins/wdc/wdc-nvme.c	403;"	d	file:
WDC_DE_DESTN_SPI	plugins/wdc/wdc-nvme.c	431;"	d	file:
WDC_DE_DUMPTRACE_DESTINATION	plugins/wdc/wdc-nvme.c	432;"	d	file:
WDC_DE_EVENT_LOG_FILE_NAME	plugins/wdc/wdc-nvme.c	430;"	d	file:
WDC_DE_FILE_HEADER_SIZE	plugins/wdc/wdc-nvme.c	422;"	d	file:
WDC_DE_FILE_NAME_SIZE	plugins/wdc/wdc-nvme.c	424;"	d	file:
WDC_DE_FILE_OFFSET_SIZE	plugins/wdc/wdc-nvme.c	423;"	d	file:
WDC_DE_GENERIC_BUFFER_SIZE	plugins/wdc/wdc-nvme.c	404;"	d	file:
WDC_DE_GLOBAL_NSID	plugins/wdc/wdc-nvme.c	405;"	d	file:
WDC_DE_MANUFACTURING_INFO_PAGE_FILE_NAME	plugins/wdc/wdc-nvme.c	428;"	d	file:
WDC_DE_PATH_SEPARATOR	plugins/wdc/wdc-nvme.c	407;"	d	file:
WDC_DE_READ_MAX_TRANSFER_SIZE	plugins/wdc/wdc-nvme.c	426;"	d	file:
WDC_DE_TAR_CMD	plugins/wdc/wdc-nvme.c	410;"	d	file:
WDC_DE_TAR_FILES	plugins/wdc/wdc-nvme.c	408;"	d	file:
WDC_DE_TAR_FILE_EXTN	plugins/wdc/wdc-nvme.c	409;"	d	file:
WDC_DE_TYPE_ALL	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_ALL                 = 0xFFFFFFF,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_ATA_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_ATA_LOGS            = 0x20,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DLOGS_RAM	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DLOGS_RAM           = 0x800000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DLOGS_SPI	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DLOGS_SPI           = 0x400000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMPLOG3E	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMPLOG3E           = 0x800,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMPSCRAM	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMPSCRAM           = 0x1000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMPSMARTERRORLOG3	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMPSMARTERRORLOG3  = 0x400,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMPSNAPSHOT	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMPSNAPSHOT        = 0x10,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMPTRACE	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMPTRACE           = 0x8,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_DUMP_ERROR_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_DUMP_ERROR_LOGS     = 0x4000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_EVENTLOG	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_EVENTLOG            = 0x4,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_FW_SLOT_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_FW_SLOT_LOGS        = 0x8000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_IDENTIFY	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_IDENTIFY            = 0x1,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_MEDIA_SETTINGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_MEDIA_SETTINGS      = 0x10000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NONE	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NONE                = 0x1000000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NVME_ERROR_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NVME_ERROR_LOGS     = 0x80000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NVME_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NVME_LOGS           = 0x100000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NVME_MANF_INFO	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NVME_MANF_INFO      = 0x2000000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NVME_SETTINGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NVME_SETTINGS       = 0x40000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_NVMe_FEATURES	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_NVMe_FEATURES       = 0x200,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_PCU_LOG	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_PCU_LOG             = 0x2000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_SCSI_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_SCSI_LOGS           = 0x80,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_SCSI_MODE_PAGES	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_SCSI_MODE_PAGES     = 0x100,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_SMARTATTRIBUTEDUMP	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_SMARTATTRIBUTEDUMP  = 0x2,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_SMART_DATA	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_SMART_DATA          = 0x20000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_SMART_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_SMART_LOGS          = 0x40,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_TYPE_UART_LOGS	plugins/wdc/wdc-nvme.c	/^	WDC_DE_TYPE_UART_LOGS           = 0x200000,$/;"	e	enum:WDC_DRIVE_ESSENTIAL_TYPE	file:
WDC_DE_VU_FILE_META_DATA	plugins/wdc/wdc-nvme.c	/^struct __packed WDC_DE_VU_FILE_META_DATA {$/;"	s	file:
WDC_DE_VU_LOG_DIRECTORY	plugins/wdc/wdc-nvme.c	/^struct WDC_DE_VU_LOG_DIRECTORY {$/;"	s	file:
WDC_DE_VU_READ_BUFFER_OPCODE	plugins/wdc/wdc-nvme.c	418;"	d	file:
WDC_DE_VU_READ_BUFFER_STANDARD_OFFSET	plugins/wdc/wdc-nvme.c	425;"	d	file:
WDC_DE_VU_READ_SIZE_OPCODE	plugins/wdc/wdc-nvme.c	417;"	d	file:
WDC_DRIVE_CAP_C0_LOG_PAGE	plugins/wdc/wdc-nvme.c	128;"	d	file:
WDC_DRIVE_CAP_C1_LOG_PAGE	plugins/wdc/wdc-nvme.c	110;"	d	file:
WDC_DRIVE_CAP_C3_LOG_PAGE	plugins/wdc/wdc-nvme.c	137;"	d	file:
WDC_DRIVE_CAP_CAP_DIAG	plugins/wdc/wdc-nvme.c	108;"	d	file:
WDC_DRIVE_CAP_CA_LOG_PAGE	plugins/wdc/wdc-nvme.c	111;"	d	file:
WDC_DRIVE_CAP_CLEAR_ASSERT	plugins/wdc/wdc-nvme.c	114;"	d	file:
WDC_DRIVE_CAP_CLEAR_FW_ACT_HISTORY	plugins/wdc/wdc-nvme.c	122;"	d	file:
WDC_DRIVE_CAP_CLEAR_FW_ACT_HISTORY_MASK	plugins/wdc/wdc-nvme.c	159;"	d	file:
WDC_DRIVE_CAP_CLEAR_PCIE	plugins/wdc/wdc-nvme.c	115;"	d	file:
WDC_DRIVE_CAP_CLEAR_PCIE_MASK	plugins/wdc/wdc-nvme.c	154;"	d	file:
WDC_DRIVE_CAP_CLOUD_BOOT_SSD_VERSION	plugins/wdc/wdc-nvme.c	138;"	d	file:
WDC_DRIVE_CAP_CLOUD_LOG_PAGE	plugins/wdc/wdc-nvme.c	139;"	d	file:
WDC_DRIVE_CAP_CLOUD_SSD_VERSION	plugins/wdc/wdc-nvme.c	134;"	d	file:
WDC_DRIVE_CAP_CRASH_DUMP	plugins/wdc/wdc-nvme.c	119;"	d	file:
WDC_DRIVE_CAP_D0_LOG_PAGE	plugins/wdc/wdc-nvme.c	112;"	d	file:
WDC_DRIVE_CAP_DEVICE_WAF	plugins/wdc/wdc-nvme.c	149;"	d	file:
WDC_DRIVE_CAP_DRIVE_ESSENTIALS	plugins/wdc/wdc-nvme.c	141;"	d	file:
WDC_DRIVE_CAP_DRIVE_LOG	plugins/wdc/wdc-nvme.c	118;"	d	file:
WDC_DRIVE_CAP_DRIVE_STATUS	plugins/wdc/wdc-nvme.c	113;"	d	file:
WDC_DRIVE_CAP_DUI	plugins/wdc/wdc-nvme.c	144;"	d	file:
WDC_DRIVE_CAP_DUI_DATA	plugins/wdc/wdc-nvme.c	142;"	d	file:
WDC_DRIVE_CAP_FW_ACTIVATE_HISTORY	plugins/wdc/wdc-nvme.c	121;"	d	file:
WDC_DRIVE_CAP_FW_ACTIVATE_HISTORY_C2	plugins/wdc/wdc-nvme.c	132;"	d	file:
WDC_DRIVE_CAP_FW_ACTIVATE_HISTORY_MASK	plugins/wdc/wdc-nvme.c	157;"	d	file:
WDC_DRIVE_CAP_HW_REV_LOG_PAGE	plugins/wdc/wdc-nvme.c	136;"	d	file:
WDC_DRIVE_CAP_INFO	plugins/wdc/wdc-nvme.c	127;"	d	file:
WDC_DRIVE_CAP_INTERNAL_LOG	plugins/wdc/wdc-nvme.c	109;"	d	file:
WDC_DRIVE_CAP_INTERNAL_LOG_MASK	plugins/wdc/wdc-nvme.c	161;"	d	file:
WDC_DRIVE_CAP_LOG_PAGE_DIR	plugins/wdc/wdc-nvme.c	125;"	d	file:
WDC_DRIVE_CAP_NAND_STATS	plugins/wdc/wdc-nvme.c	117;"	d	file:
WDC_DRIVE_CAP_NS_RESIZE	plugins/wdc/wdc-nvme.c	126;"	d	file:
WDC_DRIVE_CAP_OCP_C1_LOG_PAGE	plugins/wdc/wdc-nvme.c	146;"	d	file:
WDC_DRIVE_CAP_OCP_C4_LOG_PAGE	plugins/wdc/wdc-nvme.c	147;"	d	file:
WDC_DRIVE_CAP_OCP_C5_LOG_PAGE	plugins/wdc/wdc-nvme.c	148;"	d	file:
WDC_DRIVE_CAP_PCIE_STATS	plugins/wdc/wdc-nvme.c	135;"	d	file:
WDC_DRIVE_CAP_PFAIL_DUMP	plugins/wdc/wdc-nvme.c	120;"	d	file:
WDC_DRIVE_CAP_PURGE	plugins/wdc/wdc-nvme.c	145;"	d	file:
WDC_DRIVE_CAP_REASON_ID	plugins/wdc/wdc-nvme.c	124;"	d	file:
WDC_DRIVE_CAP_RESIZE	plugins/wdc/wdc-nvme.c	116;"	d	file:
WDC_DRIVE_CAP_SMART_LOG_MASK	plugins/wdc/wdc-nvme.c	150;"	d	file:
WDC_DRIVE_CAP_TEMP_STATS	plugins/wdc/wdc-nvme.c	129;"	d	file:
WDC_DRIVE_CAP_VUC_CLEAR_PCIE	plugins/wdc/wdc-nvme.c	130;"	d	file:
WDC_DRIVE_CAP_VU_FID_CLEAR_FW_ACT_HISTORY	plugins/wdc/wdc-nvme.c	133;"	d	file:
WDC_DRIVE_CAP_VU_FID_CLEAR_PCIE	plugins/wdc/wdc-nvme.c	131;"	d	file:
WDC_DRIVE_ESSENTIALS	plugins/wdc/wdc-nvme.c	/^struct WDC_DRIVE_ESSENTIALS {$/;"	s	file:
WDC_DRIVE_ESSENTIAL_TYPE	plugins/wdc/wdc-nvme.c	/^enum WDC_DRIVE_ESSENTIAL_TYPE {$/;"	g	file:
WDC_DRVIE_CAP_DISABLE_CTLR_TELE_LOG	plugins/wdc/wdc-nvme.c	123;"	d	file:
WDC_ENC_CRASH_DUMP_ID	plugins/wdc/wdc-nvme.c	446;"	d	file:
WDC_ENC_LOG_DUMP_ID	plugins/wdc/wdc-nvme.c	447;"	d	file:
WDC_ENC_NIC_CRASH_DUMP_ID_SLOT_1	plugins/wdc/wdc-nvme.c	442;"	d	file:
WDC_ENC_NIC_CRASH_DUMP_ID_SLOT_2	plugins/wdc/wdc-nvme.c	443;"	d	file:
WDC_ENC_NIC_CRASH_DUMP_ID_SLOT_3	plugins/wdc/wdc-nvme.c	444;"	d	file:
WDC_ENC_NIC_CRASH_DUMP_ID_SLOT_4	plugins/wdc/wdc-nvme.c	445;"	d	file:
WDC_EOL_STATUS_END_OF_LIFE	plugins/wdc/wdc-nvme.c	316;"	d	file:
WDC_EOL_STATUS_NORMAL	plugins/wdc/wdc-nvme.c	315;"	d	file:
WDC_EOL_STATUS_READ_ONLY	plugins/wdc/wdc-nvme.c	317;"	d	file:
WDC_ERROR_REC_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	1086;"	d	file:
WDC_ERROR_REC_LOG_ID	plugins/wdc/wdc-nvme.c	1087;"	d	file:
WDC_ERROR_REC_LOG_VERSION1	plugins/wdc/wdc-nvme.c	1088;"	d	file:
WDC_ERROR_REC_LOG_VERSION2	plugins/wdc/wdc-nvme.c	1089;"	d	file:
WDC_FB_CA_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	329;"	d	file:
WDC_FORMAT_CORRUPT_FW_ASSERT	plugins/wdc/wdc-nvme.c	324;"	d	file:
WDC_FORMAT_CORRUPT_UNKNOWN	plugins/wdc/wdc-nvme.c	325;"	d	file:
WDC_FORMAT_NOT_CORRUPT	plugins/wdc/wdc-nvme.c	323;"	d	file:
WDC_FW_ACT_HISTORY_C2_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	347;"	d	file:
WDC_FW_ACT_HISTORY_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	343;"	d	file:
WDC_GET_LOG_PAGE_SSD_PERFORMANCE	plugins/wdc/wdc-nvme.c	300;"	d	file:
WDC_INVALID_CUSTOMER_ID	plugins/wdc/wdc-nvme.c	188;"	d	file:
WDC_LATENCY_MON_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	352;"	d	file:
WDC_LATENCY_MON_LOG_ID	plugins/wdc/wdc-nvme.c	353;"	d	file:
WDC_LATENCY_MON_VERSION	plugins/wdc/wdc-nvme.c	354;"	d	file:
WDC_LOG_ID_C0	plugins/wdc/wdc-nvme.c	368;"	d	file:
WDC_LOG_ID_C1	plugins/wdc/wdc-nvme.c	369;"	d	file:
WDC_LOG_ID_C2	plugins/wdc/wdc-nvme.c	370;"	d	file:
WDC_LOG_ID_C3	plugins/wdc/wdc-nvme.c	371;"	d	file:
WDC_LOG_ID_C4	plugins/wdc/wdc-nvme.c	372;"	d	file:
WDC_LOG_ID_C5	plugins/wdc/wdc-nvme.c	373;"	d	file:
WDC_LOG_ID_C6	plugins/wdc/wdc-nvme.c	374;"	d	file:
WDC_LOG_ID_C8	plugins/wdc/wdc-nvme.c	375;"	d	file:
WDC_LOG_ID_CA	plugins/wdc/wdc-nvme.c	376;"	d	file:
WDC_LOG_ID_CB	plugins/wdc/wdc-nvme.c	377;"	d	file:
WDC_LOG_ID_D0	plugins/wdc/wdc-nvme.c	378;"	d	file:
WDC_LOG_ID_D1	plugins/wdc/wdc-nvme.c	379;"	d	file:
WDC_LOG_ID_D6	plugins/wdc/wdc-nvme.c	380;"	d	file:
WDC_LOG_ID_D7	plugins/wdc/wdc-nvme.c	381;"	d	file:
WDC_LOG_ID_D8	plugins/wdc/wdc-nvme.c	382;"	d	file:
WDC_LOG_ID_DE	plugins/wdc/wdc-nvme.c	383;"	d	file:
WDC_LOG_ID_F0	plugins/wdc/wdc-nvme.c	384;"	d	file:
WDC_LOG_ID_F1	plugins/wdc/wdc-nvme.c	385;"	d	file:
WDC_LOG_ID_F2	plugins/wdc/wdc-nvme.c	386;"	d	file:
WDC_LOG_ID_FA	plugins/wdc/wdc-nvme.c	387;"	d	file:
WDC_MAX_NUM_ACT_HIST_ENTRIES	plugins/wdc/wdc-nvme.c	348;"	d	file:
WDC_NUM_UNSUPPORTED_REQ_ENTRIES	plugins/wdc/wdc-nvme.c	1253;"	d	file:
WDC_NVME	plugins/wdc/wdc-nvme.h	6;"	d
WDC_NVME_ADD_LOG_OPCODE	plugins/wdc/wdc-nvme.c	299;"	d	file:
WDC_NVME_ADMIN_ENC_MGMT_RCV	plugins/wdc/wdc-nvme.c	420;"	d	file:
WDC_NVME_ADMIN_ENC_MGMT_SND	plugins/wdc/wdc-nvme.c	419;"	d	file:
WDC_NVME_C6_GUID_LENGTH	plugins/wdc/wdc-nvme.c	675;"	d	file:
WDC_NVME_CAP_DIAG_CMD	plugins/wdc/wdc-nvme.c	217;"	d	file:
WDC_NVME_CAP_DIAG_CMD_OPCODE	plugins/wdc/wdc-nvme.c	215;"	d	file:
WDC_NVME_CAP_DIAG_HEADER_TOC_SIZE	plugins/wdc/wdc-nvme.c	213;"	d	file:
WDC_NVME_CAP_DIAG_OPCODE	plugins/wdc/wdc-nvme.c	214;"	d	file:
WDC_NVME_CAP_DIAG_SUBCMD	plugins/wdc/wdc-nvme.c	216;"	d	file:
WDC_NVME_CAP_DUI_DISABLE_IO	plugins/wdc/wdc-nvme.c	225;"	d	file:
WDC_NVME_CAP_DUI_HEADER_SIZE	plugins/wdc/wdc-nvme.c	223;"	d	file:
WDC_NVME_CAP_DUI_OPCODE	plugins/wdc/wdc-nvme.c	224;"	d	file:
WDC_NVME_CLEAR_ASSERT_DUMP_CMD	plugins/wdc/wdc-nvme.c	397;"	d	file:
WDC_NVME_CLEAR_ASSERT_DUMP_OPCODE	plugins/wdc/wdc-nvme.c	396;"	d	file:
WDC_NVME_CLEAR_ASSERT_DUMP_SUBCMD	plugins/wdc/wdc-nvme.c	398;"	d	file:
WDC_NVME_CLEAR_CRASH_DUMP_CMD	plugins/wdc/wdc-nvme.c	287;"	d	file:
WDC_NVME_CLEAR_CRASH_DUMP_SUBCMD	plugins/wdc/wdc-nvme.c	288;"	d	file:
WDC_NVME_CLEAR_DUMP_OPCODE	plugins/wdc/wdc-nvme.c	286;"	d	file:
WDC_NVME_CLEAR_FW_ACT_HIST_CMD	plugins/wdc/wdc-nvme.c	293;"	d	file:
WDC_NVME_CLEAR_FW_ACT_HIST_OPCODE	plugins/wdc/wdc-nvme.c	292;"	d	file:
WDC_NVME_CLEAR_FW_ACT_HIST_SUBCMD	plugins/wdc/wdc-nvme.c	294;"	d	file:
WDC_NVME_CLEAR_FW_ACT_HIST_VU_FID	plugins/wdc/wdc-nvme.c	295;"	d	file:
WDC_NVME_CLEAR_PCIE_CORR_CMD	plugins/wdc/wdc-nvme.c	391;"	d	file:
WDC_NVME_CLEAR_PCIE_CORR_FEATURE_ID	plugins/wdc/wdc-nvme.c	394;"	d	file:
WDC_NVME_CLEAR_PCIE_CORR_OPCODE	plugins/wdc/wdc-nvme.c	390;"	d	file:
WDC_NVME_CLEAR_PCIE_CORR_OPCODE_VUC	plugins/wdc/wdc-nvme.c	393;"	d	file:
WDC_NVME_CLEAR_PCIE_CORR_SUBCMD	plugins/wdc/wdc-nvme.c	392;"	d	file:
WDC_NVME_CLEAR_PF_CRASH_DUMP_SUBCMD	plugins/wdc/wdc-nvme.c	289;"	d	file:
WDC_NVME_CRASH_DUMP_CMD	plugins/wdc/wdc-nvme.c	246;"	d	file:
WDC_NVME_CRASH_DUMP_OPCODE	plugins/wdc/wdc-nvme.c	245;"	d	file:
WDC_NVME_CRASH_DUMP_SIZE_CMD	plugins/wdc/wdc-nvme.c	242;"	d	file:
WDC_NVME_CRASH_DUMP_SIZE_DATA_LEN	plugins/wdc/wdc-nvme.c	240;"	d	file:
WDC_NVME_CRASH_DUMP_SIZE_NDT	plugins/wdc/wdc-nvme.c	241;"	d	file:
WDC_NVME_CRASH_DUMP_SIZE_SUBCMD	plugins/wdc/wdc-nvme.c	243;"	d	file:
WDC_NVME_CRASH_DUMP_SUBCMD	plugins/wdc/wdc-nvme.c	247;"	d	file:
WDC_NVME_CRASH_DUMP_TYPE	plugins/wdc/wdc-nvme.c	219;"	d	file:
WDC_NVME_DE_VU_LOGPAGES	plugins/wdc/wdc-nvme.c	/^struct WDC_NVME_DE_VU_LOGPAGES {$/;"	s	file:
WDC_NVME_DRIVE_INFO_CMD	plugins/wdc/wdc-nvme.c	206;"	d	file:
WDC_NVME_DRIVE_INFO_OPCODE	plugins/wdc/wdc-nvme.c	205;"	d	file:
WDC_NVME_DRIVE_INFO_SUBCMD	plugins/wdc/wdc-nvme.c	207;"	d	file:
WDC_NVME_DRIVE_LOG_CMD	plugins/wdc/wdc-nvme.c	267;"	d	file:
WDC_NVME_DRIVE_LOG_OPCODE	plugins/wdc/wdc-nvme.c	266;"	d	file:
WDC_NVME_DRIVE_LOG_SIZE_CMD	plugins/wdc/wdc-nvme.c	263;"	d	file:
WDC_NVME_DRIVE_LOG_SIZE_DATA_LEN	plugins/wdc/wdc-nvme.c	261;"	d	file:
WDC_NVME_DRIVE_LOG_SIZE_NDT	plugins/wdc/wdc-nvme.c	262;"	d	file:
WDC_NVME_DRIVE_LOG_SIZE_OPCODE	plugins/wdc/wdc-nvme.c	260;"	d	file:
WDC_NVME_DRIVE_LOG_SIZE_SUBCMD	plugins/wdc/wdc-nvme.c	264;"	d	file:
WDC_NVME_DRIVE_LOG_SUBCMD	plugins/wdc/wdc-nvme.c	268;"	d	file:
WDC_NVME_DRIVE_RESIZE_CMD	plugins/wdc/wdc-nvme.c	198;"	d	file:
WDC_NVME_DRIVE_RESIZE_OPCODE	plugins/wdc/wdc-nvme.c	197;"	d	file:
WDC_NVME_DRIVE_RESIZE_SUBCMD	plugins/wdc/wdc-nvme.c	199;"	d	file:
WDC_NVME_DUI_MAX_DATA_AREA	plugins/wdc/wdc-nvme.c	229;"	d	file:
WDC_NVME_DUI_MAX_SECTION	plugins/wdc/wdc-nvme.c	226;"	d	file:
WDC_NVME_DUI_MAX_SECTION_V2	plugins/wdc/wdc-nvme.c	227;"	d	file:
WDC_NVME_DUI_MAX_SECTION_V3	plugins/wdc/wdc-nvme.c	228;"	d	file:
WDC_NVME_ENC_LOG_SIZE_CHUNK	plugins/wdc/wdc-nvme.c	438;"	d	file:
WDC_NVME_ENC_NIC_LOG_SIZE	plugins/wdc/wdc-nvme.c	439;"	d	file:
WDC_NVME_EOL_STATUS_LOG_LEN	plugins/wdc/wdc-nvme.c	335;"	d	file:
WDC_NVME_FIRMWARE_REV_LEN	plugins/wdc/wdc-utils.h	53;"	d
WDC_NVME_GET_DEVICE_INFO_LOG_OPCODE	plugins/wdc/wdc-nvme.c	328;"	d	file:
WDC_NVME_GET_DEV_MGMNT_LOG_PAGE_OPCODE	plugins/wdc/wdc-nvme.c	304;"	d	file:
WDC_NVME_GET_DEV_MGMNT_LOG_PAGE_OPCODE_C8	plugins/wdc/wdc-nvme.c	305;"	d	file:
WDC_NVME_GET_EOL_STATUS_LOG_OPCODE	plugins/wdc/wdc-nvme.c	334;"	d	file:
WDC_NVME_GET_FW_ACT_HISTORY_C2_LOG_ID	plugins/wdc/wdc-nvme.c	346;"	d	file:
WDC_NVME_GET_FW_ACT_HISTORY_LOG_ID	plugins/wdc/wdc-nvme.c	342;"	d	file:
WDC_NVME_GET_HW_REV_LOG_OPCODE	plugins/wdc/wdc-nvme.c	676;"	d	file:
WDC_NVME_GET_SMART_CLOUD_ATTR_LOG_ID	plugins/wdc/wdc-nvme.c	339;"	d	file:
WDC_NVME_GET_STAT_PERF_INTERVAL_LIFETIME	plugins/wdc/wdc-nvme.c	301;"	d	file:
WDC_NVME_GET_VU_SMART_LOG_OPCODE	plugins/wdc/wdc-nvme.c	363;"	d	file:
WDC_NVME_HW_REV_LOG_PAGE_LEN	plugins/wdc/wdc-nvme.c	677;"	d	file:
WDC_NVME_LOG_SIZE_DATA_LEN	plugins/wdc/wdc-nvme.c	50;"	d	file:
WDC_NVME_LOG_SIZE_HDR_LEN	plugins/wdc/wdc-nvme.c	51;"	d	file:
WDC_NVME_NAMESPACE_RESIZE_OPCODE	plugins/wdc/wdc-nvme.c	202;"	d	file:
WDC_NVME_NAND_STATS_LOG_ID	plugins/wdc/wdc-nvme.c	413;"	d	file:
WDC_NVME_NAND_STATS_SIZE	plugins/wdc/wdc-nvme.c	414;"	d	file:
WDC_NVME_PCIE_STATS_OPCODE	plugins/wdc/wdc-nvme.c	210;"	d	file:
WDC_NVME_PFAIL_DUMP_TYPE	plugins/wdc/wdc-nvme.c	220;"	d	file:
WDC_NVME_PF_CRASH_DUMP_CMD	plugins/wdc/wdc-nvme.c	256;"	d	file:
WDC_NVME_PF_CRASH_DUMP_OPCODE	plugins/wdc/wdc-nvme.c	255;"	d	file:
WDC_NVME_PF_CRASH_DUMP_SIZE_CMD	plugins/wdc/wdc-nvme.c	252;"	d	file:
WDC_NVME_PF_CRASH_DUMP_SIZE_DATA_LEN	plugins/wdc/wdc-nvme.c	250;"	d	file:
WDC_NVME_PF_CRASH_DUMP_SIZE_NDT	plugins/wdc/wdc-nvme.c	251;"	d	file:
WDC_NVME_PF_CRASH_DUMP_SIZE_SUBCMD	plugins/wdc/wdc-nvme.c	253;"	d	file:
WDC_NVME_PF_CRASH_DUMP_SUBCMD	plugins/wdc/wdc-nvme.c	257;"	d	file:
WDC_NVME_PURGE_CMD_OPCODE	plugins/wdc/wdc-nvme.c	271;"	d	file:
WDC_NVME_PURGE_CMD_SEQ_ERR	plugins/wdc/wdc-nvme.c	276;"	d	file:
WDC_NVME_PURGE_INT_DEV_ERR	plugins/wdc/wdc-nvme.c	277;"	d	file:
WDC_NVME_PURGE_MONITOR_CMD_CDW10	plugins/wdc/wdc-nvme.c	274;"	d	file:
WDC_NVME_PURGE_MONITOR_DATA_LEN	plugins/wdc/wdc-nvme.c	273;"	d	file:
WDC_NVME_PURGE_MONITOR_OPCODE	plugins/wdc/wdc-nvme.c	272;"	d	file:
WDC_NVME_PURGE_MONITOR_TIMEOUT	plugins/wdc/wdc-nvme.c	275;"	d	file:
WDC_NVME_PURGE_STATE_BUSY	plugins/wdc/wdc-nvme.c	281;"	d	file:
WDC_NVME_PURGE_STATE_DONE	plugins/wdc/wdc-nvme.c	280;"	d	file:
WDC_NVME_PURGE_STATE_IDLE	plugins/wdc/wdc-nvme.c	279;"	d	file:
WDC_NVME_PURGE_STATE_PWR_CYC_PURGE	plugins/wdc/wdc-nvme.c	283;"	d	file:
WDC_NVME_PURGE_STATE_REQ_PWR_CYC	plugins/wdc/wdc-nvme.c	282;"	d	file:
WDC_NVME_SMART_CLOUD_ATTR_LEN	plugins/wdc/wdc-nvme.c	336;"	d	file:
WDC_NVME_SN100_DEV_ID	plugins/wdc/wdc-nvme.c	63;"	d	file:
WDC_NVME_SN200_DEV_ID	plugins/wdc/wdc-nvme.c	64;"	d	file:
WDC_NVME_SN340_DEV_ID	plugins/wdc/wdc-nvme.c	102;"	d	file:
WDC_NVME_SN520_DEV_ID	plugins/wdc/wdc-nvme.c	91;"	d	file:
WDC_NVME_SN520_DEV_ID_1	plugins/wdc/wdc-nvme.c	92;"	d	file:
WDC_NVME_SN520_DEV_ID_2	plugins/wdc/wdc-nvme.c	93;"	d	file:
WDC_NVME_SN530_DEV_ID	plugins/wdc/wdc-nvme.c	94;"	d	file:
WDC_NVME_SN530_DEV_ID_1	plugins/wdc/wdc-nvme.c	95;"	d	file:
WDC_NVME_SN540_DEV_ID	plugins/wdc/wdc-nvme.c	74;"	d	file:
WDC_NVME_SN550_DEV_ID	plugins/wdc/wdc-nvme.c	85;"	d	file:
WDC_NVME_SN560_DEV_ID_1	plugins/wdc/wdc-nvme.c	86;"	d	file:
WDC_NVME_SN560_DEV_ID_2	plugins/wdc/wdc-nvme.c	87;"	d	file:
WDC_NVME_SN560_DEV_ID_3	plugins/wdc/wdc-nvme.c	88;"	d	file:
WDC_NVME_SN630_DEV_ID	plugins/wdc/wdc-nvme.c	65;"	d	file:
WDC_NVME_SN630_DEV_ID_1	plugins/wdc/wdc-nvme.c	66;"	d	file:
WDC_NVME_SN640_DEV_ID	plugins/wdc/wdc-nvme.c	69;"	d	file:
WDC_NVME_SN640_DEV_ID_1	plugins/wdc/wdc-nvme.c	70;"	d	file:
WDC_NVME_SN640_DEV_ID_2	plugins/wdc/wdc-nvme.c	71;"	d	file:
WDC_NVME_SN640_DEV_ID_3	plugins/wdc/wdc-nvme.c	72;"	d	file:
WDC_NVME_SN650_DEV_ID	plugins/wdc/wdc-nvme.c	75;"	d	file:
WDC_NVME_SN650_DEV_ID_1	plugins/wdc/wdc-nvme.c	76;"	d	file:
WDC_NVME_SN650_DEV_ID_2	plugins/wdc/wdc-nvme.c	77;"	d	file:
WDC_NVME_SN650_DEV_ID_3	plugins/wdc/wdc-nvme.c	78;"	d	file:
WDC_NVME_SN650_DEV_ID_4	plugins/wdc/wdc-nvme.c	79;"	d	file:
WDC_NVME_SN655_DEV_ID	plugins/wdc/wdc-nvme.c	80;"	d	file:
WDC_NVME_SN660_DEV_ID	plugins/wdc/wdc-nvme.c	82;"	d	file:
WDC_NVME_SN720_DEV_ID	plugins/wdc/wdc-nvme.c	96;"	d	file:
WDC_NVME_SN730A_DEV_ID	plugins/wdc/wdc-nvme.c	97;"	d	file:
WDC_NVME_SN730_SECTOR_SIZE	plugins/wdc/wdc-nvme.c	230;"	d	file:
WDC_NVME_SN740_DEV_ID	plugins/wdc/wdc-nvme.c	98;"	d	file:
WDC_NVME_SN740_DEV_ID_1	plugins/wdc/wdc-nvme.c	99;"	d	file:
WDC_NVME_SN740_DEV_ID_2	plugins/wdc/wdc-nvme.c	100;"	d	file:
WDC_NVME_SN740_DEV_ID_3	plugins/wdc/wdc-nvme.c	101;"	d	file:
WDC_NVME_SN810_DEV_ID	plugins/wdc/wdc-nvme.c	105;"	d	file:
WDC_NVME_SN820CL_DEV_ID	plugins/wdc/wdc-nvme.c	106;"	d	file:
WDC_NVME_SN840_DEV_ID	plugins/wdc/wdc-nvme.c	67;"	d	file:
WDC_NVME_SN840_DEV_ID_1	plugins/wdc/wdc-nvme.c	68;"	d	file:
WDC_NVME_SN860_DEV_ID	plugins/wdc/wdc-nvme.c	81;"	d	file:
WDC_NVME_SNDK_VID	plugins/wdc/wdc-nvme.c	61;"	d	file:
WDC_NVME_SUBCMD_SHIFT	plugins/wdc/wdc-nvme.c	48;"	d	file:
WDC_NVME_SXSLCL_DEV_ID	plugins/wdc/wdc-nvme.c	90;"	d	file:
WDC_NVME_VID	plugins/wdc/wdc-nvme.c	59;"	d	file:
WDC_NVME_VID_2	plugins/wdc/wdc-nvme.c	60;"	d	file:
WDC_NVME_VU_SMART_LOG_LEN	plugins/wdc/wdc-nvme.c	364;"	d	file:
WDC_NVME_ZN350_DEV_ID	plugins/wdc/wdc-nvme.c	103;"	d	file:
WDC_NVME_ZN350_DEV_ID_1	plugins/wdc/wdc-nvme.c	104;"	d	file:
WDC_NVME_ZN540_DEV_ID	plugins/wdc/wdc-nvme.c	73;"	d	file:
WDC_OCP_C1_GUID_LENGTH	plugins/wdc/wdc-nvme.c	1085;"	d	file:
WDC_OCP_C4_GUID_LENGTH	plugins/wdc/wdc-nvme.c	1222;"	d	file:
WDC_OCP_C4_NUM_PS_DESCR	plugins/wdc/wdc-nvme.c	1226;"	d	file:
WDC_OCP_C5_GUID_LENGTH	plugins/wdc/wdc-nvme.c	1249;"	d	file:
WDC_OPENFLEX_MI_DEVICE_MODEL	plugins/wdc/wdc-nvme.c	54;"	d	file:
WDC_PLUGIN_VERSION	plugins/wdc/wdc-nvme.h	8;"	d
WDC_REASON_ID_ENTRY_LEN	plugins/wdc/wdc-nvme.c	1268;"	d	file:
WDC_REASON_ID_PATH_NAME	plugins/wdc/wdc-nvme.c	1269;"	d	file:
WDC_REASON_INDEX_MAX	plugins/wdc/wdc-nvme.c	1267;"	d	file:
WDC_RESULT_MORE_DATA	plugins/wdc/wdc-nvme.c	55;"	d	file:
WDC_RESULT_NOT_AVAILABLE	plugins/wdc/wdc-nvme.c	56;"	d	file:
WDC_SCA_V1_ALL	plugins/wdc/wdc-nvme.c	508;"	d	file:
WDC_SCA_V1_NAND_STATS	plugins/wdc/wdc-nvme.c	507;"	d	file:
WDC_SERIAL_NO_LEN	plugins/wdc/wdc-utils.h	54;"	d
WDC_SN730B_CAP_VUC_LOG	plugins/wdc/wdc-nvme.c	143;"	d	file:
WDC_STATUS_CREATE_DIRECTORY_FAILED	plugins/wdc/wdc-utils.h	46;"	d
WDC_STATUS_DELETE_DIRECTORY_FAILED	plugins/wdc/wdc-utils.h	47;"	d
WDC_STATUS_DIR_ALREADY_EXISTS	plugins/wdc/wdc-utils.h	44;"	d
WDC_STATUS_FAILURE	plugins/wdc/wdc-utils.h	39;"	d
WDC_STATUS_FILE_SIZE_ZERO	plugins/wdc/wdc-utils.h	42;"	d
WDC_STATUS_INSUFFICIENT_MEMORY	plugins/wdc/wdc-utils.h	40;"	d
WDC_STATUS_INVALID_PARAMETER	plugins/wdc/wdc-utils.h	41;"	d
WDC_STATUS_NO_DATA_FILE_AVAILABLE_TO_ARCHIVE	plugins/wdc/wdc-utils.h	51;"	d
WDC_STATUS_PATH_NOT_FOUND	plugins/wdc/wdc-utils.h	45;"	d
WDC_STATUS_SUCCESS	plugins/wdc/wdc-utils.h	38;"	d
WDC_STATUS_UNABLE_TO_ARCHIVE_EXCEEDED_FILES_LIMIT	plugins/wdc/wdc-utils.h	50;"	d
WDC_STATUS_UNABLE_TO_OPEN_FILE	plugins/wdc/wdc-utils.h	48;"	d
WDC_STATUS_UNABLE_TO_OPEN_ZIP_FILE	plugins/wdc/wdc-utils.h	49;"	d
WDC_STATUS_UNABLE_TO_WRITE_ALL_DATA	plugins/wdc/wdc-utils.h	43;"	d
WDC_TELEMETRY_BLOCK_SIZE	plugins/wdc/wdc-nvme.c	237;"	d	file:
WDC_TELEMETRY_HEADER_LENGTH	plugins/wdc/wdc-nvme.c	236;"	d	file:
WDC_TELEMETRY_TYPE_CONTROLLER	plugins/wdc/wdc-nvme.c	235;"	d	file:
WDC_TELEMETRY_TYPE_HOST	plugins/wdc/wdc-nvme.c	234;"	d	file:
WDC_TELEMETRY_TYPE_NONE	plugins/wdc/wdc-nvme.c	233;"	d	file:
WDC_THERMAL_THROTTLING_OFF	plugins/wdc/wdc-nvme.c	320;"	d	file:
WDC_THERMAL_THROTTLING_ON	plugins/wdc/wdc-nvme.c	321;"	d	file:
WDC_THERMAL_THROTTLING_UNAVAILABLE	plugins/wdc/wdc-nvme.c	322;"	d	file:
WDC_UNSUPPORTED_REQS_LOG_BUF_LEN	plugins/wdc/wdc-nvme.c	1250;"	d	file:
WDC_UNSUPPORTED_REQS_LOG_ID	plugins/wdc/wdc-nvme.c	1251;"	d	file:
WDC_UNSUPPORTED_REQS_LOG_VERSION	plugins/wdc/wdc-nvme.c	1252;"	d	file:
WDC_VU_DISABLE_CNTLR_TELEMETRY_OPTION_FEATURE_ID	plugins/wdc/wdc-nvme.c	400;"	d	file:
WEARLEVELING_COUNT	plugins/memblaze/memblaze-utils.h	/^	\/*7*\/WEARLEVELING_COUNT,$/;"	e	enum:__anon11
WEARLEVELING_COUNT	plugins/shannon/shannon-nvme.c	/^	WEARLEVELING_COUNT,$/;"	e	enum:__anon7	file:
WRITE	plugins/ocp/ocp-nvme.c	60;"	d	file:
WRITE_LOG_ID	plugins/solidigm/solidigm-latency-tracking.c	335;"	d	file:
WRITE_SIZE	plugins/wdc/wdc-nvme.c	46;"	d	file:
WriteData	plugins/micron/micron-nvme.c	/^static void WriteData(__u8 *data, __u32 len, const char *dir, const char *file, const char *msg)$/;"	f	file:
XCLEAN_LINE	plugins/innogrit/typedef.h	12;"	d
YMTC_NVME	plugins/ymtc/ymtc-nvme.h	6;"	d
ZNS_NVME	plugins/zns/zns.h	6;"	d
ZipAndRemoveDir	plugins/micron/micron-nvme.c	/^static int ZipAndRemoveDir(char *strDirName, char *strFileName)$/;"	f	file:
_BASE64_H	util/base64.h	3;"	d
_CMD_H	cmd.h	3;"	d
_COMMON_H	common.h	3;"	d
_EXTENDED_SMART_INFO_T	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _EXTENDED_SMART_INFO_T$/;"	s
_EXTENDED_SMART_VERSION_	plugins/seagate/seagate-diag.h	/^typedef enum _EXTENDED_SMART_VERSION_$/;"	g
_FABRICS_H	fabrics.h	3;"	d
_MISC_H	util/types.h	3;"	d
_NVME_FEATURES_SELECT	plugins/wdc/wdc-nvme.c	/^enum _NVME_FEATURES_SELECT {$/;"	g	file:
_NVME_H	nvme.h	17;"	d
_NVME_WRAP_H	nvme-wrap.h	8;"	d
_SOLIDIGM_TELEMETRY_LOG_H	plugins/solidigm/solidigm-telemetry/telemetry-log.h	9;"	d
_STX_EXT_SMART_LOG_PAGE_C0	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _STX_EXT_SMART_LOG_PAGE_C0$/;"	s
_SmartVendorSpecific	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _SmartVendorSpecific$/;"	s
_U128	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _U128$/;"	s
_UtilsTimeInfo	plugins/wdc/wdc-utils.h	/^typedef struct _UtilsTimeInfo$/;"	s
__BIG_ENDIAN	ccan/ccan/endian/endian.h	108;"	d
__BYTE_ORDER	ccan/ccan/endian/endian.h	117;"	d
__BYTE_ORDER	ccan/ccan/endian/endian.h	123;"	d
__CLEANUP_H	util/cleanup.h	3;"	d
__CMD_INCLUDE	define_cmd.h	8;"	d
__INSPUR_UTILS_H__	plugins/inspur/inspur-utils.h	3;"	d
__JSON__H	util/json.h	3;"	d
__LITTLE_ENDIAN	ccan/ccan/endian/endian.h	107;"	d
__MEMBLAZE_UTILS_H__	plugins/memblaze/memblaze-utils.h	3;"	d
__YMTC_UTILS_H__	plugins/ymtc/ymtc-utils.h	3;"	d
__cleanup__	util/cleanup.h	5;"	d
__create_discover_ctrl	fabrics.c	/^static nvme_ctrl_t __create_discover_ctrl(nvme_root_t r, nvme_host_t h,$/;"	f	file:
__create_telemetry_log_host	nvme.c	/^static int __create_telemetry_log_host(struct nvme_dev *dev,$/;"	f	file:
__dev_fd	nvme.h	/^static inline int __dev_fd(struct nvme_dev *dev, const char *func, int line)$/;"	f
__discover	fabrics.c	/^static int __discover(nvme_ctrl_t c, struct nvme_fabrics_config *defcfg,$/;"	f	file:
__get_telemetry_log_ctrl	nvme.c	/^static int __get_telemetry_log_ctrl(struct nvme_dev *dev,$/;"	f	file:
__get_telemetry_log_host	nvme.c	/^static int __get_telemetry_log_host(struct nvme_dev *dev,$/;"	f	file:
__id_ctrl	nvme.c	/^int __id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin,$/;"	f
__init__	tests/nvme_test_logger.py	/^    def __init__(self, log_file_path):$/;"	m	class:TestNVMeLogger
__lookup_ctrl	fabrics.c	/^static nvme_ctrl_t __lookup_ctrl(nvme_root_t r, struct tr_config *trcfg,$/;"	f	file:
__lookup_host_ctrl	fabrics.c	/^static nvme_ctrl_t __lookup_host_ctrl(nvme_host_t h, struct tr_config *trcfg,$/;"	f	file:
__nmval	plugins/memblaze/memblaze-utils.h	/^		__u8	__nmval[2];$/;"	m	union:nvme_memblaze_smart_log_item::__anon12
__nvme_alloc	nvme.c	/^static void *__nvme_alloc(size_t len, bool *huge)$/;"	f	file:
__packed	common.h	16;"	d
__packed	plugins/intel/intel-nvme.c	/^	union __packed {$/;"	u	struct:nvme_additional_smart_log_item	file:
__packed	plugins/scaleflux/sfx-nvme.c	/^	union __packed {$/;"	u	struct:nvme_additional_smart_log_item	file:
__packed	plugins/solidigm/solidigm-log-page-dir.c	/^	struct __packed {$/;"	s	struct:lid_dir	file:
__packed	plugins/solidigm/solidigm-smart.c	/^	union __packed {$/;"	u	struct:nvme_additional_smart_log_item	file:
__stringify	define_cmd.h	7;"	d
__stringify_1	define_cmd.h	6;"	d
__uint128_t_to_string	util/types.c	/^static char *__uint128_t_to_string(nvme_uint128_t val, bool l10n)$/;"	f	file:
__version_major	plugins/micron/micron-nvme.c	/^static const char *__version_major = "1";$/;"	v	file:
__version_minor	plugins/micron/micron-nvme.c	/^static const char *__version_minor = "0";$/;"	v	file:
__version_patch	plugins/micron/micron-nvme.c	/^static const char *__version_patch = "14";$/;"	v	file:
_fmt1	nvme-models.c	/^static char *_fmt1 = "\/sys\/class\/nvme\/nvme%d\/device\/subsystem_vendor";$/;"	v	file:
_fmt2	nvme-models.c	/^static char *_fmt2 = "\/sys\/class\/nvme\/nvme%d\/device\/subsystem_device";$/;"	v	file:
_fmt3	nvme-models.c	/^static char *_fmt3 = "\/sys\/class\/nvme\/nvme%d\/device\/vendor";$/;"	v	file:
_fmt4	nvme-models.c	/^static char *_fmt4 = "\/sys\/class\/nvme\/nvme%d\/device\/device";$/;"	v	file:
_fmt5	nvme-models.c	/^static char *_fmt5 = "\/sys\/class\/nvme\/nvme%d\/device\/class";$/;"	v	file:
_ilog_H	ccan/ccan/ilog/ilog.h	3;"	d
_kp	plugins/intel/intel-nvme.c	/^	__u8			_kp[2];$/;"	m	struct:nvme_additional_smart_log_item	file:
_kp	plugins/scaleflux/sfx-nvme.c	/^	__u8			_kp[2];$/;"	m	struct:nvme_additional_smart_log_item	file:
_kp	plugins/solidigm/solidigm-smart.c	/^	__u8			_kp[2];$/;"	m	struct:nvme_additional_smart_log_item	file:
_likely_trace	ccan/ccan/likely/likely.c	/^long _likely_trace(bool cond, bool expect,$/;"	f
_np	plugins/intel/intel-nvme.c	/^	__u8			_np;$/;"	m	struct:nvme_additional_smart_log_item	file:
_np	plugins/scaleflux/sfx-nvme.c	/^	__u8			_np;$/;"	m	struct:nvme_additional_smart_log_item	file:
_np	plugins/solidigm/solidigm-smart.c	/^	__u8			_np;$/;"	m	struct:nvme_additional_smart_log_item	file:
_nvme_subcmds	completions/bash-nvme-completion.sh	/^_nvme_subcmds () {$/;"	f
_resv	plugins/shannon/shannon-nvme.c	/^	__u8			_resv;$/;"	m	struct:nvme_shannon_smart_log_item	file:
_rp	plugins/intel/intel-nvme.c	/^	__u8			_rp;$/;"	m	struct:nvme_additional_smart_log_item	file:
_rp	plugins/scaleflux/sfx-nvme.c	/^	__u8			_rp;$/;"	m	struct:nvme_additional_smart_log_item	file:
_rp	plugins/solidigm/solidigm-smart.c	/^	__u8			_rp;$/;"	m	struct:nvme_additional_smart_log_item	file:
_stx_fw_activ_his_ele	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _stx_fw_activ_his_ele$/;"	s
_stx_fw_activ_history_log_page	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _stx_fw_activ_history_log_page$/;"	s
_vendor_log_page_CF	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _vendor_log_page_CF$/;"	s
_vendor_log_page_CF_Attr	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) _vendor_log_page_CF_Attr$/;"	s
abort_self_test	nvme.c	/^static void abort_self_test(struct nvme_dev_self_test_args *args)$/;"	f	file:
activated_fw	plugins/micron/micron-nvme.c	/^	__u8                               activated_fw[8];$/;"	m	struct:fw_activation_history_entry	file:
activation_count	plugins/ocp/ocp-fw-activation-history.c	/^	__u16 activation_count;$/;"	m	struct:fw_activation_history_entry	file:
active	plugins/memblaze/memblaze-utils.h	/^			__u8 active;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_cnt
active_bucket_counter	plugins/ocp/ocp-nvme.c	/^	__le32	active_bucket_counter[4][4];	\/* 0x20 - 0x5F *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_bucket_counter	plugins/wdc/wdc-nvme.c	/^	__le32  active_bucket_counter[4][4];            \/* 0x20 - 0x5F *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_bucket_timer	plugins/ocp/ocp-nvme.c	/^	__le16	active_bucket_timer;		\/* 0x02 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_bucket_timer	plugins/wdc/wdc-nvme.c	/^	__le16  active_bucket_timer;                    \/* 0x02 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_bucket_timer_threshold	plugins/ocp/ocp-nvme.c	/^	__le16	active_bucket_timer_threshold;	\/* 0x04 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_bucket_timer_threshold	plugins/ocp/ocp-nvme.c	/^	__u16 active_bucket_timer_threshold;$/;"	m	struct:feature_latency_monitor	file:
active_bucket_timer_threshold	plugins/wdc/wdc-nvme.c	/^	__le16  active_bucket_timer_threshold;          \/* 0x04 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_latency_config	plugins/ocp/ocp-nvme.c	/^	__le16	active_latency_config;		\/* 0x0A *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_latency_config	plugins/ocp/ocp-nvme.c	/^	__u16 active_latency_config;$/;"	m	struct:feature_latency_monitor	file:
active_latency_config	plugins/wdc/wdc-nvme.c	/^	__le16  active_latency_config;                  \/* 0x0A *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_latency_min_window	plugins/ocp/ocp-nvme.c	/^	__u8	active_latency_min_window;	\/* 0x0C *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_latency_min_window	plugins/wdc/wdc-nvme.c	/^	__u8    active_latency_min_window;              \/* 0x0C *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_latency_minimum_window	plugins/ocp/ocp-nvme.c	/^	__u8  active_latency_minimum_window;$/;"	m	struct:feature_latency_monitor	file:
active_latency_stamp_units	plugins/ocp/ocp-nvme.c	/^	__le16	active_latency_stamp_units;	\/* 0xD8 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_latency_stamp_units	plugins/wdc/wdc-nvme.c	/^	__le16  active_latency_stamp_units;             \/* 0xD8 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_latency_timestamp	plugins/ocp/ocp-nvme.c	/^	__le64	active_latency_timestamp[4][3];	\/* 0x60 - 0xBF *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_latency_timestamp	plugins/wdc/wdc-nvme.c	/^	__le64  active_latency_timestamp[4][3];         \/* 0x60 - 0xBF *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_measured_latency	plugins/ocp/ocp-nvme.c	/^	__le16	active_measured_latency[4][3];	\/* 0xC0 - 0xD7 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_measured_latency	plugins/wdc/wdc-nvme.c	/^	__le16  active_measured_latency[4][3];          \/* 0xC0 - 0xD7 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_threshold_a	plugins/ocp/ocp-nvme.c	/^	__u8	active_threshold_a;		\/* 0x06 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_threshold_a	plugins/ocp/ocp-nvme.c	/^	__u8  active_threshold_a;$/;"	m	struct:feature_latency_monitor	file:
active_threshold_a	plugins/wdc/wdc-nvme.c	/^	__u8    active_threshold_a;                     \/* 0x06 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_threshold_b	plugins/ocp/ocp-nvme.c	/^	__u8	active_threshold_b;		\/* 0x07 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_threshold_b	plugins/ocp/ocp-nvme.c	/^	__u8  active_threshold_b;$/;"	m	struct:feature_latency_monitor	file:
active_threshold_b	plugins/wdc/wdc-nvme.c	/^	__u8    active_threshold_b;                     \/* 0x07 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_threshold_c	plugins/ocp/ocp-nvme.c	/^	__u8	active_threshold_c;		\/* 0x08 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_threshold_c	plugins/ocp/ocp-nvme.c	/^	__u8  active_threshold_c;$/;"	m	struct:feature_latency_monitor	file:
active_threshold_c	plugins/wdc/wdc-nvme.c	/^	__u8    active_threshold_c;                     \/* 0x08 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
active_threshold_d	plugins/ocp/ocp-nvme.c	/^	__u8	active_threshold_d;		\/* 0x09 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
active_threshold_d	plugins/ocp/ocp-nvme.c	/^	__u8  active_threshold_d;$/;"	m	struct:feature_latency_monitor	file:
active_threshold_d	plugins/wdc/wdc-nvme.c	/^	__u8    active_threshold_d;                     \/* 0x09 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
add_trace	ccan/ccan/likely/likely.c	/^static struct trace *add_trace(const struct trace *t)$/;"	f	file:
address	nvme-rpmb.c	/^	unsigned int   address;$/;"	m	struct:rpmb_data_frame_t	file:
admin_passthru	nvme.c	/^static int admin_passthru(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
advsryNFatalErrStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 advsryNFatalErrStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
alias	plugin.h	/^	char *alias;$/;"	m	struct:command
all_python_modules	tests/run_py_linters.py	/^all_python_modules = [$/;"	v
ams_cqr	nvme-print-stdout.c	/^	__u8	ams_cqr;$/;"	m	struct:nvme_bar_cap	file:
amzn_id_ctrl	plugins/amzn/amzn-nvme.c	/^static void amzn_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
ana_log	nvme-print.h	/^	void (*ana_log)(struct nvme_ana_log *ana_log, const char *devname, size_t len);$/;"	m	struct:print_ops
app_tag	nvme.c	/^static const char *app_tag = "app tag for end-to-end PI";$/;"	v	file:
app_tag_mask	nvme.c	/^static const char *app_tag_mask = "app tag mask for end-to-end PI";$/;"	v	file:
app_written	plugins/scaleflux/sfx-nvme.c	/^	__u64 app_written;	\/* app data written in 4K *\/$/;"	m	struct:sfx_freespace_ctx	file:
append_usage_str	util/argconfig.c	/^static const char *append_usage_str = "";$/;"	v	file:
ard_rr_good_cnt	plugins/innogrit/typedef.h	/^	unsigned int ard_rr_good_cnt;$/;"	m	struct:vsc_smart_log
arg	unit/test-argconfig-parse.c	/^	char *arg;$/;"	m	struct:toval_test	file:
argconfig_H	util/argconfig.h	35;"	d
argconfig_append_usage	util/argconfig.c	/^void argconfig_append_usage(const char *str)$/;"	f
argconfig_check_human_readable	util/argconfig.c	/^static bool argconfig_check_human_readable(struct argconfig_commandline_options *s)$/;"	f	file:
argconfig_check_output_format_json	util/argconfig.c	/^static bool argconfig_check_output_format_json(struct argconfig_commandline_options *s)$/;"	f	file:
argconfig_commandline_options	util/argconfig.h	/^struct argconfig_commandline_options {$/;"	s
argconfig_error	util/argconfig.c	/^static int argconfig_error(char *type, const char *opt, const char *arg)$/;"	f	file:
argconfig_get_val_len	util/argconfig.c	/^static int argconfig_get_val_len(struct argconfig_opt_val *opt_val, const char *str)$/;"	f	file:
argconfig_opt_val	util/argconfig.h	/^struct argconfig_opt_val {$/;"	s
argconfig_output_format_json	util/argconfig.c	/^bool argconfig_output_format_json(bool set)$/;"	f
argconfig_parse	util/argconfig.c	/^int argconfig_parse(int argc, char *argv[], const char *program_desc,$/;"	f
argconfig_parse_byte	util/argconfig.c	/^int argconfig_parse_byte(const char *opt, const char *str, unsigned char *val)$/;"	f
argconfig_parse_comma_sep_array	util/argconfig.c	/^int argconfig_parse_comma_sep_array(char *string, int *val, unsigned int max_length)$/;"	f
argconfig_parse_comma_sep_array_long	util/argconfig.c	/^int argconfig_parse_comma_sep_array_long(char *string, unsigned long long *val,$/;"	f
argconfig_parse_comma_sep_array_short	util/argconfig.c	/^int argconfig_parse_comma_sep_array_short(char *string, unsigned short *val,$/;"	f
argconfig_parse_seen	util/argconfig.c	/^bool argconfig_parse_seen(struct argconfig_commandline_options *s,$/;"	f
argconfig_parse_type	util/argconfig.c	/^static int argconfig_parse_type(struct argconfig_commandline_options *s, struct option *option,$/;"	f	file:
argconfig_parse_val	util/argconfig.c	/^static int argconfig_parse_val(struct argconfig_commandline_options *s, struct option *option,$/;"	f	file:
argconfig_print_help	util/argconfig.c	/^void argconfig_print_help(const char *program_desc,$/;"	f
argconfig_set_opt_val	util/argconfig.c	/^static int argconfig_set_opt_val(enum argconfig_types type, union argconfig_val *opt_val, void *val)$/;"	f	file:
argconfig_types	util/argconfig.h	/^enum argconfig_types {$/;"	g
argconfig_val	util/argconfig.h	/^union argconfig_val {$/;"	u
argument_type	util/argconfig.h	/^	int argument_type;$/;"	m	struct:argconfig_commandline_options
array_name	plugins/huawei/huawei-nvme.c	/^	char                array_name[ARRAY_NAME_LEN];$/;"	m	struct:huawei_list_item	file:
array_name	plugins/huawei/huawei-nvme.c	/^	unsigned int array_name;$/;"	m	struct:huawei_list_element_len	file:
assert_dump_core	plugins/solidigm/solidigm-internal-logs.c	/^struct assert_dump_core {$/;"	s	file:
assert_dump_header	plugins/solidigm/solidigm-internal-logs.c	/^struct assert_dump_header {$/;"	s	file:
assertdumptype	plugins/intel/intel-nvme.c	/^	__u8  assertdumptype;$/;"	m	struct:intel_assert_dump	file:
assertdumptype	plugins/solidigm/solidigm-internal-logs.c	/^	__u8  assertdumptype;$/;"	m	struct:assert_dump_core	file:
assertsize	plugins/intel/intel-nvme.c	/^	__u32 assertsize;$/;"	m	struct:intel_assert_dump	file:
assertsize	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 assertsize;$/;"	m	struct:assert_dump_core	file:
assertvalid	plugins/intel/intel-nvme.c	/^	__u8  assertvalid;$/;"	m	struct:intel_assert_dump	file:
assertvalid	plugins/solidigm/solidigm-internal-logs.c	/^	__u8  assertvalid;$/;"	m	struct:assert_dump_core	file:
attach_detach_primary_ns	tests/nvme_format_test.py	/^    def attach_detach_primary_ns(self):$/;"	m	class:TestNVMeFormatCmd
attach_ns	nvme.c	/^static int attach_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
attach_ns	tests/nvme_test.py	/^    def attach_ns(self, ctrl_id, ns_id):$/;"	m	class:TestNVMe
auth_data_write_chunk	nvme-rpmb.c	/^static int auth_data_write_chunk(int fd, unsigned char tgt, unsigned int addr,$/;"	f	file:
avail_fw_downgrades	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	avail_fw_downgrades;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
average	plugins/scaleflux/sfx-nvme.c	/^	__u64    average; \/* average latency statistics *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
average_latency	plugins/solidigm/solidigm-latency-tracking.c	/^	__u64 average_latency;$/;"	m	struct:latency_statistics	file:
avg	plugins/intel/intel-nvme.c	/^			__le16	avg;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
avg	plugins/memblaze/memblaze-utils.h	/^			__le16 avg;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::wearleveling_count
avg	plugins/scaleflux/sfx-nvme.c	/^			__le16	avg;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
avg	plugins/shannon/shannon-nvme.c	/^			__le16	avg;$/;"	m	struct:nvme_shannon_smart_log_item::__anon8::wear_level	file:
avg	plugins/solidigm/solidigm-smart.c	/^			__le16	avg;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
avg_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int avg_ec_cnt;$/;"	m	struct:vsc_smart_log
avg_pe_count	plugins/inspur/inspur-utils.h	/^    __u32 avg_pe_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
back_pressure_guage	plugins/wdc/wdc-nvme.c	/^	__u8		back_pressure_guage;$/;"	m	struct:wdc_nand_stats_V3	file:
badDllpStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 badDllpStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
badSysNandBlocks	plugins/seagate/seagate-diag.h	/^    __u64           badSysNandBlocks;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
badTlpStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 badTlpStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
badUsrNandBlocks	plugins/seagate/seagate-diag.h	/^    __u64           badUsrNandBlocks;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
bad_block_count	plugins/wdc/wdc-nvme.c	/^	__le32		bad_block_count;$/;"	m	struct:wdc_nand_stats	file:
bad_nand_block_count	plugins/wdc/wdc-nvme.c	/^	__u8		bad_nand_block_count[8];$/;"	m	struct:wdc_nand_stats_V3	file:
bad_sys_nand_block_count	plugins/wdc/wdc-nvme.c	/^	__u8		bad_sys_nand_block_count[8];$/;"	m	struct:wdc_nand_stats_V3	file:
base64_decode	util/base64.c	/^int base64_decode(const char *src, int srclen, unsigned char *dst)$/;"	f
base64_encode	util/base64.c	/^int base64_encode(const unsigned char *src, int srclen, char *dst)$/;"	f
base64_table	util/base64.c	/^static const char base64_table[65] =$/;"	v	file:
base_range_bits	plugins/solidigm/solidigm-latency-tracking.c	/^	__u8 base_range_bits;$/;"	m	struct:latency_tracker	file:
bd_table_show	plugins/scaleflux/sfx-nvme.c	/^static void bd_table_show(unsigned char *bd_table, __u64 table_size)$/;"	f	file:
bdev	plugins/amzn/amzn-nvme.c	/^	__u8			bdev[32];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
be16	ccan/ccan/endian/endian.h	/^typedef beint16_t be16;$/;"	t
be16	ccan/ccan/short_types/short_types.h	/^typedef beint16_t be16;$/;"	t
be16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t be16_to_cpu(beint16_t be_val)$/;"	f
be32	ccan/ccan/endian/endian.h	/^typedef beint32_t be32;$/;"	t
be32	ccan/ccan/short_types/short_types.h	/^typedef beint32_t be32;$/;"	t
be32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t be32_to_cpu(beint32_t be_val)$/;"	f
be64	ccan/ccan/endian/endian.h	/^typedef beint64_t be64;$/;"	t
be64	ccan/ccan/short_types/short_types.h	/^typedef beint64_t be64;$/;"	t
be64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t be64_to_cpu(beint64_t be_val)$/;"	f
beint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE beint16_t;$/;"	t
beint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE beint32_t;$/;"	t
beint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE beint64_t;$/;"	t
bigEndian	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t bigEndian : 1;$/;"	m	struct:cod_item	file:
binary_ana_log	nvme-print-binary.c	/^static void binary_ana_log(struct nvme_ana_log *ana_log, const char *devname,$/;"	f	file:
binary_boot_part_log	nvme-print-binary.c	/^static void binary_boot_part_log(void *bp_log, const char *devname,$/;"	f	file:
binary_changed_ns_list_log	nvme-print-binary.c	/^static void binary_changed_ns_list_log(struct nvme_ns_list *log,$/;"	f	file:
binary_cmd_set_independent_id_ns	nvme-print-binary.c	/^static void binary_cmd_set_independent_id_ns($/;"	f	file:
binary_ctrl_registers	nvme-print-binary.c	/^static void binary_ctrl_registers(void *bar, bool fabrics)$/;"	f	file:
binary_directive	nvme-print-binary.c	/^static void binary_directive(__u8 type, __u8 oper, __u16 spec, __u32 nsid, __u32 result,$/;"	f	file:
binary_discovery_log	nvme-print-binary.c	/^static void binary_discovery_log(struct nvmf_discovery_log *log, int numrec)$/;"	f	file:
binary_endurance_group_event_agg_log	nvme-print-binary.c	/^static void binary_endurance_group_event_agg_log($/;"	f	file:
binary_endurance_log	nvme-print-binary.c	/^static void binary_endurance_log(struct nvme_endurance_group_log *endurance_log,$/;"	f	file:
binary_error_log	nvme-print-binary.c	/^static void binary_error_log(struct nvme_error_log_page *err_log, int entries,$/;"	f	file:
binary_fdp_configs	nvme-print-binary.c	/^static void binary_fdp_configs(struct nvme_fdp_config_log *log, size_t len)$/;"	f	file:
binary_fdp_events	nvme-print-binary.c	/^static void binary_fdp_events(struct nvme_fdp_events_log *log)$/;"	f	file:
binary_fdp_ruh_status	nvme-print-binary.c	/^static void binary_fdp_ruh_status(struct nvme_fdp_ruh_status *status, size_t len)$/;"	f	file:
binary_fdp_stats	nvme-print-binary.c	/^static void binary_fdp_stats(struct nvme_fdp_stats_log *log)$/;"	f	file:
binary_fdp_usage	nvme-print-binary.c	/^static void binary_fdp_usage(struct nvme_fdp_ruhu_log *log, size_t len)$/;"	f	file:
binary_fid_support_effects_log	nvme-print-binary.c	/^static void binary_fid_support_effects_log($/;"	f	file:
binary_fw_log	nvme-print-binary.c	/^static void binary_fw_log(struct nvme_firmware_slot *fw_log,$/;"	f	file:
binary_id_ctrl	nvme-print-binary.c	/^static void binary_id_ctrl(struct nvme_id_ctrl *ctrl,$/;"	f	file:
binary_id_ctrl_nvm	nvme-print-binary.c	/^static void binary_id_ctrl_nvm(struct nvme_id_ctrl_nvm *ctrl_nvm)$/;"	f	file:
binary_id_domain_list	nvme-print-binary.c	/^static void binary_id_domain_list(struct nvme_id_domain_list *id_dom)$/;"	f	file:
binary_id_ns	nvme-print-binary.c	/^static void binary_id_ns(struct nvme_id_ns *ns, unsigned int nsid,$/;"	f	file:
binary_id_ns_descs	nvme-print-binary.c	/^static void binary_id_ns_descs(void *data, unsigned nsid)$/;"	f	file:
binary_id_ns_granularity_list	nvme-print-binary.c	/^static void binary_id_ns_granularity_list($/;"	f	file:
binary_id_nvmset	nvme-print-binary.c	/^static void binary_id_nvmset(struct nvme_id_nvmset_list *nvmset, unsigned nvmset_id)$/;"	f	file:
binary_id_uuid_list	nvme-print-binary.c	/^static void binary_id_uuid_list(const struct nvme_id_uuid_list *uuid_list)$/;"	f	file:
binary_lba_status	nvme-print-binary.c	/^static void binary_lba_status(struct nvme_lba_status *list, unsigned long len)$/;"	f	file:
binary_lba_status_log	nvme-print-binary.c	/^static void binary_lba_status_log(void *lba_status, __u32 size,$/;"	f	file:
binary_list_ctrl	nvme-print-binary.c	/^static void binary_list_ctrl(struct nvme_ctrl_list *ctrl_list)$/;"	f	file:
binary_list_secondary_ctrl	nvme-print-binary.c	/^static void binary_list_secondary_ctrl($/;"	f	file:
binary_media_unit_stat_log	nvme-print-binary.c	/^static void binary_media_unit_stat_log(struct nvme_media_unit_stat_log *mus_log)$/;"	f	file:
binary_mi_cmd_support_effects_log	nvme-print-binary.c	/^static void binary_mi_cmd_support_effects_log($/;"	f	file:
binary_nvm_id_ns	nvme-print-binary.c	/^static void binary_nvm_id_ns(struct nvme_nvm_id_ns *nvm_ns, unsigned int nsid,$/;"	f	file:
binary_persistent_event_log	nvme-print-binary.c	/^static void binary_persistent_event_log(void *pevent_log_info,$/;"	f	file:
binary_predictable_latency_event_agg_log	nvme-print-binary.c	/^static void binary_predictable_latency_event_agg_log($/;"	f	file:
binary_predictable_latency_per_nvmset	nvme-print-binary.c	/^static void binary_predictable_latency_per_nvmset($/;"	f	file:
binary_primary_ctrl_cap	nvme-print-binary.c	/^static void binary_primary_ctrl_cap(const struct nvme_primary_ctrl_cap *caps)$/;"	f	file:
binary_print_ops	nvme-print-binary.c	/^static struct print_ops binary_print_ops = {$/;"	v	typeref:struct:print_ops	file:
binary_print_ops	nvme-print-binary.c	/^static struct print_ops binary_print_ops;$/;"	v	typeref:struct:print_ops	file:
binary_resv_notif_log	nvme-print-binary.c	/^static void binary_resv_notif_log(struct nvme_resv_notification_log *resv,$/;"	f	file:
binary_resv_report	nvme-print-binary.c	/^static void binary_resv_report(struct nvme_resv_status *status, int bytes,$/;"	f	file:
binary_sanitize_log	nvme-print-binary.c	/^static void binary_sanitize_log(struct nvme_sanitize_log_page *sanitize,$/;"	f	file:
binary_self_test_log	nvme-print-binary.c	/^static void binary_self_test_log(struct nvme_self_test_log *self_test, __u8 dst_entries,$/;"	f	file:
binary_smart_log	nvme-print-binary.c	/^static void binary_smart_log(struct nvme_smart_log *smart, unsigned int nsid,$/;"	f	file:
binary_suffix	util/suffix.c	/^static struct binary_suffix {$/;"	s	file:
binary_suffixes	util/suffix.c	/^} binary_suffixes[] = {$/;"	v	typeref:struct:binary_suffix	file:
binary_supported_cap_config_log	nvme-print-binary.c	/^static void binary_supported_cap_config_log($/;"	f	file:
binary_supported_log	nvme-print-binary.c	/^static void binary_supported_log(struct nvme_supported_log_pages *support_log,$/;"	f	file:
binary_zns_changed	nvme-print-binary.c	/^static void binary_zns_changed(struct nvme_zns_changed_zone_log *log)$/;"	f	file:
binary_zns_id_ctrl	nvme-print-binary.c	/^static void binary_zns_id_ctrl(struct nvme_zns_id_ctrl *ctrl)$/;"	f	file:
binary_zns_id_ns	nvme-print-binary.c	/^static void binary_zns_id_ns(struct nvme_zns_id_ns *ns, struct nvme_id_ns *id_ns)$/;"	f	file:
binary_zns_report_zones	nvme-print-binary.c	/^static void binary_zns_report_zones(void *report, __u32 descs,$/;"	f	file:
bit_num	ccan/ccan/strset/strset.c	/^	u8 bit_num;$/;"	m	struct:node	file:
bits	ccan/ccan/htable/htable.h	/^	unsigned int bits, perfect_bitnum;$/;"	m	struct:htable
bl	plugins/intel/intel-nvme.c	/^	__u8			bl[8];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
bl	plugins/solidigm/solidigm-id-ctrl.c	/^	char bl[8];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
block	plugins/huawei/huawei-nvme.c	/^	unsigned int        block;$/;"	m	struct:huawei_list_item	file:
block_count	nvme.c	/^static const char *block_count = "number of blocks (zeroes based) on device to access";$/;"	v	file:
bool_val	util/argconfig.h	/^	int bool_val;$/;"	m	union:argconfig_val
boot_part_log	nvme-print.h	/^	void (*boot_part_log)(void *bp_log, const char *devname, __u32 size);$/;"	m	struct:print_ops
bp_enable	nvme-rpmb.c	/^	unsigned char  bp_enable;$/;"	m	struct:rpmb_config_block_t	file:
bp_lock	nvme-rpmb.c	/^	unsigned char  bp_lock;$/;"	m	struct:rpmb_config_block_t	file:
bps_css_nssrs_dstrd	nvme-print-stdout.c	/^	__u16	bps_css_nssrs_dstrd;$/;"	m	struct:nvme_bar_cap	file:
bswap_16	ccan/ccan/endian/endian.h	/^static inline uint16_t bswap_16(uint16_t val)$/;"	f
bswap_32	ccan/ccan/endian/endian.h	/^static inline uint32_t bswap_32(uint32_t val)$/;"	f
bswap_64	ccan/ccan/endian/endian.h	/^static inline uint64_t bswap_64(uint64_t val)$/;"	f
bucket_1	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_1[32];	\/* 0~1ms, step 32us *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_1	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_1[64];	\/* 0us~63us, step 1us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_10	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_10[64]; \/* 16.32ms~32.64ms step 256us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_11	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_11[64]; \/* 32.64ms~65.28ms step 512us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_12	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_12[64]; \/* 65.28ms~130.56ms step 1.024ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_13	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_13[64]; \/* 130.56ms~261.12ms step 2.048ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_14	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_14[64]; \/* 261.12ms~522.24ms step 4.096ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_15	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_15[64]; \/* 522.24ms~1.04s step 8.192ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_16	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_16[64]; \/* 1.04s~2.09s step 16.384ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_17	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_17[64]; \/* 2.09s~4.18s step 32.768ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_18	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_18[64]; \/* 4.18s~8.36s step 65.536ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_19	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_19[64]; \/* 8.36s~ step 131.072ms *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_2	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_2[31];	\/* 1~32ms, step 1ms *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_2	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_2[64];	\/* 63us~127us, step 1us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_3	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_3[31];	\/* 32ms~1s, step 32ms *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_3	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_3[64];	\/* 127us~255us, step 2us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_4	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_4[1];	\/* 1s~2s, specifically 1024ms~2047ms *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_4	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_4[64];	\/* 255us~510us, step 4us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_5	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_5[1];	\/* 2s~4s, specifically 2048ms~4095ms *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_5	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_5[64];	\/* 510us~1.02ms step 8us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_6	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_6[1];	\/* 4s+, specifically 4096ms+ *\/$/;"	m	struct:sfx_lat_stats_vanda	file:
bucket_6	plugins/scaleflux/sfx-nvme.c	/^	__u32	 bucket_6[64];	\/* 1.02ms~2.04ms step 16us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_7	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_7[64];  \/* 2.04ms~4.08ms step 32us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_8	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_8[64];  \/* 4.08ms~8.16ms step 64us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_9	plugins/scaleflux/sfx-nvme.c	/^	__u32    bucket_9[64];  \/* 8.16ms~16.32ms step 128us *\/$/;"	m	struct:sfx_lat_stats_myrtle	file:
bucket_list	plugins/solidigm/solidigm-latency-tracking.c	/^	struct json_object *bucket_list;$/;"	m	struct:latency_tracker	typeref:struct:latency_tracker::json_object	file:
bucket_list_size	plugins/solidigm/solidigm-latency-tracking.c	/^	__u32 bucket_list_size;$/;"	m	struct:latency_tracker	file:
buf_len	nvme.c	/^static const char *buf_len = "buffer len (if) data is sent or received";$/;"	v	file:
bufferFolderName	plugins/wdc/wdc-nvme.c	/^	char bufferFolderName[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
bufferFolderPath	plugins/wdc/wdc-nvme.c	/^	int8_t bufferFolderPath[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
build_dir	tests/run_py_linters.py	/^build_dir = Path(environ['MESON_BUILD_ROOT'])$/;"	v
build_meson	scripts/build.sh	/^build_meson() {$/;"	f
build_muon	scripts/build.sh	/^build_muon() {$/;"	f
builtin	nvme.c	/^static struct plugin builtin = {$/;"	v	typeref:struct:plugin	file:
builtin_ilog32_nz	ccan/ccan/ilog/ilog.h	104;"	d
builtin_ilog32_nz	ccan/ccan/ilog/ilog.h	107;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	112;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	115;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	118;"	d
byte	unit/test-argconfig-parse.c	/^	__u8 byte;$/;"	m	struct:cfg	file:
byte	unit/test-argconfig-parse.c	/^	__u8 byte;$/;"	m	union:val	file:
byte	util/argconfig.h	/^	uint8_t byte;$/;"	m	union:argconfig_val
byte_num	ccan/ccan/strset/strset.c	/^	size_t byte_num;$/;"	m	struct:node	file:
bytes	util/types.h	/^        __u8  bytes[16];$/;"	m	union:nvme_uint128
bytes_per_unit	unit/test-uint128-si.c	/^	__u32 bytes_per_unit;$/;"	m	struct:tostr_test	file:
calc_percent	plugins/wdc/wdc-nvme.c	/^static double calc_percent(uint64_t numerator, uint64_t denominator)$/;"	f	file:
capHealth	plugins/seagate/seagate-diag.h	/^    __u16           capHealth;          $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
cap_aged	plugins/dera/dera-nvme.c	/^	__u8 cap_aged;		$/;"	m	struct:nvme_dera_smart_info_log	file:
cap_aged_ratio	plugins/dera/dera-nvme.c	/^	__u8 cap_aged_ratio;$/;"	m	struct:nvme_dera_smart_info_log	file:
cap_charge_ctrl_en	plugins/dera/dera-nvme.c	/^	__u8 cap_charge_ctrl_en;	 $/;"	m	struct:nvme_dera_smart_info_log	file:
cap_charge_ctrl_val	plugins/dera/dera-nvme.c	/^	__u8 cap_charge_ctrl_val[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
cap_charge_max_thr	plugins/dera/dera-nvme.c	/^	__u8 cap_charge_max_thr[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
cap_charge_min_thr	plugins/dera/dera-nvme.c	/^	__u8 cap_charge_min_thr[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
cap_health_state	plugins/inspur/inspur-utils.h	/^    __u32 cap_health_state;$/;"	m	struct:r1_vendor_log_s
cap_status	plugins/dera/dera-nvme.c	/^	__u8 cap_status;	$/;"	m	struct:nvme_dera_smart_info_log	file:
cap_trans_time1	plugins/inspur/inspur-utils.h	/^    __u32 cap_trans_time1 : 16;$/;"	m	struct:r1_am_cap_transtime
cap_trans_time2	plugins/inspur/inspur-utils.h	/^    __u32 cap_trans_time2 : 16;$/;"	m	struct:r1_am_cap_transtime
cap_transtime	plugins/inspur/inspur-utils.h	/^    r1_cap_transtime_t cap_transtime;$/;"	m	struct:r1_vendor_log_s
cap_unsupply	plugins/inspur/inspur-utils.h	/^    __u32 cap_unsupply : 1;$/;"	m	struct:vendor_warning_bit
cap_voltage	plugins/dera/dera-nvme.c	/^	__u8 cap_voltage[4];$/;"	m	struct:nvme_dera_smart_info_log	file:
capacitance_test_fail	plugins/inspur/inspur-utils.h	/^    __u32 capacitance_test_fail : 1;$/;"	m	struct:vendor_warning_bit
capacitor_health	plugins/wdc/wdc-nvme.c	/^	__le32  capacitor_health;                      \/* 0x4C - Capacitor health                           *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
capacity_mgmt	nvme.c	/^static int capacity_mgmt(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
cdump_pack	plugins/innogrit/typedef.h	/^struct cdump_pack {$/;"	s
cdumpinfo	plugins/innogrit/typedef.h	/^struct cdumpinfo {$/;"	s
cdumppack	plugins/innogrit/typedef.h	/^	struct cdump_pack cdumppack[32];$/;"	m	struct:cdumpinfo	typeref:struct:cdumpinfo::cdump_pack
cdw10	nvme.c	/^	__u32	cdw10;$/;"	m	struct:passthru_config	file:
cdw11	nvme.c	/^	__u32	cdw11;$/;"	m	struct:passthru_config	file:
cdw11	nvme.c	/^	__u32 cdw11;$/;"	m	struct:feat_cfg	file:
cdw12	nvme.c	/^	__u32	cdw12;$/;"	m	struct:passthru_config	file:
cdw12	nvme.c	/^	__u32 cdw12;$/;"	m	struct:feat_cfg	file:
cdw13	nvme.c	/^	__u32	cdw13;$/;"	m	struct:passthru_config	file:
cdw14	nvme.c	/^	__u32	cdw14;$/;"	m	struct:passthru_config	file:
cdw15	nvme.c	/^	__u32	cdw15;$/;"	m	struct:passthru_config	file:
cdw2	nvme.c	/^	__u32	cdw2;$/;"	m	struct:passthru_config	file:
cdw3	nvme.c	/^	__u32	cdw3;$/;"	m	struct:passthru_config	file:
ces_BadDllp_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_BadDllp_cnt;$/;"	m	struct:r1_vendor_log_s
ces_BadTlp_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_BadTlp_cnt;$/;"	m	struct:r1_vendor_log_s
ces_Hlo_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_Hlo_cnt;$/;"	m	struct:r1_vendor_log_s
ces_RcvErr_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_RcvErr_cnt;$/;"	m	struct:r1_vendor_log_s
ces_RplyTo_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_RplyTo_cnt;$/;"	m	struct:r1_vendor_log_s
ces_Rplyover_cnt	plugins/inspur/inspur-utils.h	/^    __u32 ces_Rplyover_cnt;$/;"	m	struct:r1_vendor_log_s
cfg	plugins/solidigm/solidigm-latency-tracking.c	/^	struct config cfg;$/;"	m	struct:latency_tracker	typeref:struct:latency_tracker::config	file:
cfg	unit/test-argconfig-parse.c	/^static struct cfg cfg;$/;"	v	typeref:struct:cfg	file:
cfg	unit/test-argconfig-parse.c	/^struct cfg {$/;"	s	file:
cfg_file	plugins/solidigm/solidigm-telemetry.c	/^	char *cfg_file;$/;"	m	struct:config	file:
change_cap	plugins/scaleflux/sfx-nvme.c	/^static int change_cap(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
change_sanity_check	plugins/scaleflux/sfx-nvme.c	/^static int change_sanity_check(int fd, __u64 trg_in_4k, int *shrink)$/;"	f	file:
changed_zone_list	plugins/zns/zns.c	/^static int changed_zone_list(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
char4_to_int	plugins/dera/dera-nvme.c	/^static int char4_to_int(__u8 *data)$/;"	f	file:
check_arg_dev	nvme.c	/^static int check_arg_dev(int argc, char **argv)$/;"	f	file:
check_dhchap_key	nvme.c	/^static int check_dhchap_key(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
check_num	unit/test-suffix-binary-parse.c	/^static void check_num(const char *val, __u64 exp, __u64 num)$/;"	f	file:
check_num	unit/test-suffix-si-parse.c	/^static void check_num(const char *val, __u64 exp, __u64 num)$/;"	f	file:
check_rpmb_response	nvme-rpmb.c	/^static int check_rpmb_response( struct rpmb_data_frame_t *req,$/;"	f	file:
check_str	unit/test-uint128-si.c	/^static void check_str(nvme_uint128_t val, __u32 bytes_per_unit, const char *exp,$/;"	f	file:
check_str	unit/test-uint128.c	/^static void check_str(nvme_uint128_t val, const char *exp, const char *res)$/;"	f	file:
check_tls_key	nvme.c	/^static int check_tls_key(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
check_type	ccan/ccan/check_type/check_type.h	49;"	d
check_type	ccan/ccan/check_type/check_type.h	57;"	d
check_types_match	ccan/ccan/check_type/check_type.h	52;"	d
check_types_match	ccan/ccan/check_type/check_type.h	60;"	d
check_val	unit/test-argconfig-parse.c	/^static void check_val(const char *arg, void *exp, void *val, int size)$/;"	f	file:
child	ccan/ccan/strset/strset.c	/^	struct strset child[2];$/;"	m	struct:node	typeref:struct:node::strset	file:
choose_len	plugins/huawei/huawei-nvme.c	/^static unsigned int choose_len(unsigned int old_len, unsigned int cur_len, unsigned int default_len)$/;"	f	file:
cid	plugins/memblaze/memblaze-nvme.c	/^	__u16 cid;$/;"	m	struct:log_page_high_latency	file:
cisalnum	ccan/ccan/str/str.h	/^static inline bool cisalnum(char c)$/;"	f
cisalpha	ccan/ccan/str/str.h	/^static inline bool cisalpha(char c)$/;"	f
cisascii	ccan/ccan/str/str.h	/^static inline bool cisascii(char c)$/;"	f
cisblank	ccan/ccan/str/str.h	/^static inline bool cisblank(char c)$/;"	f
ciscntrl	ccan/ccan/str/str.h	/^static inline bool ciscntrl(char c)$/;"	f
cisdigit	ccan/ccan/str/str.h	/^static inline bool cisdigit(char c)$/;"	f
cisgraph	ccan/ccan/str/str.h	/^static inline bool cisgraph(char c)$/;"	f
cislower	ccan/ccan/str/str.h	/^static inline bool cislower(char c)$/;"	f
cisprint	ccan/ccan/str/str.h	/^static inline bool cisprint(char c)$/;"	f
cispunct	ccan/ccan/str/str.h	/^static inline bool cispunct(char c)$/;"	f
cisspace	ccan/ccan/str/str.h	/^static inline bool cisspace(char c)$/;"	f
cisupper	ccan/ccan/str/str.h	/^static inline bool cisupper(char c)$/;"	f
cisxdigit	ccan/ccan/str/str.h	/^static inline bool cisxdigit(char c)$/;"	f
class_final	nvme-models.c	/^static char *class_final;$/;"	v	file:
class_mid	nvme-models.c	/^static char *class_mid;$/;"	v	file:
class_top	nvme-models.c	/^static char *class_top;$/;"	v	file:
clear	ccan/ccan/strset/strset.c	/^static void clear(struct strset n)$/;"	f	file:
clear_correctable_errors	plugins/toshiba/toshiba-nvme.c	/^static int clear_correctable_errors(int argc, char **argv, struct command *cmd,$/;"	f	file:
clear_fw_activate_history	plugins/seagate/seagate-nvme.c	/^static int clear_fw_activate_history(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
clear_fw_update_history	plugins/ocp/ocp-nvme.c	/^static int clear_fw_update_history(int argc, char **argv,$/;"	f	file:
clear_fw_update_history	plugins/solidigm/solidigm-nvme.c	/^static int clear_fw_update_history(int argc, char **argv, struct command *cmd,$/;"	f	file:
clear_pcie_corectable_error_counters	plugins/ocp/ocp-nvme.c	/^static int clear_pcie_corectable_error_counters(int argc, char **argv,$/;"	f	file:
close_zone	plugins/zns/zns.c	/^static int close_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
closest	ccan/ccan/strset/strset.c	/^static const char *closest(struct strset n, const char *member)$/;"	f	file:
cls	plugins/intel/intel-nvme.c	/^	__u8			cls;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
cls	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 cls;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
cmd_dump_repeat	plugins/solidigm/solidigm-internal-logs.c	/^static int cmd_dump_repeat(struct nvme_passthru_cmd *cmd, __u32 total_dw_size,$/;"	f	file:
cmd_set_independent_id_ns	nvme.c	/^static int cmd_set_independent_id_ns(int argc, char **argv, struct command *cmd,$/;"	f	file:
cmpltnTimoutStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 cmpltnTimoutStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
cnt	plugins/memblaze/memblaze-utils.h	/^			__le32 cnt;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_cnt
cod_header	plugins/solidigm/solidigm-telemetry/cod.c	/^struct cod_header {$/;"	s	file:
cod_item	plugins/solidigm/solidigm-telemetry/cod.c	/^struct cod_item {$/;"	s	file:
cod_map	plugins/solidigm/solidigm-telemetry/cod.c	/^struct cod_map {$/;"	s	file:
collect_effects_log	nvme.c	/^static int collect_effects_log(struct nvme_dev *dev, enum nvme_csi csi,$/;"	f	file:
command	plugin.h	/^struct command {$/;"	s
commands	plugin.h	/^	struct command **commands;$/;"	m	struct:plugin	typeref:struct:plugin::command
commands	plugin.h	/^	struct command **commands;$/;"	m	struct:program	typeref:struct:program::command
commitActionType	plugins/seagate/seagate-diag.h	/^    __u8    commitActionType;$/;"	m	struct:_stx_fw_activ_his_ele
commit_action	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 commit_action;$/;"	m	struct:fw_activation_history_entry	file:
commit_action_type	plugins/micron/micron-nvme.c	/^	__u8                               commit_action_type;$/;"	m	struct:fw_activation_history_entry	file:
commit_action_type	plugins/wdc/wdc-nvme.c	/^	__u8		commit_action_type;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
commit_action_type	plugins/wdc/wdc-nvme.c	/^	__u8 commit_action_type;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
commit_id	plugins/inspur/inspur-utils.h	/^    __u8 commit_id[16];$/;"	m	struct:r1_vendor_log_s
commom_header	plugins/solidigm/solidigm-internal-logs.c	/^struct commom_header {$/;"	s	file:
common	plugins/solidigm/solidigm-internal-logs.c	/^	struct nlog_dump_header_common common;$/;"	m	struct:nlog_dump_header3_0	typeref:struct:nlog_dump_header3_0::nlog_dump_header_common	file:
common	plugins/solidigm/solidigm-internal-logs.c	/^	struct nlog_dump_header_common common;$/;"	m	struct:nlog_dump_header4_0	typeref:struct:nlog_dump_header4_0::nlog_dump_header_common	file:
common	plugins/solidigm/solidigm-internal-logs.c	/^	struct nlog_dump_header_common common;$/;"	m	struct:nlog_dump_header4_1	typeref:struct:nlog_dump_header4_1::nlog_dump_header_common	file:
common_bits	ccan/ccan/htable/htable.h	/^	uintptr_t common_mask, common_bits;$/;"	m	struct:htable
common_mask	ccan/ccan/htable/htable.h	/^	uintptr_t common_mask, common_bits;$/;"	m	struct:htable
compare	nvme.c	/^static int compare(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
compare_fw_version	plugins/memblaze/memblaze-nvme.c	/^static int compare_fw_version(const char *fw1, const char *fw2)$/;"	f	file:
completeAbortStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 completeAbortStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
compression_path_err_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item compression_path_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
condstr	ccan/ccan/likely/likely.c	/^	const char *condstr;$/;"	m	struct:trace	file:
config	plugins/solidigm/solidigm-internal-logs.c	/^struct config {$/;"	s	file:
config	plugins/solidigm/solidigm-latency-tracking.c	/^struct config {$/;"	s	file:
config	plugins/solidigm/solidigm-telemetry.c	/^struct config {$/;"	s	file:
config_cmd	nvme.c	/^static int config_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
config_get_by_version	plugins/solidigm/solidigm-telemetry/config.c	/^static bool config_get_by_version(const struct json_object *obj, int version_major,$/;"	f	file:
config_meson_cross	scripts/build.sh	/^config_meson_cross() {$/;"	f
config_meson_default	scripts/build.sh	/^config_meson_default() {$/;"	f
config_meson_fallback	scripts/build.sh	/^config_meson_fallback() {$/;"	f
config_muon_default	scripts/build.sh	/^config_muon_default() {$/;"	f
config_type	util/argconfig.h	/^	enum argconfig_types config_type;$/;"	m	struct:argconfig_commandline_options	typeref:enum:argconfig_commandline_options::argconfig_types
configuration	plugins/solidigm/solidigm-telemetry/telemetry-log.h	/^	struct json_object *configuration;$/;"	m	struct:telemetry_log	typeref:struct:telemetry_log::json_object
connect_all_cmd	nvme.c	/^static int connect_all_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
connect_cmd	nvme.c	/^static int connect_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
connect_msg	nvme-print.h	/^	void (*connect_msg)(nvme_ctrl_t c);$/;"	m	struct:print_ops
container_of	ccan/ccan/container_of/container_of.h	33;"	d
container_of_or_null	ccan/ccan/container_of/container_of.h	69;"	d
container_of_or_null_	ccan/ccan/container_of/container_of.h	/^static inline char *container_of_or_null_(void *member_ptr, size_t offset)$/;"	f
container_of_var	ccan/ccan/container_of/container_of.h	119;"	d
container_of_var	ccan/ccan/container_of/container_of.h	122;"	d
container_off	ccan/ccan/container_of/container_of.h	99;"	d
container_off_var	ccan/ccan/container_of/container_of.h	138;"	d
container_off_var	ccan/ccan/container_of/container_of.h	141;"	d
convert_seconds	plugins/intel/intel-nvme.c	/^static float convert_seconds(__u32 microseconds)$/;"	f	file:
convert_ts	util/types.c	/^int convert_ts(time_t time, char *ts_buf)$/;"	f
copy	tests/nvme_copy_test.py	/^    def copy(self):$/;"	m	class:TestNVMeCopy
copy_cmd	nvme.c	/^static int copy_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
core	plugins/solidigm/solidigm-internal-logs.c	/^	struct assert_dump_core core[];$/;"	m	struct:assert_dump_header	typeref:struct:assert_dump_header::assert_dump_core	file:
corecount	plugins/intel/intel-nvme.c	/^	__u32 corecount;$/;"	m	struct:intel_vu_nlog	file:
corecount	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 corecount;$/;"	m	struct:nlog_dump_header_common	file:
coreoffset	plugins/intel/intel-nvme.c	/^	__u32 coreoffset;$/;"	m	struct:intel_assert_dump	file:
coreoffset	plugins/intel/intel-nvme.c	/^	__u32 coreoffset;$/;"	m	struct:intel_event_dump	file:
coreoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 coreoffset;$/;"	m	struct:assert_dump_core	file:
coreoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 coreoffset;$/;"	m	struct:event_dump_instance	file:
coreselected	plugins/intel/intel-nvme.c	/^	__u32 coreselected;$/;"	m	struct:intel_vu_nlog	file:
coreselected	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 coreselected;$/;"	m	struct:nlog_dump_header4_0	file:
coreselected	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 coreselected;$/;"	m	struct:nlog_dump_header4_1	file:
coresize	plugins/intel/intel-nvme.c	/^	__u32 coresize;$/;"	m	struct:intel_event_dump	file:
coresize	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 coresize;$/;"	m	struct:event_dump_instance	file:
correctable_error_count	plugins/wdc/wdc-nvme.c	/^	__le64		correctable_error_count;$/;"	m	struct:wdc_nand_stats_V3	file:
corrupt	ccan/ccan/list/list.c	/^static void *corrupt(const char *abortstr,$/;"	f	file:
count	ccan/ccan/likely/likely.c	/^	unsigned long count, right;$/;"	m	struct:trace	file:
count	plugins/intel/intel-nvme.c	/^			__u32	count;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
count	plugins/memblaze/memblaze-utils.h	/^			__u32 count;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_mb
count	plugins/scaleflux/sfx-nvme.c	/^			__u32	count;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
count	plugins/shannon/shannon-nvme.c	/^			__u32	count;$/;"	m	struct:nvme_shannon_smart_log_item::__anon8::thermal_throttle	file:
count	plugins/solidigm/solidigm-smart.c	/^			__u32	count;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
cpu_supports	ccan/ccan/compiler/compiler.h	312;"	d
cpu_supports	ccan/ccan/compiler/compiler.h	314;"	d
cpu_to_be16	ccan/ccan/endian/endian.h	/^static inline beint16_t cpu_to_be16(uint16_t native)$/;"	f
cpu_to_be32	ccan/ccan/endian/endian.h	/^static inline beint32_t cpu_to_be32(uint32_t native)$/;"	f
cpu_to_be64	ccan/ccan/endian/endian.h	/^static inline beint64_t cpu_to_be64(uint64_t native)$/;"	f
cpu_to_le16	ccan/ccan/endian/endian.h	/^static inline leint16_t cpu_to_le16(uint16_t native)$/;"	f
cpu_to_le32	ccan/ccan/endian/endian.h	/^static inline leint32_t cpu_to_le32(uint32_t native)$/;"	f
cpu_to_le64	ccan/ccan/endian/endian.h	/^static inline leint64_t cpu_to_le64(uint64_t native)$/;"	f
crc32	util/crc32.c	/^uint32_t crc32(uint32_t crc, unsigned char *buf, size_t len)$/;"	f
crc32_H	util/crc32.h	4;"	d
crc32_table	util/crc32.c	/^static const uint32_t crc32_table[256] = {$/;"	v	file:
crc_err_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	crc_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
crc_err_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item crc_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
create_and_validate_ns	tests/nvme_test.py	/^    def create_and_validate_ns(self, nsid, nsze, ncap, flbas, dps):$/;"	m	class:TestNVMe
create_data_file	tests/nvme_test_io.py	/^    def create_data_file(self, pathname, data_size, pattern):$/;"	m	class:TestNVMeIO
create_discover_ctrl	fabrics.c	/^static nvme_ctrl_t create_discover_ctrl(nvme_root_t r, nvme_host_t h,$/;"	f	file:
create_hash	nvme-rpmb.c	/^unsigned char *create_hash(const char *algo,$/;"	f
create_ns	nvme.c	/^static int create_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
create_ns	tests/nvme_test.py	/^    def create_ns(self, nsze, ncap, flbas, dps):$/;"	m	class:TestNVMe
crkey	nvme.c	/^static const char *crkey = "current reservation key";$/;"	v	file:
csi	nvme-print.h	/^	enum nvme_csi csi;$/;"	m	struct:nvme_effects_log_node	typeref:enum:nvme_effects_log_node::nvme_csi
csi	nvme.c	/^static const char *csi = "command set identifier";$/;"	v	file:
ctrl	nvme.h	/^			nvme_mi_ctrl_t ctrl;$/;"	m	struct:nvme_dev::__anon28::__anon30
ctrl	plugins/huawei/huawei-nvme.c	/^	struct nvme_id_ctrl ctrl;$/;"	m	struct:huawei_list_item	typeref:struct:huawei_list_item::nvme_id_ctrl	file:
ctrl	plugins/netapp/netapp-nvme.c	/^	struct nvme_id_ctrl	ctrl;$/;"	m	struct:ontapdevice_info	typeref:struct:ontapdevice_info::nvme_id_ctrl	file:
ctrl	plugins/netapp/netapp-nvme.c	/^	struct nvme_id_ctrl	ctrl;$/;"	m	struct:smdevice_info	typeref:struct:smdevice_info::nvme_id_ctrl	file:
ctrl_cmp	nvme-print-stdout.c	/^static bool ctrl_cmp(const struct nvme_ctrl *c, const char *name)$/;"	f	file:
ctrl_config_match	fabrics.c	/^static bool ctrl_config_match(nvme_ctrl_t c, struct tr_config *trcfg)$/;"	f	file:
ctrl_init	plugins/solidigm/solidigm-telemetry.c	/^	bool ctrl_init;$/;"	m	struct:config	file:
ctrl_key	nvme-print-stdout.c	/^static const char *ctrl_key(const struct nvme_ctrl *c)$/;"	f	file:
ctrl_list	nvme-print.h	/^	void (*ctrl_list)(struct nvme_ctrl_list *ctrl_list);$/;"	m	struct:print_ops
ctrl_match_fn_t	fabrics.c	/^typedef bool (*ctrl_match_fn_t)(nvme_ctrl_t, struct tr_config *);$/;"	t	file:
ctrl_max_temper	plugins/inspur/inspur-utils.h	/^    __u32 ctrl_max_temper;$/;"	m	struct:r1_vendor_log_s
ctrl_overtemper_cout	plugins/inspur/inspur-utils.h	/^    __u32 ctrl_overtemper_cout;$/;"	m	struct:r1_vendor_log_s
ctrl_registers	nvme-print.h	/^	void (*ctrl_registers)(void *bar, bool fabrics);$/;"	m	struct:print_ops
ctrl_reset	tests/nvme_ctrl_reset_test.py	/^    def ctrl_reset(self):$/;"	m	class:TestNVMeCtrlReset
ctrls	nvme-print-stdout.c	/^	struct strset ctrls;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::strset	file:
curr	plugins/intel/intel-nvme.c	/^	__le64	curr;$/;"	m	struct:intel_temp_stats	file:
curr	plugins/memblaze/memblaze-utils.h	/^			__le16 curr;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::power
curr	plugins/memblaze/memblaze-utils.h	/^			__u8 curr;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::power_loss_protection
curr	plugins/memblaze/memblaze-utils.h	/^		__le16 curr;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::temperature
currDir	plugins/wdc/wdc-nvme.c	/^	char currDir[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
current_fw_version	plugins/wdc/wdc-nvme.c	/^	__le64		current_fw_version;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
current_info	plugins/inspur/inspur-utils.h	/^    __u32 current_info;$/;"	m	struct:r1_vendor_log_s
current_pcie_volt	plugins/dera/dera-nvme.c	/^	__u8 current_pcie_volt[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
current_power	plugins/dera/dera-nvme.c	/^	__u8 current_power[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
current_temp	plugins/inspur/inspur-utils.h	/^    __u32 current_temp[4];$/;"	m	struct:r1_vendor_log_s
current_temp	plugins/wdc/wdc-nvme.c	/^	__le32  current_temp;                          \/* 0x34 - Current temperature                        *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
d	nvme-print.c	/^void d(unsigned char *buf, int len, int width, int group)$/;"	f
d0_log_page	plugins/micron/micron-nvme.c	/^} d0_log_page[] = {$/;"	v	typeref:struct:logpage	file:
dLinkPrtclErrorStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 dLinkPrtclErrorStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
d_json	nvme-print-json.c	/^static void d_json(unsigned char *buf, int len, int width, int group,$/;"	f	file:
d_raw	nvme-print.c	/^void d_raw(unsigned char *buf, unsigned len)$/;"	f
d_raw_to_fd	plugins/toshiba/toshiba-nvme.c	/^static int d_raw_to_fd(const unsigned char *buf, unsigned int len, int fd)$/;"	f	file:
dash	nvme-print-stdout.c	/^static const char dash[100] = {[0 ... 99] = '-'};$/;"	v	file:
dash	nvme.c	/^static const char dash[51] = {[0 ... 49] = '=', '\\0'};$/;"	v	file:
dash	plugins/nbft/nbft-plugin.c	/^static const char dash[100] = {[0 ... 98] = '-', [99] = '\\0'};$/;"	v	file:
dash	plugins/solidigm/solidigm-log-page-dir.c	/^static const char dash[100] = {[0 ... 99] = '-'};$/;"	v	file:
dash	plugins/zns/zns.c	/^static const char dash[100] = { [0 ... 99] = '-' };$/;"	v	file:
data	nvme-rpmb.c	/^	unsigned char  data[0];    \/* in sector count times *\/$/;"	m	struct:rpmb_data_frame_t	file:
data	plugins/intel/intel-nvme.c	/^	__u32 data[1216];$/;"	m	struct:intel_lat_stats	file:
data	plugins/intel/intel-nvme.c	/^	__u64 data[9];$/;"	m	struct:optane_lat_stats	file:
data	plugins/solidigm/solidigm-latency-tracking.c	/^	__u32 data[BUCKET_LIST_SIZE_4_1];$/;"	m	struct:latency_statistics	file:
data	plugins/wdc/wdc-nvme.c	/^	__le32	data;$/;"	m	struct:wdc_c2_log_subpage_header	file:
data	plugins/wdc/wdc-nvme.c	/^	__u8	data[];$/;"	m	struct:wdc_c2_cbs_data	file:
dataFieldType	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t dataFieldType : 8;$/;"	m	struct:cod_item	file:
dataInvalid	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t dataInvalid : 1;$/;"	m	struct:cod_item	file:
data_area	plugins/solidigm/solidigm-telemetry.c	/^	int  data_area;$/;"	m	struct:config	file:
data_area_header	plugins/solidigm/solidigm-telemetry/data-area.c	/^struct data_area_header {$/;"	s	file:
data_area_id	plugins/wdc/wdc-nvme.c	/^	__le16	data_area_id;$/;"	m	struct:wdc_dui_log_section	file:
data_area_id	plugins/wdc/wdc-nvme.c	/^	__le16	data_area_id;$/;"	m	struct:wdc_dui_log_section_v2	file:
data_area_id	plugins/wdc/wdc-nvme.c	/^	__u8	data_area_id;$/;"	m	struct:wdc_dui_log_section_v4	file:
data_erase_max	plugins/wdc/wdc-nvme.c	/^	__le32  data_erase_max;                         \/* 0x41 - User Data Erase Counts           *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
data_erase_min	plugins/wdc/wdc-nvme.c	/^	__le32  data_erase_min;                         \/* 0x45 - User Data Erase Counts           *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
data_len	nvme.c	/^	__u32	data_len;$/;"	m	struct:passthru_config	file:
data_len	nvme.c	/^	__u32 data_len;$/;"	m	struct:feat_cfg	file:
data_percent_used	plugins/wdc/wdc-nvme.c	/^	__u8    data_percent_used;                      \/* 0x40 - System Data Percent Used         *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
datastr	plugins/micron/micron-nvme.c	/^	char	   datastr[128];$/;"	m	struct:logpage	file:
dayOfMonth	plugins/wdc/wdc-utils.h	/^	unsigned int dayOfMonth;$/;"	m	struct:_UtilsTimeInfo
dayOfWeek	plugins/wdc/wdc-utils.h	/^	unsigned int dayOfWeek;$/;"	m	struct:_UtilsTimeInfo
db_int_err_cnt	plugins/inspur/inspur-utils.h	/^    __u32 db_int_err_cnt;$/;"	m	struct:r1_vendor_log_s
ddr_bit_err_cout	plugins/inspur/inspur-utils.h	/^    __u32 ddr_bit_err_cout;$/;"	m	struct:r1_vendor_log_s
ddr_ecc_err_cnt	plugins/innogrit/typedef.h	/^	unsigned int ddr_ecc_err_cnt;$/;"	m	struct:vsc_smart_log
ddr_err_bit	plugins/dera/dera-nvme.c	/^	__u8 ddr_err_bit;$/;"	m	struct:nvme_dera_smart_info_log	file:
ddra_1bit_err	plugins/dera/dera-nvme.c	/^	__u8 ddra_1bit_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
ddra_2bit_err	plugins/dera/dera-nvme.c	/^	__u8 ddra_2bit_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
ddrb_1bit_err	plugins/dera/dera-nvme.c	/^	__u8 ddrb_1bit_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
ddrb_2bit_err	plugins/dera/dera-nvme.c	/^	__u8 ddrb_2bit_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
deFeatureIdList	plugins/wdc/wdc-nvme.c	/^static struct WDC_DE_CSA_FEATURE_ID_LIST deFeatureIdList[] = {$/;"	v	typeref:struct:WDC_DE_CSA_FEATURE_ID_LIST	file:
deVULogPagesList	plugins/wdc/wdc-nvme.c	/^static struct NVME_VU_DE_LOGPAGE_LIST deVULogPagesList[] = {$/;"	v	typeref:struct:NVME_VU_DE_LOGPAGE_LIST	file:
debug_log_counter_trigger	plugins/ocp/ocp-nvme.c	/^	__le16	debug_log_counter_trigger;	\/* 0x1CE *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_counter_trigger	plugins/wdc/wdc-nvme.c	/^	__le16  debug_log_counter_trigger;              \/* 0x1CE *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
debug_log_latency_stamp	plugins/ocp/ocp-nvme.c	/^	__le64	debug_log_latency_stamp;	\/* 0x1C4 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_latency_stamp	plugins/wdc/wdc-nvme.c	/^	__le64  debug_log_latency_stamp;                \/* 0x1C4 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
debug_log_measured_latency	plugins/ocp/ocp-nvme.c	/^	__le16	debug_log_measured_latency;	\/* 0x1C2 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_measured_latency	plugins/wdc/wdc-nvme.c	/^	__le16  debug_log_measured_latency;             \/* 0x1C2 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
debug_log_ptr	plugins/ocp/ocp-nvme.c	/^	__le16	debug_log_ptr;			\/* 0x1CC *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_ptr	plugins/wdc/wdc-nvme.c	/^	__le16  debug_log_ptr;                          \/* 0x1CC *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
debug_log_stamp_units	plugins/ocp/ocp-nvme.c	/^	__u8	debug_log_stamp_units;		\/* 0x1D0 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_stamp_units	plugins/wdc/wdc-nvme.c	/^	__u8    debug_log_stamp_units;                  \/* 0x1D0 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
debug_log_trigger_enable	plugins/ocp/ocp-nvme.c	/^	__le16	debug_log_trigger_enable;	\/* 0x1C0 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
debug_log_trigger_enable	plugins/ocp/ocp-nvme.c	/^	__u16 debug_log_trigger_enable;$/;"	m	struct:feature_latency_monitor	file:
debug_log_trigger_enable	plugins/wdc/wdc-nvme.c	/^	__le16  debug_log_trigger_enable;               \/* 0x1C0 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
default_show_vendor_log_c0	plugins/toshiba/toshiba-nvme.c	/^static void default_show_vendor_log_c0(struct nvme_dev *dev, __u32 nsid,$/;"	f	file:
default_value	util/argconfig.h	/^	void *default_value;$/;"	m	struct:argconfig_commandline_options
defect_cnt	plugins/innogrit/typedef.h	/^	unsigned short defect_cnt;$/;"	m	struct:vsc_smart_log
delete_all_ns	tests/nvme_test.py	/^    def delete_all_ns(self):$/;"	m	class:TestNVMe
delete_and_validate_ns	tests/nvme_test.py	/^    def delete_and_validate_ns(self, nsid):$/;"	m	class:TestNVMe
delete_ns	nvme.c	/^static int delete_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
deleted	ccan/ccan/htable/htable.h	/^	size_t elems, deleted;$/;"	m	struct:htable
dell_id_ctrl	plugins/dell/dell-nvme.c	/^static void dell_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
dell_mjr	plugins/dell/dell-nvme.c	/^	__u16		dell_mjr;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
dell_mnr	plugins/dell/dell-nvme.c	/^	__u16		dell_mnr;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
dell_ter	plugins/dell/dell-nvme.c	/^	__u16		dell_ter;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
dera_device_status	plugins/dera/dera-nvme.c	/^enum dera_device_status$/;"	g	file:
desc	plugin.h	/^	const char *desc;$/;"	m	struct:plugin
desc	plugin.h	/^	const char *desc;$/;"	m	struct:program
detach_ns	nvme.c	/^static int detach_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
detach_ns	tests/nvme_test.py	/^    def detach_ns(self, ctrl_id, nsid):$/;"	m	class:TestNVMe
detail_warning	plugins/inspur/inspur-utils.h	/^        __u32 detail_warning[2];$/;"	m	union:r1_vendor_log_s::__anon21
detail_warning_bit	plugins/inspur/inspur-utils.h	/^        vendor_warning_str detail_warning_bit;$/;"	m	union:r1_vendor_log_s::__anon21
detail_warning_his	plugins/inspur/inspur-utils.h	/^        __u32 detail_warning_his[2];$/;"	m	union:r1_vendor_log_s::__anon22
detail_warning_his_bit	plugins/inspur/inspur-utils.h	/^        vendor_warning_str detail_warning_his_bit;$/;"	m	union:r1_vendor_log_s::__anon22
detect_zns	plugins/zns/zns.c	/^static int detect_zns(nvme_ns_t ns, int *out_supported)$/;"	f	file:
dev	plugins/netapp/netapp-nvme.c	/^	char			dev[265];$/;"	m	struct:ontapdevice_info	file:
dev	plugins/netapp/netapp-nvme.c	/^	char			dev[265];$/;"	m	struct:smdevice_info	file:
dev_cap_req_guid	plugins/ocp/ocp-nvme.c	/^static __u8 dev_cap_req_guid[C4_GUID_LENGTH] = {$/;"	v	file:
dev_capabilities	plugins/wdc/wdc-nvme.c	/^	__le32  dev_capabilities;                       \/* 012 - Device Capabilities                 *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
dev_close	nvme.c	/^void dev_close(struct nvme_dev *dev)$/;"	f
dev_fd	nvme.h	70;"	d
dev_mi_ep	nvme.h	/^static inline nvme_mi_ep_t dev_mi_ep(struct nvme_dev *dev)$/;"	f
dev_path	plugins/netapp/netapp-nvme.c	/^static const char *dev_path = "\/dev\/";$/;"	v	file:
dev_recovery_action1	plugins/wdc/wdc-nvme.c	/^	__u8    dev_recovery_action1;                   \/* 003 - Device Recovery Action 1            *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
dev_recovery_action2	plugins/wdc/wdc-nvme.c	/^	__u8    dev_recovery_action2;                   \/* 029 - Device Recovery Action 2 V2         *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
dev_recovery_action2_to	plugins/wdc/wdc-nvme.c	/^	__u8    dev_recovery_action2_to;                \/* 030 - Device Recovery Action 2 Timeout V2 *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
dev_status	plugins/dera/dera-nvme.c	/^	__u8 dev_status; $/;"	m	struct:nvme_dera_smart_info_log	file:
dev_status_up	plugins/dera/dera-nvme.c	/^	__u8 dev_status_up;$/;"	m	struct:nvme_dera_smart_info_log	file:
device_capabilities	plugins/ocp/ocp-nvme.c	/^	__le32  device_capabilities;                     \/* 4 bytes      - 0x0C - 0x0F *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
device_final	nvme-models.c	/^static char *device_final;$/;"	v	file:
device_id	plugins/micron/micron-nvme.c	/^static unsigned short device_id;$/;"	v	file:
device_mid	nvme-models.c	/^static char *device_mid;$/;"	v	file:
device_recover_action_1	plugins/ocp/ocp-nvme.c	/^	__u8    device_recover_action_1;                 \/* 1 byte       - 0x03 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
device_recover_action_2	plugins/ocp/ocp-nvme.c	/^	__u8    device_recover_action_2;                 \/* 1 byte       - 0x1D *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
device_recover_action_2_timeout	plugins/ocp/ocp-nvme.c	/^	__u8    device_recover_action_2_timeout;         \/* 1 byte       - 0x1E *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
device_self_test	nvme.c	/^static int device_self_test(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
device_state	plugins/inspur/inspur-utils.h	/^    __u32 device_state;$/;"	m	struct:r1_vendor_log_s
device_top	nvme-models.c	/^static char *device_top;$/;"	v	file:
dim_cmd	nvme.c	/^static int dim_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
dim_operation	fabrics.c	/^static void dim_operation(nvme_ctrl_t c, enum nvmf_dim_tas tas, const char *name)$/;"	f	file:
dir_receive	nvme.c	/^static int dir_receive(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
dir_send	nvme.c	/^static int dir_send(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
direct	nvme.h	/^		} direct;$/;"	m	union:nvme_dev::__anon28	typeref:struct:nvme_dev::__anon28::__anon29
directive	nvme-print.h	/^	void (*directive)(__u8 type, __u8 oper, __u16 spec, __u32 nsid, __u32 result, void *buf, __u32 len);$/;"	m	struct:print_ops
disable	plugins/solidigm/solidigm-latency-tracking.c	/^	bool disable;$/;"	m	struct:config	file:
disc_ctrl_config_match	fabrics.c	/^static bool disc_ctrl_config_match(nvme_ctrl_t c, struct tr_config *trcfg)$/;"	f	file:
discard_debug_log	plugins/ocp/ocp-nvme.c	/^	__u8  discard_debug_log;$/;"	m	struct:feature_latency_monitor	file:
disconnect_all_cmd	nvme.c	/^int disconnect_all_cmd(int argc, char **argv, struct command *command,$/;"	f
disconnect_cmd	nvme.c	/^static int disconnect_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
discover_cmd	nvme.c	/^static int discover_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
discover_from_conf_file	fabrics.c	/^static int discover_from_conf_file(nvme_root_t r, nvme_host_t h,$/;"	f	file:
discover_from_json_config_file	fabrics.c	/^static int discover_from_json_config_file(nvme_root_t r, nvme_host_t h,$/;"	f	file:
discover_from_nbft	nbft.c	/^int discover_from_nbft(nvme_root_t r, char *hostnqn_arg, char *hostid_arg,$/;"	f
discovery_log	nvme-print.h	/^	void (*discovery_log)(struct nvmf_discovery_log *log, int numrec);$/;"	m	struct:print_ops
discovery_to_json	plugins/nbft/nbft-plugin.c	/^static json_object *discovery_to_json(struct nbft_info_discovery *disc)$/;"	f	file:
disk_max_temper	plugins/inspur/inspur-utils.h	/^    __u32 disk_max_temper;$/;"	m	struct:r1_vendor_log_s
disk_overtemper_cout	plugins/inspur/inspur-utils.h	/^    __u32 disk_overtemper_cout;$/;"	m	struct:r1_vendor_log_s
display_fw_activate_entry	plugins/micron/micron-nvme.c	/^static int display_fw_activate_entry(int entry_count, struct fw_activation_history_entry *entry,$/;"	f	file:
do_admin_args_op	nvme-wrap.c	39;"	d	file:
do_admin_op	nvme-wrap.c	21;"	d	file:
domainid	nvme.c	/^static const char *domainid = "Domain Identifier";$/;"	v	file:
doper	nvme.c	/^static const char *doper = "directive operation";$/;"	v	file:
double_table	ccan/ccan/htable/htable.c	/^static COLD bool double_table(struct htable *ht)$/;"	f	file:
double_val	unit/test-argconfig-parse.c	/^	double double_val;$/;"	m	struct:cfg	file:
double_val	unit/test-argconfig-parse.c	/^	double double_val;$/;"	m	union:val	file:
double_val	util/argconfig.h	/^	double double_val;$/;"	m	union:argconfig_val
driver1	ccan/ccan/hash/hash.c	/^void driver1()$/;"	f
driver2	ccan/ccan/hash/hash.c	/^void driver2()$/;"	f
driver3	ccan/ccan/hash/hash.c	/^void driver3()$/;"	f
driver4	ccan/ccan/hash/hash.c	/^ void driver4()$/;"	f
dry	nvme.c	/^static const char *dry = "show command instead of sending";$/;"	v	file:
dry_run	nvme.c	/^	bool	dry_run;$/;"	m	struct:passthru_config	file:
dsm	nvme.c	/^static int dsm(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
dsm	tests/nvme_dsm_test.py	/^    def dsm(self):$/;"	m	class:TestNVMeDsm
dsm_cmd_support	plugins/ocp/ocp-nvme.c	/^	__le16  dsm_cmd_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
dsm_support	plugins/wdc/wdc-nvme.c	/^	__le16  dsm_support;                           \/* 0008 - Dataset Management Command Support  *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
dspec_w_dtype	nvme.c	/^static const char *dspec_w_dtype = "directive specification associated with directive type";$/;"	v	file:
dssdSpecVerErrata	plugins/seagate/seagate-diag.h	/^    __u8            dssdSpecVerErrata;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
dssdSpecVerMajor	plugins/seagate/seagate-diag.h	/^    __u8            dssdSpecVerMajor;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
dssdSpecVerMinor	plugins/seagate/seagate-diag.h	/^    __u16           dssdSpecVerMinor;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
dssdSpecVerPoint	plugins/seagate/seagate-diag.h	/^    __u16           dssdSpecVerPoint;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
dssd_ps_descr	plugins/wdc/wdc-nvme.c	/^	__u8    dssd_ps_descr[WDC_OCP_C4_NUM_PS_DESCR];\/* 0017 - DSSD Power State Descriptors        *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
dssd_pwr_state_desc	plugins/ocp/ocp-nvme.c	/^	__u8    dssd_pwr_state_desc[128];$/;"	m	struct:ocp_device_capabilities_log_page	file:
dtype	nvme.c	/^static const char *dtype = "directive type";$/;"	v	file:
dump_assert_logs	plugins/solidigm/solidigm-internal-logs.c	/^static int dump_assert_logs(struct nvme_dev *dev, struct config cfg)$/;"	f	file:
dump_config	fabrics.c	/^static bool dump_config;$/;"	v	file:
dump_event_logs	plugins/solidigm/solidigm-internal-logs.c	/^static int dump_event_logs(struct nvme_dev *dev, struct config cfg)$/;"	f	file:
dump_nlogs	plugins/solidigm/solidigm-internal-logs.c	/^static int dump_nlogs(struct nvme_dev *dev, struct config cfg, int core)$/;"	f	file:
dump_telemetry	plugins/solidigm/solidigm-internal-logs.c	/^static int dump_telemetry(struct nvme_dev *dev, struct config cfg, enum telemetry_type ttype)$/;"	f	file:
e1_log_page	plugins/micron/micron-nvme.c	/^e1_log_page[] = {$/;"	v	typeref:struct:micron_vs_logpage
e2e_check_err_cnt1	plugins/inspur/inspur-utils.h	/^    __u32 e2e_check_err_cnt1;$/;"	m	struct:r1_vendor_log_s
e2e_check_err_cnt2	plugins/inspur/inspur-utils.h	/^    __u32 e2e_check_err_cnt2;$/;"	m	struct:r1_vendor_log_s
e2e_check_err_cnt3	plugins/inspur/inspur-utils.h	/^    __u32 e2e_check_err_cnt3;$/;"	m	struct:r1_vendor_log_s
e2e_check_err_cnt4	plugins/inspur/inspur-utils.h	/^    __u32 e2e_check_err_cnt4;$/;"	m	struct:r1_vendor_log_s
e2e_err_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	e2e_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
e2e_err_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item e2e_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
e2e_error_counter	plugins/wdc/wdc-nvme.c	/^	__le64		e2e_error_counter;$/;"	m	struct:wdc_nand_stats	file:
eDriveModel	plugins/micron/micron-nvme.c	/^enum eDriveModel {$/;"	g	file:
ebb_count	plugins/inspur/inspur-utils.h	/^    __u32 ebb_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
ecc_error_count	plugins/wdc/wdc-nvme.c	/^	__le64  ecc_error_count;                        \/* 0x30 - Soft ECC Error Count             *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
ecrcErrorStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 ecrcErrorStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
edumps	plugins/intel/intel-nvme.c	/^	struct intel_event_dump edumps[0];$/;"	m	struct:intel_event_header	typeref:struct:intel_event_header::intel_event_dump	file:
edumps	plugins/solidigm/solidigm-internal-logs.c	/^	struct event_dump_instance edumps[0];$/;"	m	struct:event_dump_header	typeref:struct:event_dump_header::event_dump_instance	file:
effects	nvme-print.h	/^	struct nvme_cmd_effects_log effects;$/;"	m	struct:nvme_effects_log_node	typeref:struct:nvme_effects_log_node::nvme_cmd_effects_log
effects_log_list	nvme-print.h	/^	void (*effects_log_list)(struct list_head *list);$/;"	m	struct:print_ops
elapsed_utime	nvme.c	/^unsigned long long elapsed_utime(struct timeval start_time,$/;"	f
elems	ccan/ccan/htable/htable.h	/^	size_t elems, deleted;$/;"	m	struct:htable
enable	plugins/solidigm/solidigm-latency-tracking.c	/^	bool enable;$/;"	m	struct:config	file:
enable_lat_stats_tracking	plugins/intel/intel-nvme.c	/^static int enable_lat_stats_tracking(int argc, char **argv,$/;"	f	file:
enduranceEstimate	plugins/seagate/seagate-diag.h	/^    U128            enduranceEstimate;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
endurance_estimate	plugins/wdc/wdc-nvme.c	/^	__u8		endurance_estimate[16];$/;"	m	struct:wdc_nand_stats_V3	file:
endurance_group_event_agg_log	nvme-print.h	/^	void (*endurance_group_event_agg_log)(struct nvme_aggregate_predictable_lat_event *endurance_log, __u64 log_entries, __u32 size, const char *devname);$/;"	m	struct:print_ops
endurance_group_list	nvme-print.h	/^	void (*endurance_group_list)(struct nvme_id_endurance_group_list *endgrp_list);$/;"	m	struct:print_ops
endurance_log	nvme-print.h	/^	void (*endurance_log)(struct nvme_endurance_group_log *endurance_group, __u16 group_id, const char *devname);$/;"	m	struct:print_ops
entireDword	plugins/intel/intel-nvme.c	/^		__u32 entireDword;$/;"	m	union:intel_cd_log::__anon25	file:
entire_progress_current	plugins/wdc/wdc-nvme.c	/^	__le32 entire_progress_current;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
entire_progress_total	plugins/wdc/wdc-nvme.c	/^	__le32 entire_progress_total;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
entries	plugins/micron/micron-nvme.c	/^	struct fw_activation_history_entry entries[20];$/;"	m	struct:micron_fw_activation_history_table	typeref:struct:micron_fw_activation_history_table::fw_activation_history_entry	file:
entries	plugins/ocp/ocp-fw-activation-history.c	/^	struct fw_activation_history_entry entries[20];$/;"	m	struct:fw_activation_history	typeref:struct:fw_activation_history::fw_activation_history_entry	file:
entry	plugins/wdc/wdc-nvme.c	/^	struct		wdc_fw_act_history_log_entry_c2 entry[WDC_MAX_NUM_ACT_HIST_ENTRIES];$/;"	m	struct:wdc_fw_act_history_log_format_c2	typeref:struct:wdc_fw_act_history_log_format_c2::wdc_fw_act_history_log_entry_c2	file:
entryLen	plugins/seagate/seagate-diag.h	/^    __u8    entryLen;$/;"	m	struct:_stx_fw_activ_his_ele
entryVerNum	plugins/seagate/seagate-diag.h	/^    __u8    entryVerNum;$/;"	m	struct:_stx_fw_activ_his_ele
entry_id	plugins/wdc/wdc-nvme.c	/^	__le32	entry_id;$/;"	m	struct:wdc_c2_log_subpage_header	file:
entry_is_valid	ccan/ccan/htable/htable.c	/^static inline bool entry_is_valid(uintptr_t e)$/;"	f	file:
entry_len	plugins/wdc/wdc-nvme.c	/^	__u8		entry_len;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
entry_length	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 entry_length;$/;"	m	struct:fw_activation_history_entry	file:
entry_num	plugins/wdc/wdc-nvme.c	/^	__le32 entry_num;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
entry_size	plugins/wdc/wdc-nvme.c	/^	__le32 entry_size;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
entry_version_num	plugins/wdc/wdc-nvme.c	/^	__u8		entry_version_num;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
eol_plp_failure_mode	plugins/ocp/ocp-nvme.c	/^static int eol_plp_failure_mode(int argc, char **argv, struct command *cmd,$/;"	f	file:
eol_plp_failure_mode_get	plugins/ocp/ocp-nvme.c	/^static int eol_plp_failure_mode_get(struct nvme_dev *dev, const __u32 nsid,$/;"	f	file:
eol_plp_failure_mode_set	plugins/ocp/ocp-nvme.c	/^static int eol_plp_failure_mode_set(struct nvme_dev *dev, const __u32 nsid,$/;"	f	file:
eol_plp_failure_mode_to_string	plugins/ocp/ocp-nvme.c	/^static const char *eol_plp_failure_mode_to_string(__u8 mode)$/;"	f	file:
ep	nvme.h	/^			nvme_mi_ep_t ep;$/;"	m	struct:nvme_dev::__anon28::__anon30
eras_badblk_num	plugins/inspur/inspur-utils.h	/^    __u32 eras_badblk_num;$/;"	m	struct:r1_vendor_log_ncm_cout
erase_error_cnt	plugins/innogrit/typedef.h	/^	unsigned int erase_error_cnt;$/;"	m	struct:vsc_smart_log
erase_fail_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	erase_fail_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
erase_fail_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item erase_fail_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
erase_fail_count	plugins/wdc/wdc-nvme.c	/^	__u8		erase_fail_count[8];$/;"	m	struct:wdc_nand_stats_V3	file:
erase_timeout_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item erase_timeout_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
error_log	nvme-print.h	/^	void (*error_log)(struct nvme_error_log_page *err_log, int entries, const char *devname);$/;"	m	struct:print_ops
error_recovery_guid	plugins/ocp/ocp-nvme.c	/^static __u8 error_recovery_guid[C1_GUID_LENGTH] = {$/;"	v	file:
essentialType	plugins/wdc/wdc-nvme.c	/^	enum WDC_DRIVE_ESSENTIAL_TYPE essentialType;$/;"	m	struct:WDC_DRIVE_ESSENTIALS	typeref:enum:WDC_DRIVE_ESSENTIALS::WDC_DRIVE_ESSENTIAL_TYPE	file:
est_offset	plugins/intel/intel-nvme.c	/^	__le64	est_offset;$/;"	m	struct:intel_temp_stats	file:
etoeCrrCnt	plugins/seagate/seagate-diag.h	/^    __u64           etoeCrrCnt;         $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
eventIdValidity	plugins/intel/intel-nvme.c	/^	__u8  eventIdValidity[16];$/;"	m	struct:intel_event_dump	file:
eventIdValidity	plugins/solidigm/solidigm-internal-logs.c	/^	__u8  eventIdValidity[16];$/;"	m	struct:event_dump_instance	file:
event_dump_header	plugins/solidigm/solidigm-internal-logs.c	/^struct event_dump_header {$/;"	s	file:
event_dump_instance	plugins/solidigm/solidigm-internal-logs.c	/^struct event_dump_instance {$/;"	s	file:
eventidoffset	plugins/intel/intel-nvme.c	/^	__u32 eventidoffset[16];$/;"	m	struct:intel_event_dump	file:
eventidoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 eventidoffset[16];$/;"	m	struct:event_dump_instance	file:
eventidsize	plugins/intel/intel-nvme.c	/^	__u32 eventidsize;$/;"	m	struct:intel_event_header	file:
eventidsize	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 eventidsize;$/;"	m	struct:event_dump_header	file:
eventlog	plugins/innogrit/typedef.h	/^struct eventlog {$/;"	s
eventlog_addindex	plugins/innogrit/typedef.h	/^struct eventlog_addindex {$/;"	s
evlg_flush_hdr	plugins/innogrit/typedef.h	/^struct evlg_flush_hdr {$/;"	s
exec_cmd	tests/nvme_test.py	/^    def exec_cmd(self, cmd):$/;"	m	class:TestNVMe
exp	unit/test-argconfig-parse.c	/^	union val exp;$/;"	m	struct:toval_test	typeref:union:toval_test::val	file:
exp	unit/test-suffix-binary-parse.c	/^	const uint64_t exp;$/;"	m	struct:tonum_test	file:
exp	unit/test-suffix-si-parse.c	/^	const uint64_t exp;$/;"	m	struct:tonum_test	file:
exp	unit/test-uint128-si.c	/^	const char *exp;$/;"	m	struct:tostr_test	file:
exp	unit/test-uint128.c	/^	const char *exp;$/;"	m	struct:tostr_test	file:
expect	ccan/ccan/likely/likely.c	/^	bool expect;$/;"	m	struct:trace	file:
exponent	util/suffix.c	/^	unsigned int exponent;$/;"	m	struct:si_suffix	file:
ext_smart_avec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_avec;				\/* 124 Average Erase counts (SLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_avudec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_avudec;				\/* 100 Average User data erase counts (TLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_bbpg	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_bbpg;				\/* 198 Background Back-Pressure Gauge *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_bsnbc	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_bsnbc[8];			\/* 218 Bad system nand block count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_bunbc	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_bunbc[8];			\/* 032 Bad user nand block count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_dcc	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_dcc[16];			\/* 172 Deallocate Commands Completed *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_eece	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_eece;				\/* 056 End to end corrected errors *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_eede	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_eede;				\/* 064 End to end detected errors *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_eest	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_eest[16];			\/* 226 Endurance estimate *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_eeue	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_eeue;				\/* 072 End to end uncorrected errors *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_efc	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_efc[8];				\/* 140 Erase fail count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_err	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_err;				\/* 306 Boot SSD errata version field *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_fcc	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_fcc;				\/* 196 Format NVM Commands Completed *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_ftlus	plugins/wdc/wdc-nvme.c	/^	__u32 ext_smart_ftlus;				\/* 308 FTL Unit Size *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_guid	plugins/wdc/wdc-nvme.c	/^static __u8 ext_smart_guid[WDC_C0_GUID_LENGTH] = {$/;"	v	file:
ext_smart_lpg	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_lpg[16];			\/* 496 Log page GUID *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_lpv	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_lpv;				\/* 494 Log page version - 0x0001 *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_maj	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_maj;				\/* 300 Boot SSD major version field *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_min	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_min;				\/* 302 Boot SSD minor version field *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_mnec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_mnec;				\/* 108 Min Erase counts (SLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_mnudec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_mnudec;				\/* 084 Min User data erase counts (TLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_mxec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_mxec;				\/* 116 Max Erase counts (SLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_mxudec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_mxudec;				\/* 092 Max User data erase counts (TLC) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pcec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_pcec;				\/* 148 PCIe correctable error count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pfbs	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pfbs;				\/* 168 Percent free blocks (System) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pfbu	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pfbu;				\/* 156 Percent free blocks (User) *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pfc	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pfc[8];				\/* 132 Program fail count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_plrc	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_plrc;				\/* 284 PCIe Link Retraining Count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pmur	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pmur[16];			\/* 252 Physical media units read *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pmuws	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pmuws[16];			\/* 016 Physical media units written SLC *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pmuwt	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_pmuwt[16];			\/* 000 Physical media units written TLC *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pscc	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_pscc;				\/* 292 Power State Change Count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_pt	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_pt;				\/* 304 Boot SSD point version field *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rfsc	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_rfsc;				\/* 210 Refresh count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd1	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd1[3];			\/* 081 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd2	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd2[3];			\/* 157 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd3	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd3[3];			\/* 169 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd4	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd4[3];			\/* 199 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd5	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd5[4];			\/* 280 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rsvd6	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_rsvd6[178];			\/* 316 reserved *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_rtoc	plugins/wdc/wdc-nvme.c	/^	__u32 ext_smart_rtoc;				\/* 268 Read command timeout count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_sdpu	plugins/wdc/wdc-nvme.c	/^	__u8  ext_smart_sdpu;				\/* 080 System data percent used *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_seec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_seec;				\/* 202 Soft ECC error count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_svn	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_svn;				\/* 160 Security Version Number *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_tcgos	plugins/wdc/wdc-nvme.c	/^	__u32 ext_smart_tcgos;				\/* 312 TCG Ownership Status *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_tnu	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_tnu;				\/* 188 Total Namespace Utilization  *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_ttc	plugins/wdc/wdc-nvme.c	/^	__u16 ext_smart_ttc;				\/* 242 Thermal throttling count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_ttoc	plugins/wdc/wdc-nvme.c	/^	__u32 ext_smart_ttoc;				\/* 276 Trim command timeout count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_uio	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_uio;				\/* 244 Unaligned I\/O *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_urec	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_urec;				\/* 048 Uncorrectable read error count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_wtoc	plugins/wdc/wdc-nvme.c	/^	__u32 ext_smart_wtoc;				\/* 272 Write command timeout count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
ext_smart_xrc	plugins/wdc/wdc-nvme.c	/^	__u64 ext_smart_xrc;				\/* 040 XOR recovery count *\/$/;"	m	struct:wdc_nvme_ext_smart_log	file:
extended_smart_attributes	plugins/seagate/seagate-diag.h	/^} extended_smart_attributes;$/;"	t	typeref:enum:__anon1
extendible_user_cap_lba_count	plugins/scaleflux/sfx-nvme.c	/^	__u64 extendible_user_cap_lba_count;$/;"	m	struct:sfx_freespace_ctx	file:
extensions	plugin.h	/^	struct plugin *extensions;$/;"	m	struct:program	typeref:struct:program::plugin
extract_dump_get_log	plugins/ocp/ocp-nvme.c	/^static int extract_dump_get_log(struct nvme_dev *dev, char *featurename, char *filename, char *sn,$/;"	f	file:
eye_catcher	plugins/wdc/wdc-nvme.c	/^	__le32  eye_catcher;$/;"	m	struct:wdc_e6_log_hdr	file:
eye_catcher	plugins/wdc/wdc-nvme.c	/^	__le32 eye_catcher;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
fPRINT_PARAM1	plugins/memblaze/memblaze-utils.h	201;"	d
fPRINT_PARAM2	plugins/memblaze/memblaze-utils.h	209;"	d
fallthrough	.build/config.h	48;"	d
fb_log_page	plugins/micron/micron-nvme.c	/^fb_log_page[] = {$/;"	v	typeref:struct:micron_vs_logpage
fbb_count	plugins/inspur/inspur-utils.h	/^    __u32 fbb_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
fd	nvme.h	/^			int fd;$/;"	m	struct:nvme_dev::__anon28::__anon29
fd	plugins/solidigm/solidigm-latency-tracking.c	/^	int fd;$/;"	m	struct:latency_tracker	file:
fdeviceid1	plugins/micron/micron-nvme.c	/^static char *fdeviceid1 = "\/sys\/class\/nvme\/nvme%d\/device\/device";$/;"	v	file:
fdeviceid2	plugins/micron/micron-nvme.c	/^static char *fdeviceid2 = "\/sys\/class\/misc\/nvme%d\/device\/device";$/;"	v	file:
fdp_config_log	nvme-print.h	/^	void (*fdp_config_log)(struct nvme_fdp_config_log *log, size_t len);$/;"	m	struct:print_ops
fdp_configs	plugins/fdp/fdp.c	/^static int fdp_configs(int argc, char **argv, struct command *cmd,$/;"	f	file:
fdp_event_log	nvme-print.h	/^	void (*fdp_event_log)(struct nvme_fdp_events_log *log);$/;"	m	struct:print_ops
fdp_events	plugins/fdp/fdp.c	/^static int fdp_events(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_ruh_status	nvme-print.h	/^	void (*fdp_ruh_status)(struct nvme_fdp_ruh_status *status, size_t len);$/;"	m	struct:print_ops
fdp_set_events	plugins/fdp/fdp.c	/^static int fdp_set_events(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_stats	plugins/fdp/fdp.c	/^static int fdp_stats(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_stats_log	nvme-print.h	/^	void (*fdp_stats_log)(struct nvme_fdp_stats_log *log);$/;"	m	struct:print_ops
fdp_status	plugins/fdp/fdp.c	/^static int fdp_status(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_update	plugins/fdp/fdp.c	/^static int fdp_update(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_usage	plugins/fdp/fdp.c	/^static int fdp_usage(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fdp_usage_log	nvme-print.h	/^	void (*fdp_usage_log)(struct nvme_fdp_ruhu_log *log, size_t len);$/;"	m	struct:print_ops
feat_cfg	nvme.c	/^struct feat_cfg {$/;"	s	file:
featureId	plugins/wdc/wdc-nvme.c	/^	enum NVME_FEATURE_IDENTIFIERS featureId;$/;"	m	struct:WDC_DE_CSA_FEATURE_ID_LIST	typeref:enum:WDC_DE_CSA_FEATURE_ID_LIST::NVME_FEATURE_IDENTIFIERS	file:
featureName	plugins/wdc/wdc-nvme.c	/^	__u8 featureName[WDC_DE_GENERIC_BUFFER_SIZE];$/;"	m	struct:WDC_DE_CSA_FEATURE_ID_LIST	file:
feature_id	nvme.c	/^	enum nvme_features_id feature_id;$/;"	m	struct:feat_cfg	typeref:enum:feat_cfg::nvme_features_id	file:
feature_latency_monitor	plugins/ocp/ocp-nvme.c	/^struct __packed feature_latency_monitor {$/;"	s	file:
feature_status	plugins/ocp/ocp-nvme.c	/^	__u8	feature_status;			\/* 0x00 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
feature_status	plugins/wdc/wdc-nvme.c	/^	__u8    feature_status;                         \/* 0x00 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
fid_supported_effects_log	nvme-print.h	/^	void (*fid_supported_effects_log)(struct nvme_fid_supported_effects_log *fid_log, const char *devname);$/;"	m	struct:print_ops
field	plugins/micron/micron-nvme.c	/^	char *field;$/;"	m	struct:micron_vs_logpage	file:
field	plugins/micron/micron-nvme.c	/^	const char *field;$/;"	m	struct:logpage	file:
field_id	plugins/wdc/wdc-nvme.c	/^	__u8	field_id;$/;"	m	struct:wdc_bd_ca_log_format	file:
fields	plugins/intel/intel-nvme.c	/^		} fields;$/;"	m	union:intel_cd_log::__anon25	typeref:struct:intel_cd_log::__anon25::__anon26	file:
file	ccan/ccan/likely/likely.c	/^	const char *file;$/;"	m	struct:trace	file:
file	unit/test-argconfig-parse.c	/^	char *file;$/;"	m	struct:cfg	file:
file	unit/test-argconfig-parse.c	/^	char *file;$/;"	m	union:val	file:
fileID	plugins/wdc/wdc-nvme.c	/^	__u16 fileID;$/;"	m	struct:WDC_DE_VU_FILE_META_DATA	file:
fileName	plugins/wdc/wdc-nvme.c	/^	__u8 fileName[WDC_DE_FILE_NAME_SIZE];$/;"	m	struct:WDC_DE_VU_FILE_META_DATA	file:
fileName	plugins/wdc/wdc-nvme.c	/^	char fileName[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
fileSize	plugins/wdc/wdc-nvme.c	/^	__u64 fileSize;$/;"	m	struct:WDC_DE_VU_FILE_META_DATA	file:
file_prefix	plugins/solidigm/solidigm-internal-logs.c	/^	char *file_prefix;$/;"	m	struct:config	file:
filter_out_flags	nvme.c	/^static int filter_out_flags(int status)$/;"	f	file:
final	ccan/ccan/hash/hash.c	165;"	d	file:
find_data	nvme-models.c	/^static char *find_data(char *data)$/;"	f	file:
find_deadbeef	plugins/memblaze/memblaze-nvme.c	/^static int find_deadbeef(char *buf)$/;"	f	file:
finish_zone	plugins/zns/zns.c	/^static int finish_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
firmware_loss	plugins/inspur/inspur-utils.h	/^    __u32 firmware_loss : 1;$/;"	m	struct:vendor_warning_bit
first_erase_failure_cnt	plugins/wdc/wdc-nvme.c	/^	__le16 first_erase_failure_cnt;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
fixup_table_common	ccan/ccan/htable/htable.c	/^static COLD void fixup_table_common(struct htable *ht, uintptr_t maskdiff)$/;"	f	file:
flag	unit/test-argconfig-parse.c	/^	bool flag;$/;"	m	struct:cfg	file:
flag	unit/test-argconfig-parse.c	/^	bool flag;$/;"	m	union:val	file:
flag	util/argconfig.h	/^	bool flag;$/;"	m	union:argconfig_val
flags	nvme-print.h	/^	enum nvme_print_flags flags;$/;"	m	struct:print_ops	typeref:enum:print_ops::nvme_print_flags
flags	nvme.c	/^	__u8	flags;$/;"	m	struct:passthru_config	file:
flags	plugins/micron/micron-nvme.c	/^	uint8_t  flags;$/;"	m	struct:micron_common_log_header	file:
flash_type	plugins/innogrit/typedef.h	/^	u_char flash_type;$/;"	m	struct:vsc_smart_log
flowControlErrorStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 flowControlErrorStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
flush	tests/nvme_test_logger.py	/^    def flush(self):$/;"	m	class:TestNVMeLogger
flush_cmd	nvme.c	/^static int flush_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fmt	unit/test-argconfig-parse.c	/^	char *fmt;$/;"	m	struct:cfg	file:
fmt	unit/test-argconfig-parse.c	/^	char *fmt;$/;"	m	union:val	file:
fmt1	nvme-models.c	/^static char fmt1[78];$/;"	v	file:
fmt2	nvme-models.c	/^static char fmt2[78];$/;"	v	file:
fmt3	nvme-models.c	/^static char fmt3[78];$/;"	v	file:
fmt4	nvme-models.c	/^static char fmt4[78];$/;"	v	file:
fmt5	nvme-models.c	/^static char fmt5[78];$/;"	v	file:
fn	plugin.h	/^	int (*fn)(int argc, char **argv, struct command *command, struct plugin *plugin);$/;"	m	struct:command
force_gc_count	plugins/inspur/inspur-utils.h	/^    __u32 force_gc_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
force_unit_access	nvme.c	/^static const char *force_unit_access = "force device to commit data before command completes";$/;"	v	file:
format	plugins/huawei/huawei-nvme.c	/^static void format(char *formatter, size_t fmt_sz, char *tofmt, size_t tofmtsz)$/;"	f	file:
format_all	nvme-models.c	/^static void format_all(char *save, char *vendor, char *device)$/;"	f	file:
format_and_print	nvme-models.c	/^static void format_and_print(char *save)$/;"	f	file:
format_cmd	nvme.c	/^static int format_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
formater_main	tests/run_py_linters.py	/^def formater_main() -> None:$/;"	f
formats_find	plugins/solidigm/solidigm-telemetry/nlog.c	/^static int formats_find(struct json_object *formats, uint32_t val, struct json_object **format)$/;"	f	file:
freeBlocks	plugins/seagate/seagate-diag.h	/^    __u8            freeBlocks;         $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
free_all	nvme-models.c	/^static void free_all(void)$/;"	f	file:
free_blk_num1	plugins/inspur/inspur-utils.h	/^    __u32 free_blk_num1;$/;"	m	struct:r1_wearlvl_vendor_log_count
free_blk_num2	plugins/inspur/inspur-utils.h	/^    __u32 free_blk_num2;$/;"	m	struct:r1_wearlvl_vendor_log_count
free_nbfts	nbft.c	/^void free_nbfts(struct list_head *nbft_list)$/;"	f
free_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 free_space;$/;"	m	struct:nvme_capacity_info	file:
free_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 free_space;$/;"	m	struct:sfx_freespace_ctx	file:
friendly_change_cap_support	plugins/scaleflux/sfx-nvme.c	/^	__u64 friendly_change_cap_support;$/;"	m	struct:sfx_freespace_ctx	file:
full_rebuild_cnt0	plugins/dera/dera-nvme.c	/^	__u8 full_rebuild_cnt0[4];$/;"	m	struct:nvme_dera_smart_info_log	file:
full_rebuild_cnt1	plugins/dera/dera-nvme.c	/^	__u8 full_rebuild_cnt1[4];$/;"	m	struct:nvme_dera_smart_info_log	file:
fused_operation_support	plugins/ocp/ocp-nvme.c	/^	__le16  fused_operation_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
fused_support	plugins/wdc/wdc-nvme.c	/^	__le16  fused_support;                         \/* 0012 - Fused Operation Support             *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
fvendorid1	plugins/micron/micron-nvme.c	/^static char *fvendorid1 = "\/sys\/class\/nvme\/nvme%d\/device\/vendor";$/;"	v	file:
fvendorid2	plugins/micron/micron-nvme.c	/^static char *fvendorid2 = "\/sys\/class\/misc\/nvme%d\/device\/vendor";$/;"	v	file:
fwActHisEnt	plugins/seagate/seagate-diag.h	/^   stx_fw_activ_his_ele     fwActHisEnt[20];$/;"	m	struct:_stx_fw_activ_history_log_page
fwActivCnt	plugins/seagate/seagate-diag.h	/^    __u16   fwActivCnt;$/;"	m	struct:_stx_fw_activ_his_ele
fw_act_hist_entries	plugins/wdc/wdc-nvme.c	/^	__le16		fw_act_hist_entries;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
fw_activation_history	plugins/ocp/ocp-fw-activation-history.c	/^struct __packed fw_activation_history {$/;"	s	file:
fw_activation_history	plugins/solidigm/solidigm-nvme.c	/^static int fw_activation_history(int argc, char **argv, struct command *cmd,$/;"	f	file:
fw_activation_history_entry	plugins/micron/micron-nvme.c	/^struct __packed fw_activation_history_entry {$/;"	s	file:
fw_activation_history_entry	plugins/ocp/ocp-fw-activation-history.c	/^struct __packed fw_activation_history_entry {$/;"	s	file:
fw_activation_history_log	plugins/ocp/ocp-nvme.c	/^static int fw_activation_history_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
fw_commit	nvme.c	/^static int fw_commit(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fw_commit_print_mud	nvme.c	/^static void fw_commit_print_mud(struct nvme_dev *dev, __u32 result)$/;"	f	file:
fw_commit_support_mud	nvme.c	/^static bool fw_commit_support_mud(struct nvme_dev *dev)$/;"	f	file:
fw_download	nvme.c	/^static int fw_download(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
fw_download_single	nvme.c	/^static int fw_download_single(struct nvme_dev *dev, void *fw_buf,$/;"	f	file:
fw_loader_version	plugins/dera/dera-nvme.c	/^	__u8 fw_loader_version[8]; $/;"	m	struct:nvme_dera_smart_info_log	file:
fw_log	nvme-print.h	/^	void (*fw_log)(struct nvme_firmware_slot *fw_log, const char *devname);$/;"	m	struct:print_ops
fw_slot_version	plugins/dera/dera-nvme.c	/^	__u8 fw_slot_version[8]; $/;"	m	struct:nvme_dera_smart_info_log	file:
fw_type	plugins/innogrit/typedef.h	/^	unsigned int fw_type : 8;$/;"	m	struct:evlg_flush_hdr
fw_ver	plugins/innogrit/typedef.h	/^	unsigned int fw_ver[2];$/;"	m	struct:evlg_flush_hdr
fwver	plugins/innogrit/typedef.h	/^	char fwver[8];$/;"	m	struct:cdump_pack
garbage_control_collection_log	plugins/solidigm/solidigm-garbage-collection.c	/^struct garbage_control_collection_log {$/;"	s	file:
gc_item	plugins/solidigm/solidigm-garbage-collection.c	/^struct __packed gc_item {$/;"	s	file:
gc_read_count	plugins/inspur/inspur-utils.h	/^    __u32 gc_read_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
gc_write_count	plugins/inspur/inspur-utils.h	/^    __u32 gc_write_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
gc_write_fail_count	plugins/inspur/inspur-utils.h	/^    __u32 gc_write_fail_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
gen_dhchap_key	nvme.c	/^static int gen_dhchap_key(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
gen_hostnqn_cmd	nvme.c	/^static int gen_hostnqn_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
gen_tls_key	nvme.c	/^static int gen_tls_key(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
general_help	plugin.c	/^void general_help(struct plugin *plugin)$/;"	f
getBadblock	plugins/transcend/transcend-nvme.c	/^static int getBadblock(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
getHealthValue	plugins/transcend/transcend-nvme.c	/^static int getHealthValue(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
getOemDataMapDescription	plugins/solidigm/solidigm-telemetry/cod.c	/^static const char *getOemDataMapDescription(uint32_t id)$/;"	f	file:
getText	Documentation/nvme-admin-passthru.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ana-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-attach-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-boot-part-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-capacity-mgmt.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-changed-ns-list-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-check-dhchap-key.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-cmdset-ind-id-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-compare.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-connect-all.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-connect.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-copy.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-create-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-delete-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-dera-stat.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-detach-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-device-self-test.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-dim.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-dir-receive.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-dir-send.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-disconnect-all.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-disconnect.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-discover.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-dsm.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-effects-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-endurance-event-agg-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-endurance-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-error-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-configs.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-events.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-set-events.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-status.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-update.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fdp-usage.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fid-support-effects-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-flush.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-format.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fw-commit.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fw-download.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-fw-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-gen-dhchap-key.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-gen-hostnqn.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-get-feature.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-get-lba-status.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-get-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-get-ns-id.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-get-property.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-help.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-huawei-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-huawei-list.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-domain.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-iocs.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-ns-lba-format.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-id-nvmset.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-inspur-nvme-vendor-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-internal-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-lat-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-market-name.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-smart-log-add.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-intel-temp-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-io-mgmt-recv.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-io-mgmt-send.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-io-passthru.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-lba-status-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-list-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-list-endgrp.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-list-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-list-subsys.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-list.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-lockdown.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-media-unit-stat-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-mi-cmd-support-effects-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-clear-pcie-errors.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-internal-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-nand-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-pcie-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-selective-download.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-micron-temperature-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-netapp-ontapdevices.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-netapp-smdevices.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ns-descs.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ns-rescan.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-nvm-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-nvm-id-ns-lba-format.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-nvm-id-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-nvme-mi-recv.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-nvme-mi-send.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ocp-clear-fw-activate-history.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ocp-clear-pcie-correctable-error-counters.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ocp-eol-plp-failure-mode.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ocp-latency-monitor-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-ocp-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-persistent-event-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-pred-lat-event-agg-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-predictable-lat-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-primary-ctrl-caps.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-read.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-reset.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-resv-acquire.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-resv-notif-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-resv-register.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-resv-release.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-resv-report.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-rpmb.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-sanitize-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-sanitize.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-clear-fw-activate-history.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-clear-pcie-correctable-errors.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-cloud-SSD-plugin-version.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-get-ctrl-tele.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-get-host-tele.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-help.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-plugin-version.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-version.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-fw-activate-history.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-internal-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-log-page-sup.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-pcie-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-seagate-vs-temperature-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-security-recv.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-security-send.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-self-test-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-set-feature.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-set-property.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-show-hostnqn.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-show-regs.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-show-topology.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-smart-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-subsystem-reset.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-supported-log-pages.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-telemetry-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-toshiba-clear-pcie-correctable-errors.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-toshiba-vs-internal-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-toshiba-vs-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-transcend-badblock.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-transcend-healthvalue.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-verify.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-virtium-save-smart-to-vtview-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-virtium-show-identify.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-cap-diag.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-capabilities.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-clear-assert-dump.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-clear-fw-activate-history.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-clear-pcie-corr.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-clear-pcie-correctable-errors.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-cloud-SSD-plugin-version.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-cloud-boot-SSD-version.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-drive-essentials.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-drive-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-drive-resize.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-enc-get-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-crash-dump.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-dev-capabilities-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-drive-status.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-error-recovery-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-latency-monitor-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-pfail-dump.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-get-unsupported-reqs-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-log-page-directory.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-namespace-resize.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-purge-monitor.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-purge.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-cloud-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-device-waf.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-drive-info.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-error-reason-identifier.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-fw-activate-history.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-hw-rev-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-internal-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-nand-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-smart-add-log.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-telemetry-controller-option.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-wdc-vs-temperature-stats.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-write-uncor.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-write-zeroes.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-write.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-changed-zone-list.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-close-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-finish-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-id-ctrl.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-id-ns.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-offline-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-open-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-report-zones.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-reset-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-set-zone-desc.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-zone-append.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-zone-mgmt-recv.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-zone-mgmt-send.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme-zns-zrwa-flush-zone.html	/^  function getText(el) {$/;"	f
getText	Documentation/nvme.html	/^  function getText(el) {$/;"	f
get_additional_feature	plugins/shannon/shannon-nvme.c	/^static int get_additional_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_additional_smart_log	plugins/intel/intel-nvme.c	/^static int get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_additional_smart_log	plugins/scaleflux/sfx-nvme.c	/^static int get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_additional_smart_log	plugins/shannon/shannon-nvme.c	/^static int get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_additional_smart_log	plugins/solidigm/solidigm-nvme.c	/^static int get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_additional_smart_log	plugins/ymtc/ymtc-nvme.c	/^static int get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_all_python_files	tests/run_py_linters.py	/^def get_all_python_files() -> List[Path]:$/;"	f
get_ana_log	nvme.c	/^static int get_ana_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_bb_table	plugins/scaleflux/sfx-nvme.c	/^static int get_bb_table(int fd, __u32 nsid, unsigned char *buf, __u64 size)$/;"	f	file:
get_boot_part_log	nvme.c	/^static int get_boot_part_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_c0_log_page	plugins/ocp/ocp-smart-extended-log.c	/^static int get_c0_log_page(int fd, char *format)$/;"	f	file:
get_c1_log_page	plugins/ocp/ocp-nvme.c	/^static int get_c1_log_page(struct nvme_dev *dev, char *format)$/;"	f	file:
get_c3_log_page	plugins/ocp/ocp-nvme.c	/^static int get_c3_log_page(struct nvme_dev *dev, char *format)$/;"	f	file:
get_c4_log_page	plugins/ocp/ocp-nvme.c	/^static int get_c4_log_page(struct nvme_dev *dev, char *format)$/;"	f	file:
get_c5_log_page	plugins/ocp/ocp-nvme.c	/^static int get_c5_log_page(struct nvme_dev *dev, char *format)$/;"	f	file:
get_changed_ns_list_log	nvme.c	/^static int get_changed_ns_list_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_common_log	plugins/micron/micron-nvme.c	/^static int get_common_log(int fd, uint8_t id, uint8_t **buf, int *size)$/;"	f	file:
get_ctrl_id	tests/nvme_test.py	/^    def get_ctrl_id(self):$/;"	m	class:TestNVMe
get_ctrl_tele	plugins/seagate/seagate-nvme.c	/^static int get_ctrl_tele(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_default_trsvcid	fabrics.c	/^static char *get_default_trsvcid(const char *transport,$/;"	f	file:
get_dev	nvme.c	/^static int get_dev(struct nvme_dev **dev, int argc, char **argv, int flags)$/;"	f	file:
get_dev_mgment_cbs_data	plugins/wdc/wdc-nvme.c	/^static bool get_dev_mgment_cbs_data(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
get_effects_log	nvme.c	/^static int get_effects_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_endurance_event_agg_log	nvme.c	/^static int get_endurance_event_agg_log(int argc, char **argv,$/;"	f	file:
get_endurance_log	nvme.c	/^static int get_endurance_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_error_log	nvme.c	/^static int get_error_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_error_log	tests/nvme_test.py	/^    def get_error_log(self):$/;"	m	class:TestNVMe
get_error_log_ctrl	tests/nvme_error_log_test.py	/^    def get_error_log_ctrl(self):$/;"	m	class:TestNVMeErrorLogCmd
get_extra_ptr_bits	ccan/ccan/htable/htable.c	/^static inline uintptr_t get_extra_ptr_bits(const struct htable *ht,$/;"	f	file:
get_feature	nvme.c	/^static int get_feature(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_feature_id	nvme.c	/^static int get_feature_id(struct nvme_dev *dev, struct feat_cfg *cfg,$/;"	f	file:
get_feature_id_changed	nvme.c	/^static int get_feature_id_changed(struct nvme_dev *dev, struct feat_cfg cfg,$/;"	f	file:
get_feature_id_print	nvme.c	/^static void get_feature_id_print(struct feat_cfg cfg, int err, __u32 result,$/;"	f	file:
get_feature_ids	nvme.c	/^static int get_feature_ids(struct nvme_dev *dev, struct feat_cfg cfg)$/;"	f	file:
get_fid_support_effects_log	nvme.c	/^static int get_fid_support_effects_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_format	tests/nvme_test.py	/^    def get_format(self):$/;"	m	class:TestNVMe
get_fw_log	nvme.c	/^static int get_fw_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_fw_log	tests/nvme_fw_log_test.py	/^    def get_fw_log(self):$/;"	m	class:TestNVMeFwLogCmd
get_garbage_collection_log	plugins/solidigm/solidigm-nvme.c	/^static int get_garbage_collection_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_hash_ptr_bits	ccan/ccan/htable/htable.c	/^static inline uintptr_t get_hash_ptr_bits(const struct htable *ht,$/;"	f	file:
get_host_tele	plugins/seagate/seagate-nvme.c	/^static int get_host_tele(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_id_ctrl	tests/nvme_test.py	/^    def get_id_ctrl(self, vendor=False):$/;"	m	class:TestNVMe
get_id_ns	tests/nvme_id_ns_test.py	/^    def get_id_ns(self, nsid):$/;"	m	class:TestNVMeIdentifyNamespace
get_id_ns_all	tests/nvme_id_ns_test.py	/^    def get_id_ns_all(self):$/;"	m	class:TestNVMeIdentifyNamespace
get_internal_log	plugins/intel/intel-nvme.c	/^static int get_internal_log(int argc, char **argv, struct command *command,$/;"	f	file:
get_internal_log	plugins/solidigm/solidigm-nvme.c	/^static int get_internal_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_internal_log_old	plugins/intel/intel-nvme.c	/^static int get_internal_log_old(__u8 *buf, int output, int fd,$/;"	f	file:
get_lat_stats_log	plugins/intel/intel-nvme.c	/^static int get_lat_stats_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_lat_stats_log	plugins/scaleflux/sfx-nvme.c	/^static int get_lat_stats_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_latency_tracking_log	plugins/solidigm/solidigm-nvme.c	/^static int get_latency_tracking_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_lba_stat_log	tests/nvme_lba_status_log_test.py	/^    def get_lba_stat_log(self):$/;"	m	class:TestNVMeLbaStatLogCmd
get_lba_status	nvme.c	/^static int get_lba_status(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_lba_status	tests/nvme_get_lba_status_test.py	/^    def get_lba_status(self):$/;"	m	class:TestNVMeGetLbaStatusCmd
get_lba_status_log	nvme.c	/^static int get_lba_status_log(int argc, char **argv,$/;"	f	file:
get_log	nvme.c	/^static int get_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_log_page_directory_log	plugins/solidigm/solidigm-nvme.c	/^static int get_log_page_directory_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_log_telemetry_ctrl	nvme.c	/^static int get_log_telemetry_ctrl(struct nvme_dev *dev, bool rae, size_t size,$/;"	f	file:
get_log_telemetry_host	nvme.c	/^static int get_log_telemetry_host(struct nvme_dev *dev, size_t size,$/;"	f	file:
get_mandatory_features	tests/nvme_get_features_test.py	/^    def get_mandatory_features(self, feature_id):$/;"	m	class:TestNVMeGetMandatoryFeatures
get_market_log	plugins/intel/intel-nvme.c	/^static int get_market_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_market_log	plugins/solidigm/solidigm-nvme.c	/^static int get_market_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_max_ns	tests/nvme_test.py	/^    def get_max_ns(self):$/;"	m	class:TestNVMe
get_media_unit_stat_log	nvme.c	/^static int get_media_unit_stat_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_memblaze_new_smart_info	plugins/memblaze/memblaze-nvme.c	/^static void get_memblaze_new_smart_info(struct nvme_p4_smart_log *smart, int index, __u8 *nm_val, __u8 *raw_val)$/;"	f	file:
get_mi_cmd_support_effects_log	nvme.c	/^static int get_mi_cmd_support_effects_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_ncap	tests/nvme_test.py	/^    def get_ncap(self):$/;"	m	class:TestNVMe
get_nlog_header_size	plugins/solidigm/solidigm-internal-logs.c	/^static size_t get_nlog_header_size(struct nlog_dump_header_common *nlog_header)$/;"	f	file:
get_ns_id	nvme.c	/^static int get_ns_id(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_ns_list	tests/nvme_test.py	/^    def get_ns_list(self):$/;"	m	class:TestNVMe
get_ocp_lids	plugins/solidigm/solidigm-log-page-dir.c	/^static struct lid_dir *get_ocp_lids(struct nvme_supported_log_pages *supported)$/;"	f	file:
get_persistent_event_log	nvme.c	/^static int get_persistent_event_log(int argc, char **argv,$/;"	f	file:
get_pred_lat_event_agg_log	nvme.c	/^static int get_pred_lat_event_agg_log(int argc, char **argv,$/;"	f	file:
get_pred_lat_per_nvmset_log	nvme.c	/^static int get_pred_lat_per_nvmset_log(int argc, char **argv,$/;"	f	file:
get_property	nvme.c	/^static int get_property(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_raw_ptr	ccan/ccan/htable/htable.c	/^static inline void *get_raw_ptr(const struct htable *ht, uintptr_t e)$/;"	f	file:
get_resv_notif_log	nvme.c	/^static int get_resv_notif_log(int argc, char **argv,$/;"	f	file:
get_seconds_magnitude	plugins/intel/intel-nvme.c	/^static enum FormatUnit get_seconds_magnitude(__u32 microseconds)$/;"	f	file:
get_serial_number	plugins/ocp/ocp-nvme.c	/^static void get_serial_number(struct nvme_id_ctrl *ctrl, char *sn)$/;"	f	file:
get_serial_number	plugins/solidigm/solidigm-internal-logs.c	/^static int get_serial_number(char *str, int fd)$/;"	f	file:
get_smart_log	nvme.c	/^static int get_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_smart_log	tests/nvme_test.py	/^    def get_smart_log(self, nsid):$/;"	m	class:TestNVMe
get_smart_log_all_ns	tests/nvme_smart_log_test.py	/^    def get_smart_log_all_ns(self):$/;"	m	class:TestNVMeSmartLogCmd
get_smart_log_ctrl	tests/nvme_smart_log_test.py	/^    def get_smart_log_ctrl(self):$/;"	m	class:TestNVMeSmartLogCmd
get_smart_log_ns	tests/nvme_smart_log_test.py	/^    def get_smart_log_ns(self, nsid):$/;"	m	class:TestNVMeSmartLogCmd
get_sn730_log_chunks	plugins/wdc/wdc-nvme.c	/^static int get_sn730_log_chunks(int fd, uint8_t *log_buf, uint32_t log_len, uint32_t subopcode)$/;"	f	file:
get_solidigm_lids	plugins/solidigm/solidigm-log-page-dir.c	/^static struct lid_dir *get_solidigm_lids(struct nvme_supported_log_pages *supported)$/;"	f	file:
get_standard_lids	plugins/solidigm/solidigm-log-page-dir.c	/^static struct lid_dir *get_standard_lids(struct nvme_supported_log_pages *supported)$/;"	f	file:
get_status	plugins/dera/dera-nvme.c	/^static int get_status(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_supp_cap_config_log	nvme.c	/^static int get_supp_cap_config_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_supported_log_pages	nvme.c	/^static int get_supported_log_pages(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_supported_log_pages_log	plugins/solidigm/solidigm-log-page-dir.c	/^static int get_supported_log_pages_log(struct nvme_dev *dev, int uuid_index,$/;"	f	file:
get_telemetry_dump	plugins/ocp/ocp-nvme.c	/^static int get_telemetry_dump(struct nvme_dev *dev, char *filename, char *sn,$/;"	f	file:
get_telemetry_header	plugins/ocp/ocp-nvme.c	/^static int get_telemetry_header(struct nvme_dev *dev, __u32 ns, __u8 tele_type,$/;"	f	file:
get_telemetry_log	nvme.c	/^static int get_telemetry_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
get_telemetry_log	plugins/solidigm/solidigm-nvme.c	/^static int get_telemetry_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_temp_stats_log	plugins/intel/intel-nvme.c	/^static int get_temp_stats_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
get_time_unit_label	plugins/solidigm/solidigm-latency-tracking.c	/^static void get_time_unit_label(char *label, __u32 microseconds,$/;"	f	file:
get_write_amplification_log	nvme.c	/^static int get_write_amplification_log(int argc, char **argv, struct command *cmd, $/;"	f	file:
get_ymtc_smart_info	plugins/ymtc/ymtc-nvme.c	/^static void get_ymtc_smart_info(struct nvme_ymtc_smart_log *smart, int index, u8 *nm_val, u8 *raw_val)$/;"	f	file:
get_zdes_bytes	plugins/zns/zns.c	/^static int get_zdes_bytes(int fd, __u32 nsid)$/;"	f	file:
getlogpage_format_type	plugins/memblaze/memblaze-nvme.c	/^int getlogpage_format_type(char *model_name)$/;"	f
getrandom_bytes	nvme.c	/^static ssize_t getrandom_bytes(void *buf, size_t buflen)$/;"	f	file:
glp_high_latency	plugins/memblaze/memblaze-nvme.c	/^static int glp_high_latency(FILE *fdi, char *buf, int buflen, int print)$/;"	f	file:
glp_high_latency_show_bar	plugins/memblaze/memblaze-nvme.c	/^static int glp_high_latency_show_bar(FILE *fdi, int print)$/;"	f	file:
gpio0_err	plugins/dera/dera-nvme.c	/^	__u8 gpio0_err[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
gpio5_err	plugins/dera/dera-nvme.c	/^	__u8 gpio5_err[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
gpio_err_bit	plugins/dera/dera-nvme.c	/^	__u8 gpio_err_bit[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
grown_bb	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item grown_bb; \/* grown bad block *\/$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
handle_plugin	plugin.c	/^int handle_plugin(int argc, char **argv, struct plugin *plugin)$/;"	f
has_average_latency_field	plugins/solidigm/solidigm-latency-tracking.c	/^	bool has_average_latency_field;$/;"	m	struct:latency_tracker	file:
hash	ccan/ccan/hash/hash.h	53;"	d
hash64	ccan/ccan/hash/hash.h	182;"	d
hash64_any	ccan/ccan/hash/hash.c	/^uint64_t hash64_any(const void *key, size_t length, uint64_t base)$/;"	f
hash64_stable	ccan/ccan/hash/hash.h	223;"	d
hash64_stable_16	ccan/ccan/hash/hash.c	/^uint64_t hash64_stable_16(const void *key, size_t n, uint64_t base)$/;"	f
hash64_stable_32	ccan/ccan/hash/hash.c	/^uint64_t hash64_stable_32(const void *key, size_t n, uint64_t base)$/;"	f
hash64_stable_64	ccan/ccan/hash/hash.c	/^uint64_t hash64_stable_64(const void *key, size_t n, uint64_t base)$/;"	f
hash64_stable_8	ccan/ccan/hash/hash.c	/^uint64_t hash64_stable_8(const void *key, size_t n, uint64_t base)$/;"	f
hash_any	ccan/ccan/hash/hash.c	/^uint32_t hash_any(const void *key, size_t length, uint32_t base)$/;"	f
hash_bucket	ccan/ccan/htable/htable.c	/^static size_t hash_bucket(const struct htable *ht, size_t h)$/;"	f	file:
hash_pointer	ccan/ccan/hash/hash.h	/^static inline uint32_t hash_pointer(const void *p, uint32_t base)$/;"	f
hash_stable	ccan/ccan/hash/hash.h	94;"	d
hash_stable_16	ccan/ccan/hash/hash.c	/^uint32_t hash_stable_16(const void *key, size_t n, uint32_t base)$/;"	f
hash_stable_32	ccan/ccan/hash/hash.c	/^uint32_t hash_stable_32(const void *key, size_t n, uint32_t base)$/;"	f
hash_stable_64	ccan/ccan/hash/hash.c	/^uint32_t hash_stable_64(const void *key, size_t n, uint32_t base)$/;"	f
hash_stable_8	ccan/ccan/hash/hash.c	/^uint32_t hash_stable_8(const void *key, size_t n, uint32_t base)$/;"	f
hash_string	ccan/ccan/hash/hash.h	/^static inline uint32_t hash_string(const char *string)$/;"	f
hash_trace	ccan/ccan/likely/likely.c	/^static size_t hash_trace(const struct trace *trace)$/;"	f	file:
hash_u32	ccan/ccan/hash/hash.c	/^uint32_t hash_u32($/;"	f
hashbig	ccan/ccan/hash/hash.c	/^static uint32_t hashbig( const void *key, size_t length, uint32_t *val2)$/;"	f	file:
hashl	ccan/ccan/hash/hash.h	240;"	d
hashlittle	ccan/ccan/hash/hash.c	/^static uint32_t hashlittle( const void *key, size_t length, uint32_t *val2 )$/;"	f	file:
hashmask	ccan/ccan/hash/hash.c	83;"	d	file:
hashsize	ccan/ccan/hash/hash.c	82;"	d	file:
hdr_version	plugins/wdc/wdc-nvme.c	/^	__le16	hdr_version;$/;"	m	struct:wdc_dui_log_hdr	file:
hdr_version	plugins/wdc/wdc-nvme.c	/^	__u8	hdr_version;$/;"	m	struct:wdc_dui_log_hdr_v2	file:
hdr_version	plugins/wdc/wdc-nvme.c	/^	__u8	hdr_version;$/;"	m	struct:wdc_dui_log_hdr_v3	file:
hdr_version	plugins/wdc/wdc-nvme.c	/^	__u8	hdr_version;$/;"	m	struct:wdc_dui_log_hdr_v4	file:
header	plugins/intel/intel-nvme.c	/^	__u32    header;$/;"	m	struct:intel_vu_log	file:
header	plugins/solidigm/solidigm-internal-logs.c	/^	struct commom_header header;$/;"	m	struct:assert_dump_header	typeref:struct:assert_dump_header::commom_header	file:
header	plugins/solidigm/solidigm-internal-logs.c	/^	struct commom_header header;$/;"	m	struct:event_dump_header	typeref:struct:event_dump_header::commom_header	file:
header	plugins/solidigm/solidigm-telemetry/cod.c	/^	struct cod_header header;$/;"	m	struct:cod_map	typeref:struct:cod_map::cod_header	file:
header	plugins/solidigm/solidigm-telemetry/data-area.c	/^	struct data_area_header header;$/;"	m	struct:table_of_contents	typeref:struct:table_of_contents::data_area_header	file:
header_size	plugins/solidigm/solidigm-internal-logs.c	/^	__u32    header_size;$/;"	m	struct:commom_header	file:
health	plugins/intel/intel-nvme.c	/^	__u8			health[20];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
health	plugins/solidigm/solidigm-id-ctrl.c	/^	char health[20];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
help	plugin.c	/^static int help(int argc, char **argv, struct plugin *plugin)$/;"	f	file:
help	plugin.h	/^	char *help;$/;"	m	struct:command
help	util/argconfig.h	/^	const char *help;$/;"	m	struct:argconfig_commandline_options
hfi_to_json	plugins/nbft/nbft-plugin.c	/^static json_object *hfi_to_json(struct nbft_info_hfi *hfi)$/;"	f	file:
high_format_fail	plugins/inspur/inspur-utils.h	/^    __u32 high_format_fail : 1;$/;"	m	struct:vendor_warning_bit
highest_temp	plugins/innogrit/typedef.h	/^	u_char highest_temp[4];$/;"	m	struct:vsc_smart_log
highest_temp	plugins/intel/intel-nvme.c	/^	__le64	highest_temp;$/;"	m	struct:intel_temp_stats	file:
hmac_sha256	nvme-rpmb.c	/^hmac_sha256(unsigned char *data, int datalen, unsigned char *key, int keylen)$/;"	f
host_bytes_written	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	host_bytes_written;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
host_bytes_written	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item host_bytes_written;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
host_ctx_wear_used	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	host_ctx_wear_used;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
host_gen	plugins/solidigm/solidigm-telemetry.c	/^	__u32 host_gen;$/;"	m	struct:config	file:
host_iface	fabrics.h	/^	const char *host_iface;$/;"	m	struct:tr_config
host_traddr	fabrics.h	/^	const char *host_traddr;$/;"	m	struct:tr_config
hour	plugins/wdc/wdc-utils.h	/^	unsigned int hour;$/;"	m	struct:_UtilsTimeInfo
hr_blks	plugins/wdc/wdc-nvme.c	/^	__le64	hr_blks;		\/* Host Read Blocks			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hr_ch_blks	plugins/wdc/wdc-nvme.c	/^	__le64	hr_ch_blks;		\/* Host Read Cache Hit Blocks		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hr_ch_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hr_ch_cmds;		\/* Host Read Cache Hit Commands		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hr_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hr_cmds;		\/* Host Read Commands			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hr_st_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hr_st_cmds;		\/* Host Read Stalled Commands		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hs_crc_err_cnt	plugins/innogrit/typedef.h	/^	unsigned int hs_crc_err_cnt;$/;"	m	struct:vsc_smart_log
ht_add	ccan/ccan/htable/htable.c	/^static void ht_add(struct htable *ht, const void *new, size_t h)$/;"	f	file:
ht_c	nvme-print-stdout.c	/^	struct htable_ctrl ht_c;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::htable_ctrl	file:
ht_max	ccan/ccan/htable/htable.c	/^static inline size_t ht_max(const struct htable *ht)$/;"	f	file:
ht_max_deleted	ccan/ccan/htable/htable.c	/^static inline size_t ht_max_deleted(const struct htable *ht)$/;"	f	file:
ht_n	nvme-print-stdout.c	/^	struct htable_ns ht_n;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::htable_ns	file:
ht_perfect_mask	ccan/ccan/htable/htable.c	/^static inline uintptr_t ht_perfect_mask(const struct htable *ht)$/;"	f	file:
ht_s	nvme-print-stdout.c	/^	struct htable_subsys ht_s;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::htable_subsys	file:
htable	ccan/ccan/htable/htable.h	/^struct htable {$/;"	s
htable	ccan/ccan/likely/likely.c	/^static struct thash htable$/;"	v	typeref:struct:thash	file:
htable_add	ccan/ccan/htable/htable.h	140;"	d
htable_add_	ccan/ccan/htable/htable.c	/^bool htable_add_(struct htable *ht, size_t hash, const void *p)$/;"	f
htable_alloc	ccan/ccan/htable/htable.c	/^static void *(*htable_alloc)(struct htable *, size_t) = htable_default_alloc;$/;"	v	file:
htable_check	ccan/ccan/htable/htable.c	/^struct htable *htable_check(const struct htable *ht, const char *abortstr)$/;"	f
htable_clear	ccan/ccan/htable/htable.c	/^void htable_clear(struct htable *ht)$/;"	f
htable_copy	ccan/ccan/htable/htable.h	128;"	d
htable_copy_	ccan/ccan/htable/htable.c	/^bool htable_copy_(struct htable *dst, const struct htable *src)$/;"	f
htable_count	ccan/ccan/htable/htable.h	/^static inline size_t htable_count(const struct htable *ht)$/;"	f
htable_ctrl_add_unique	nvme-print-stdout.c	/^static void htable_ctrl_add_unique(struct htable_ctrl *ht, nvme_ctrl_t c)$/;"	f	file:
htable_debug	ccan/ccan/htable/htable.h	13;"	d
htable_debug	ccan/ccan/htable/htable.h	15;"	d
htable_default_alloc	ccan/ccan/htable/htable.c	/^static void *htable_default_alloc(struct htable *ht, size_t len)$/;"	f	file:
htable_default_free	ccan/ccan/htable/htable.c	/^static void htable_default_free(struct htable *ht, void *p)$/;"	f	file:
htable_del	ccan/ccan/htable/htable.h	152;"	d
htable_del_	ccan/ccan/htable/htable.c	/^bool htable_del_(struct htable *ht, size_t h, const void *p)$/;"	f
htable_delval	ccan/ccan/htable/htable.h	266;"	d
htable_delval_	ccan/ccan/htable/htable.c	/^void htable_delval_(struct htable *ht, struct htable_iter *i)$/;"	f
htable_first	ccan/ccan/htable/htable.h	225;"	d
htable_first_	ccan/ccan/htable/htable.c	/^void *htable_first_(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_firstval	ccan/ccan/htable/htable.h	175;"	d
htable_firstval_	ccan/ccan/htable/htable.c	/^void *htable_firstval_(const struct htable *ht,$/;"	f
htable_free	ccan/ccan/htable/htable.c	/^static void (*htable_free)(struct htable *, void *) = htable_default_free;$/;"	v	file:
htable_get	ccan/ccan/htable/htable.h	/^static inline void *htable_get(const struct htable *ht,$/;"	f
htable_init	ccan/ccan/htable/htable.c	/^void htable_init(struct htable *ht,$/;"	f
htable_init_sized	ccan/ccan/htable/htable.c	/^bool htable_init_sized(struct htable *ht,$/;"	f
htable_iter	ccan/ccan/htable/htable.h	/^struct htable_iter {$/;"	s
htable_next	ccan/ccan/htable/htable.h	237;"	d
htable_next_	ccan/ccan/htable/htable.c	/^void *htable_next_(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_nextval	ccan/ccan/htable/htable.h	189;"	d
htable_nextval_	ccan/ccan/htable/htable.c	/^void *htable_nextval_(const struct htable *ht,$/;"	f
htable_ns_add_unique	nvme-print-stdout.c	/^static void htable_ns_add_unique(struct htable_ns *ht, nvme_ns_t n)$/;"	f	file:
htable_pick	ccan/ccan/htable/htable.h	279;"	d
htable_pick_	ccan/ccan/htable/htable.c	/^void *htable_pick_(const struct htable *ht, size_t seed, struct htable_iter *i)$/;"	f
htable_prev	ccan/ccan/htable/htable.h	254;"	d
htable_prev_	ccan/ccan/htable/htable.c	/^void *htable_prev_(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_set_allocator	ccan/ccan/htable/htable.c	/^void htable_set_allocator(void *(*alloc)(struct htable *, size_t len),$/;"	f
htable_val	ccan/ccan/htable/htable.c	/^static void *htable_val(const struct htable *ht,$/;"	f	file:
huawei_device	plugins/huawei/huawei-nvme.c	/^	bool                huawei_device;$/;"	m	struct:huawei_list_item	file:
huawei_do_id_ctrl	plugins/huawei/huawei-nvme.c	/^static void huawei_do_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
huawei_get_array_len	plugins/huawei/huawei-nvme.c	/^static int huawei_get_array_len(struct huawei_list_item *list_items, unsigned int len,$/;"	f	file:
huawei_get_ns_len	plugins/huawei/huawei-nvme.c	/^static unsigned int huawei_get_ns_len(struct huawei_list_item *list_items, unsigned int len,$/;"	f	file:
huawei_get_nvme_info	plugins/huawei/huawei-nvme.c	/^static int huawei_get_nvme_info(int fd, struct huawei_list_item *item, const char *node)$/;"	f	file:
huawei_id_ctrl	plugins/huawei/huawei-nvme.c	/^static int huawei_id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
huawei_json_print_list_items	plugins/huawei/huawei-nvme.c	/^static void huawei_json_print_list_items(struct huawei_list_item *list_items,$/;"	f	file:
huawei_list	plugins/huawei/huawei-nvme.c	/^static int huawei_list(int argc, char **argv, struct command *command,$/;"	f	file:
huawei_list_element_len	plugins/huawei/huawei-nvme.c	/^struct huawei_list_element_len {$/;"	s	file:
huawei_list_item	plugins/huawei/huawei-nvme.c	/^struct huawei_list_item {$/;"	s	file:
huawei_print_list_head	plugins/huawei/huawei-nvme.c	/^static void huawei_print_list_head(struct huawei_list_element_len element_len)$/;"	f	file:
huawei_print_list_item	plugins/huawei/huawei-nvme.c	/^static void huawei_print_list_item(struct huawei_list_item *list_item,$/;"	f	file:
huawei_print_list_items	plugins/huawei/huawei-nvme.c	/^static void huawei_print_list_items(struct huawei_list_item *list_items, unsigned int len)$/;"	f	file:
human_readable	nvme.c	/^	bool  human_readable;$/;"	m	struct:feat_cfg	file:
human_readable_directive	nvme.c	/^static const char *human_readable_directive = "show directive in readable format";$/;"	v	file:
human_readable_identify	nvme.c	/^static const char *human_readable_identify = "show identify in readable format";$/;"	v	file:
human_readable_info	nvme.c	/^static const char *human_readable_info = "show info in readable format";$/;"	v	file:
human_readable_log	nvme.c	/^static const char *human_readable_log = "show log in readable format";$/;"	v	file:
hw_blks	plugins/wdc/wdc-nvme.c	/^	__le64	hw_blks;		\/* Host Write Blocks			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hw_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hw_cmds;		\/* Host Write Commands			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hw_oe_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hw_oe_cmds;		\/* Host Write Odd End Commands		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hw_os_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hw_os_cmds;		\/* Host Write Odd Start Commands	*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hw_rev_ar	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_ar;            \/*   1 ASIC HW Revision              *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_asic_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_asic_di[16];   \/*  80 ASIC Detailed Info            *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c1_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c1_di[16];     \/* 176 Component 1 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c1_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c1_mc;         \/*   7 Other Component 1 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c2_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c2_di[16];     \/* 192 Component 2 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c2_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c2_mc;         \/*   8 Other Component 2 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c3_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c3_di[16];     \/* 208 Component 3 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c3_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c3_mc;         \/*   9 Other Component 3 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c4_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c4_di[16];     \/* 224 Component 4 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c4_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c4_mc;         \/*  10 Other Component 4 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c5_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c5_di[16];     \/* 240 Component 5 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c5_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c5_mc;         \/*  11 Other Component 5 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c6_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c6_di[16];     \/* 256 Component 6 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c6_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c6_mc;         \/*  12 Other Component 6 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c7_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c7_di[16];     \/* 272 Component 7 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c7_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c7_mc;         \/*  13 Other Component 7 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c8_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c8_di[16];     \/* 288 Component 8 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c8_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c8_mc;         \/*  14 Other Component 8 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c9_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c9_di[16];     \/* 304 Component 9 Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_c9_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_c9_mc;         \/*  15 Other Component 9 Manf Code   *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_dev_mdi	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_dev_mdi[16];   \/*  64 Device Manf Detailed Info     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_dram_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_dram_di[16];   \/* 112 DRAM Detailed Info            *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_dram_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_dram_mc;       \/*   3 DRAM Manufacturer Code        *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_gdr	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_gdr;           \/*   0 Global Device HW Revision     *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_guid	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_guid[16];      \/* 496 Log Page GUID                 *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_log_guid	plugins/wdc/wdc-nvme.c	/^static __u8 hw_rev_log_guid[WDC_NVME_C6_GUID_LENGTH] = {$/;"	v	file:
hw_rev_nand_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_nand_di[16];   \/* 128 NAND Detailed Info            *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_nand_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_nand_mc;       \/*   4 NAND Manufacturer Code        *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pbc_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pbc_mc;        \/*   2 PCB Manufacturer Code         *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pcb_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pcb_di[16];    \/*  96 PCB Detailed Info             *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pmic1_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pmic1_di[16];  \/* 144 PMIC1 Detailed Info           *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pmic1_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pmic1_mc;      \/*   5 PMIC 1 Manufacturer Code      *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pmic2_di	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pmic2_di[16];  \/* 160 PMIC2 Detailed Info           *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_pmic2_mc	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_pmic2_mc;      \/*   6 PMIC 2 Manufacturer Code      *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_rsrvd1	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_rsrvd1[48];    \/*  16 Reserved 48 bytes             *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_rsrvd2	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_rsrvd2[142];   \/* 352 Reserved 143 bytes            *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_sn	plugins/wdc/wdc-nvme.c	/^	__u8  hw_rev_sn[32];        \/* 320 Serial Number                 *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_rev_version	plugins/wdc/wdc-nvme.c	/^	__u16 hw_rev_version;       \/* 494 Log Page Version              *\/$/;"	m	struct:wdc_nvme_hw_rev_log	file:
hw_st_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	hw_st_cmds;		\/* Host Write Commands Stalled		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
hw_used	plugins/scaleflux/sfx-nvme.c	/^	__u64 hw_used;		\/* hw space used in 4K *\/$/;"	m	struct:sfx_freespace_ctx	file:
id	plugins/memblaze/memblaze-utils.h	/^	__u8 id[3];$/;"	m	struct:nvme_memblaze_smart_log_item
id	plugins/memblaze/memblaze-utils.h	/^	__u8 id[ID_SIZE];$/;"	m	struct:nvme_p4_smart_log_item
id	plugins/micron/micron-nvme.c	/^	uint8_t  id;$/;"	m	struct:micron_common_log_header	file:
id	plugins/solidigm/solidigm-smart.c	/^	__u8			id;$/;"	m	struct:nvme_additional_smart_log_item	file:
id	plugins/ymtc/ymtc-utils.h	/^    u8 id[ID_SIZE];$/;"	m	struct:nvme_ymtc_smart_log_item
id_ctrl	nvme-print.h	/^	void (*id_ctrl)(struct nvme_id_ctrl *ctrl, void (*vs)(__u8 *vs, struct json_object *root));$/;"	m	struct:print_ops
id_ctrl	nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ctrl	plugins/amzn/amzn-nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ctrl	plugins/dell/dell-nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd,$/;"	f	file:
id_ctrl	plugins/intel/intel-nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ctrl	plugins/nvidia/nvidia-nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd,$/;"	f	file:
id_ctrl	plugins/solidigm/solidigm-nvme.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ctrl	plugins/zns/zns.c	/^static int id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ctrl_nvm	nvme-print.h	/^	void (*id_ctrl_nvm)(struct nvme_id_ctrl_nvm *ctrl_nvm);$/;"	m	struct:print_ops
id_ctrl_rpmbs	nvme-print.h	/^	void (*id_ctrl_rpmbs)(__le32 ctrl_rpmbs);$/;"	m	struct:print_ops
id_domain	nvme.c	/^static int id_domain(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_domain_list	nvme-print.h	/^	void (*id_domain_list)(struct nvme_id_domain_list *id_dom);$/;"	m	struct:print_ops
id_endurance_grp_list	nvme.c	/^static int id_endurance_grp_list(int argc, char **argv, struct command *cmd,$/;"	f	file:
id_independent_id_ns	nvme-print.h	/^	void (*id_independent_id_ns)(struct nvme_id_independent_id_ns *ns, unsigned int nsid);$/;"	m	struct:print_ops
id_iocs	nvme-print.h	/^	void (*id_iocs)(struct nvme_id_iocs *ioscs);$/;"	m	struct:print_ops
id_iocs	nvme.c	/^static int id_iocs(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ns	nvme-print.h	/^	void (*id_ns)(struct nvme_id_ns *ns, unsigned int nsid, unsigned int lba_index, bool cap_only);$/;"	m	struct:print_ops
id_ns	nvme.c	/^static int id_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ns	plugins/zns/zns.c	/^static int id_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ns_descs	nvme-print.h	/^	void (*id_ns_descs)(void *data, unsigned int nsid);$/;"	m	struct:print_ops
id_ns_granularity	nvme.c	/^static int id_ns_granularity(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_ns_granularity_list	nvme-print.h	/^	void (*id_ns_granularity_list)(const struct nvme_id_ns_granularity_list *list);$/;"	m	struct:print_ops
id_ns_lba_format	nvme.c	/^static int id_ns_lba_format(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_nvmset	nvme.c	/^static int id_nvmset(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_nvmset_list	nvme-print.h	/^	void (*id_nvmset_list)(struct nvme_id_nvmset_list *nvmset, unsigned int nvmeset_id);$/;"	m	struct:print_ops
id_to_key	plugins/intel/intel-nvme.c	/^static char *id_to_key(__u8 id)$/;"	f	file:
id_to_name	plugins/solidigm/solidigm-smart.c	/^static char *id_to_name(__u8 id)$/;"	f	file:
id_uuid	nvme.c	/^static int id_uuid(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
id_uuid_list	nvme-print.h	/^	void (*id_uuid_list)(const struct nvme_id_uuid_list  *uuid_list);$/;"	m	struct:print_ops
ieee_id	plugins/seagate/seagate-diag.h	/^    __u8        ieee_id[3];$/;"	m	struct:nvme_temetry_log_hdr
iekey	nvme.c	/^static const char *iekey = "ignore existing res. key";$/;"	v	file:
iindex	plugins/innogrit/typedef.h	/^	unsigned int iindex;$/;"	m	struct:eventlog_addindex
ilenth	plugins/innogrit/typedef.h	/^	unsigned int ilenth;$/;"	m	struct:cdump_pack
ilog32	ccan/ccan/ilog/ilog.c	/^int ilog32(uint32_t _v){$/;"	f
ilog32	ccan/ccan/ilog/ilog.c	27;"	d	file:
ilog32	ccan/ccan/ilog/ilog.h	126;"	d
ilog32	ccan/ccan/ilog/ilog.h	130;"	d
ilog32	ccan/ccan/ilog/ilog.h	134;"	d
ilog32_nz	ccan/ccan/ilog/ilog.c	/^int ilog32_nz(uint32_t _v)$/;"	f
ilog32_nz	ccan/ccan/ilog/ilog.c	26;"	d	file:
ilog32_nz	ccan/ccan/ilog/ilog.h	127;"	d
ilog32_nz	ccan/ccan/ilog/ilog.h	129;"	d
ilog64	ccan/ccan/ilog/ilog.c	/^int ilog64(uint64_t _v){$/;"	f
ilog64	ccan/ccan/ilog/ilog.c	29;"	d	file:
ilog64	ccan/ccan/ilog/ilog.h	138;"	d
ilog64_nz	ccan/ccan/ilog/ilog.c	/^int ilog64_nz(uint64_t _v)$/;"	f
ilog64_nz	ccan/ccan/ilog/ilog.c	28;"	d	file:
ilog64_nz	ccan/ccan/ilog/ilog.h	135;"	d
ilog64_nz	ccan/ccan/ilog/ilog.h	137;"	d
incompleteShutdowns	plugins/seagate/seagate-diag.h	/^    __u32           incompleteShutdowns;$/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
incomplete_shutdown_count	plugins/wdc/wdc-nvme.c	/^	__le32  incomplete_shutdown_count;              \/* 0x73 - Incomplete Shutdown Count        *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
incr	unit/test-argconfig-parse.c	/^	int incr;$/;"	m	struct:cfg	file:
incr	unit/test-argconfig-parse.c	/^	int incr;$/;"	m	union:val	file:
increment	util/argconfig.h	/^	int increment;$/;"	m	union:argconfig_val
inf_bound_type	plugins/intel/intel-nvme.c	/^enum inf_bound_type {$/;"	g	file:
init_buffer	plugins/intel/intel-nvme.c	/^static void init_buffer(char *buffer, size_t size)$/;"	f	file:
init_d0_log_page	plugins/micron/micron-nvme.c	/^static void init_d0_log_page(__u8 *buf, __u8 nsze)$/;"	f	file:
init_lid_dir	plugins/solidigm/solidigm-log-page-dir.c	/^static void init_lid_dir(struct lid_dir *lid_dir)$/;"	f	file:
init_pcie_volt_low	plugins/dera/dera-nvme.c	/^	__u8 init_pcie_volt_low[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
init_pcie_volt_thr	plugins/dera/dera-nvme.c	/^	__u8 init_pcie_volt_thr[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
init_trace	ccan/ccan/likely/likely.c	/^static void init_trace(struct trace *trace,$/;"	f	file:
innogrit_smart_log_additional	plugins/innogrit/innogrit-nvme.c	/^static int innogrit_smart_log_additional(int argc, char **argv,$/;"	f	file:
innogrit_vsc_getcdump	plugins/innogrit/innogrit-nvme.c	/^static int innogrit_vsc_getcdump(int argc, char **argv, struct command *command,$/;"	f	file:
innogrit_vsc_geteventlog	plugins/innogrit/innogrit-nvme.c	/^static int innogrit_vsc_geteventlog(int argc, char **argv,$/;"	f	file:
input_file	nvme.c	/^	char	*input_file;$/;"	m	struct:passthru_config	file:
int128_to_double	util/types.c	/^long double int128_to_double(__u8 *data)$/;"	f
int48_to_long	util/types.c	/^uint64_t int48_to_long(__u8 *data)$/;"	f
int_val	unit/test-argconfig-parse.c	/^	int int_val;$/;"	m	struct:cfg	file:
int_val	unit/test-argconfig-parse.c	/^	int int_val;$/;"	m	union:val	file:
int_val	util/argconfig.h	/^	int int_val;$/;"	m	union:argconfig_val
intel_assert_dump	plugins/intel/intel-nvme.c	/^struct intel_assert_dump {$/;"	s	file:
intel_cd_log	plugins/intel/intel-nvme.c	/^struct intel_cd_log {$/;"	s	file:
intel_event_dump	plugins/intel/intel-nvme.c	/^struct intel_event_dump {$/;"	s	file:
intel_event_header	plugins/intel/intel-nvme.c	/^struct intel_event_header {$/;"	s	file:
intel_id_ctrl	plugins/intel/intel-nvme.c	/^static void intel_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
intel_lat_stats	plugins/intel/intel-nvme.c	/^struct intel_lat_stats {$/;"	s	file:
intel_temp_stats	plugins/intel/intel-nvme.c	/^struct intel_temp_stats {$/;"	s	file:
intel_vu_log	plugins/intel/intel-nvme.c	/^struct intel_vu_log {$/;"	s	file:
intel_vu_nlog	plugins/intel/intel-nvme.c	/^struct intel_vu_nlog {$/;"	s	file:
intel_vu_version	plugins/intel/intel-nvme.c	/^struct intel_vu_version {$/;"	s	file:
internal_err1	plugins/inspur/inspur-utils.h	/^    __u32 internal_err1 : 1;$/;"	m	struct:vendor_warning_bit
internal_err10	plugins/inspur/inspur-utils.h	/^    __u32 internal_err10 : 1;$/;"	m	struct:vendor_warning_bit
internal_err11	plugins/inspur/inspur-utils.h	/^    __u32 internal_err11 : 1;$/;"	m	struct:vendor_warning_bit
internal_err12	plugins/inspur/inspur-utils.h	/^    __u32 internal_err12 : 1;$/;"	m	struct:vendor_warning_bit
internal_err13	plugins/inspur/inspur-utils.h	/^    __u32 internal_err13 : 1;$/;"	m	struct:vendor_warning_bit
internal_err14	plugins/inspur/inspur-utils.h	/^    __u32 internal_err14 : 1;$/;"	m	struct:vendor_warning_bit
internal_err15	plugins/inspur/inspur-utils.h	/^    __u32 internal_err15 : 1;$/;"	m	struct:vendor_warning_bit
internal_err16	plugins/inspur/inspur-utils.h	/^    __u32 internal_err16 : 1;$/;"	m	struct:vendor_warning_bit
internal_err2	plugins/inspur/inspur-utils.h	/^    __u32 internal_err2 : 1;$/;"	m	struct:vendor_warning_bit
internal_err3	plugins/inspur/inspur-utils.h	/^    __u32 internal_err3 : 1;$/;"	m	struct:vendor_warning_bit
internal_err4	plugins/inspur/inspur-utils.h	/^    __u32 internal_err4 : 1;$/;"	m	struct:vendor_warning_bit
internal_err5	plugins/inspur/inspur-utils.h	/^    __u32 internal_err5 : 1;$/;"	m	struct:vendor_warning_bit
internal_err6	plugins/inspur/inspur-utils.h	/^    __u32 internal_err6 : 1;$/;"	m	struct:vendor_warning_bit
internal_err7	plugins/inspur/inspur-utils.h	/^    __u32 internal_err7 : 1;$/;"	m	struct:vendor_warning_bit
internal_err8	plugins/inspur/inspur-utils.h	/^    __u32 internal_err8 : 1;$/;"	m	struct:vendor_warning_bit
internal_err9	plugins/inspur/inspur-utils.h	/^    __u32 internal_err9 : 1;$/;"	m	struct:vendor_warning_bit
internal_log	plugins/toshiba/toshiba-nvme.c	/^static int internal_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
intr_self_test	nvme.c	/^static void intr_self_test(int signum)$/;"	f	file:
invalid_tags	nvme.c	/^static int invalid_tags(__u64 storage_tag, __u64 ref_tag, __u8 sts, __u8 pif)$/;"	f	file:
invalid_uuid	nvme-print-stdout.c	/^static const uint8_t invalid_uuid[16] = {[0 ... 15] = 0xff };$/;"	v	file:
invalid_xfer_size	nvme-rpmb.c	/^static bool invalid_xfer_size(int blocks, unsigned int bpsz)$/;"	f	file:
ioLatencyHistogramOutput	plugins/memblaze/memblaze-nvme.c	/^static void ioLatencyHistogramOutput(FILE *fd, int index, int start, int end, char *unit0,$/;"	f	file:
io_apptag_err	plugins/inspur/inspur-utils.h	/^    __u32 io_apptag_err;$/;"	m	struct:r1_vendor_log_io_err
io_dma_disable_err	plugins/inspur/inspur-utils.h	/^    __u32 io_dma_disable_err;$/;"	m	struct:r1_vendor_log_io_err
io_dma_fatal_err	plugins/inspur/inspur-utils.h	/^    __u32 io_dma_fatal_err;$/;"	m	struct:r1_vendor_log_io_err
io_dma_linkdown_err	plugins/inspur/inspur-utils.h	/^    __u32 io_dma_linkdown_err;$/;"	m	struct:r1_vendor_log_io_err
io_dma_timeout_err	plugins/inspur/inspur-utils.h	/^    __u32 io_dma_timeout_err;$/;"	m	struct:r1_vendor_log_io_err
io_err	plugins/inspur/inspur-utils.h	/^    r1_vendor_log_io_err_t io_err[4];$/;"	m	struct:r1_vendor_log_s
io_guard_err	plugins/inspur/inspur-utils.h	/^    __u32 io_guard_err;$/;"	m	struct:r1_vendor_log_io_err
io_latency_histogram	plugins/memblaze/memblaze-nvme.c	/^int io_latency_histogram(char *file, char *buf, int print, int logid)$/;"	f
io_mgmt_recv	nvme.c	/^static int io_mgmt_recv(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
io_mgmt_send	nvme.c	/^static int io_mgmt_send(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
io_passthru	nvme.c	/^static int io_passthru(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
io_read_fail_cout	plugins/inspur/inspur-utils.h	/^    __u32 io_read_fail_cout;$/;"	m	struct:r1_vendor_log_io_err
io_reftag_err	plugins/inspur/inspur-utils.h	/^    __u32 io_reftag_err;$/;"	m	struct:r1_vendor_log_io_err
io_write_fail_cout	plugins/inspur/inspur-utils.h	/^    __u32 io_write_fail_cout;$/;"	m	struct:r1_vendor_log_io_err
ipackcount	plugins/innogrit/typedef.h	/^	unsigned int ipackcount;$/;"	m	struct:cdumpinfo
isDST	plugins/wdc/wdc-utils.h	/^	unsigned char isDST; \/*0 or 1 *\/$/;"	m	struct:_UtilsTimeInfo
is_blkdev	nvme.c	/^static bool is_blkdev(struct nvme_dev *dev)$/;"	f	file:
is_chardev	nvme.c	/^static bool is_chardev(struct nvme_dev *dev)$/;"	f	file:
is_class_info	nvme-models.c	/^static inline int is_class_info(char *line)$/;"	f	file:
is_comment	nvme-models.c	/^static inline bool is_comment(char *line)$/;"	f	file:
is_final_match	nvme-models.c	/^static int is_final_match(char *line, char *search)$/;"	f	file:
is_inner_sub_vendev	nvme-models.c	/^static int is_inner_sub_vendev(char *line, char *search, char *search2)$/;"	f	file:
is_input_file	plugins/solidigm/solidigm-telemetry.c	/^	bool is_input_file;$/;"	m	struct:config	file:
is_invalid_uuid	plugins/solidigm/solidigm-log-page-dir.c	/^static bool is_invalid_uuid(const struct nvme_id_uuid_list_entry entry)$/;"	f	file:
is_mid_level_match	nvme-models.c	/^static int is_mid_level_match(char *line, char *device, bool class)$/;"	f	file:
is_ocp_uuid	plugins/solidigm/solidigm-log-page-dir.c	/^static bool is_ocp_uuid(const struct nvme_id_uuid_list_entry entry)$/;"	f	file:
is_persistent_discovery_ctrl	fabrics.c	/^static bool is_persistent_discovery_ctrl(nvme_host_t h, nvme_ctrl_t c)$/;"	f	file:
is_solidigm_uuid	plugins/solidigm/solidigm-log-page-dir.c	/^static bool is_solidigm_uuid(const struct nvme_id_uuid_list_entry entry)$/;"	f	file:
is_tab	nvme-models.c	/^static inline int is_tab(char *line)$/;"	f	file:
is_top_level_match	nvme-models.c	/^static int is_top_level_match(char *line, const char* device, bool class)$/;"	f	file:
isalnum	ccan/ccan/str/str.h	172;"	d
isalnum	ccan/ccan/str/str.h	196;"	d
isalpha	ccan/ccan/str/str.h	173;"	d
isalpha	ccan/ccan/str/str.h	197;"	d
isascii	ccan/ccan/str/str.h	174;"	d
isascii	ccan/ccan/str/str.h	198;"	d
isblank	ccan/ccan/str/str.h	175;"	d
isblank	ccan/ccan/str/str.h	200;"	d
iscntrl	ccan/ccan/str/str.h	176;"	d
iscntrl	ccan/ccan/str/str.h	202;"	d
isdigit	ccan/ccan/str/str.h	177;"	d
isdigit	ccan/ccan/str/str.h	203;"	d
isgraph	ccan/ccan/str/str.h	178;"	d
isgraph	ccan/ccan/str/str.h	204;"	d
islower	ccan/ccan/str/str.h	179;"	d
islower	ccan/ccan/str/str.h	205;"	d
isprint	ccan/ccan/str/str.h	180;"	d
isprint	ccan/ccan/str/str.h	206;"	d
ispunct	ccan/ccan/str/str.h	181;"	d
ispunct	ccan/ccan/str/str.h	207;"	d
issigned	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t issigned : 1;$/;"	m	struct:cod_item	file:
isspace	ccan/ccan/str/str.h	182;"	d
isspace	ccan/ccan/str/str.h	208;"	d
isupper	ccan/ccan/str/str.h	183;"	d
isupper	ccan/ccan/str/str.h	209;"	d
isxdigit	ccan/ccan/str/str.h	184;"	d
isxdigit	ccan/ccan/str/str.h	210;"	d
item	plugins/solidigm/solidigm-garbage-collection.c	/^	struct __packed gc_item item[VU_GC_MAX_ITEMS];$/;"	m	struct:garbage_control_collection_log	typeref:struct:garbage_control_collection_log::gc_item	file:
item	plugins/solidigm/solidigm-smart.c	/^	struct nvme_additional_smart_log_item item[VU_SMART_MAX_ITEMS];$/;"	m	struct:vu_smart_log	typeref:struct:vu_smart_log::nvme_additional_smart_log_item	file:
itemArr	plugins/memblaze/memblaze-utils.h	/^	struct nvme_p4_smart_log_item itemArr[NR_SMART_ITEMS];$/;"	m	struct:nvme_p4_smart_log	typeref:struct:nvme_p4_smart_log::nvme_p4_smart_log_item
itemArr	plugins/ymtc/ymtc-utils.h	/^    struct nvme_ymtc_smart_log_item itemArr[NR_SMART_ITEMS];$/;"	m	struct:nvme_ymtc_smart_log	typeref:struct:nvme_ymtc_smart_log::nvme_ymtc_smart_log_item
item_id_2_u32	plugins/memblaze/memblaze-nvme.c	/^static __u32 item_id_2_u32(struct nvme_memblaze_smart_log_item *item)$/;"	f	file:
item_val	plugins/shannon/shannon-nvme.c	/^		__u8		item_val[6];$/;"	m	union:nvme_shannon_smart_log_item::__anon8	file:
items	plugins/memblaze/memblaze-utils.h	/^	struct nvme_memblaze_smart_log_item items[NR_SMART_ITEMS];$/;"	m	struct:nvme_memblaze_smart_log	typeref:struct:nvme_memblaze_smart_log::nvme_memblaze_smart_log_item
items	plugins/shannon/shannon-nvme.c	/^	struct nvme_shannon_smart_log_item items[ADD_SMART_ITEMS];$/;"	m	struct:nvme_shannon_smart_log	typeref:struct:nvme_shannon_smart_log::nvme_shannon_smart_log_item	file:
items	plugins/solidigm/solidigm-telemetry/cod.c	/^	struct cod_item items[];$/;"	m	struct:cod_map	typeref:struct:cod_map::cod_item	file:
items	plugins/solidigm/solidigm-telemetry/data-area.c	/^	struct toc_item items[];$/;"	m	struct:table_of_contents	typeref:struct:table_of_contents::toc_item	file:
items	plugins/toshiba/toshiba-nvme.c	/^	__u8 items[NR_SMART_ITEMS_C0];$/;"	m	struct:nvme_xdn_smart_log_c0	file:
iterate	ccan/ccan/strset/strset.c	/^static bool iterate(struct strset n,$/;"	f	file:
json_add_bitmap	nvme-print-json.c	/^static void json_add_bitmap(int i, __u8 seb, struct json_object *root)$/;"	f	file:
json_add_bucket	plugins/intel/intel-nvme.c	/^static void json_add_bucket(struct intel_lat_stats *stats,$/;"	f	file:
json_add_bucket_optane	plugins/intel/intel-nvme.c	/^static void json_add_bucket_optane(struct json_object *bucket_list, __u32 id,$/;"	f	file:
json_amzn_id_ctrl	plugins/amzn/amzn-nvme.c	/^static void json_amzn_id_ctrl(struct nvme_vu_id_ctrl_field *id,$/;"	f	file:
json_ana_log	nvme-print-json.c	/^static void json_ana_log(struct nvme_ana_log *ana_log, const char *devname,$/;"	f	file:
json_array_add_value_object	util/json.h	38;"	d
json_array_add_value_string	util/json.h	/^static inline int json_array_add_value_string(struct json_object *o, const char *v) {$/;"	f
json_boot_part_log	nvme-print-json.c	/^static void json_boot_part_log(void *bp_log, const char *devname,$/;"	f	file:
json_changed_ns_list_log	nvme-print-json.c	/^void json_changed_ns_list_log(struct nvme_ns_list *log,$/;"	f
json_connect_msg	nbft.c	/^static void json_connect_msg(nvme_ctrl_t c)$/;"	f	file:
json_connect_msg	nvme-print-json.c	/^static void json_connect_msg(nvme_ctrl_t c)$/;"	f	file:
json_create_array	util/json.h	12;"	d
json_create_object	util/json.h	11;"	d
json_ctrl_registers	nvme-print-json.c	/^static void json_ctrl_registers(void *bar, bool fabrics)$/;"	f	file:
json_detail_list	nvme-print-json.c	/^static void json_detail_list(nvme_root_t r)$/;"	f	file:
json_discovery_log	nvme-print-json.c	/^static void json_discovery_log(struct nvmf_discovery_log *log, int numrec)$/;"	f	file:
json_effects_log	nvme-print-json.c	/^struct json_object* json_effects_log(enum nvme_csi csi,$/;"	f
json_effects_log_list	nvme-print-json.c	/^static void json_effects_log_list(struct list_head *list)$/;"	f	file:
json_endurance_group_event_agg_log	nvme-print-json.c	/^static void json_endurance_group_event_agg_log($/;"	f	file:
json_endurance_log	nvme-print-json.c	/^static void json_endurance_log(struct nvme_endurance_group_log *endurance_group,$/;"	f	file:
json_error_log	nvme-print-json.c	/^static void json_error_log(struct nvme_error_log_page *err_log, int entries,$/;"	f	file:
json_fid_support_effects_log	nvme-print-json.c	/^static void json_fid_support_effects_log($/;"	f	file:
json_free_array	util/json.h	14;"	d
json_free_object	util/json.h	13;"	d
json_fw_log	nvme-print-json.c	/^void json_fw_log(struct nvme_firmware_slot *fw_log, const char *devname)$/;"	f
json_id_domain_list	nvme-print-json.c	/^static void json_id_domain_list(struct nvme_id_domain_list *id_dom)$/;"	f	file:
json_intel_id_ctrl	plugins/intel/intel-nvme.c	/^static void json_intel_id_ctrl(struct nvme_vu_id_ctrl_field *id,$/;"	f	file:
json_lat_stats	plugins/intel/intel-nvme.c	/^static void json_lat_stats(int write)$/;"	f	file:
json_lat_stats_3_0	plugins/intel/intel-nvme.c	/^static void json_lat_stats_3_0(struct intel_lat_stats *stats,$/;"	f	file:
json_lat_stats_4_0	plugins/intel/intel-nvme.c	/^static void json_lat_stats_4_0(struct intel_lat_stats *stats,$/;"	f	file:
json_lat_stats_linear	plugins/intel/intel-nvme.c	/^static void json_lat_stats_linear(struct intel_lat_stats *stats,$/;"	f	file:
json_lat_stats_v1000_0	plugins/intel/intel-nvme.c	/^static void json_lat_stats_v1000_0(struct optane_lat_stats *stats, int write)$/;"	f	file:
json_lba_status_log	nvme-print-json.c	/^static void json_lba_status_log(void *lba_status, __u32 size,$/;"	f	file:
json_list_item	nvme-print-json.c	/^static struct json_object *json_list_item(nvme_ns_t n)$/;"	f	file:
json_log_pages_supp	plugins/seagate/seagate-nvme.c	/^static void json_log_pages_supp(log_page_map *logPageMap)$/;"	f	file:
json_media_unit_stat_log	nvme-print-json.c	/^static void json_media_unit_stat_log(struct nvme_media_unit_stat_log *mus)$/;"	f	file:
json_mi_cmd_support_effects_log	nvme-print-json.c	/^static void json_mi_cmd_support_effects_log($/;"	f	file:
json_nvidia_id_ctrl	plugins/nvidia/nvidia-nvme.c	/^static void json_nvidia_id_ctrl(struct nvme_vu_id_ctrl_field *id,$/;"	f	file:
json_nvme_cmd_set_independent_id_ns	nvme-print-json.c	/^static void json_nvme_cmd_set_independent_id_ns($/;"	f	file:
json_nvme_endurance_group_list	nvme-print-json.c	/^static void json_nvme_endurance_group_list(struct nvme_id_endurance_group_list *endgrp_list)$/;"	f	file:
json_nvme_fdp_configs	nvme-print-json.c	/^static void json_nvme_fdp_configs(struct nvme_fdp_config_log *log, size_t len)$/;"	f	file:
json_nvme_fdp_events	nvme-print-json.c	/^static void json_nvme_fdp_events(struct nvme_fdp_events_log *log)$/;"	f	file:
json_nvme_fdp_ruh_status	nvme-print-json.c	/^static void json_nvme_fdp_ruh_status(struct nvme_fdp_ruh_status *status, size_t len)$/;"	f	file:
json_nvme_fdp_stats	nvme-print-json.c	/^static void json_nvme_fdp_stats(struct nvme_fdp_stats_log *log)$/;"	f	file:
json_nvme_fdp_usage	nvme-print-json.c	/^static void json_nvme_fdp_usage(struct nvme_fdp_ruhu_log *log, size_t len)$/;"	f	file:
json_nvme_id_ctrl	nvme-print-json.c	/^ void json_nvme_id_ctrl(struct nvme_id_ctrl *ctrl,$/;"	f
json_nvme_id_ctrl_nvm	nvme-print-json.c	/^static void json_nvme_id_ctrl_nvm(struct nvme_id_ctrl_nvm *ctrl_nvm)$/;"	f	file:
json_nvme_id_ns	nvme-print-json.c	/^static void json_nvme_id_ns(struct nvme_id_ns *ns, unsigned int nsid,$/;"	f	file:
json_nvme_id_ns_descs	nvme-print-json.c	/^static void json_nvme_id_ns_descs(void *data, unsigned int nsid)$/;"	f	file:
json_nvme_id_ns_granularity_list	nvme-print-json.c	/^static void json_nvme_id_ns_granularity_list($/;"	f	file:
json_nvme_id_nvmset	nvme-print-json.c	/^static void json_nvme_id_nvmset(struct nvme_id_nvmset_list *nvmset,$/;"	f	file:
json_nvme_id_uuid_list	nvme-print-json.c	/^static void json_nvme_id_uuid_list(const struct nvme_id_uuid_list *uuid_list)$/;"	f	file:
json_nvme_list_ctrl	nvme-print-json.c	/^static void json_nvme_list_ctrl(struct nvme_ctrl_list *ctrl_list)$/;"	f	file:
json_nvme_list_ns	nvme-print-json.c	/^static void json_nvme_list_ns(struct nvme_ns_list *ns_list)$/;"	f	file:
json_nvme_list_secondary_ctrl	nvme-print-json.c	/^static void json_nvme_list_secondary_ctrl(const struct nvme_secondary_ctrl_list *sc_list,$/;"	f	file:
json_nvme_nvm_id_ns	nvme-print-json.c	/^static void json_nvme_nvm_id_ns(struct nvme_nvm_id_ns *nvm_ns,$/;"	f	file:
json_nvme_primary_ctrl_cap	nvme-print-json.c	/^static void json_nvme_primary_ctrl_cap(const struct nvme_primary_ctrl_cap *caps)$/;"	f	file:
json_nvme_resv_report	nvme-print-json.c	/^void json_nvme_resv_report(struct nvme_resv_status *status,$/;"	f
json_nvme_zns_id_ctrl	nvme-print-json.c	/^static void json_nvme_zns_id_ctrl(struct nvme_zns_id_ctrl *ctrl)$/;"	f	file:
json_nvme_zns_id_ns	nvme-print-json.c	/^static void json_nvme_zns_id_ns(struct nvme_zns_id_ns *ns,$/;"	f	file:
json_nvme_zns_report_zones	nvme-print-json.c	/^static void json_nvme_zns_report_zones(void *report, __u32 descs,$/;"	f	file:
json_object_add_value_array	util/json.h	34;"	d
json_object_add_value_double	util/json.h	27;"	d
json_object_add_value_float	util/json.h	29;"	d
json_object_add_value_int	util/json.h	17;"	d
json_object_add_value_object	util/json.h	36;"	d
json_object_add_value_string	util/json.h	/^static inline int json_object_add_value_string(struct json_object *o, const char *k, const char *v) {$/;"	f
json_object_add_value_uint	util/json.h	15;"	d
json_object_add_value_uint128	util/json.h	25;"	d
json_object_add_value_uint64	util/json.h	23;"	d
json_object_get_uint64	util/json.h	21;"	d
json_object_new_uint64	util/json.h	20;"	d
json_output_message	nvme-print-json.c	/^static void json_output_message(bool error, const char *msg, va_list ap)$/;"	f	file:
json_output_object	nvme-print-json.c	/^static void json_output_object(struct json_object *root)$/;"	f	file:
json_output_perror	nvme-print-json.c	/^static void json_output_perror(const char *msg)$/;"	f	file:
json_output_status	nvme-print-json.c	/^static void json_output_status(int status)$/;"	f	file:
json_persistent_event_log	nvme-print-json.c	/^static void json_persistent_event_log(void *pevent_log_info, __u8 action,$/;"	f	file:
json_predictable_latency_event_agg_log	nvme-print-json.c	/^static void json_predictable_latency_event_agg_log($/;"	f	file:
json_predictable_latency_per_nvmset	nvme-print-json.c	/^static void json_predictable_latency_per_nvmset($/;"	f	file:
json_print_list_items	nvme-print-json.c	/^static void json_print_list_items(nvme_root_t r)$/;"	f	file:
json_print_nvme_subsystem_ctrls	nvme-print-json.c	/^static void json_print_nvme_subsystem_ctrls(nvme_subsystem_t s,$/;"	f	file:
json_print_nvme_subsystem_list	nvme-print-json.c	/^static void json_print_nvme_subsystem_list(nvme_root_t r, bool show_ana)$/;"	f	file:
json_print_nvme_subsystem_multipath	nvme-print-json.c	/^static unsigned int json_print_nvme_subsystem_multipath(nvme_subsystem_t s,$/;"	f	file:
json_print_nvme_subsystem_topology	nvme-print-json.c	/^static void json_print_nvme_subsystem_topology(nvme_subsystem_t s,$/;"	f	file:
json_print_object	util/json.h	43;"	d
json_print_ops	nvme-print-json.c	/^static struct print_ops json_print_ops = {$/;"	v	typeref:struct:print_ops	file:
json_print_ops	nvme-print-json.c	/^static struct print_ops json_print_ops;$/;"	v	typeref:struct:print_ops	file:
json_print_smart_log	plugins/seagate/seagate-nvme.c	/^static void json_print_smart_log(struct json_object *root, EXTENDED_SMART_INFO_T *ExtdSMARTInfo)$/;"	f	file:
json_print_smart_log_CF	plugins/seagate/seagate-nvme.c	/^static void json_print_smart_log_CF(struct json_object *root, vendor_log_page_CF *pLogPageCF)$/;"	f	file:
json_print_stx_smart_log_C0	plugins/seagate/seagate-nvme.c	/^static void json_print_stx_smart_log_C0(struct json_object *root, STX_EXT_SMART_LOG_PAGE_C0 *pLogPageC0)$/;"	f	file:
json_resv_notif_log	nvme-print-json.c	/^static void json_resv_notif_log(struct nvme_resv_notification_log *resv,$/;"	f	file:
json_rpc_2_0_mjr	plugins/nvidia/nvidia-nvme.c	/^	__u16		json_rpc_2_0_mjr;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
json_rpc_2_0_mnr	plugins/nvidia/nvidia-nvme.c	/^	__u16		json_rpc_2_0_mnr;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
json_rpc_2_0_ter	plugins/nvidia/nvidia-nvme.c	/^	__u16		json_rpc_2_0_ter;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
json_sanitize_log	nvme-print-json.c	/^static void json_sanitize_log(struct nvme_sanitize_log_page *sanitize_log,$/;"	f	file:
json_self_test_log	nvme-print-json.c	/^static void json_self_test_log(struct nvme_self_test_log *self_test, __u8 dst_entries,$/;"	f	file:
json_show_nbfts	plugins/nbft/nbft-plugin.c	/^static int json_show_nbfts(struct list_head *nbft_list, bool show_subsys,$/;"	f	file:
json_simple_list	nvme-print-json.c	/^static void json_simple_list(nvme_root_t r)$/;"	f	file:
json_simple_topology	nvme-print-json.c	/^static void json_simple_topology(nvme_root_t r)$/;"	f	file:
json_smart_log	nvme-print-json.c	/^static void json_smart_log(struct nvme_smart_log *smart, unsigned int nsid,$/;"	f	file:
json_stx_vs_fw_activate_history	plugins/seagate/seagate-nvme.c	/^static void json_stx_vs_fw_activate_history(stx_fw_activ_history_log_page fwActivHis)$/;"	f	file:
json_subsystem_topology_multipath	nvme-print-json.c	/^static unsigned int json_subsystem_topology_multipath(nvme_subsystem_t s,$/;"	f	file:
json_support_log	nvme-print-json.c	/^static void json_support_log(struct nvme_supported_log_pages *support_log,$/;"	f	file:
json_supported_cap_config_log	nvme-print-json.c	/^static void json_supported_cap_config_log($/;"	f	file:
json_temp_stats	plugins/seagate/seagate-nvme.c	/^static void json_temp_stats(__u32 temperature, __u32 PcbTemp, __u32 SocTemp, __u32 maxTemperature,$/;"	f	file:
json_vs_pcie_error_log	plugins/seagate/seagate-nvme.c	/^static void json_vs_pcie_error_log(pcie_error_log_page pcieErrorLog)$/;"	f	file:
json_zns_finish_zone_list	nvme-print-json.c	/^static void json_zns_finish_zone_list(__u64 nr_zones,$/;"	f	file:
kelvin_to_celsius	util/types.h	/^static inline long kelvin_to_celsius(long t)$/;"	f
key	plugins/intel/intel-nvme.c	/^	__u8			key;$/;"	m	struct:nvme_additional_smart_log_item	file:
key	plugins/scaleflux/sfx-nvme.c	/^	__u8			key;$/;"	m	struct:nvme_additional_smart_log_item	file:
last_overtemp	plugins/intel/intel-nvme.c	/^	__le64	last_overtemp;$/;"	m	struct:intel_temp_stats	file:
lat_mon_guid	plugins/ocp/ocp-nvme.c	/^static __u8 lat_mon_guid[C3_GUID_LENGTH] = {$/;"	v	file:
lat_stats_log_scale	plugins/intel/intel-nvme.c	/^static int lat_stats_log_scale(int i)$/;"	f	file:
lat_stats_make_json_root	plugins/intel/intel-nvme.c	/^static void lat_stats_make_json_root($/;"	f	file:
latency	nvme.c	/^	bool	latency;$/;"	m	struct:passthru_config	file:
latency	nvme.c	/^static const char *latency = "output latency statistics";$/;"	v	file:
latency	plugins/memblaze/memblaze-nvme.c	/^	__u32 latency;$/;"	m	struct:log_page_high_latency	file:
latency_monitor_feature_enable	plugins/ocp/ocp-nvme.c	/^	__u8  latency_monitor_feature_enable;$/;"	m	struct:feature_latency_monitor	file:
latency_statistics	plugins/solidigm/solidigm-latency-tracking.c	/^struct latency_statistics {$/;"	s	file:
latency_tracker	plugins/solidigm/solidigm-latency-tracking.c	/^struct latency_tracker {$/;"	s	file:
latency_tracker_bucket_parse	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_bucket_parse(const struct latency_tracker *lt, int id,$/;"	f	file:
latency_tracker_bucket_pos2us	plugins/solidigm/solidigm-latency-tracking.c	/^static int latency_tracker_bucket_pos2us(const struct latency_tracker *lt, int i)$/;"	f	file:
latency_tracker_get_log	plugins/solidigm/solidigm-latency-tracking.c	/^static int latency_tracker_get_log(struct latency_tracker *lt)$/;"	f	file:
latency_tracker_parse	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_parse(struct latency_tracker *lt)$/;"	f	file:
latency_tracker_parse_3_0	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_parse_3_0(const struct latency_tracker *lt)$/;"	f	file:
latency_tracker_parse_4_0	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_parse_4_0(const struct latency_tracker *lt)$/;"	f	file:
latency_tracker_parse_linear	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_parse_linear(const struct latency_tracker *lt,$/;"	f	file:
latency_tracker_populate_json_root	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_populate_json_root(const struct latency_tracker *lt,$/;"	f	file:
latency_tracker_post_parse	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_post_parse(struct latency_tracker *lt)$/;"	f	file:
latency_tracker_pre_parse	plugins/solidigm/solidigm-latency-tracking.c	/^static void latency_tracker_pre_parse(struct latency_tracker *lt)$/;"	f	file:
latency_tracking_enable	plugins/solidigm/solidigm-latency-tracking.c	/^static int latency_tracking_enable(struct latency_tracker *lt)$/;"	f	file:
latency_tracking_is_enable	plugins/solidigm/solidigm-latency-tracking.c	/^static int latency_tracking_is_enable(struct latency_tracker *lt, __u32 *enabled)$/;"	f	file:
lba_err	plugins/inspur/inspur-utils.h	/^    __u32 lba_err[6];$/;"	m	struct:r1_vendor_log_io_err
lba_err	plugins/inspur/inspur-utils.h	/^    __u64 lba_err[10];$/;"	m	struct:vendor_media_err
lba_format_index	nvme.c	/^static const char *lba_format_index = "The index into the LBA Format list\\n"$/;"	v	file:
lba_range	nvme-print.h	/^	void (*lba_range)(struct nvme_lba_range_type *lbrt, int nr_ranges);$/;"	m	struct:print_ops
lba_sec_sz	plugins/scaleflux/sfx-nvme.c	/^	__u64 lba_sec_sz;$/;"	m	struct:nvme_capacity_info	file:
lba_status	nvme-print.h	/^	void (*lba_status)(struct nvme_lba_status *list, unsigned long len);$/;"	m	struct:print_ops
lba_status_info	nvme-print.h	/^	void (*lba_status_info)(__u32 result);$/;"	m	struct:print_ops
lba_status_log	nvme-print.h	/^	void (*lba_status_log)(void *lba_status, __u32 size, const char *devname);$/;"	m	struct:print_ops
lbb_count	plugins/inspur/inspur-utils.h	/^    __u32 lbb_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
le128_to_cpu	util/types.c	/^nvme_uint128_t le128_to_cpu(__u8 *data)$/;"	f
le16	ccan/ccan/endian/endian.h	/^typedef leint16_t le16;$/;"	t
le16	ccan/ccan/short_types/short_types.h	/^typedef leint16_t le16;$/;"	t
le16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t le16_to_cpu(leint16_t le_val)$/;"	f
le32	ccan/ccan/endian/endian.h	/^typedef leint32_t le32;$/;"	t
le32	ccan/ccan/short_types/short_types.h	/^typedef leint32_t le32;$/;"	t
le32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t le32_to_cpu(leint32_t le_val)$/;"	f
le64	ccan/ccan/endian/endian.h	/^typedef leint64_t le64;$/;"	t
le64	ccan/ccan/short_types/short_types.h	/^typedef leint64_t le64;$/;"	t
le64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t le64_to_cpu(leint64_t le_val)$/;"	f
leint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE leint16_t;$/;"	t
leint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE leint32_t;$/;"	t
leint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE leint64_t;$/;"	t
length	plugins/micron/micron-nvme.c	/^	__u8                               length;$/;"	m	struct:fw_activation_history_entry	file:
length	plugins/wdc/wdc-nvme.c	/^	__le32	length;$/;"	m	struct:wdc_c2_cbs_data	file:
length	plugins/wdc/wdc-nvme.c	/^	__le32	length;$/;"	m	struct:wdc_c2_log_page_header	file:
length	plugins/wdc/wdc-nvme.c	/^	__le32	length;$/;"	m	struct:wdc_c2_log_subpage_header	file:
lid	plugins/solidigm/solidigm-log-page-dir.c	/^	} lid[NVME_LOG_SUPPORTED_LOG_PAGES_MAX];$/;"	m	struct:lid_dir	typeref:struct:lid_dir::__packed	file:
lid_dir	plugins/solidigm/solidigm-log-page-dir.c	/^struct lid_dir {$/;"	s	file:
life_overtemp	plugins/intel/intel-nvme.c	/^	__le64	life_overtemp;$/;"	m	struct:intel_temp_stats	file:
lifetime_block_erase_fail_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_block_erase_fail_count;       \/* 0x20 - Lifetime block erase fail count            *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_clean_shutdown_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_clean_shutdown_count;         \/* 0x2C - Lifetime clean shutdown count on power loss *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_die_failure_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_die_failure_count;            \/* 0x24 - Lifetime die failure count                 *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_link_rate_downgrade_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_link_rate_downgrade_count;    \/* 0x28 - Lifetime link rate downgrade count         *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_nand_writes	plugins/wdc/wdc-nvme.c	/^	__le64  lifetime_nand_writes;                  \/* 0x44 - Lifetime NAND write Lpages                 *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_power_on_hours	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_power_on_hours;               \/* 0x08 - Lifetime power on hours                    *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_program_fail_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_program_fail_count;           \/* 0x1C - Lifetime program fail count                *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_read_disturb_realloc_events	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_read_disturb_realloc_events;  \/* 0x40 - Lifetime read disturb reallocation events  *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_realloc_erase_block_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_realloc_erase_block_count;    \/* 0x04 - Lifetime reallocated erase block count     *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_retired_block_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_retired_block_count;          \/* 0x3C - Lifetime retired block count               *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_thermal_throttle_act	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_thermal_throttle_act;         \/* 0x60 - Lifetime thermal throttle activations      *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_uecc_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_uecc_count;                   \/* 0x0C - Lifetime UECC count                        *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_unclean_shutdown_count	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_unclean_shutdown_count;       \/* 0x30 - Lifetime unclean shutdowns on power loss   *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_user_reads	plugins/wdc/wdc-nvme.c	/^	__le64  lifetime_user_reads;                   \/* 0x58 - Lifetime user reads                        *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_user_writes	plugins/wdc/wdc-nvme.c	/^	__le64  lifetime_user_writes;                  \/* 0x50 - Lifetime user writes                       *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
lifetime_warning	plugins/inspur/inspur-utils.h	/^    __u32 lifetime_warning : 1;$/;"	m	struct:vendor_warning_bit
lifetime_wrt_amp_factor	plugins/wdc/wdc-nvme.c	/^	__le32  lifetime_wrt_amp_factor;               \/* 0x10 - Lifetime write amplification factor        *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
likely	ccan/ccan/likely/likely.h	32;"	d
likely	ccan/ccan/likely/likely.h	55;"	d
likely	ccan/ccan/likely/likely.h	61;"	d
likely_stats	ccan/ccan/likely/likely.c	/^char *likely_stats(unsigned int min_hits, unsigned int percent)$/;"	f
likely_stats_reset	ccan/ccan/likely/likely.c	/^void likely_stats_reset(void)$/;"	f
limited_retry	nvme.c	/^static const char *limited_retry = "limit media access attempts";$/;"	v	file:
line	ccan/ccan/likely/likely.c	/^	unsigned int line;$/;"	m	struct:trace	file:
linter_main	tests/run_py_linters.py	/^def linter_main() -> None:$/;"	f
list	nvme.c	/^static int list(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
list	plugins/zns/zns.c	/^static int list(int argc, char **argv, struct command *cmd,$/;"	f	file:
list	unit/test-argconfig-parse.c	/^	char *list;$/;"	m	struct:cfg	file:
list	unit/test-argconfig-parse.c	/^	char *list;$/;"	m	union:val	file:
list_add	ccan/ccan/list/list.h	203;"	d
list_add_	ccan/ccan/list/list.h	/^static inline void list_add_(struct list_head *h,$/;"	f
list_add_after	ccan/ccan/list/list.h	177;"	d
list_add_after_	ccan/ccan/list/list.h	/^static inline void list_add_after_(struct list_head *h,$/;"	f
list_add_before	ccan/ccan/list/list.h	226;"	d
list_add_before_	ccan/ccan/list/list.h	/^static inline void list_add_before_(struct list_head *h,$/;"	f
list_add_off	ccan/ccan/list/list.h	799;"	d
list_add_tail	ccan/ccan/list/list.h	249;"	d
list_add_tail_	ccan/ccan/list/list.h	/^static inline void list_add_tail_(struct list_head *h,$/;"	f
list_append_list	ccan/ccan/list/list.h	638;"	d
list_append_list_	ccan/ccan/list/list.h	/^static inline void list_append_list_(struct list_head *to,$/;"	f
list_check	ccan/ccan/list/list.c	/^struct list_head *list_check(const struct list_head *h, const char *abortstr)$/;"	f
list_check_node	ccan/ccan/list/list.c	/^struct list_node *list_check_node(const struct list_node *node,$/;"	f
list_ctrl	nvme.c	/^static int list_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
list_debug	ccan/ccan/list/list.h	95;"	d
list_debug	ccan/ccan/list/list.h	98;"	d
list_debug_node	ccan/ccan/list/list.h	96;"	d
list_debug_node	ccan/ccan/list/list.h	99;"	d
list_del	ccan/ccan/list/list.h	323;"	d
list_del_	ccan/ccan/list/list.h	/^static inline void list_del_(struct list_node *n, const char* abortstr)$/;"	f
list_del_from	ccan/ccan/list/list.h	/^static inline void list_del_from(struct list_head *h, struct list_node *n)$/;"	f
list_del_from_off	ccan/ccan/list/list.h	805;"	d
list_del_init	ccan/ccan/list/list.h	349;"	d
list_del_init_	ccan/ccan/list/list.h	/^static inline void list_del_init_(struct list_node *n, const char *abortstr)$/;"	f
list_del_off	ccan/ccan/list/list.h	802;"	d
list_empty	ccan/ccan/list/list.h	266;"	d
list_empty_	ccan/ccan/list/list.h	/^static inline bool list_empty_(const struct list_head *h, const char* abortstr)$/;"	f
list_empty_nocheck	ccan/ccan/list/list.h	/^static inline bool list_empty_nocheck(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	/^static inline bool list_empty_nodebug(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	286;"	d
list_entry	ccan/ccan/list/list.h	432;"	d
list_entry_off	ccan/ccan/list/list.h	790;"	d
list_entry_or_null	ccan/ccan/list/list.h	/^static inline void *list_entry_or_null(const struct list_head *h,$/;"	f
list_for_each	ccan/ccan/list/list.h	523;"	d
list_for_each_off	ccan/ccan/list/list.h	737;"	d
list_for_each_off_dir_	ccan/ccan/list/list.h	691;"	d
list_for_each_rev	ccan/ccan/list/list.h	539;"	d
list_for_each_rev_off	ccan/ccan/list/list.h	748;"	d
list_for_each_rev_safe	ccan/ccan/list/list.h	561;"	d
list_for_each_rev_safe_off	ccan/ccan/list/list.h	786;"	d
list_for_each_safe	ccan/ccan/list/list.h	581;"	d
list_for_each_safe_off	ccan/ccan/list/list.h	767;"	d
list_for_each_safe_off_dir_	ccan/ccan/list/list.h	698;"	d
list_head	ccan/ccan/list/list.h	/^struct list_head$/;"	s
list_head_init	ccan/ccan/list/list.h	/^static inline void list_head_init(struct list_head *h)$/;"	f
list_head_off	ccan/ccan/list/list.h	793;"	d
list_item	nvme-print.h	/^	void (*list_item)(nvme_ns_t n);$/;"	m	struct:print_ops
list_items	nvme-print.h	/^	void (*list_items)(nvme_root_t t);$/;"	m	struct:print_ops
list_next	ccan/ccan/list/list.h	598;"	d
list_node	ccan/ccan/list/list.h	/^struct list_node$/;"	s
list_node_from_off_	ccan/ccan/list/list.h	/^static inline struct list_node *list_node_from_off_(void *ptr, size_t off)$/;"	f
list_node_init	ccan/ccan/list/list.h	/^static inline void list_node_init(struct list_node *n)$/;"	f
list_node_to_off_	ccan/ccan/list/list.h	/^static inline void *list_node_to_off_(struct list_node *node, size_t off)$/;"	f
list_ns	nvme.c	/^static int list_ns(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
list_off_	ccan/ccan/list/list.h	819;"	d
list_off_var_	ccan/ccan/list/list.h	823;"	d
list_pop	ccan/ccan/list/list.h	472;"	d
list_pop_	ccan/ccan/list/list.h	/^static inline const void *list_pop_(const struct list_head *h, size_t off)$/;"	f
list_prepend_list	ccan/ccan/list/list.h	671;"	d
list_prepend_list_	ccan/ccan/list/list.h	/^static inline void list_prepend_list_(struct list_head *to,$/;"	f
list_prev	ccan/ccan/list/list.h	617;"	d
list_secondary_ctrl	nvme.c	/^static int list_secondary_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
list_subsys	nvme.c	/^static int list_subsys(int argc, char **argv, struct command *cmd,$/;"	f	file:
list_swap	ccan/ccan/list/list.h	404;"	d
list_swap_	ccan/ccan/list/list.h	/^static inline void list_swap_(struct list_node *o,$/;"	f
list_tail	ccan/ccan/list/list.h	500;"	d
list_tail_	ccan/ccan/list/list.h	/^static inline const void *list_tail_(const struct list_head *h, size_t off)$/;"	f
list_tail_off	ccan/ccan/list/list.h	796;"	d
list_top	ccan/ccan/list/list.h	448;"	d
list_top_	ccan/ccan/list/list.h	/^static inline const void *list_top_(const struct list_head *h, size_t off)$/;"	f
list_typeof	ccan/ccan/list/list.h	828;"	d
list_typeof	ccan/ccan/list/list.h	830;"	d
load_config	tests/nvme_test.py	/^    def load_config(self):$/;"	m	class:TestNVMe
locate_info	nvme-models.c	/^static char *locate_info(char *data, bool is_inner, bool is_class)$/;"	f	file:
lockdown_cmd	nvme.c	/^static int lockdown_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
log	plugins/solidigm/solidigm-telemetry/telemetry-log.h	/^	struct nvme_telemetry_log *log;$/;"	m	struct:telemetry_log	typeref:struct:telemetry_log::nvme_telemetry_log
logEntry	plugins/wdc/wdc-nvme.c	/^	struct WDC_DRIVE_ESSENTIALS *logEntry;		\/* Caller to allocate memory       *\/$/;"	m	struct:WDC_DE_VU_LOG_DIRECTORY	typeref:struct:WDC_DE_VU_LOG_DIRECTORY::WDC_DRIVE_ESSENTIALS	file:
logID	plugins/seagate/seagate-diag.h	/^   __u8                     logID;$/;"	m	struct:_stx_fw_activ_history_log_page
logPageGUID	plugins/seagate/seagate-diag.h	/^    U128            logPageGUID;        $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
logPageGUID	plugins/seagate/seagate-diag.h	/^   __u8                     logPageGUID[16];$/;"	m	struct:_stx_fw_activ_history_log_page
logPageHeaderFormatVersion	plugins/micron/micron-nvme.c	/^	unsigned char logPageHeaderFormatVersion;$/;"	m	struct:LogPageHeader_t	file:
logPageId	plugins/micron/micron-nvme.c	/^	unsigned char logPageId;$/;"	m	struct:LogPageHeader_t	file:
logPageId	plugins/wdc/wdc-nvme.c	/^	__u32	logPageId;$/;"	m	struct:NVME_VU_DE_LOGPAGE_LIST	file:
logPageIdStr	plugins/wdc/wdc-nvme.c	/^	char	logPageIdStr[5];$/;"	m	struct:NVME_VU_DE_LOGPAGE_LIST	file:
logPageLen	plugins/wdc/wdc-nvme.c	/^	__u32	logPageLen;$/;"	m	struct:NVME_VU_DE_LOGPAGE_LIST	file:
logPageName	plugins/wdc/wdc-nvme.c	/^	enum NVME_VU_DE_LOGPAGE_NAMES logPageName;$/;"	m	struct:NVME_VU_DE_LOGPAGE_LIST	typeref:enum:NVME_VU_DE_LOGPAGE_LIST::NVME_VU_DE_LOGPAGE_NAMES	file:
logPageVer	plugins/seagate/seagate-diag.h	/^    __u16           logPageVer;         $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
logPageVer	plugins/seagate/seagate-diag.h	/^   __u16                    logPageVer;$/;"	m	struct:_stx_fw_activ_history_log_page
log_data	plugins/netapp/netapp-nvme.c	/^	unsigned char		log_data[ONTAP_C2_LOG_SIZE];$/;"	m	struct:ontapdevice_info	file:
log_data	plugins/wdc/wdc-nvme.c	/^	__u8    log_data[40];$/;"	m	struct:wdc_dui_log_hdr	file:
log_data	plugins/wdc/wdc-nvme.c	/^	__u8    log_data[40];$/;"	m	struct:wdc_dui_log_hdr_v2	file:
log_data	plugins/wdc/wdc-nvme.c	/^	__u8    log_data[40];$/;"	m	struct:wdc_dui_log_hdr_v3	file:
log_data	plugins/wdc/wdc-nvme.c	/^	__u8    log_data[40];$/;"	m	struct:wdc_dui_log_hdr_v4	file:
log_id	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 log_id;$/;"	m	struct:fw_activation_history	file:
log_id	plugins/seagate/seagate-diag.h	/^    __u8        log_id;$/;"	m	struct:nvme_temetry_log_hdr
log_identifier	plugins/wdc/wdc-nvme.c	/^	__u8		log_identifier;$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
log_page	plugins/micron/micron-nvme.c	/^	__u8                               log_page;$/;"	m	struct:micron_fw_activation_history_table	file:
log_page_guid	plugins/ocp/ocp-fw-activation-history.c	/^	__u64 log_page_guid[2];$/;"	m	struct:fw_activation_history	file:
log_page_guid	plugins/ocp/ocp-nvme.c	/^	__u8	log_page_guid[0x10];		\/* 0x1F0 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
log_page_guid	plugins/ocp/ocp-nvme.c	/^	__u8    log_page_guid[0x10];                     \/* 16 bytes     - 0x1F0 - 0x1FF *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
log_page_guid	plugins/ocp/ocp-nvme.c	/^	__u8    log_page_guid[16];$/;"	m	struct:ocp_device_capabilities_log_page	file:
log_page_guid	plugins/ocp/ocp-nvme.c	/^	__u8    log_page_guid[C5_GUID_LENGTH];$/;"	m	struct:unsupported_requirement_log	file:
log_page_guid	plugins/wdc/wdc-nvme.c	/^	__u8		log_page_guid[WDC_C2_GUID_LENGTH];$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
log_page_guid	plugins/wdc/wdc-nvme.c	/^	__u8    log_page_guid[0x10];                    \/* 0x1F0 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
log_page_guid	plugins/wdc/wdc-nvme.c	/^	__u8    log_page_guid[WDC_OCP_C1_GUID_LENGTH];  \/* 496 - Log Page GUID                       *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
log_page_guid	plugins/wdc/wdc-nvme.c	/^	__u8    log_page_guid[WDC_OCP_C4_GUID_LENGTH]; \/* 4080 - Log Page GUID                       *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
log_page_guid	plugins/wdc/wdc-nvme.c	/^	__u8    log_page_guid[WDC_OCP_C5_GUID_LENGTH]; \/* 4080 - Log Page GUID                                      *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
log_page_high_latency	plugins/memblaze/memblaze-nvme.c	/^struct log_page_high_latency {$/;"	s	file:
log_page_map	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) log_page_map {$/;"	s
log_page_map	plugins/seagate/seagate-diag.h	/^} log_page_map;$/;"	t	typeref:struct:log_page_map
log_page_map_entry	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) log_page_map_entry {$/;"	s
log_page_map_entry	plugins/seagate/seagate-diag.h	/^} log_page_map_entry;$/;"	t	typeref:struct:log_page_map_entry
log_page_version	plugins/ocp/ocp-fw-activation-history.c	/^	__u16 log_page_version;$/;"	m	struct:fw_activation_history	file:
log_page_version	plugins/ocp/ocp-nvme.c	/^	__le16	log_page_version;		\/* 0x1EE *\/$/;"	m	struct:ssd_latency_monitor_log	file:
log_page_version	plugins/ocp/ocp-nvme.c	/^	__le16  log_page_version;                        \/* 2 bytes      - 0x1EE - 0x1EF *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
log_page_version	plugins/ocp/ocp-nvme.c	/^	__le16  log_page_version;$/;"	m	struct:ocp_device_capabilities_log_page	file:
log_page_version	plugins/ocp/ocp-nvme.c	/^	__le16  log_page_version;$/;"	m	struct:unsupported_requirement_log	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__le16		log_page_version;$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__le16  log_page_version;                       \/* 0x1EE *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__le16  log_page_version;                       \/* 494 - Log Page Version                    *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__le16  log_page_version;                      \/* 4078 - Log Page Version                                   *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__le16  log_page_version;                      \/* 4078 - Log Page Version                    *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__u16		log_page_version;$/;"	m	struct:wdc_nand_stats	file:
log_page_version	plugins/wdc/wdc-nvme.c	/^	__u16		log_page_version;$/;"	m	struct:wdc_nand_stats_V3	file:
log_pages_supp	plugins/seagate/seagate-nvme.c	/^static int log_pages_supp(int argc, char **argv, struct command *cmd,$/;"	f	file:
log_pages_supp_print	plugins/seagate/seagate-nvme.c	/^static char *log_pages_supp_print(__u32 pageID)$/;"	f	file:
log_record_frequency_hrs	plugins/virtium/virtium-nvme.c	/^	double		log_record_frequency_hrs;$/;"	m	struct:vtview_save_log_settings	file:
log_section	plugins/wdc/wdc-nvme.c	/^	struct	wdc_dui_log_section log_section[WDC_NVME_DUI_MAX_SECTION];$/;"	m	struct:wdc_dui_log_hdr	typeref:struct:wdc_dui_log_hdr::wdc_dui_log_section	file:
log_section	plugins/wdc/wdc-nvme.c	/^	struct	wdc_dui_log_section_v2 log_section[WDC_NVME_DUI_MAX_SECTION_V2];$/;"	m	struct:wdc_dui_log_hdr_v2	typeref:struct:wdc_dui_log_hdr_v2::wdc_dui_log_section_v2	file:
log_section	plugins/wdc/wdc-nvme.c	/^	struct	wdc_dui_log_section_v2 log_section[WDC_NVME_DUI_MAX_SECTION_V3];$/;"	m	struct:wdc_dui_log_hdr_v3	typeref:struct:wdc_dui_log_hdr_v3::wdc_dui_log_section_v2	file:
log_section	plugins/wdc/wdc-nvme.c	/^	struct	wdc_dui_log_section_v4 log_section[WDC_NVME_DUI_MAX_SECTION];$/;"	m	struct:wdc_dui_log_hdr_v4	typeref:struct:wdc_dui_log_hdr_v4::wdc_dui_log_section_v4	file:
log_size	plugins/micron/micron-nvme.c	/^	uint32_t log_size;$/;"	m	struct:micron_common_log_header	file:
log_size	plugins/solidigm/solidigm-internal-logs.c	/^	__u32    log_size;$/;"	m	struct:commom_header	file:
log_size	plugins/solidigm/solidigm-telemetry/telemetry-log.h	/^	size_t log_size;$/;"	m	struct:telemetry_log
log_size	plugins/wdc/wdc-nvme.c	/^	__le32	log_size;$/;"	m	struct:wdc_dui_log_hdr	file:
log_size	plugins/wdc/wdc-nvme.c	/^	__le32	log_size;$/;"	m	struct:wdc_log_size	file:
log_size	plugins/wdc/wdc-nvme.c	/^	__le64	log_size;$/;"	m	struct:wdc_dui_log_hdr_v2	file:
log_size	plugins/wdc/wdc-nvme.c	/^	__le64	log_size;$/;"	m	struct:wdc_dui_log_hdr_v3	file:
log_size	plugins/wdc/wdc-nvme.c	/^	__u8	log_size[4];$/;"	m	struct:wdc_e6_log_hdr	file:
log_size_sectors	plugins/wdc/wdc-nvme.c	/^	__le32	log_size_sectors;$/;"	m	struct:wdc_dui_log_hdr_v4	file:
log_type	plugins/innogrit/typedef.h	/^	unsigned int log_type : 8;$/;"	m	struct:evlg_flush_hdr
log_type	plugins/solidigm/solidigm-internal-logs.c	/^enum log_type {$/;"	g	file:
logpage	plugins/micron/micron-nvme.c	/^static struct logpage {$/;"	s	file:
logselect	plugins/intel/intel-nvme.c	/^	__u32 logselect;$/;"	m	struct:intel_vu_nlog	file:
logselect	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 logselect;$/;"	m	struct:nlog_dump_header_common	file:
long_suffix	util/argconfig.h	/^	uint64_t long_suffix;$/;"	m	union:argconfig_val
long_val	unit/test-argconfig-parse.c	/^	__u64 long_val;$/;"	m	struct:cfg	file:
long_val	unit/test-argconfig-parse.c	/^	__u64 long_val;$/;"	m	union:val	file:
long_val	util/argconfig.h	/^	unsigned long long_val;$/;"	m	union:argconfig_val
lookup_ctrl	fabrics.c	/^nvme_ctrl_t lookup_ctrl(nvme_host_t h, struct tr_config *trcfg)$/;"	f
lookup_discovery_ctrl	fabrics.c	/^static nvme_ctrl_t lookup_discovery_ctrl(nvme_root_t r, struct tr_config *trcfg)$/;"	f	file:
lookup_nvme_ctrl	fabrics.c	/^static nvme_ctrl_t lookup_nvme_ctrl(nvme_root_t r, const char *name)$/;"	f	file:
low_format_fail	plugins/inspur/inspur-utils.h	/^    __u32 low_format_fail : 1;$/;"	m	struct:vendor_warning_bit
low_pwr_cnt	plugins/innogrit/typedef.h	/^	unsigned int low_pwr_cnt;$/;"	m	struct:vsc_smart_log
lowest_temp	plugins/intel/intel-nvme.c	/^	__le64	lowest_temp;$/;"	m	struct:intel_temp_stats	file:
lpaPointer1High	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 lpaPointer1High;$/;"	m	struct:nlog_dump_header4_1	file:
lpaPointer1Low	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 lpaPointer1Low;$/;"	m	struct:nlog_dump_header4_1	file:
lpaPointer2High	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 lpaPointer2High;$/;"	m	struct:nlog_dump_header4_1	file:
lpaPointer2Low	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 lpaPointer2Low;$/;"	m	struct:nlog_dump_header4_1	file:
lsp	nvme.c	/^static const char *lsp = "log specific field";$/;"	v	file:
mac	nvme-rpmb.c	/^	unsigned char  mac[32];$/;"	m	struct:rpmb_data_frame_t	file:
mac_addr_to_string	plugins/nbft/nbft-plugin.c	/^static char *mac_addr_to_string(unsigned char mac_addr[6])$/;"	f	file:
magnitude	util/suffix.c	/^	long double magnitude;$/;"	m	struct:si_suffix	file:
main	.build/meson-private/sanitycheckc.c	/^int main(void) { int class=0; return class; }$/;"	f
main	ccan/ccan/hash/hash.c	/^int main()$/;"	f
main	nvme.c	/^int main(int argc, char **argv)$/;"	f
main	tests/run_py_linters.py	/^def main() -> None:$/;"	f
main	unit/test-argconfig-parse.c	/^int main(void)$/;"	f
main	unit/test-suffix-binary-parse.c	/^int main(void)$/;"	f
main	unit/test-suffix-si-parse.c	/^int main(void)$/;"	f
main	unit/test-uint128-si.c	/^int main(void)$/;"	f
main	unit/test-uint128.c	/^int main(void)$/;"	f
maj	plugins/intel/intel-nvme.c	/^	__u16 maj;$/;"	m	struct:intel_lat_stats	file:
maj	plugins/intel/intel-nvme.c	/^	__u16 maj;$/;"	m	struct:optane_lat_stats	file:
maj	plugins/scaleflux/sfx-nvme.c	/^	__u16    maj;$/;"	m	struct:sfx_lat_stats_myrtle	file:
maj	plugins/scaleflux/sfx-nvme.c	/^	__u16    maj;$/;"	m	struct:sfx_lat_stats_vanda	file:
maj	plugins/scaleflux/sfx-nvme.c	/^	__u16 maj;$/;"	m	struct:sfx_lat_status_ver	file:
major	plugins/intel/intel-nvme.c	/^	__u16    major;$/;"	m	struct:intel_vu_version	file:
major	plugins/solidigm/solidigm-internal-logs.c	/^	__u16    major;$/;"	m	struct:version	file:
make_hval	ccan/ccan/htable/htable.c	/^static inline uintptr_t make_hval(const struct htable *ht,$/;"	f	file:
malformedTlpStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 malformedTlpStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
map_log_level	nvme.c	/^int map_log_level(int verbose, bool quiet)$/;"	f
map_unit	plugins/scaleflux/sfx-nvme.c	/^	__u64 map_unit;$/;"	m	struct:sfx_freespace_ctx	file:
max	common.h	12;"	d
max	plugins/intel/intel-nvme.c	/^			__le16	max;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
max	plugins/memblaze/memblaze-utils.h	/^			__le16 max;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::power
max	plugins/memblaze/memblaze-utils.h	/^			__le16 max;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::temperature_p
max	plugins/memblaze/memblaze-utils.h	/^			__le16 max;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::wearleveling_count
max	plugins/memblaze/memblaze-utils.h	/^		__le16 max;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::temperature
max	plugins/scaleflux/sfx-nvme.c	/^			__le16	max;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
max	plugins/shannon/shannon-nvme.c	/^			__le16	max;$/;"	m	struct:nvme_shannon_smart_log_item::__anon8::wear_level	file:
max	plugins/solidigm/solidigm-smart.c	/^			__le16	max;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
maxNumLogEntries	plugins/wdc/wdc-nvme.c	/^	__u32 maxNumLogEntries;				\/* Caller to input memory allocated *\/$/;"	m	struct:WDC_DE_VU_LOG_DIRECTORY	file:
max_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int max_ec_cnt;$/;"	m	struct:vsc_smart_log
max_operating_temp	plugins/intel/intel-nvme.c	/^	__le64	max_operating_temp;$/;"	m	struct:intel_temp_stats	file:
max_pe_count	plugins/inspur/inspur-utils.h	/^    __u32 max_pe_count;$/;"	m	struct:r1_wearlvl_vendor_log_count
max_power	plugins/inspur/inspur-utils.h	/^    __u32 max_power;$/;"	m	struct:r1_vendor_log_s
max_recorded_temp	plugins/wdc/wdc-nvme.c	/^	__le32  max_recorded_temp;                     \/* 0x38 - Max recorded temperature                   *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
max_size	plugins/micron/micron-nvme.c	/^	uint32_t max_size;$/;"	m	struct:micron_common_log_header	file:
max_user_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 max_user_space;$/;"	m	struct:sfx_freespace_ctx	file:
mb_feature_to_string	plugins/memblaze/memblaze-nvme.c	/^static char *mb_feature_to_string(int feature)$/;"	f	file:
mb_get_additional_smart_log	plugins/memblaze/memblaze-nvme.c	/^static int mb_get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_get_powermanager_status	plugins/memblaze/memblaze-nvme.c	/^static int mb_get_powermanager_status(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_high_latency_log_print	plugins/memblaze/memblaze-nvme.c	/^static int mb_high_latency_log_print(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_lat_stats_log_print	plugins/memblaze/memblaze-nvme.c	/^static int mb_lat_stats_log_print(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_selective_download	plugins/memblaze/memblaze-nvme.c	/^static int mb_selective_download(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_set_high_latency_log	plugins/memblaze/memblaze-nvme.c	/^static int mb_set_high_latency_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mb_set_lat_stats	plugins/memblaze/memblaze-nvme.c	/^static int mb_set_lat_stats(int argc, char **argv,$/;"	f	file:
mb_set_powermanager_status	plugins/memblaze/memblaze-nvme.c	/^static int mb_set_powermanager_status(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
mcu_data_id	plugins/inspur/inspur-utils.h	/^    __u32 mcu_data_id;$/;"	m	struct:r1_vendor_log_s
mcu_disable	plugins/inspur/inspur-utils.h	/^    __u32 mcu_disable : 1;$/;"	m	struct:vendor_warning_bit
media_bytes_read	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	media_bytes_read;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
media_err	plugins/inspur/inspur-utils.h	/^    vendor_media_err_t media_err[4];$/;"	m	struct:r1_vendor_log_s
media_unit_stat_log	nvme-print.h	/^	void (*media_unit_stat_log)(struct nvme_media_unit_stat_log *mus);$/;"	m	struct:print_ops
media_version	plugins/intel/intel-nvme.c	/^static __u16 media_version[MEDIA_MAX_LEN] = {0};$/;"	v	file:
memblaze_clear_error_log	plugins/memblaze/memblaze-nvme.c	/^static int memblaze_clear_error_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
memblaze_fw_commit	plugins/memblaze/memblaze-nvme.c	/^static int memblaze_fw_commit(int fd, int select)$/;"	f	file:
meta	util/argconfig.h	/^	const char *meta;$/;"	m	struct:argconfig_commandline_options
metaData	plugins/wdc/wdc-nvme.c	/^	struct __packed WDC_DE_VU_FILE_META_DATA metaData;$/;"	m	struct:WDC_DRIVE_ESSENTIALS	typeref:struct:WDC_DRIVE_ESSENTIALS::WDC_DE_VU_FILE_META_DATA	file:
metadata	nvme.c	/^	char	*metadata;$/;"	m	struct:passthru_config	file:
metadata_len	nvme.c	/^	__u32	metadata_len;$/;"	m	struct:passthru_config	file:
mi	nvme.h	/^		} mi;$/;"	m	union:nvme_dev::__anon28	typeref:struct:nvme_dev::__anon28::__anon30
mi_cmd_support_effects_log	nvme-print.h	/^	void (*mi_cmd_support_effects_log)(struct nvme_mi_cmd_supported_effects_log *mi_cmd_log, const char *devname);$/;"	m	struct:print_ops
mic_bl	plugins/intel/intel-nvme.c	/^	__u8			mic_bl[4];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
mic_bl	plugins/solidigm/solidigm-id-ctrl.c	/^	char mic_bl[4];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
mic_fw	plugins/intel/intel-nvme.c	/^	__u8			mic_fw[4];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
mic_fw	plugins/solidigm/solidigm-id-ctrl.c	/^	char mic_fw[4];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
micron_clear_pcie_correctable_errors	plugins/micron/micron-nvme.c	/^static int micron_clear_pcie_correctable_errors(int argc, char **argv,$/;"	f	file:
micron_cloud_ssd_plugin_version	plugins/micron/micron-nvme.c	/^static int micron_cloud_ssd_plugin_version(int argc, char **argv,$/;"	f	file:
micron_clr_fw_activation_history	plugins/micron/micron-nvme.c	/^static int micron_clr_fw_activation_history(int argc, char **argv,$/;"	f	file:
micron_common_log_header	plugins/micron/micron-nvme.c	/^struct micron_common_log_header  {$/;"	s	file:
micron_drive_info	plugins/micron/micron-nvme.c	/^static int micron_drive_info(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_fw_activation_history	plugins/micron/micron-nvme.c	/^static int micron_fw_activation_history(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_fw_activation_history_header_print	plugins/micron/micron-nvme.c	/^static void micron_fw_activation_history_header_print(void)$/;"	f	file:
micron_fw_activation_history_table	plugins/micron/micron-nvme.c	/^struct __packed micron_fw_activation_history_table {$/;"	s	file:
micron_fw_commit	plugins/micron/micron-nvme.c	/^static int micron_fw_commit(int fd, int select)$/;"	f	file:
micron_internal_logs	plugins/micron/micron-nvme.c	/^static int micron_internal_logs(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_latency_stats_info	plugins/micron/micron-nvme.c	/^static int micron_latency_stats_info(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_latency_stats_logs	plugins/micron/micron-nvme.c	/^static int micron_latency_stats_logs(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_latency_stats_track	plugins/micron/micron-nvme.c	/^static int micron_latency_stats_track(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_logpage_dir	plugins/micron/micron-nvme.c	/^static int micron_logpage_dir(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_nand_stats	plugins/micron/micron-nvme.c	/^static int micron_nand_stats(int argc, char **argv,$/;"	f	file:
micron_ocp_smart_health_logs	plugins/micron/micron-nvme.c	/^static int micron_ocp_smart_health_logs(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_parse_options	plugins/micron/micron-nvme.c	/^static int micron_parse_options(struct nvme_dev **dev, int argc, char **argv,$/;"	f	file:
micron_pcie_stats	plugins/micron/micron-nvme.c	/^static int micron_pcie_stats(int argc, char **argv,$/;"	f	file:
micron_plugin_version	plugins/micron/micron-nvme.c	/^static int micron_plugin_version(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_selective_download	plugins/micron/micron-nvme.c	/^static int micron_selective_download(int argc, char **argv,$/;"	f	file:
micron_smart_ext_log	plugins/micron/micron-nvme.c	/^static int micron_smart_ext_log(int argc, char **argv,$/;"	f	file:
micron_smbus_option	plugins/micron/micron-nvme.c	/^static int micron_smbus_option(int argc, char **argv,$/;"	f	file:
micron_telemetry_cntrl_option	plugins/micron/micron-nvme.c	/^static int micron_telemetry_cntrl_option(int argc, char **argv,$/;"	f	file:
micron_telemetry_log	plugins/micron/micron-nvme.c	/^static int micron_telemetry_log(int fd, __u8 type, __u8 **data,$/;"	f	file:
micron_temp_stats	plugins/micron/micron-nvme.c	/^static int micron_temp_stats(int argc, char **argv, struct command *cmd,$/;"	f	file:
micron_vs_logpage	plugins/micron/micron-nvme.c	/^struct micron_vs_logpage {$/;"	s	file:
min	common.h	11;"	d
min	plugins/intel/intel-nvme.c	/^			__le16	min;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
min	plugins/intel/intel-nvme.c	/^	__u16 min;$/;"	m	struct:intel_lat_stats	file:
min	plugins/intel/intel-nvme.c	/^	__u16 min;$/;"	m	struct:optane_lat_stats	file:
min	plugins/memblaze/memblaze-utils.h	/^			__le16 min;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::power
min	plugins/memblaze/memblaze-utils.h	/^			__le16 min;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::temperature_p
min	plugins/memblaze/memblaze-utils.h	/^			__le16 min;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::wearleveling_count
min	plugins/memblaze/memblaze-utils.h	/^		__le16 min;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::temperature
min	plugins/micron/micron-nvme.c	39;"	d	file:
min	plugins/scaleflux/sfx-nvme.c	/^			__le16	min;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
min	plugins/scaleflux/sfx-nvme.c	/^	__u16    min;$/;"	m	struct:sfx_lat_stats_myrtle	file:
min	plugins/scaleflux/sfx-nvme.c	/^	__u16    min;$/;"	m	struct:sfx_lat_stats_vanda	file:
min	plugins/scaleflux/sfx-nvme.c	/^	__u16 min;$/;"	m	struct:sfx_lat_status_ver	file:
min	plugins/shannon/shannon-nvme.c	/^			__le16	min;$/;"	m	struct:nvme_shannon_smart_log_item::__anon8::wear_level	file:
min	plugins/solidigm/solidigm-smart.c	/^			__le16	min;$/;"	m	struct:nvme_additional_smart_log_item::__packed::wear_level	file:
min_dssd_ps	plugins/wdc/wdc-nvme.c	/^	__le16  min_dssd_ps;                           \/* 0014 - Minimum Valid DSSD Power State      *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
min_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int min_ec_cnt;$/;"	m	struct:vsc_smart_log
min_operating_temp	plugins/intel/intel-nvme.c	/^	__le64	min_operating_temp;$/;"	m	struct:intel_temp_stats	file:
min_valid_dssd_pwr_state	plugins/ocp/ocp-nvme.c	/^	__le16  min_valid_dssd_pwr_state;$/;"	m	struct:ocp_device_capabilities_log_page	file:
minor	plugins/intel/intel-nvme.c	/^	__u16    minor;$/;"	m	struct:intel_vu_version	file:
minor	plugins/solidigm/solidigm-internal-logs.c	/^	__u16    minor;$/;"	m	struct:version	file:
minute	plugins/wdc/wdc-utils.h	/^	unsigned int minute;$/;"	m	struct:_UtilsTimeInfo
mix	ccan/ccan/hash/hash.c	130;"	d	file:
mmap_registers	nvme.c	/^static void *mmap_registers(nvme_root_t r, struct nvme_dev *dev)$/;"	f	file:
mmio_read32	common.h	/^static inline uint32_t mmio_read32(void *addr)$/;"	f
mmio_read64	common.h	/^static inline uint64_t mmio_read64(void *addr)$/;"	f
mo	nvme.c	/^static const char *mo = "management operation";$/;"	v	file:
month	plugins/wdc/wdc-utils.h	/^	unsigned int month;$/;"	m	struct:_UtilsTimeInfo
more	plugin.h	/^	const char *more;$/;"	m	struct:program
mos	nvme.c	/^static const char *mos = "management operation specific";$/;"	v	file:
mpsmax_mpsmin	nvme-print-stdout.c	/^	__u8	mpsmax_mpsmin;$/;"	m	struct:nvme_bar_cap	file:
mqes	nvme-print-stdout.c	/^	__u16	mqes;$/;"	m	struct:nvme_bar_cap	file:
mrd_rr_good_cnt	plugins/innogrit/typedef.h	/^	unsigned int mrd_rr_good_cnt;$/;"	m	struct:vsc_smart_log
ms	plugins/innogrit/typedef.h	/^	unsigned int ms;$/;"	m	struct:eventlog
ms	plugins/innogrit/typedef.h	/^	unsigned int ms;$/;"	m	struct:eventlog_addindex
msecs	plugins/wdc/wdc-utils.h	/^	unsigned int msecs;$/;"	m	struct:_UtilsTimeInfo
mypy_cache_dir	tests/run_py_linters.py	/^mypy_cache_dir = build_dir \/ '.mypy_cache'$/;"	v
myrtle	plugins/scaleflux/sfx-nvme.c	/^		struct sfx_lat_stats_myrtle myrtle;$/;"	m	union:sfx_lat_stats::__anon19	typeref:struct:sfx_lat_stats::__anon19::sfx_lat_stats_myrtle	file:
n	ccan/ccan/list/list.h	/^	struct list_node n;$/;"	m	struct:list_head	typeref:struct:list_head::list_node
n	ccan/ccan/strset/strset.h	/^		struct node *n;$/;"	m	union:strset::__anon27	typeref:struct:strset::__anon27::node
name	nvme.h	/^	const char *name;$/;"	m	struct:nvme_dev
name	plugin.h	/^	char *name;$/;"	m	struct:command
name	plugin.h	/^	const char *name;$/;"	m	struct:plugin
name	plugin.h	/^	const char *name;$/;"	m	struct:program
namespace_desired	nvme.c	/^static const char *namespace_desired = "desired namespace";$/;"	v	file:
namespace_id	nvme.c	/^	__u32	namespace_id;$/;"	m	struct:passthru_config	file:
namespace_id	nvme.c	/^	__u32 namespace_id;$/;"	m	struct:feat_cfg	file:
namespace_id	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 namespace_id;$/;"	m	struct:config	file:
namespace_id	plugins/zns/zns.c	/^static const char *namespace_id = "Namespace identifier to use";$/;"	v	file:
namespace_id_desired	nvme.c	/^static const char *namespace_id_desired = "identifier of desired namespace";$/;"	v	file:
namespace_id_optional	nvme.c	/^static const char *namespace_id_optional = "optional namespace attached to controller";$/;"	v	file:
namespaces	nvme-print-stdout.c	/^	struct strset namespaces;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::strset	file:
nand_bad_block	plugins/wdc/wdc-nvme.c	/^	__le64  nand_bad_block;                         \/* 0x20 - NAND Bad Block Count             *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
nand_bytes_rd_hi	plugins/wdc/wdc-nvme.c	/^	__le64  nand_bytes_rd_hi;                       \/* 0x18 - NAND Bytes Read hi               *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
nand_bytes_rd_lo	plugins/wdc/wdc-nvme.c	/^	__le64  nand_bytes_rd_lo;                       \/* 0x10 - NAND Bytes Read lo               *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
nand_bytes_wr_hi	plugins/wdc/wdc-nvme.c	/^	__le64  nand_bytes_wr_hi;                       \/* 0x08 - NAND Bytes Written hi            *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
nand_bytes_wr_lo	plugins/wdc/wdc-nvme.c	/^	__le64  nand_bytes_wr_lo;                       \/* 0x00 - NAND Bytes Written lo            *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
nand_bytes_written	plugins/inspur/inspur-utils.h	/^    __u64 nand_bytes_written[4];$/;"	m	struct:r1_vendor_log_s
nand_bytes_written	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	nand_bytes_written;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
nand_bytes_written	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item nand_bytes_written;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
nand_eras_cnt	plugins/inspur/inspur-utils.h	/^    __u64 nand_eras_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_eras_fail_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_eras_fail_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_erase_err_cnt	plugins/dera/dera-nvme.c	/^	__u8 nand_erase_err_cnt[4]; $/;"	m	struct:nvme_dera_smart_info_log	file:
nand_erase_failure	plugins/wdc/wdc-nvme.c	/^	__le32		nand_erase_failure;$/;"	m	struct:wdc_nand_stats	file:
nand_init_fail	plugins/dera/dera-nvme.c	/^	__u8 nand_init_fail[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
nand_max_temper	plugins/inspur/inspur-utils.h	/^    __u32 nand_max_temper;$/;"	m	struct:r1_vendor_log_s
nand_overtemper_cout	plugins/inspur/inspur-utils.h	/^    __u32 nand_overtemper_cout;$/;"	m	struct:r1_vendor_log_s
nand_page_write_cnt	plugins/innogrit/typedef.h	/^	unsigned long long nand_page_write_cnt;$/;"	m	struct:vsc_smart_log
nand_prg_cnt	plugins/inspur/inspur-utils.h	/^    __u64 nand_prg_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_prg_fail_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_prg_fail_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_prog_failure	plugins/wdc/wdc-nvme.c	/^	__le32		nand_prog_failure;$/;"	m	struct:wdc_nand_stats	file:
nand_program_err_cnt	plugins/dera/dera-nvme.c	/^	__u8 nand_program_err_cnt[4]; $/;"	m	struct:nvme_dera_smart_info_log	file:
nand_rd_cnt	plugins/inspur/inspur-utils.h	/^    __u64 nand_rd_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_rd_rebuild_fail_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_rd_rebuild_fail_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_rd_soft_decode_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_rd_soft_decode_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_rd_srr_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_rd_srr_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_rd_unc_cnt	plugins/inspur/inspur-utils.h	/^    __u32 nand_rd_unc_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
nand_read_retry_fail_cnt	plugins/dera/dera-nvme.c	/^	__u8 nand_read_retry_fail_cnt[4]; $/;"	m	struct:nvme_dera_smart_info_log	file:
nand_rec_trigger_event	plugins/wdc/wdc-nvme.c	/^	__le64		nand_rec_trigger_event;$/;"	m	struct:wdc_nand_stats	file:
nand_write_slc	plugins/wdc/wdc-nvme.c	/^	__u8		nand_write_slc[16];$/;"	m	struct:wdc_nand_stats	file:
nand_write_slc	plugins/wdc/wdc-nvme.c	/^	__u8		nand_write_slc[16];$/;"	m	struct:wdc_nand_stats_V3	file:
nand_write_tlc	plugins/wdc/wdc-nvme.c	/^	__u8		nand_write_tlc[16];$/;"	m	struct:wdc_nand_stats	file:
nand_write_tlc	plugins/wdc/wdc-nvme.c	/^	__u8		nand_write_tlc[16];$/;"	m	struct:wdc_nand_stats_V3	file:
nbft	nbft.h	/^	struct nbft_info *nbft;$/;"	m	struct:nbft_file_entry	typeref:struct:nbft_file_entry::nbft_info
nbft_file_entry	nbft.h	/^struct nbft_file_entry {$/;"	s
nbft_filter	nbft.c	/^int nbft_filter(const struct dirent *dent)$/;"	f
nbft_to_json	plugins/nbft/nbft-plugin.c	/^static struct json_object *nbft_to_json(struct nbft_info *nbft, bool show_subsys,$/;"	f	file:
netapp_convert_string	plugins/netapp/netapp-nvme.c	/^static void netapp_convert_string(char *dst, char *src, unsigned int count)$/;"	f	file:
netapp_get_ns_size	plugins/netapp/netapp-nvme.c	/^static void netapp_get_ns_size(char *size, unsigned long long *lba,$/;"	f	file:
netapp_get_ontap_labels	plugins/netapp/netapp-nvme.c	/^static void netapp_get_ontap_labels(char *vsname, char *nspath,$/;"	f	file:
netapp_nguid_to_str	plugins/netapp/netapp-nvme.c	/^static void netapp_nguid_to_str(char *str, __u8 *nguid)$/;"	f	file:
netapp_nvme_filter	plugins/netapp/netapp-nvme.c	/^static int netapp_nvme_filter(const struct dirent *d)$/;"	f	file:
netapp_ontapdevice_json	plugins/netapp/netapp-nvme.c	/^static void netapp_ontapdevice_json(struct json_object *devices, char *devname,$/;"	f	file:
netapp_ontapdevices	plugins/netapp/netapp-nvme.c	/^static int netapp_ontapdevices(int argc, char **argv, struct command *command,$/;"	f	file:
netapp_ontapdevices_get_info	plugins/netapp/netapp-nvme.c	/^static int netapp_ontapdevices_get_info(int fd, struct ontapdevice_info *item,$/;"	f	file:
netapp_ontapdevices_print	plugins/netapp/netapp-nvme.c	/^static void netapp_ontapdevices_print(struct ontapdevice_info *devices,$/;"	f	file:
netapp_output_format	plugins/netapp/netapp-nvme.c	/^static int netapp_output_format(char *format)$/;"	f	file:
netapp_smdevice_json	plugins/netapp/netapp-nvme.c	/^static void netapp_smdevice_json(struct json_object *devices, char *devname,$/;"	f	file:
netapp_smdevices	plugins/netapp/netapp-nvme.c	/^static int netapp_smdevices(int argc, char **argv, struct command *command,$/;"	f	file:
netapp_smdevices_get_info	plugins/netapp/netapp-nvme.c	/^static int netapp_smdevices_get_info(int fd, struct smdevice_info *item,$/;"	f	file:
netapp_smdevices_print	plugins/netapp/netapp-nvme.c	/^static void netapp_smdevices_print(struct smdevice_info *devices, int count, int format)$/;"	f	file:
newFW	plugins/seagate/seagate-diag.h	/^    __u8    newFW[8];$/;"	m	struct:_stx_fw_activ_his_ele
new_fw	plugins/ocp/ocp-fw-activation-history.c	/^	char new_fw[8];$/;"	m	struct:fw_activation_history_entry	file:
new_fw_version	plugins/wdc/wdc-nvme.c	/^	__le64 new_fw_version;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
next	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::list_node
next	plugin.h	/^	struct plugin *next;$/;"	m	struct:plugin	typeref:struct:plugin::plugin
next_pointer	plugins/micron/micron-nvme.c	/^	uint32_t next_pointer;$/;"	m	struct:micron_common_log_header	file:
nguid	plugins/huawei/huawei-nvme.c	/^	unsigned int nguid;$/;"	m	struct:huawei_list_element_len	file:
nlog_dump_header3_0	plugins/solidigm/solidigm-internal-logs.c	/^struct nlog_dump_header3_0 {$/;"	s	file:
nlog_dump_header4_0	plugins/solidigm/solidigm-internal-logs.c	/^struct nlog_dump_header4_0 {$/;"	s	file:
nlog_dump_header4_1	plugins/solidigm/solidigm-internal-logs.c	/^struct nlog_dump_header4_1 {$/;"	s	file:
nlog_dump_header_common	plugins/solidigm/solidigm-internal-logs.c	/^struct nlog_dump_header_common {$/;"	s	file:
nlog_get_events	plugins/solidigm/solidigm-telemetry/nlog.c	/^static uint32_t nlog_get_events(const uint32_t *nlog, const uint32_t nlog_size, int start_offset,$/;"	f	file:
nlog_get_pos	plugins/solidigm/solidigm-telemetry/nlog.c	/^static uint32_t nlog_get_pos(const uint32_t *nlog, const uint32_t nlog_size, int pos)$/;"	f	file:
nlogbufnum	plugins/intel/intel-nvme.c	/^	__u32 nlogbufnum;$/;"	m	struct:intel_vu_nlog	file:
nlogbufnum	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnum;$/;"	m	struct:nlog_dump_header3_0	file:
nlogbufnum	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnum;$/;"	m	struct:nlog_dump_header4_0	file:
nlogbufnum	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnum;$/;"	m	struct:nlog_dump_header4_1	file:
nlogbufnummax	plugins/intel/intel-nvme.c	/^	__u32 nlogbufnummax;$/;"	m	struct:intel_vu_nlog	file:
nlogbufnummax	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnummax;$/;"	m	struct:nlog_dump_header3_0	file:
nlogbufnummax	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnummax;$/;"	m	struct:nlog_dump_header4_0	file:
nlogbufnummax	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbufnummax;$/;"	m	struct:nlog_dump_header4_1	file:
nlogbytesize	plugins/intel/intel-nvme.c	/^	__u32 nlogbytesize;$/;"	m	struct:intel_vu_nlog	file:
nlogbytesize	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogbytesize;$/;"	m	struct:nlog_dump_header_common	file:
nlogname	plugins/intel/intel-nvme.c	/^	__u32 nlogname;$/;"	m	struct:intel_vu_nlog	file:
nlogname	plugins/solidigm/solidigm-internal-logs.c	/^	char nlogname[4];$/;"	m	struct:nlog_dump_header_common	file:
nlognum	plugins/intel/intel-nvme.c	/^	__u32 nlognum;$/;"	m	struct:intel_vu_nlog	file:
nlognum	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlognum;$/;"	m	struct:nlog_dump_header_common	file:
nlogpausestatus	plugins/intel/intel-nvme.c	/^	__u32 nlogpausestatus;$/;"	m	struct:intel_vu_nlog	file:
nlogpausestatus	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogpausestatus;$/;"	m	struct:nlog_dump_header3_0	file:
nlogpausestatus	plugins/solidigm/solidigm-internal-logs.c	/^	__u64 nlogpausestatus;$/;"	m	struct:nlog_dump_header4_0	file:
nlogpausestatus	plugins/solidigm/solidigm-internal-logs.c	/^	__u64 nlogpausestatus;$/;"	m	struct:nlog_dump_header4_1	file:
nlogprimarybuffsize	plugins/intel/intel-nvme.c	/^	__u32 nlogprimarybuffsize;$/;"	m	struct:intel_vu_nlog	file:
nlogprimarybuffsize	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 nlogprimarybuffsize;$/;"	m	struct:nlog_dump_header_common	file:
nlw	plugins/intel/intel-nvme.c	/^	__u8			nlw;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
nlw	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 nlw;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
nmVal	plugins/memblaze/memblaze-utils.h	/^	__u8 nmVal[NM_SIZE];$/;"	m	struct:nvme_p4_smart_log_item
nmVal	plugins/ymtc/ymtc-utils.h	/^    u8 nmVal[NM_SIZE];$/;"	m	struct:nvme_ymtc_smart_log_item
nmi_recv	nvme.c	/^static int nmi_recv(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
nmi_send	nvme.c	/^static int nmi_send(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
nmval	plugins/memblaze/memblaze-utils.h	/^		__le16	nmval;$/;"	m	union:nvme_memblaze_smart_log_item::__anon12
node	ccan/ccan/strset/strset.c	/^struct node {$/;"	s	file:
node	nbft.h	/^	struct list_node node;$/;"	m	struct:nbft_file_entry	typeref:struct:nbft_file_entry::list_node
node	nvme-print.h	/^	struct list_node node;$/;"	m	struct:nvme_effects_log_node	typeref:struct:nvme_effects_log_node::list_node
node	plugins/huawei/huawei-nvme.c	/^	char                node[1024];$/;"	m	struct:huawei_list_item	file:
node	plugins/huawei/huawei-nvme.c	/^	unsigned int node;$/;"	m	struct:huawei_list_element_len	file:
non_media_crc_err_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item non_media_crc_err_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
nonce	nvme-rpmb.c	/^	unsigned char  nonce[16];$/;"	m	struct:rpmb_data_frame_t	file:
norm	plugins/intel/intel-nvme.c	/^	__u8			norm;$/;"	m	struct:nvme_additional_smart_log_item	file:
norm	plugins/scaleflux/sfx-nvme.c	/^	__u8			norm;$/;"	m	struct:nvme_additional_smart_log_item	file:
norm	plugins/shannon/shannon-nvme.c	/^	__u8			norm;$/;"	m	struct:nvme_shannon_smart_log_item	file:
normal_show_nbft	plugins/nbft/nbft-plugin.c	/^static void normal_show_nbft(struct nbft_info *nbft, bool show_subsys,$/;"	f	file:
normal_show_nbfts	plugins/nbft/nbft-plugin.c	/^static void normal_show_nbfts(struct list_head *nbft_list, bool show_subsys,$/;"	f	file:
normalized	plugins/solidigm/solidigm-smart.c	/^	__u8			normalized;$/;"	m	struct:nvme_additional_smart_log_item	file:
normalized_value	plugins/wdc/wdc-nvme.c	/^	__u8	normalized_value;$/;"	m	struct:wdc_bd_ca_log_format	file:
nr_blks	plugins/wdc/wdc-nvme.c	/^	__le64	nr_blks;		\/* NAND Read Blocks			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
nr_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	nr_cmds;		\/* NAND Read Commands			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
nrbw	plugins/wdc/wdc-nvme.c	/^	__le64	nrbw;			\/* NAND Read Before Write		*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
ns	plugins/huawei/huawei-nvme.c	/^	struct nvme_id_ns   ns;$/;"	m	struct:huawei_list_item	typeref:struct:huawei_list_item::nvme_id_ns	file:
ns	plugins/netapp/netapp-nvme.c	/^	struct nvme_id_ns	ns;$/;"	m	struct:ontapdevice_info	typeref:struct:ontapdevice_info::nvme_id_ns	file:
ns	plugins/netapp/netapp-nvme.c	/^	struct nvme_id_ns	ns;$/;"	m	struct:smdevice_info	typeref:struct:smdevice_info::nvme_id_ns	file:
ns_cmp	nvme-print-stdout.c	/^static bool ns_cmp(const struct nvme_ns *n, const char *name)$/;"	f	file:
ns_descs	nvme.c	/^static int ns_descs(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
ns_id	plugins/huawei/huawei-nvme.c	/^	unsigned int ns_id;$/;"	m	struct:huawei_list_element_len	file:
ns_key	nvme-print-stdout.c	/^static const char *ns_key(const struct nvme_ns *n)$/;"	f	file:
ns_list	nvme-print.h	/^	void (*ns_list)(struct nvme_ns_list *ns_list);$/;"	m	struct:print_ops
ns_list_log	nvme-print.h	/^	void (*ns_list_log)(struct nvme_ns_list *log, const char *devname);$/;"	m	struct:print_ops
ns_name	plugins/huawei/huawei-nvme.c	/^	char                ns_name[NS_NAME_LEN];$/;"	m	struct:huawei_list_item	file:
ns_name	plugins/huawei/huawei-nvme.c	/^	unsigned int ns_name;$/;"	m	struct:huawei_list_element_len	file:
ns_rescan	nvme.c	/^static int ns_rescan(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
nsid	plugins/huawei/huawei-nvme.c	/^	unsigned int        nsid;$/;"	m	struct:huawei_list_item	file:
nsid	plugins/memblaze/memblaze-nvme.c	/^	__u32 nsid;$/;"	m	struct:log_page_high_latency	file:
nsid	plugins/netapp/netapp-nvme.c	/^	unsigned int		nsid;$/;"	m	struct:ontapdevice_info	file:
nsid	plugins/netapp/netapp-nvme.c	/^	unsigned int		nsid;$/;"	m	struct:smdevice_info	file:
nssf	nvme.c	/^static const char *nssf = "NVMe Security Specific Field";$/;"	v	file:
nsze_from_oacs	plugins/micron/micron-nvme.c	/^static bool nsze_from_oacs; \/* read nsze for now from idd[4059] *\/$/;"	v	file:
nul_byte	ccan/ccan/strset/strset.c	/^	char nul_byte;$/;"	m	struct:node	file:
numDwordsInEntireLogPage	plugins/micron/micron-nvme.c	/^	unsigned int numDwordsInEntireLogPage;$/;"	m	struct:LogPageHeader_t	file:
numDwordsInLogPageHeaderHi	plugins/micron/micron-nvme.c	/^	unsigned char numDwordsInLogPageHeaderHi;$/;"	m	struct:LogPageHeader_t	file:
numDwordsInLogPageHeaderLo	plugins/micron/micron-nvme.c	/^	unsigned char numDwordsInLogPageHeaderLo;$/;"	m	struct:LogPageHeader_t	file:
numLBA	plugins/memblaze/memblaze-nvme.c	/^	__u16 numLBA;$/;"	m	struct:log_page_high_latency	file:
numOfVULogPages	plugins/wdc/wdc-nvme.c	/^	__u32 numOfVULogPages;$/;"	m	struct:WDC_NVME_DE_VU_LOGPAGES	file:
numOfValidLogEntries	plugins/wdc/wdc-nvme.c	/^	__u32 numOfValidLogEntries;			\/* API will output this value      *\/$/;"	m	struct:WDC_DE_VU_LOG_DIRECTORY	file:
numValidDwordsInPayload	plugins/micron/micron-nvme.c	/^	unsigned int numValidDwordsInPayload;$/;"	m	struct:LogPageHeader_t	file:
numValidFwActHisEnt	plugins/seagate/seagate-diag.h	/^   __u32                    numValidFwActHisEnt;$/;"	m	struct:_stx_fw_activ_history_log_page
num_entries	plugins/micron/micron-nvme.c	/^	__le32                             num_entries;$/;"	m	struct:micron_fw_activation_history_table	file:
num_entries	plugins/wdc/wdc-nvme.c	/^	__le32		num_entries;$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
num_entries	plugins/wdc/wdc-nvme.c	/^	__u8 num_entries;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
num_pcie_ports	plugins/wdc/wdc-nvme.c	/^	__le16  num_pcie_ports;                        \/* 0000 - Number of PCI Express Ports         *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
num_subpages	plugins/wdc/wdc-nvme.c	/^	uint8_t	num_subpages;$/;"	m	struct:wdc_log_page_header	file:
numcores	plugins/intel/intel-nvme.c	/^	__u32    numcores;$/;"	m	struct:intel_vu_log	file:
numcores	plugins/solidigm/solidigm-internal-logs.c	/^	__u32    numcores;$/;"	m	struct:commom_header	file:
numeventdumps	plugins/intel/intel-nvme.c	/^	__u32 numeventdumps;$/;"	m	struct:intel_event_dump	file:
numeventdumps	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 numeventdumps;$/;"	m	struct:event_dump_instance	file:
nvidia_id_ctrl	plugins/nvidia/nvidia-nvme.c	/^static void nvidia_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
nvm_id_ctrl	nvme.c	/^static int nvm_id_ctrl(int argc, char **argv, struct command *cmd,$/;"	f	file:
nvm_id_ns	nvme-print.h	/^	void (*nvm_id_ns)(struct nvme_nvm_id_ns *nvm_ns, unsigned int nsid, struct nvme_id_ns *ns, unsigned int lba_index, bool cap_only);$/;"	m	struct:print_ops
nvm_id_ns	nvme.c	/^static int nvm_id_ns(int argc, char **argv, struct command *cmd,$/;"	f	file:
nvm_id_ns_lba_format	nvme.c	/^static int nvm_id_ns_lba_format(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
nvme	nvme.c	/^static struct program nvme = {$/;"	v	typeref:struct:program	file:
nvmeErrataVer	plugins/seagate/seagate-diag.h	/^    __u8            nvmeErrataVer;      $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
nvme_additional_smart_log	plugins/intel/intel-nvme.c	/^struct nvme_additional_smart_log {$/;"	s	file:
nvme_additional_smart_log	plugins/scaleflux/sfx-nvme.c	/^struct nvme_additional_smart_log {$/;"	s	file:
nvme_additional_smart_log_item	plugins/intel/intel-nvme.c	/^struct __packed nvme_additional_smart_log_item {$/;"	s	file:
nvme_additional_smart_log_item	plugins/scaleflux/sfx-nvme.c	/^struct __packed nvme_additional_smart_log_item {$/;"	s	file:
nvme_additional_smart_log_item	plugins/solidigm/solidigm-smart.c	/^struct __packed nvme_additional_smart_log_item {$/;"	s	file:
nvme_admin_change_cap	plugins/scaleflux/sfx-nvme.c	/^	nvme_admin_change_cap		= 0xd4,$/;"	e	enum:sfx_nvme_admin_opcode	file:
nvme_admin_query_cap_info	plugins/scaleflux/sfx-nvme.c	/^	nvme_admin_query_cap_info	= 0xd3,$/;"	e	enum:sfx_nvme_admin_opcode	file:
nvme_admin_sfx_get_features	plugins/scaleflux/sfx-nvme.c	/^	nvme_admin_sfx_get_features	= 0xd6,$/;"	e	enum:sfx_nvme_admin_opcode	file:
nvme_admin_sfx_set_features	plugins/scaleflux/sfx-nvme.c	/^	nvme_admin_sfx_set_features	= 0xd5,$/;"	e	enum:sfx_nvme_admin_opcode	file:
nvme_alloc	nvme.c	/^void *nvme_alloc(size_t len, bool *huge)$/;"	f
nvme_ana_state_to_string	nvme-print.c	/^const char *nvme_ana_state_to_string(enum nvme_ana_state state)$/;"	f
nvme_attach_ns	nvme.c	/^static int nvme_attach_ns(int argc, char **argv, int attach, const char *desc, struct command *cmd)$/;"	f	file:
nvme_bar_cap	nvme-print-stdout.c	/^struct nvme_bar_cap {$/;"	s	file:
nvme_capacity_info	plugins/scaleflux/sfx-nvme.c	/^struct nvme_capacity_info {$/;"	s	file:
nvme_change_cap	plugins/scaleflux/sfx-nvme.c	/^int nvme_change_cap(int fd, __u32 nsid, __u64 capacity)$/;"	f
nvme_cli_admin_passthru	nvme-wrap.c	/^int nvme_cli_admin_passthru(struct nvme_dev *dev, __u8 opcode, __u8 flags,$/;"	f
nvme_cli_format_nvm	nvme-wrap.c	/^int nvme_cli_format_nvm(struct nvme_dev *dev, struct nvme_format_nvm_args *args)$/;"	f
nvme_cli_fw_commit	nvme-wrap.c	/^int nvme_cli_fw_commit(struct nvme_dev *dev,$/;"	f
nvme_cli_fw_download	nvme-wrap.c	/^int nvme_cli_fw_download(struct nvme_dev *dev,$/;"	f
nvme_cli_get_feature_length2	nvme-wrap.c	/^int nvme_cli_get_feature_length2(int fid, __u32 cdw11, enum nvme_data_tfr dir,$/;"	f
nvme_cli_get_features	nvme-wrap.c	/^int nvme_cli_get_features(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log	nvme-wrap.c	/^int nvme_cli_get_log(struct nvme_dev *dev, struct nvme_get_log_args *args)$/;"	f
nvme_cli_get_log_ana	nvme-wrap.c	/^int nvme_cli_get_log_ana(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_ana_groups	nvme-wrap.c	/^int nvme_cli_get_log_ana_groups(struct nvme_dev *dev, bool rae, __u32 len,$/;"	f
nvme_cli_get_log_boot_partition	nvme-wrap.c	/^int nvme_cli_get_log_boot_partition(struct nvme_dev *dev, bool rae, __u8 lsp,$/;"	f
nvme_cli_get_log_changed_ns_list	nvme-wrap.c	/^int nvme_cli_get_log_changed_ns_list(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_cmd_effects	nvme-wrap.c	/^int nvme_cli_get_log_cmd_effects(struct nvme_dev *dev, enum nvme_csi csi,$/;"	f
nvme_cli_get_log_create_telemetry_host	nvme-wrap.c	/^int nvme_cli_get_log_create_telemetry_host(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_device_self_test	nvme-wrap.c	/^int nvme_cli_get_log_device_self_test(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_discovery	nvme-wrap.c	/^int nvme_cli_get_log_discovery(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_endurance_group	nvme-wrap.c	/^int nvme_cli_get_log_endurance_group(struct nvme_dev *dev, __u16 endgid,$/;"	f
nvme_cli_get_log_endurance_grp_evt	nvme-wrap.c	/^int nvme_cli_get_log_endurance_grp_evt(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_error	nvme-wrap.c	/^int nvme_cli_get_log_error(struct nvme_dev *dev, unsigned int nr_entries,$/;"	f
nvme_cli_get_log_fid_supported_effects	nvme-wrap.c	/^int nvme_cli_get_log_fid_supported_effects(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_fw_slot	nvme-wrap.c	/^int nvme_cli_get_log_fw_slot(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_lba_status	nvme-wrap.c	/^int nvme_cli_get_log_lba_status(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_media_unit_stat	nvme-wrap.c	/^int nvme_cli_get_log_media_unit_stat(struct nvme_dev *dev, __u16 domid,$/;"	f
nvme_cli_get_log_mi_cmd_supported_effects	nvme-wrap.c	/^int nvme_cli_get_log_mi_cmd_supported_effects(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_page	nvme-wrap.c	/^int nvme_cli_get_log_page(struct nvme_dev *dev, __u32 xfer_len,$/;"	f
nvme_cli_get_log_persistent_event	nvme-wrap.c	/^int nvme_cli_get_log_persistent_event(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_predictable_lat_event	nvme-wrap.c	/^int nvme_cli_get_log_predictable_lat_event(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_predictable_lat_nvmset	nvme-wrap.c	/^int nvme_cli_get_log_predictable_lat_nvmset(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_reservation	nvme-wrap.c	/^int nvme_cli_get_log_reservation(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_sanitize	nvme-wrap.c	/^int nvme_cli_get_log_sanitize(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_simple	nvme-wrap.c	/^int nvme_cli_get_log_simple(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_smart	nvme-wrap.c	/^int nvme_cli_get_log_smart(struct nvme_dev *dev, __u32 nsid, bool rae,$/;"	f
nvme_cli_get_log_support_cap_config_list	nvme-wrap.c	/^int nvme_cli_get_log_support_cap_config_list(struct nvme_dev *dev,$/;"	f
nvme_cli_get_log_supported_log_pages	nvme-wrap.c	/^int nvme_cli_get_log_supported_log_pages(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_telemetry_ctrl	nvme-wrap.c	/^int nvme_cli_get_log_telemetry_ctrl(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_get_log_telemetry_host	nvme-wrap.c	/^int nvme_cli_get_log_telemetry_host(struct nvme_dev *dev, __u64 offset,$/;"	f
nvme_cli_get_log_write_amplification	nvme-wrap.c	/^int nvme_cli_get_log_write_amplification(struct nvme_dev *dev, void *waf_log) \/\/update~$/;"	f
nvme_cli_get_log_zns_changed_zones	nvme-wrap.c	/^int nvme_cli_get_log_zns_changed_zones(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_get_nsid_log	nvme-wrap.c	/^int nvme_cli_get_nsid_log(struct nvme_dev *dev, bool rae,$/;"	f
nvme_cli_identify	nvme-wrap.c	/^int nvme_cli_identify(struct nvme_dev *dev, struct nvme_identify_args *args)$/;"	f
nvme_cli_identify_active_ns_list	nvme-wrap.c	/^int nvme_cli_identify_active_ns_list(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_allocated_ns	nvme-wrap.c	/^int nvme_cli_identify_allocated_ns(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_allocated_ns_list	nvme-wrap.c	/^int nvme_cli_identify_allocated_ns_list(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_ctrl	nvme-wrap.c	/^int nvme_cli_identify_ctrl(struct nvme_dev *dev, struct nvme_id_ctrl *ctrl)$/;"	f
nvme_cli_identify_ctrl_list	nvme-wrap.c	/^int nvme_cli_identify_ctrl_list(struct nvme_dev *dev, __u16 ctrl_id,$/;"	f
nvme_cli_identify_ns	nvme-wrap.c	/^int nvme_cli_identify_ns(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_ns_descs	nvme-wrap.c	/^int nvme_cli_identify_ns_descs(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_nsid_ctrl_list	nvme-wrap.c	/^int nvme_cli_identify_nsid_ctrl_list(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_primary_ctrl	nvme-wrap.c	/^int nvme_cli_identify_primary_ctrl(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_identify_secondary_ctrl_list	nvme-wrap.c	/^int nvme_cli_identify_secondary_ctrl_list(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_ns_attach	nvme-wrap.c	/^int nvme_cli_ns_attach(struct nvme_dev *dev, struct nvme_ns_attach_args *args)$/;"	f
nvme_cli_ns_attach_ctrls	nvme-wrap.c	/^int nvme_cli_ns_attach_ctrls(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_ns_detach_ctrls	nvme-wrap.c	/^int nvme_cli_ns_detach_ctrls(struct nvme_dev *dev, __u32 nsid,$/;"	f
nvme_cli_ns_mgmt_create	nvme-wrap.c	/^int nvme_cli_ns_mgmt_create(struct nvme_dev *dev,$/;"	f
nvme_cli_ns_mgmt_delete	nvme-wrap.c	/^int nvme_cli_ns_mgmt_delete(struct nvme_dev *dev, __u32 nsid)$/;"	f
nvme_cli_sanitize_nvm	nvme-wrap.c	/^int nvme_cli_sanitize_nvm(struct nvme_dev *dev, struct nvme_sanitize_nvm_args *args)$/;"	f
nvme_cli_security_receive	nvme-wrap.c	/^int nvme_cli_security_receive(struct nvme_dev *dev,$/;"	f
nvme_cli_security_send	nvme-wrap.c	/^int nvme_cli_security_send(struct nvme_dev *dev,$/;"	f
nvme_cli_topo_ranking	nvme.h	/^enum nvme_cli_topo_ranking {$/;"	g
nvme_cmd_to_string	nvme-print.c	/^const char *nvme_cmd_to_string(int admin, __u8 opcode)$/;"	f
nvme_compare	tests/nvme_compare_test.py	/^    def nvme_compare(self, cmp_file):$/;"	m	class:TestNVMeCompareCmd
nvme_dera_get_device_status	plugins/dera/dera-nvme.c	/^static int nvme_dera_get_device_status(int fd, enum dera_device_status *result)$/;"	f	file:
nvme_dera_smart_info_log	plugins/dera/dera-nvme.c	/^struct nvme_dera_smart_info_log$/;"	s	file:
nvme_dev	nvme.h	/^struct nvme_dev {$/;"	s
nvme_dev_full_path	nvme-print.c	/^void nvme_dev_full_path(nvme_ns_t n, char *path, size_t len)$/;"	f
nvme_dev_type	nvme.h	/^enum nvme_dev_type {$/;"	g
nvme_directive_show	nvme-print.c	/^void nvme_directive_show(__u8 type, __u8 oper, __u16 spec, __u32 nsid, __u32 result,$/;"	f
nvme_dump_evtlog	plugins/scaleflux/sfx-nvme.c	/^static int nvme_dump_evtlog(struct nvme_dev *dev, __u32 namespace_id, __u32 storage_medium,$/;"	f	file:
nvme_effects_log_node	nvme-print.h	/^typedef struct nvme_effects_log_node {$/;"	s
nvme_effects_log_node_t	nvme-print.h	/^} nvme_effects_log_node_t;$/;"	t	typeref:struct:nvme_effects_log_node
nvme_expand_cap	plugins/scaleflux/sfx-nvme.c	/^static int nvme_expand_cap(struct nvme_dev *dev, __u32 namespace_id, __u64 namespace_size,$/;"	f	file:
nvme_fdp_event_to_string	nvme-print.c	/^const char *nvme_fdp_event_to_string(enum nvme_fdp_event_type event)$/;"	f
nvme_feature_lba_type_to_string	nvme-print.c	/^const char *nvme_feature_lba_type_to_string(__u8 type)$/;"	f
nvme_feature_show_fields	nvme-print.c	/^void nvme_feature_show_fields(enum nvme_features_id fid, unsigned int result, unsigned char *buf)$/;"	f
nvme_feature_temp_sel_to_string	nvme-print.c	/^const char *nvme_feature_temp_sel_to_string(__u8 sel)$/;"	f
nvme_feature_temp_type_to_string	nvme-print.c	/^const char *nvme_feature_temp_type_to_string(__u8 type)$/;"	f
nvme_feature_to_string	nvme-print.c	/^const char *nvme_feature_to_string(enum nvme_features_id feature)$/;"	f
nvme_feature_wl_hints_to_string	nvme-print.c	/^const char *nvme_feature_wl_hints_to_string(__u8 wh)$/;"	f
nvme_flush	tests/nvme_flush_test.py	/^    def nvme_flush(self):$/;"	m	class:TestNVMeFlushCmd
nvme_free	nvme.c	/^void nvme_free(void *p, bool huge)$/;"	f
nvme_fw_status_reset_type	nvme.c	/^static char *nvme_fw_status_reset_type(__u16 status)$/;"	f	file:
nvme_generic_full_path	nvme-print.c	/^void nvme_generic_full_path(nvme_ns_t n, char *path, size_t len)$/;"	f
nvme_get_binary_print_ops	nvme-print-binary.c	/^struct print_ops *nvme_get_binary_print_ops(enum nvme_print_flags flags)$/;"	f
nvme_get_ext_smart_cloud_log	plugins/wdc/wdc-nvme.c	/^static int nvme_get_ext_smart_cloud_log(int fd, __u8 **data, int uuid_index, __u32 namespace_id)$/;"	f	file:
nvme_get_hw_rev_log	plugins/wdc/wdc-nvme.c	/^static int nvme_get_hw_rev_log(int fd, __u8 **data, int uuid_index, __u32 namespace_id)$/;"	f	file:
nvme_get_internal_log	plugins/toshiba/toshiba-nvme.c	/^static int nvme_get_internal_log(int fd, const char *const filename, bool current)$/;"	f	file:
nvme_get_internal_log_file	plugins/toshiba/toshiba-nvme.c	/^static int nvme_get_internal_log_file(int fd, const char *const filename, bool current)$/;"	f	file:
nvme_get_json_print_ops	nvme-print-json.c	/^struct print_ops *nvme_get_json_print_ops(enum nvme_print_flags flags)$/;"	f
nvme_get_json_print_ops	nvme-print.h	/^static inline struct print_ops *nvme_get_json_print_ops(enum nvme_print_flags flags) { return NULL; }$/;"	f
nvme_get_log_lpo	plugins/micron/micron-nvme.c	/^int nvme_get_log_lpo(int fd, __u8 log_id, __u32 lpo, __u32 chunk,$/;"	f
nvme_get_ontap_c2_log	plugins/netapp/netapp-nvme.c	/^static int nvme_get_ontap_c2_log(int fd, __u32 nsid, void *buf, __u32 buflen)$/;"	f	file:
nvme_get_properties	nvme.c	/^static int nvme_get_properties(int fd, void **pbar)$/;"	f	file:
nvme_get_sct_status	plugins/toshiba/toshiba-nvme.c	/^static int nvme_get_sct_status(int fd, __u32 device_mask)$/;"	f	file:
nvme_get_stdout_print_ops	nvme-print-stdout.c	/^struct print_ops *nvme_get_stdout_print_ops(enum nvme_print_flags flags)$/;"	f
nvme_get_vendor_log	plugins/inspur/inspur-nvme.c	/^static int nvme_get_vendor_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
nvme_get_vendor_log	plugins/toshiba/toshiba-nvme.c	/^static int nvme_get_vendor_log(struct nvme_dev *dev, __u32 namespace_id,$/;"	f	file:
nvme_host_metadata_type_to_string	nvme-print.c	/^const char *nvme_host_metadata_type_to_string(enum nvme_features_id fid,$/;"	f
nvme_is_multipath	nvme-print-stdout.c	/^static bool nvme_is_multipath(nvme_subsystem_t s)$/;"	f	file:
nvme_list_opts	completions/bash-nvme-completion.sh	/^nvme_list_opts () {$/;"	f
nvme_log_id_to_string	plugins/wdc/wdc-nvme.c	/^static const char *nvme_log_id_to_string(__u8 log_id)$/;"	f	file:
nvme_log_to_string	nvme-print.c	/^const char *nvme_log_to_string(__u8 lid)$/;"	f
nvme_match_device_filter	nvme.c	/^static bool nvme_match_device_filter(nvme_subsystem_t s,$/;"	f	file:
nvme_memblaze_smart_log	plugins/memblaze/memblaze-utils.h	/^struct nvme_memblaze_smart_log {$/;"	s
nvme_memblaze_smart_log_item	plugins/memblaze/memblaze-utils.h	/^struct nvme_memblaze_smart_log_item {$/;"	s
nvme_mi	nvme.c	/^static int nvme_mi(int argc, char **argv, __u8 admin_opcode, const char *desc)$/;"	f	file:
nvme_ns_wp_cfg_to_string	nvme-print.c	/^const char *nvme_ns_wp_cfg_to_string(enum nvme_ns_write_protect_cfg state)$/;"	f
nvme_nss_hw_error_to_string	nvme-print.c	/^const char *nvme_nss_hw_error_to_string(__u16 error_code)$/;"	f
nvme_p4_smart_log	plugins/memblaze/memblaze-utils.h	/^struct nvme_p4_smart_log$/;"	s
nvme_p4_smart_log_item	plugins/memblaze/memblaze-utils.h	/^struct nvme_p4_smart_log_item$/;"	s
nvme_parse_evtlog	plugins/scaleflux/sfx-nvme.c	/^static int nvme_parse_evtlog(void *pevent_log_info, __u32 log_len, char *output)$/;"	f	file:
nvme_pel_event_to_string	nvme-print.c	/^const char *nvme_pel_event_to_string(int type)$/;"	f
nvme_plm_window_to_string	nvme-print.c	/^const char *nvme_plm_window_to_string(__u32 plm)$/;"	f
nvme_print	nvme-print.c	18;"	d	file:
nvme_print_effects_log_pages	nvme-print.c	/^void nvme_print_effects_log_pages(struct list_head *list,$/;"	f
nvme_print_flags	nvme.h	/^enum nvme_print_flags {$/;"	g
nvme_print_ops	nvme-print.c	/^static struct print_ops *nvme_print_ops(enum nvme_print_flags flags)$/;"	f	file:
nvme_product_name	nvme-models.c	/^char *nvme_product_name(int id)$/;"	f
nvme_query_cap	plugins/scaleflux/sfx-nvme.c	/^int nvme_query_cap(int fd, __u32 nsid, __u32 data_len, void *data)$/;"	f
nvme_read	tests/nvme_test_io.py	/^    def nvme_read(self):$/;"	m	class:TestNVMeIO
nvme_read_volatile_config	fabrics.c	/^static int nvme_read_volatile_config(nvme_root_t r)$/;"	f	file:
nvme_register_pmr_hsts_to_string	nvme-print.c	/^const char *nvme_register_pmr_hsts_to_string(__u8 hsts)$/;"	f
nvme_register_pmr_pmrszu_to_string	nvme-print.c	/^const char *nvme_register_pmr_pmrszu_to_string(__u8 pmrszu)$/;"	f
nvme_register_szu_to_string	nvme-print.c	/^const char *nvme_register_szu_to_string(__u8 szu)$/;"	f
nvme_register_to_string	nvme-print.c	/^const char *nvme_register_to_string(int reg)$/;"	f
nvme_reset_cnt	plugins/innogrit/typedef.h	/^	unsigned int nvme_reset_cnt;$/;"	m	struct:vsc_smart_log
nvme_reset_ctrl	tests/nvme_test.py	/^    def nvme_reset_ctrl(self):$/;"	m	class:TestNVMe
nvme_resources	nvme-print-stdout.c	/^struct nvme_resources {$/;"	s	file:
nvme_resources_free	nvme-print-stdout.c	/^static void nvme_resources_free(struct nvme_resources *res)$/;"	f	file:
nvme_resources_init	nvme-print-stdout.c	/^static int nvme_resources_init(nvme_root_t r, struct nvme_resources *res)$/;"	f	file:
nvme_resv_notif_to_string	nvme-print.c	/^const char *nvme_resv_notif_to_string(__u8 type)$/;"	f
nvme_sct_command_transfer_log	plugins/toshiba/toshiba-nvme.c	/^static int nvme_sct_command_transfer_log(int fd, bool current)$/;"	f	file:
nvme_sct_data_transfer	plugins/toshiba/toshiba-nvme.c	/^static int nvme_sct_data_transfer(int fd, void *data, size_t data_len, size_t offset)$/;"	f	file:
nvme_sct_op	plugins/toshiba/toshiba-nvme.c	/^static int nvme_sct_op(int fd, __u32 opcode, __u32 cdw10, __u32 cdw11, void *data, __u32 data_len)$/;"	f	file:
nvme_select_to_string	nvme-print.c	/^const char *nvme_select_to_string(int sel)$/;"	f
nvme_sfx_get_features	plugins/scaleflux/sfx-nvme.c	/^int nvme_sfx_get_features(int fd, __u32 nsid, __u32 fid, __u32 *result)$/;"	f
nvme_sfx_set_features	plugins/scaleflux/sfx-nvme.c	/^int nvme_sfx_set_features(int fd, __u32 nsid, __u32 fid, __u32 value)$/;"	f
nvme_shannon_smart_log	plugins/shannon/shannon-nvme.c	/^struct nvme_shannon_smart_log {$/;"	s	file:
nvme_shannon_smart_log_item	plugins/shannon/shannon-nvme.c	/^struct nvme_shannon_smart_log_item {$/;"	s	file:
nvme_show_ana_log	nvme-print.c	/^void nvme_show_ana_log(struct nvme_ana_log *ana_log, const char *devname,$/;"	f
nvme_show_boot_part_log	nvme-print.c	/^void nvme_show_boot_part_log(void *bp_log, const char *devname,$/;"	f
nvme_show_changed_ns_list_log	nvme-print.c	/^void nvme_show_changed_ns_list_log(struct nvme_ns_list *log,$/;"	f
nvme_show_cmd_set_independent_id_ns	nvme-print.c	/^void nvme_show_cmd_set_independent_id_ns($/;"	f
nvme_show_connect_msg	nvme-print.c	/^void nvme_show_connect_msg(nvme_ctrl_t c, enum nvme_print_flags flags)$/;"	f
nvme_show_ctrl_registers	nvme-print.c	/^void nvme_show_ctrl_registers(void *bar, bool fabrics, enum nvme_print_flags flags)$/;"	f
nvme_show_discovery_log	nvme-print.c	/^void nvme_show_discovery_log(struct nvmf_discovery_log *log, uint64_t numrec,$/;"	f
nvme_show_endurance_group_event_agg_log	nvme-print.c	/^void nvme_show_endurance_group_event_agg_log($/;"	f
nvme_show_endurance_group_list	nvme-print.c	/^void nvme_show_endurance_group_list(struct nvme_id_endurance_group_list *endgrp_list,$/;"	f
nvme_show_endurance_log	nvme-print.c	/^void nvme_show_endurance_log(struct nvme_endurance_group_log *endurance_log,$/;"	f
nvme_show_error	nvme-print.h	16;"	d
nvme_show_error_log	nvme-print.c	/^void nvme_show_error_log(struct nvme_error_log_page *err_log, int entries,$/;"	f
nvme_show_fdp_configs	nvme-print.c	/^void nvme_show_fdp_configs(struct nvme_fdp_config_log *log, size_t len,$/;"	f
nvme_show_fdp_events	nvme-print.c	/^void nvme_show_fdp_events(struct nvme_fdp_events_log *log,$/;"	f
nvme_show_fdp_ruh_status	nvme-print.c	/^void nvme_show_fdp_ruh_status(struct nvme_fdp_ruh_status *status, size_t len,$/;"	f
nvme_show_fdp_stats	nvme-print.c	/^void nvme_show_fdp_stats(struct nvme_fdp_stats_log *log,$/;"	f
nvme_show_fdp_usage	nvme-print.c	/^void nvme_show_fdp_usage(struct nvme_fdp_ruhu_log *log, size_t len,$/;"	f
nvme_show_fid_support_effects_log	nvme-print.c	/^void nvme_show_fid_support_effects_log(struct nvme_fid_supported_effects_log *fid_log,$/;"	f
nvme_show_fw_log	nvme-print.c	/^void nvme_show_fw_log(struct nvme_firmware_slot *fw_log,$/;"	f
nvme_show_id_ctrl	nvme-print.c	/^void nvme_show_id_ctrl(struct nvme_id_ctrl *ctrl, enum nvme_print_flags flags,$/;"	f
nvme_show_id_ctrl_nvm	nvme-print.c	/^void nvme_show_id_ctrl_nvm(struct nvme_id_ctrl_nvm *ctrl_nvm,$/;"	f
nvme_show_id_ctrl_rpmbs	nvme-print.c	/^void nvme_show_id_ctrl_rpmbs(__le32 ctrl_rpmbs, enum nvme_print_flags flags)$/;"	f
nvme_show_id_domain_list	nvme-print.c	/^void nvme_show_id_domain_list(struct nvme_id_domain_list *id_dom,$/;"	f
nvme_show_id_iocs	nvme-print.c	/^void nvme_show_id_iocs(struct nvme_id_iocs *iocs, enum nvme_print_flags flags)$/;"	f
nvme_show_id_ns	nvme-print.c	/^void nvme_show_id_ns(struct nvme_id_ns *ns, unsigned int nsid,$/;"	f
nvme_show_id_ns_descs	nvme-print.c	/^void nvme_show_id_ns_descs(void *data, unsigned nsid, enum nvme_print_flags flags)$/;"	f
nvme_show_id_ns_granularity_list	nvme-print.c	/^void nvme_show_id_ns_granularity_list(const struct nvme_id_ns_granularity_list *glist,$/;"	f
nvme_show_id_nvmset	nvme-print.c	/^void nvme_show_id_nvmset(struct nvme_id_nvmset_list *nvmset, unsigned nvmset_id,$/;"	f
nvme_show_id_uuid_list	nvme-print.c	/^void nvme_show_id_uuid_list(const struct nvme_id_uuid_list *uuid_list,$/;"	f
nvme_show_lba_range	nvme-print.c	/^void nvme_show_lba_range(struct nvme_lba_range_type *lbrt, int nr_ranges,$/;"	f
nvme_show_lba_status	nvme-print.c	/^void nvme_show_lba_status(struct nvme_lba_status *list, unsigned long len,$/;"	f
nvme_show_lba_status_info	nvme-print.c	/^void nvme_show_lba_status_info(__u32 result)$/;"	f
nvme_show_lba_status_log	nvme-print.c	/^void nvme_show_lba_status_log(void *lba_status, __u32 size,$/;"	f
nvme_show_list_ctrl	nvme-print.c	/^void nvme_show_list_ctrl(struct nvme_ctrl_list *ctrl_list,$/;"	f
nvme_show_list_item	nvme-print.c	/^void nvme_show_list_item(nvme_ns_t n)$/;"	f
nvme_show_list_items	nvme-print.c	/^void nvme_show_list_items(nvme_root_t r, enum nvme_print_flags flags)$/;"	f
nvme_show_list_ns	nvme-print.c	/^void nvme_show_list_ns(struct nvme_ns_list *ns_list, enum nvme_print_flags flags)$/;"	f
nvme_show_list_secondary_ctrl	nvme-print.c	/^void nvme_show_list_secondary_ctrl($/;"	f
nvme_show_media_unit_stat_log	nvme-print.c	/^void nvme_show_media_unit_stat_log(struct nvme_media_unit_stat_log *mus_log,$/;"	f
nvme_show_message	nvme-print.c	/^void nvme_show_message(bool error, const char *msg, ...)$/;"	f
nvme_show_mi_cmd_support_effects_log	nvme-print.c	/^void nvme_show_mi_cmd_support_effects_log(struct nvme_mi_cmd_supported_effects_log *mi_cmd_log,$/;"	f
nvme_show_nvm_id_ns	nvme-print.c	/^void nvme_show_nvm_id_ns(struct nvme_nvm_id_ns *nvm_ns, unsigned int nsid,$/;"	f
nvme_show_perror	nvme-print.c	/^void nvme_show_perror(const char *msg)$/;"	f
nvme_show_persistent_event_log	nvme-print.c	/^void nvme_show_persistent_event_log(void *pevent_log_info,$/;"	f
nvme_show_predictable_latency_event_agg_log	nvme-print.c	/^void nvme_show_predictable_latency_event_agg_log($/;"	f
nvme_show_predictable_latency_per_nvmset	nvme-print.c	/^void nvme_show_predictable_latency_per_nvmset($/;"	f
nvme_show_primary_ctrl_cap	nvme-print.c	/^void nvme_show_primary_ctrl_cap(const struct nvme_primary_ctrl_cap *caps,$/;"	f
nvme_show_relatives	nvme-print.c	/^void nvme_show_relatives(const char *name)$/;"	f
nvme_show_result	nvme-print.h	17;"	d
nvme_show_resv_notif_log	nvme-print.c	/^void nvme_show_resv_notif_log(struct nvme_resv_notification_log *resv,$/;"	f
nvme_show_resv_report	nvme-print.c	/^void nvme_show_resv_report(struct nvme_resv_status *status, int bytes,$/;"	f
nvme_show_sanitize_log	nvme-print.c	/^void nvme_show_sanitize_log(struct nvme_sanitize_log_page *sanitize,$/;"	f
nvme_show_select_result	nvme-print.c	/^void nvme_show_select_result(__u32 result)$/;"	f
nvme_show_self_test_log	nvme-print.c	/^void nvme_show_self_test_log(struct nvme_self_test_log *self_test, __u8 dst_entries,$/;"	f
nvme_show_single_property	nvme-print.c	/^void nvme_show_single_property(int offset, uint64_t value64, enum nvme_print_flags flags)$/;"	f
nvme_show_smart_log	nvme-print.c	/^void nvme_show_smart_log(struct nvme_smart_log *smart, unsigned int nsid,$/;"	f
nvme_show_status	nvme-print.c	/^void nvme_show_status(int status)$/;"	f
nvme_show_subsystem_list	nvme-print.c	/^void nvme_show_subsystem_list(nvme_root_t r, bool show_ana,$/;"	f
nvme_show_supported_cap_config_log	nvme-print.c	/^void nvme_show_supported_cap_config_log($/;"	f
nvme_show_supported_log	nvme-print.c	/^void nvme_show_supported_log(struct nvme_supported_log_pages *support_log,$/;"	f
nvme_show_topology	nvme-print.c	/^void nvme_show_topology(nvme_root_t r,$/;"	f
nvme_show_write_amplification	nvme-print.c	/^void nvme_show_write_amplification(uint64_t waf_log)	\/\/update~$/;"	f
nvme_show_zns_changed	nvme-print.c	/^void nvme_show_zns_changed(struct nvme_zns_changed_zone_log *log,$/;"	f
nvme_show_zns_id_ctrl	nvme-print.c	/^void nvme_show_zns_id_ctrl(struct nvme_zns_id_ctrl *ctrl,$/;"	f
nvme_show_zns_id_ns	nvme-print.c	/^void nvme_show_zns_id_ns(struct nvme_zns_id_ns *ns,$/;"	f
nvme_show_zns_report_zones	nvme-print.c	/^void nvme_show_zns_report_zones(void *report, __u32 descs,$/;"	f
nvme_sstat_status_to_string	nvme-print.c	/^const char *nvme_sstat_status_to_string(__u16 status)$/;"	f
nvme_strerror	nvme.c	/^const char *nvme_strerror(int errnum)$/;"	f
nvme_temetry_log_hdr	plugins/seagate/seagate-diag.h	/^struct __attribute__((__packed__)) nvme_temetry_log_hdr$/;"	s
nvme_trtype_to_string	nvme-print.c	/^const char *nvme_trtype_to_string(__u8 trtype)$/;"	f
nvme_uint128	util/types.h	/^union nvme_uint128 {$/;"	u
nvme_uint128_t	util/types.h	/^typedef union nvme_uint128 nvme_uint128_t;$/;"	t	typeref:union:nvme_uint128
nvme_version_string	nvme.c	/^static const char nvme_version_string[] = NVME_VERSION;$/;"	v	file:
nvme_vu_id_ctrl_field	plugins/amzn/amzn-nvme.c	/^struct nvme_vu_id_ctrl_field {$/;"	s	file:
nvme_vu_id_ctrl_field	plugins/dell/dell-nvme.c	/^struct nvme_vu_id_ctrl_field {$/;"	s	file:
nvme_vu_id_ctrl_field	plugins/intel/intel-nvme.c	/^struct nvme_vu_id_ctrl_field { \/* CDR MR5 *\/$/;"	s	file:
nvme_vu_id_ctrl_field	plugins/nvidia/nvidia-nvme.c	/^struct nvme_vu_id_ctrl_field {$/;"	s	file:
nvme_vu_id_ctrl_field	plugins/solidigm/solidigm-id-ctrl.c	/^struct __packed nvme_vu_id_ctrl_field { \/* CDR MR5 *\/$/;"	s	file:
nvme_vucmd	plugins/innogrit/innogrit-nvme.c	/^static int nvme_vucmd(int fd, unsigned char opcode, unsigned int cdw12,$/;"	f	file:
nvme_write	tests/nvme_test_io.py	/^    def nvme_write(self):$/;"	m	class:TestNVMeIO
nvme_xdn_smart_log_c0	plugins/toshiba/toshiba-nvme.c	/^struct nvme_xdn_smart_log_c0 {$/;"	s	file:
nvme_ymtc_smart_log	plugins/ymtc/ymtc-utils.h	/^struct nvme_ymtc_smart_log$/;"	s
nvme_ymtc_smart_log_item	plugins/ymtc/ymtc-utils.h	/^struct nvme_ymtc_smart_log_item$/;"	s
nvme_zone_state_to_string	nvme-print.c	/^const char *nvme_zone_state_to_string(__u8 state)$/;"	f
nvme_zone_type_to_string	nvme-print.c	/^const char *nvme_zone_type_to_string(__u8 cond)$/;"	f
nvmf_check_hostid_and_hostnqn	fabrics.c	/^void nvmf_check_hostid_and_hostnqn(const char *hostid, const char *hostnqn)$/;"	f
nvmf_config	fabrics.c	/^int nvmf_config(const char *desc, int argc, char **argv)$/;"	f
nvmf_config_file	fabrics.c	/^static const char *nvmf_config_file	= "Use specified JSON configuration file or 'none' to disable";$/;"	v	file:
nvmf_connect	fabrics.c	/^int nvmf_connect(const char *desc, int argc, char **argv)$/;"	f
nvmf_context	fabrics.c	/^static const char *nvmf_context		= "execution context identification string";$/;"	v	file:
nvmf_ctrl_loss_tmo	fabrics.c	/^static const char *nvmf_ctrl_loss_tmo	= "controller loss timeout period in seconds";$/;"	v	file:
nvmf_ctrlkey	fabrics.c	/^static const char *nvmf_ctrlkey		= "user-defined dhchap controller key (for bi-directional authentication)";$/;"	v	file:
nvmf_data_digest	fabrics.c	/^static const char *nvmf_data_digest	= "enable transport protocol data digest (TCP transport)";$/;"	v	file:
nvmf_dim	fabrics.c	/^int nvmf_dim(const char *desc, int argc, char **argv)$/;"	f
nvmf_disable_sqflow	fabrics.c	/^static const char *nvmf_disable_sqflow	= "disable controller sq flow control (default false)";$/;"	v	file:
nvmf_disconnect	fabrics.c	/^int nvmf_disconnect(const char *desc, int argc, char **argv)$/;"	f
nvmf_disconnect_all	fabrics.c	/^int nvmf_disconnect_all(const char *desc, int argc, char **argv)$/;"	f
nvmf_disconnect_nqn	fabrics.c	/^static void nvmf_disconnect_nqn(nvme_root_t r, char *nqn)$/;"	f	file:
nvmf_discover	fabrics.c	/^int nvmf_discover(const char *desc, int argc, char **argv, bool connect)$/;"	f
nvmf_dup_connect	fabrics.c	/^static const char *nvmf_dup_connect	= "allow duplicate connections between same transport host and subsystem port";$/;"	v	file:
nvmf_hdr_digest	fabrics.c	/^static const char *nvmf_hdr_digest	= "enable transport protocol header digest (TCP transport)";$/;"	v	file:
nvmf_hiface	fabrics.c	/^static const char *nvmf_hiface		= "host interface (for tcp transport)";$/;"	v	file:
nvmf_hostid	fabrics.c	/^static const char *nvmf_hostid		= "user-defined hostid (if default not used)";$/;"	v	file:
nvmf_hostid_from_hostnqn	fabrics.c	/^char *nvmf_hostid_from_hostnqn(const char *hostnqn)$/;"	f
nvmf_hostkey	fabrics.c	/^static const char *nvmf_hostkey		= "user-defined dhchap key (if default not used)";$/;"	v	file:
nvmf_hostnqn	fabrics.c	/^static const char *nvmf_hostnqn		= "user-defined hostnqn";$/;"	v	file:
nvmf_htraddr	fabrics.c	/^static const char *nvmf_htraddr		= "host traddr (e.g. FC WWN's)";$/;"	v	file:
nvmf_keep_alive_tmo	fabrics.c	/^static const char *nvmf_keep_alive_tmo	= "keep alive timeout period in seconds";$/;"	v	file:
nvmf_keyring	fabrics.c	/^static const char *nvmf_keyring		= "Keyring for TLS key lookup";$/;"	v	file:
nvmf_nqn	fabrics.c	/^static const char *nvmf_nqn		= "subsystem nqn";$/;"	v	file:
nvmf_nr_io_queues	fabrics.c	/^static const char *nvmf_nr_io_queues	= "number of io queues to use (default is core count)";$/;"	v	file:
nvmf_nr_poll_queues	fabrics.c	/^static const char *nvmf_nr_poll_queues	= "number of poll queues to use (default 0)";$/;"	v	file:
nvmf_nr_write_queues	fabrics.c	/^static const char *nvmf_nr_write_queues	= "number of write queues to use (default 0)";$/;"	v	file:
nvmf_queue_size	fabrics.c	/^static const char *nvmf_queue_size	= "number of io queue elements to use (default 128)";$/;"	v	file:
nvmf_reconnect_delay	fabrics.c	/^static const char *nvmf_reconnect_delay	= "reconnect timeout period in seconds";$/;"	v	file:
nvmf_tls	fabrics.c	/^static const char *nvmf_tls		= "enable TLS";$/;"	v	file:
nvmf_tls_key	fabrics.c	/^static const char *nvmf_tls_key		= "TLS key to use";$/;"	v	file:
nvmf_tos	fabrics.c	/^static const char *nvmf_tos		= "type of service";$/;"	v	file:
nvmf_tport	fabrics.c	/^static const char *nvmf_tport		= "transport type";$/;"	v	file:
nvmf_traddr	fabrics.c	/^static const char *nvmf_traddr		= "transport address";$/;"	v	file:
nvmf_trsvcid	fabrics.c	/^static const char *nvmf_trsvcid		= "transport service id (e.g. IP port)";$/;"	v	file:
nw_blks	plugins/wdc/wdc-nvme.c	/^	__le64	nw_blks;		\/* NAND Write Blocks			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
nw_cmds	plugins/wdc/wdc-nvme.c	/^	__le64	nw_cmds;		\/* NAND Write Commands			*\/$/;"	m	struct:wdc_ssd_perf_stats	file:
ocp_c0_log_page	plugins/micron/micron-nvme.c	/^ocp_c0_log_page[] = {$/;"	v	typeref:struct:micron_vs_logpage
ocp_clear_feature	plugins/ocp/ocp-utils.c	/^int ocp_clear_feature(int argc, char **argv, const char *desc, const __u8 fid)$/;"	f
ocp_clear_fw_update_history	plugins/ocp/ocp-clear-fw-update-history.c	/^int ocp_clear_fw_update_history(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
ocp_device_capabilities_log	plugins/ocp/ocp-nvme.c	/^static int ocp_device_capabilities_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
ocp_device_capabilities_log_page	plugins/ocp/ocp-nvme.c	/^struct __packed ocp_device_capabilities_log_page {$/;"	s	file:
ocp_error_recovery_log	plugins/ocp/ocp-nvme.c	/^static int ocp_error_recovery_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
ocp_error_recovery_log_page	plugins/ocp/ocp-nvme.c	/^struct __packed ocp_error_recovery_log_page {$/;"	s	file:
ocp_fw_activation_history_guid	plugins/ocp/ocp-fw-activation-history.c	/^static const unsigned char ocp_fw_activation_history_guid[16] = {$/;"	v	file:
ocp_fw_activation_history_json	plugins/ocp/ocp-fw-activation-history.c	/^static void ocp_fw_activation_history_json(const struct fw_activation_history *fw_history)$/;"	f	file:
ocp_fw_activation_history_log	plugins/ocp/ocp-fw-activation-history.c	/^int ocp_fw_activation_history_log(int argc, char **argv, struct command *cmd,$/;"	f
ocp_fw_activation_history_normal	plugins/ocp/ocp-fw-activation-history.c	/^static void ocp_fw_activation_history_normal(const struct fw_activation_history *fw_history)$/;"	f	file:
ocp_get_uuid_index	plugins/ocp/ocp-utils.c	/^int ocp_get_uuid_index(struct nvme_dev *dev, int *index)$/;"	f
ocp_latency_monitor_log	plugins/ocp/ocp-nvme.c	/^static int ocp_latency_monitor_log(int argc, char **argv,$/;"	f	file:
ocp_print_C0_log_json	plugins/ocp/ocp-smart-extended-log.c	/^static void ocp_print_C0_log_json(void *data)$/;"	f	file:
ocp_print_C0_log_normal	plugins/ocp/ocp-smart-extended-log.c	/^static void ocp_print_C0_log_normal(void *data)$/;"	f	file:
ocp_print_C3_log_json	plugins/ocp/ocp-nvme.c	/^static void ocp_print_C3_log_json(struct ssd_latency_monitor_log *log_data)$/;"	f	file:
ocp_print_C3_log_normal	plugins/ocp/ocp-nvme.c	/^static int ocp_print_C3_log_normal(struct nvme_dev *dev,$/;"	f	file:
ocp_print_C5_log_json	plugins/ocp/ocp-nvme.c	/^static void ocp_print_C5_log_json(struct unsupported_requirement_log *log_data)$/;"	f	file:
ocp_print_C5_log_normal	plugins/ocp/ocp-nvme.c	/^static int ocp_print_C5_log_normal(struct nvme_dev *dev,$/;"	f	file:
ocp_print_c1_log_binary	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c1_log_binary(struct ocp_error_recovery_log_page *log_data)$/;"	f	file:
ocp_print_c1_log_json	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c1_log_json(struct ocp_error_recovery_log_page *log_data)$/;"	f	file:
ocp_print_c1_log_normal	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c1_log_normal(struct ocp_error_recovery_log_page *log_data)$/;"	f	file:
ocp_print_c4_log_binary	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c4_log_binary(struct ocp_device_capabilities_log_page *log_data)$/;"	f	file:
ocp_print_c4_log_json	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c4_log_json(struct ocp_device_capabilities_log_page *log_data)$/;"	f	file:
ocp_print_c4_log_normal	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c4_log_normal(struct ocp_device_capabilities_log_page *log_data)$/;"	f	file:
ocp_print_c5_log_binary	plugins/ocp/ocp-nvme.c	/^static void ocp_print_c5_log_binary(struct unsupported_requirement_log *log_data)$/;"	f	file:
ocp_set_latency_monitor_feature	plugins/ocp/ocp-nvme.c	/^int ocp_set_latency_monitor_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
ocp_smart_add_log	plugins/ocp/ocp-smart-extended-log.c	/^int ocp_smart_add_log(int argc, char **argv, struct command *cmd,$/;"	f
ocp_telemetry_log	plugins/ocp/ocp-nvme.c	/^static int ocp_telemetry_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
ocp_unsupported_requirements_log	plugins/ocp/ocp-nvme.c	/^static int ocp_unsupported_requirements_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
ocp_uuid	plugins/ocp/ocp-utils.c	/^const unsigned char ocp_uuid[NVME_UUID_LEN] = {$/;"	v
oemDataMapDesc	plugins/solidigm/solidigm-telemetry/cod.c	/^const char *oemDataMapDesc[] = {$/;"	v
off	ccan/ccan/htable/htable.h	/^	size_t off;$/;"	m	struct:htable_iter
offline_zone	plugins/zns/zns.c	/^static int offline_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
on	plugins/memblaze/memblaze-utils.h	/^			__u8 on;$/;"	m	struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_mb
ontap_labels_to_str	plugins/netapp/netapp-nvme.c	/^static void ontap_labels_to_str(char *dst, char *src, int count)$/;"	f	file:
ontapdevice_info	plugins/netapp/netapp-nvme.c	/^struct ontapdevice_info {$/;"	s	file:
oob_management_support	plugins/ocp/ocp-nvme.c	/^	__le16  oob_management_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
oob_mgmt_support	plugins/wdc/wdc-nvme.c	/^	__le16  oob_mgmt_support;                      \/* 0002 - OOB Management Interfaces Supported *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
opcode	nvme.c	/^	__u8	opcode;$/;"	m	struct:passthru_config	file:
opcode	plugins/memblaze/memblaze-nvme.c	/^	__u8 opcode;$/;"	m	struct:log_page_high_latency	file:
open_dev_direct	nvme.c	/^static int open_dev_direct(struct nvme_dev **devp, char *devstr, int flags)$/;"	f	file:
open_dev_mi_mctp	nvme.c	/^static int open_dev_mi_mctp(struct nvme_dev **devp, char *devstr)$/;"	f	file:
open_exclusive	nvme.c	/^int open_exclusive(struct nvme_dev **dev, int argc, char **argv,$/;"	f
open_pci_ids	nvme-models.c	/^static FILE *open_pci_ids(void)$/;"	f	file:
open_zone	plugins/zns/zns.c	/^static int open_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
opt_val	util/argconfig.h	/^	struct argconfig_opt_val *opt_val;$/;"	m	struct:argconfig_commandline_options	typeref:struct:argconfig_commandline_options::argconfig_opt_val
optane_lat_stats	plugins/intel/intel-nvme.c	/^struct __packed optane_lat_stats {$/;"	s	file:
option	util/argconfig.h	/^	const char *option;$/;"	m	struct:argconfig_commandline_options
out_of_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 out_of_space;$/;"	m	struct:sfx_freespace_ctx	file:
out_of_space_flag	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item out_of_space_flag;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
output_file	plugins/virtium/virtium-nvme.c	/^	const char	*output_file;$/;"	m	struct:vtview_save_log_settings	file:
output_format	nvme.c	/^const char *output_format = "Output format: normal|json|binary";$/;"	v
output_format	plugins/solidigm/solidigm-latency-tracking.c	/^	char *output_format;$/;"	m	struct:config	file:
output_format_no_binary	nvme.c	/^static const char *output_format_no_binary = "Output format: normal|json";$/;"	v	file:
overwritten_bytes	plugins/micron/micron-nvme.c	/^	uint32_t overwritten_bytes;$/;"	m	struct:micron_common_log_header	file:
pad	nvme-rpmb.c	/^	unsigned char  pad[191];$/;"	m	struct:rpmb_data_frame_t	file:
panic_id	plugins/ocp/ocp-nvme.c	/^	__le64  panic_id;                                \/* 8 bytes      - 0x04 - 0x0B *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
panic_id	plugins/wdc/wdc-nvme.c	/^	__le64  panic_id;                               \/* 004 - Panic ID                            *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
panic_reset_action	plugins/ocp/ocp-nvme.c	/^	__u8    panic_reset_action;                      \/* 1 byte       - 0x02 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
panic_reset_action	plugins/wdc/wdc-nvme.c	/^	__u8    panic_reset_action;                     \/* 002 - Panic Reset Action                  *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
panic_reset_wait_time	plugins/ocp/ocp-nvme.c	/^	__le16  panic_reset_wait_time;                   \/* 2 bytes      - 0x00 - 0x01 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
panic_reset_wait_time	plugins/wdc/wdc-nvme.c	/^	__le16  panic_reset_wait_time;                  \/* 000 - Panic Reset Wait Time               *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
param	plugins/innogrit/typedef.h	/^	unsigned int param[7];$/;"	m	struct:eventlog
param	plugins/innogrit/typedef.h	/^	unsigned int param[7];$/;"	m	struct:eventlog_addindex
parent	plugin.h	/^	struct program *parent;$/;"	m	struct:plugin	typeref:struct:plugin::program
parse_and_open	nvme.c	/^int parse_and_open(struct nvme_dev **dev, int argc, char **argv,$/;"	f
parse_lba_num_si	nvme.c	/^static int parse_lba_num_si(struct nvme_dev *dev, const char *opt,$/;"	f	file:
parse_mi_dev	nvme.c	/^static int parse_mi_dev(char *dev, unsigned int *net, uint8_t *eid,$/;"	f	file:
parse_params	plugins/memblaze/memblaze-nvme.c	/^int parse_params(char *str, int number, ...)$/;"	f
parse_telemetry_da	nvme.c	/^static int parse_telemetry_da(struct nvme_dev *dev,$/;"	f	file:
parse_vendor_device	nvme-models.c	/^static void parse_vendor_device(char **line, FILE *file,$/;"	f	file:
passthru	nvme.c	/^static int passthru(int argc, char **argv, bool admin,$/;"	f	file:
passthru_config	nvme.c	/^struct passthru_config {$/;"	s	file:
passthru_print_read_output	nvme.c	/^static void passthru_print_read_output(struct passthru_config cfg, void *data, int dfd, void *mdata,$/;"	f	file:
path	plugins/virtium/virtium-nvme.c	/^	char				path[256];$/;"	m	struct:vtview_log_header	file:
path	plugins/virtium/virtium-nvme.c	/^	char			path[256];$/;"	m	struct:vtview_smart_log_entry	file:
pci_sbdf_to_string	plugins/nbft/nbft-plugin.c	/^static const char *pci_sbdf_to_string(__u16 pci_sbdf)$/;"	f	file:
pcieCorrEc	plugins/seagate/seagate-diag.h	/^    __u64           pcieCorrEc;         $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
pcieLinkRetCnt	plugins/seagate/seagate-diag.h	/^    __u64           pcieLinkRetCnt;     $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
pcie_corr_err	plugins/dera/dera-nvme.c	/^	__u8 pcie_corr_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
pcie_corr_error	plugins/wdc/wdc-nvme.c	/^	__le64  pcie_corr_error;                        \/* 0x6B - pcie Correctable Error Count     *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
pcie_err_bit	plugins/dera/dera-nvme.c	/^	__u8 pcie_err_bit;$/;"	m	struct:nvme_dera_smart_info_log	file:
pcie_error_log_page	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) pcie_error_log_page$/;"	s
pcie_error_log_page	plugins/seagate/seagate-diag.h	/^} pcie_error_log_page;$/;"	t	typeref:struct:pcie_error_log_page
pcie_exp_port	plugins/ocp/ocp-nvme.c	/^	__le16  pcie_exp_port;$/;"	m	struct:ocp_device_capabilities_log_page	file:
pcie_fatal_err	plugins/dera/dera-nvme.c	/^	__u8 pcie_fatal_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
pcie_uncorr_err	plugins/dera/dera-nvme.c	/^	__u8 pcie_uncorr_err[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
pcie_volt_status	plugins/dera/dera-nvme.c	/^	__u8 pcie_volt_status; $/;"	m	struct:nvme_dera_smart_info_log	file:
pcset	plugins/wdc/wdc-nvme.c	/^	uint8_t	pcset;$/;"	m	struct:wdc_log_page_subpage_header	file:
pct	plugins/intel/intel-nvme.c	/^			__u8	pct;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
pct	plugins/scaleflux/sfx-nvme.c	/^			__u8	pct;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
pct	plugins/solidigm/solidigm-smart.c	/^			__u8	pct;$/;"	m	struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
percent_free_blocks	plugins/wdc/wdc-nvme.c	/^	__u8    percent_free_blocks;                    \/* 0x77 - Percent Free Blocks              *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
percent_free_blocks_system	plugins/wdc/wdc-nvme.c	/^	__u8		percent_free_blocks_system;$/;"	m	struct:wdc_nand_stats_V3	file:
percent_free_blocks_user	plugins/wdc/wdc-nvme.c	/^	__u8		percent_free_blocks_user;$/;"	m	struct:wdc_nand_stats_V3	file:
percent_life_used	plugins/wdc/wdc-nvme.c	/^	__u8		percent_life_used;$/;"	m	struct:wdc_nand_stats_V3	file:
percentage_pe_cycles_remaining	plugins/wdc/wdc-nvme.c	/^	__le32  percentage_pe_cycles_remaining;        \/* 0x64 - Percentage of P\/E cycles remaining         *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
perf_stat_indicator	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	perf_stat_indicator;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
perfect_bitnum	ccan/ccan/htable/htable.h	/^	unsigned int bits, perfect_bitnum;$/;"	m	struct:htable
persistent	fabrics.c	/^static bool persistent;$/;"	v	file:
persistent_event_log	nvme-print.h	/^	void (*persistent_event_log)(void *pevent_log_info, __u8 action, __u32 size, const char *devname);$/;"	m	struct:print_ops
phyMediaUnitsRd	plugins/seagate/seagate-diag.h	/^    U128            phyMediaUnitsRd;    $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
phyMediaUnitsWrt	plugins/seagate/seagate-diag.h	/^    U128            phyMediaUnitsWrt;   $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
phy_cap	plugins/scaleflux/sfx-nvme.c	/^	__u64 phy_cap;		\/* physical capacity, in unit of sector *\/$/;"	m	struct:sfx_freespace_ctx	file:
phy_sec_sz	plugins/scaleflux/sfx-nvme.c	/^	__u64 phy_sec_sz;$/;"	m	struct:nvme_capacity_info	file:
phy_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 phy_space;	\/* physical space considering OP, in unit of sector *\/$/;"	m	struct:sfx_freespace_ctx	file:
physical_media_units	plugins/wdc/wdc-nvme.c	/^	__u8		physical_media_units[16];$/;"	m	struct:wdc_nand_stats_V3	file:
physical_usage_ratio	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item physical_usage_ratio;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
pll_lock_loss_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	pll_lock_loss_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
pll_lock_loss_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item pll_lock_loss_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
plpStartCnt	plugins/seagate/seagate-diag.h	/^    U128            plpStartCnt;        $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
plugin	plugin.h	/^struct plugin {$/;"	s
plugin_amzn_opts	completions/bash-nvme-completion.sh	/^plugin_amzn_opts () {$/;"	f
plugin_dera_opts	completions/bash-nvme-completion.sh	/^plugin_dera_opts () {$/;"	f
plugin_huawei_opts	completions/bash-nvme-completion.sh	/^plugin_huawei_opts () {$/;"	f
plugin_inspur_opts	completions/bash-nvme-completion.sh	/^plugin_inspur_opts () {$/;"	f
plugin_intel_opts	completions/bash-nvme-completion.sh	/^plugin_intel_opts () {$/;"	f
plugin_memblaze_opts	completions/bash-nvme-completion.sh	/^plugin_memblaze_opts () {$/;"	f
plugin_micron_opts	completions/bash-nvme-completion.sh	/^plugin_micron_opts () {$/;"	f
plugin_nvidia_opts	completions/bash-nvme-completion.sh	/^plugin_nvidia_opts () {$/;"	f
plugin_ocp_opts	completions/bash-nvme-completion.sh	/^plugin_ocp_opts () {$/;"	f
plugin_seagate_opts	completions/bash-nvme-completion.sh	/^plugin_seagate_opts () {$/;"	f
plugin_sfx_opts	completions/bash-nvme-completion.sh	/^plugin_sfx_opts () {$/;"	f
plugin_shannon_opts	completions/bash-nvme-completion.sh	/^plugin_shannon_opts () {$/;"	f
plugin_toshiba_opts	completions/bash-nvme-completion.sh	/^plugin_toshiba_opts () {$/;"	f
plugin_transcend_opts	completions/bash-nvme-completion.sh	/^plugin_transcend_opts () {$/;"	f
plugin_virtium_opts	completions/bash-nvme-completion.sh	/^plugin_virtium_opts () {$/;"	f
plugin_wdc_opts	completions/bash-nvme-completion.sh	/^plugin_wdc_opts () {$/;"	f
plugin_ymtc_opts	completions/bash-nvme-completion.sh	/^plugin_ymtc_opts () {$/;"	f
plugin_zns_opts	completions/bash-nvme-completion.sh	/^plugin_zns_opts () {$/;"	f
pn	plugins/micron/micron-nvme.c	/^	uint16_t pn;$/;"	m	struct:micron_common_log_header	file:
poisonedTlpStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 poisonedTlpStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
port	plugins/memblaze/memblaze-nvme.c	/^	__u8 port;$/;"	m	struct:log_page_high_latency	file:
port0_ctrl_reset_cnt	plugins/inspur/inspur-utils.h	/^    __u64 port0_ctrl_reset_cnt;$/;"	m	struct:r1_vendor_log_s
port0_func_reset_cnt	plugins/inspur/inspur-utils.h	/^    __u64 port0_func_reset_cnt;$/;"	m	struct:r1_vendor_log_s
port0_fundamental_reset_cnt	plugins/inspur/inspur-utils.h	/^    __u64 port0_fundamental_reset_cnt;$/;"	m	struct:r1_vendor_log_s
port0_hot_reset_cnt	plugins/inspur/inspur-utils.h	/^    __u64 port0_hot_reset_cnt;$/;"	m	struct:r1_vendor_log_s
port0_linkdown_cnt	plugins/inspur/inspur-utils.h	/^    __u64 port0_linkdown_cnt;$/;"	m	struct:r1_vendor_log_s
positive	util/argconfig.h	/^	uint32_t positive;$/;"	m	union:argconfig_val
powCycleCnt	plugins/seagate/seagate-diag.h	/^    __u64   powCycleCnt;$/;"	m	struct:_stx_fw_activ_his_ele
powStateChangeCnt	plugins/seagate/seagate-diag.h	/^    __u64           powStateChangeCnt;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
power	plugins/memblaze/memblaze-utils.h	/^		struct power {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
power	plugins/memblaze/memblaze-utils.h	/^		} power;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::power
power_cycle_count	plugins/micron/micron-nvme.c	/^	__le64                             power_cycle_count;$/;"	m	struct:fw_activation_history_entry	file:
power_cycle_count	plugins/ocp/ocp-fw-activation-history.c	/^	__u64 power_cycle_count;$/;"	m	struct:fw_activation_history_entry	file:
power_cycle_count	plugins/wdc/wdc-nvme.c	/^	__le32 power_cycle_count;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
power_cycle_count	plugins/wdc/wdc-nvme.c	/^	__le64		power_cycle_count;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
power_info	plugins/inspur/inspur-utils.h	/^    __u32 power_info;$/;"	m	struct:r1_vendor_log_s
power_level	plugins/dera/dera-nvme.c	/^	__u8 power_level; $/;"	m	struct:nvme_dera_smart_info_log	file:
power_loss_protection	plugins/memblaze/memblaze-utils.h	/^		struct power_loss_protection {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
power_loss_protection	plugins/memblaze/memblaze-utils.h	/^		} power_loss_protection;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::power_loss_protection
power_on_hour	plugins/micron/micron-nvme.c	/^	__le64                             power_on_hour;$/;"	m	struct:fw_activation_history_entry	file:
power_on_seconds	plugins/wdc/wdc-nvme.c	/^	__le64 power_on_seconds;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
predictable_latency_event_agg_log	nvme-print.h	/^	void (*predictable_latency_event_agg_log)(struct nvme_aggregate_predictable_lat_event *pea_log, __u64 log_entries, __u32 size, const char *devname);$/;"	m	struct:print_ops
predictable_latency_per_nvmset	nvme-print.h	/^	void (*predictable_latency_per_nvmset)(struct nvme_nvmset_predictable_lat_log *plpns_log, __u16 nvmset_id, const char *devname);$/;"	m	struct:print_ops
prefill	nvme.c	/^	__u8	prefill;$/;"	m	struct:passthru_config	file:
preset_cnt	plugins/innogrit/typedef.h	/^	unsigned int preset_cnt;$/;"	m	struct:vsc_smart_log
prev	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::
previousFW	plugins/seagate/seagate-diag.h	/^    __u8    previousFW[8];$/;"	m	struct:_stx_fw_activ_his_ele
previous_fw	plugins/micron/micron-nvme.c	/^	__u8                               previous_fw[8];$/;"	m	struct:fw_activation_history_entry	file:
previous_fw	plugins/ocp/ocp-fw-activation-history.c	/^	char previous_fw[8];$/;"	m	struct:fw_activation_history_entry	file:
previous_fw_version	plugins/wdc/wdc-nvme.c	/^	__le64		previous_fw_version;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
previous_fw_version	plugins/wdc/wdc-nvme.c	/^	__le64 previous_fw_version;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
prg_badblk_num	plugins/inspur/inspur-utils.h	/^    __u32 prg_badblk_num;$/;"	m	struct:r1_vendor_log_ncm_cout
primary_admin_host_flag_to_str	plugins/nbft/nbft-plugin.c	/^static const char *primary_admin_host_flag_to_str(unsigned int primary)$/;"	f	file:
primary_ctrl_cap	nvme-print.h	/^	void (*primary_ctrl_cap)(const struct nvme_primary_ctrl_cap *caps);$/;"	m	struct:print_ops
primary_ctrl_caps	nvme.c	/^static int primary_ctrl_caps(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
prinfo	nvme.c	/^static const char *prinfo = "PI and check field";$/;"	v	file:
print_connect_msg	nbft.c	/^static void print_connect_msg(nvme_ctrl_t c)$/;"	f	file:
print_dash_separator	plugins/intel/intel-nvme.c	/^static void print_dash_separator(int count)$/;"	f	file:
print_dash_separator	plugins/solidigm/solidigm-latency-tracking.c	/^static void print_dash_separator(void)$/;"	f	file:
print_ext_smart_id	plugins/seagate/seagate-nvme.c	/^static char *print_ext_smart_id(__u8 attrId)$/;"	f	file:
print_ext_smart_logs_e1	plugins/micron/micron-nvme.c	/^static void print_ext_smart_logs_e1(__u8 *buf, bool is_json)$/;"	f	file:
print_flags	plugins/solidigm/solidigm-latency-tracking.c	/^	enum nvme_print_flags print_flags;$/;"	m	struct:latency_tracker	typeref:enum:latency_tracker::nvme_print_flags	file:
print_hfis	plugins/nbft/nbft-plugin.c	/^static size_t print_hfis(const struct nbft_info_subsystem_ns *ss, char buf[HFIS_LEN])$/;"	f	file:
print_intel_nlog	plugins/intel/intel-nvme.c	/^static void print_intel_nlog(struct intel_vu_nlog *intel_nlog)$/;"	f	file:
print_intel_smart_log_items	plugins/intel/intel-nvme.c	/^static void print_intel_smart_log_items(struct nvme_additional_smart_log_item *item)$/;"	f	file:
print_micron_vs_logs	plugins/micron/micron-nvme.c	/^static void print_micron_vs_logs(__u8 *buf, struct micron_vs_logpage *log_page, int field_count,$/;"	f	file:
print_nand_stats_d0	plugins/micron/micron-nvme.c	/^static void print_nand_stats_d0(__u8 *buf, __u8 oacs, bool is_json)$/;"	f	file:
print_nand_stats_fb	plugins/micron/micron-nvme.c	/^static void print_nand_stats_fb(__u8 *buf, __u8 *buf2, __u8 nsze, bool is_json, __u8 spec)$/;"	f	file:
print_nbft_discovery_info	plugins/nbft/nbft-plugin.c	/^static void print_nbft_discovery_info(struct nbft_info *nbft)$/;"	f	file:
print_nbft_hfi_info	plugins/nbft/nbft-plugin.c	/^static void print_nbft_hfi_info(struct nbft_info *nbft)$/;"	f	file:
print_nbft_subsys_info	plugins/nbft/nbft-plugin.c	/^static void print_nbft_subsys_info(struct nbft_info *nbft)$/;"	f	file:
print_nlog_header	plugins/solidigm/solidigm-internal-logs.c	/^static void print_nlog_header(__u8 *buffer)$/;"	f	file:
print_nvme_subsystem_list	nvme-print.h	/^	void (*print_nvme_subsystem_list)(nvme_root_t r, bool show_ana);$/;"	m	struct:print_ops
print_ops	nvme-print.h	/^struct print_ops {$/;"	s
print_pass_fail	scripts/regress	/^function print_pass_fail {$/;"	f
print_ps_power_and_scale	nvme-print-stdout.c	/^static void print_ps_power_and_scale(__le16 ctr_power, __u8 scale)$/;"	f	file:
print_psd_workload	nvme-print-stdout.c	/^static void print_psd_workload(__u8 apw)$/;"	f	file:
print_smart_cloud_health_log	plugins/micron/micron-nvme.c	/^static void print_smart_cloud_health_log(__u8 *buf, bool is_json)$/;"	f	file:
print_smart_log	plugins/seagate/seagate-nvme.c	/^static void print_smart_log(__u16 verNo, SmartVendorSpecific attr, int lastAttr)$/;"	f	file:
print_smart_log_CF	plugins/seagate/seagate-nvme.c	/^static void print_smart_log_CF(vendor_log_page_CF *pLogPageCF)$/;"	f	file:
print_stx_smart_log_C0	plugins/seagate/seagate-nvme.c	/^static void print_stx_smart_log_C0(STX_EXT_SMART_LOG_PAGE_C0 *pLogPageC0)$/;"	f	file:
print_stx_vs_fw_activate_history	plugins/seagate/seagate-nvme.c	/^static void print_stx_vs_fw_activate_history(stx_fw_activ_history_log_page fwActivHis)$/;"	f	file:
print_telemetry_header	plugins/ocp/ocp-nvme.c	/^static void print_telemetry_header(struct telemetry_initiated_log *logheader,$/;"	f	file:
print_vs_pcie_error_log	plugins/seagate/seagate-nvme.c	/^static void print_vs_pcie_error_log(pcie_error_log_page  pcieErrorLog)$/;"	f	file:
print_word_wrapped	util/argconfig.c	/^void print_word_wrapped(const char *s, int indent, int start, FILE *stream)$/;"	f
print_zns_list	plugins/zns/zns.c	/^static int print_zns_list(nvme_root_t nvme_root)$/;"	f	file:
print_zns_list_ns	plugins/zns/zns.c	/^static int print_zns_list_ns(nvme_ns_t ns)$/;"	f	file:
priv	ccan/ccan/htable/htable.h	/^	void *priv;$/;"	m	struct:htable
process	Documentation/asciidoctor-extensions.rb	/^      def process(parent, target, attrs)$/;"	f	class:Nvme.Documentation.LinkNvmeProcessor
product_id	plugins/wdc/wdc-nvme.c	/^	__u8    product_id;$/;"	m	struct:wdc_dui_log_hdr_v2	file:
product_id	plugins/wdc/wdc-nvme.c	/^	__u8    product_id;$/;"	m	struct:wdc_dui_log_hdr_v3	file:
product_id	plugins/wdc/wdc-nvme.c	/^	__u8    product_id;$/;"	m	struct:wdc_dui_log_hdr_v4	file:
prog_timeout_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item prog_timeout_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
program	plugin.h	/^struct program {$/;"	s
program_error_cnt	plugins/innogrit/typedef.h	/^	unsigned int program_error_cnt;$/;"	m	struct:vsc_smart_log
program_fail	plugins/wdc/wdc-nvme.c	/^	__le64  program_fail;                           \/* 0x51 - Program Fail Count               *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
program_fail_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	program_fail_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
program_fail_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item program_fail_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
program_fail_count	plugins/wdc/wdc-nvme.c	/^	__u8		program_fail_count[8];$/;"	m	struct:wdc_nand_stats_V3	file:
programm_failure_cnt	plugins/wdc/wdc-nvme.c	/^	__le16 programm_failure_cnt;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
progress_runner	plugins/toshiba/toshiba-nvme.c	/^static void progress_runner(float progress)$/;"	f	file:
project	plugins/innogrit/typedef.h	/^	unsigned int project : 16;$/;"	m	struct:evlg_flush_hdr
ps3_entry_cnt	plugins/innogrit/typedef.h	/^	unsigned int ps3_entry_cnt;$/;"	m	struct:vsc_smart_log
pull_class_info	nvme-models.c	/^static void pull_class_info(char **_newline, FILE *file, char *class)$/;"	f	file:
query_cap_info	plugins/scaleflux/sfx-nvme.c	/^static int query_cap_info(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
quick_rebuild_cnt0	plugins/dera/dera-nvme.c	/^	__u8 quick_rebuild_cnt0[4]; $/;"	m	struct:nvme_dera_smart_info_log	file:
quick_rebuild_cnt1	plugins/dera/dera-nvme.c	/^	__u8 quick_rebuild_cnt1[4]; $/;"	m	struct:nvme_dera_smart_info_log	file:
quiet	fabrics.c	/^static bool quiet;$/;"	v	file:
r	nvme-print-stdout.c	/^	nvme_root_t r;$/;"	m	struct:nvme_resources	file:
r1_am_cap_transtime	plugins/inspur/inspur-utils.h	/^typedef struct r1_am_cap_transtime {$/;"	s
r1_cap_transtime_t	plugins/inspur/inspur-utils.h	/^} r1_cap_transtime_t;$/;"	t	typeref:struct:r1_am_cap_transtime
r1_cli_vendor_log_t	plugins/inspur/inspur-utils.h	/^} r1_cli_vendor_log_t;$/;"	t	typeref:struct:r1_vendor_log_s
r1_vendor_log_io_err	plugins/inspur/inspur-utils.h	/^typedef struct r1_vendor_log_io_err {$/;"	s
r1_vendor_log_io_err_t	plugins/inspur/inspur-utils.h	/^} r1_vendor_log_io_err_t;$/;"	t	typeref:struct:r1_vendor_log_io_err
r1_vendor_log_nandctl_count_t	plugins/inspur/inspur-utils.h	/^} r1_vendor_log_nandctl_count_t;$/;"	t	typeref:struct:r1_vendor_log_ncm_cout
r1_vendor_log_ncm_cout	plugins/inspur/inspur-utils.h	/^typedef struct r1_vendor_log_ncm_cout {$/;"	s
r1_vendor_log_s	plugins/inspur/inspur-utils.h	/^typedef struct r1_vendor_log_s {$/;"	s
r1_wearlvl_vendor_log_count	plugins/inspur/inspur-utils.h	/^typedef struct r1_wearlvl_vendor_log_count {$/;"	s
r1_wearlvl_vendor_log_count_t	plugins/inspur/inspur-utils.h	/^} r1_wearlvl_vendor_log_count_t;$/;"	t	typeref:struct:r1_wearlvl_vendor_log_count
rae	nvme.c	/^static const char *rae = "Retain an Asynchronous Event";$/;"	v	file:
raid_recover_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item raid_recover_cnt; \/* errors which can be recovered by RAID *\/$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
raw	fabrics.c	/^static char *raw;$/;"	v	file:
raw	plugins/intel/intel-nvme.c	/^		__u8		raw[6];$/;"	m	union:nvme_additional_smart_log_item::__packed	file:
raw	plugins/scaleflux/sfx-nvme.c	/^		__u8		raw[6];$/;"	m	union:nvme_additional_smart_log_item::__packed	file:
raw	plugins/solidigm/solidigm-smart.c	/^		__u8		raw[6];$/;"	m	union:nvme_additional_smart_log_item::__packed	file:
rawVal	plugins/memblaze/memblaze-utils.h	/^	__u8 rawVal[RAW_SIZE];$/;"	m	struct:nvme_p4_smart_log_item
rawVal	plugins/ymtc/ymtc-utils.h	/^    u8 rawVal[RAW_SIZE];$/;"	m	struct:nvme_ymtc_smart_log_item
raw_2_u64	plugins/memblaze/memblaze-nvme.c	/^static __u64 raw_2_u64(const __u8 *buf, size_t len)$/;"	f	file:
raw_binary	nvme.c	/^	bool	raw_binary;$/;"	m	struct:passthru_config	file:
raw_binary	nvme.c	/^	bool  raw_binary;$/;"	m	struct:feat_cfg	file:
raw_ctrl	plugins/virtium/virtium-nvme.c	/^	struct nvme_id_ctrl		raw_ctrl;$/;"	m	struct:vtview_log_header	typeref:struct:vtview_log_header::nvme_id_ctrl	file:
raw_ctrl	plugins/virtium/virtium-nvme.c	/^	struct nvme_id_ctrl	raw_ctrl;$/;"	m	struct:vtview_smart_log_entry	typeref:struct:vtview_smart_log_entry::nvme_id_ctrl	file:
raw_directive	nvme.c	/^static const char *raw_directive = "show directive in binary format";$/;"	v	file:
raw_dump	nvme.c	/^static const char *raw_dump = "dump output in binary format";$/;"	v	file:
raw_fw	plugins/virtium/virtium-nvme.c	/^	struct nvme_firmware_slot	raw_fw;$/;"	m	struct:vtview_log_header	typeref:struct:vtview_log_header::nvme_firmware_slot	file:
raw_identify	nvme.c	/^static const char *raw_identify = "show identify in binary format";$/;"	v	file:
raw_log	nvme.c	/^static const char *raw_log = "show log in binary format";$/;"	v	file:
raw_ns	plugins/virtium/virtium-nvme.c	/^	struct nvme_id_ns	raw_ns;$/;"	m	struct:vtview_smart_log_entry	typeref:struct:vtview_smart_log_entry::nvme_id_ns	file:
raw_output	nvme.c	/^static const char *raw_output = "output in binary format";$/;"	v	file:
raw_rebuild_cnt0	plugins/dera/dera-nvme.c	/^	__u8 raw_rebuild_cnt0[4];$/;"	m	struct:nvme_dera_smart_info_log	file:
raw_rebuild_cnt1	plugins/dera/dera-nvme.c	/^	__u8 raw_rebuild_cnt1[4];$/;"	m	struct:nvme_dera_smart_info_log	file:
raw_smart	plugins/virtium/virtium-nvme.c	/^	struct nvme_smart_log	raw_smart;$/;"	m	struct:vtview_smart_log_entry	typeref:struct:vtview_smart_log_entry::nvme_smart_log	file:
raw_use	nvme.c	/^static const char *raw_use = "use binary output";$/;"	v	file:
raw_value	plugins/wdc/wdc-nvme.c	/^	__u8	raw_value[8];$/;"	m	struct:wdc_bd_ca_log_format	file:
rawval	plugins/memblaze/memblaze-utils.h	/^		__u8 rawval[6];$/;"	m	union:nvme_memblaze_smart_log_item::__anon13
re_alloc_sectr_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	re_alloc_sectr_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
read	nvme.c	/^	bool	read;$/;"	m	struct:passthru_config	file:
read	plugins/intel/intel-nvme.c	/^	__u32 read[OPTANE_V1000_BUCKET_LEN];$/;"	m	struct:v1000_thresholds	file:
read	plugins/solidigm/solidigm-latency-tracking.c	/^	bool read;$/;"	m	struct:config	file:
readOnly_after_rebuild	plugins/inspur/inspur-utils.h	/^    __u32 readOnly_after_rebuild : 1;$/;"	m	struct:vendor_warning_bit
read_cmd	nvme.c	/^static int read_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
read_ecc_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item read_ecc_cnt; \/* retry cnt *\/$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
read_entire_cmd	plugins/intel/intel-nvme.c	/^static int read_entire_cmd(struct nvme_passthru_cmd *cmd, int total_size,$/;"	f	file:
read_file	nvme-rpmb.c	/^static int read_file(const char *file, unsigned char **data, unsigned int *len)$/;"	f	file:
read_file2buffer	plugins/solidigm/solidigm-telemetry.c	/^static int read_file2buffer(char *file_name, char **buffer, size_t *length)$/;"	f	file:
read_header	plugins/intel/intel-nvme.c	/^static int read_header(struct nvme_passthru_cmd *cmd, __u8 *buf, int ioctl_fd,$/;"	f	file:
read_header	plugins/solidigm/solidigm-internal-logs.c	/^static int read_header(struct nvme_passthru_cmd *cmd, int ioctl_fd)$/;"	f	file:
read_nbft_files	nbft.c	/^int read_nbft_files(struct list_head *nbft_list, char *path)$/;"	f
read_rpmb_key	nvme-rpmb.c	/^static unsigned char *read_rpmb_key(char *keystr, char *keyfile, unsigned int *keysize)$/;"	f	file:
read_sys_node	nvme-models.c	/^static int read_sys_node(char *where, char *save, size_t savesz)$/;"	f	file:
read_timeout_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item read_timeout_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
read_validate	tests/nvme_read_write_test.py	/^    def read_validate(self):$/;"	m	class:TestNVMeReadWriteTest
reasonCode	plugins/solidigm/solidigm-telemetry/header.c	/^	uint32_t reasonCode;		\/\/! 0 denotes no issue. All other values denote a potential issue.$/;"	m	struct:reason_indentifier_1_0	file:
reasonCode	plugins/solidigm/solidigm-telemetry/header.c	/^	uint32_t reasonCode;		\/\/! 0 denotes no issue. All other values denote a potential issue.$/;"	m	struct:reason_indentifier_1_1	file:
reasonCode	plugins/solidigm/solidigm-telemetry/header.c	/^	uint32_t reasonCode;		\/\/! 0 denotes no issue. All other values denote a potential issue.$/;"	m	struct:reason_indentifier_1_2	file:
reason_identifier	plugins/seagate/seagate-diag.h	/^    __u8        reason_identifier[128];$/;"	m	struct:nvme_temetry_log_hdr
reason_indentifier_1_0	plugins/solidigm/solidigm-telemetry/header.c	/^struct reason_indentifier_1_0 {$/;"	s	file:
reason_indentifier_1_1	plugins/solidigm/solidigm-telemetry/header.c	/^struct reason_indentifier_1_1 {$/;"	s	file:
reason_indentifier_1_2	plugins/solidigm/solidigm-telemetry/header.c	/^struct reason_indentifier_1_2 {$/;"	s	file:
rebuild_fail1	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail1 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_fail2	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail2 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_fail3	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail3 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_fail4	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail4 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_fail5	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail5 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_fail6	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_fail6 : 1;$/;"	m	struct:vendor_warning_bit
rebuild_percent	plugins/dera/dera-nvme.c	/^	__u8 rebuild_percent; $/;"	m	struct:nvme_dera_smart_info_log	file:
rebuild_req_cnt	plugins/inspur/inspur-utils.h	/^    __u32 rebuild_req_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
receiverErrStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 receiverErrStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
receiverOverflowStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 receiverOverflowStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
recv_rpmb_rsp	nvme-rpmb.c	/^static int recv_rpmb_rsp(int fd, int tgt, int size,$/;"	f	file:
ref_tag	nvme.c	/^static const char *ref_tag = "reference tag for end-to-end PI";$/;"	v	file:
refreshCount	plugins/seagate/seagate-diag.h	/^    __u64           refreshCount : 56;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
refresh_count	plugins/wdc/wdc-nvme.c	/^	__le64		refresh_count;$/;"	m	struct:wdc_nand_stats_V3	file:
refresh_count	plugins/wdc/wdc-nvme.c	/^	__le64  refresh_count;                          \/* 0x49 - Refresh Count                    *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
register_extension	nvme.c	/^void register_extension(struct plugin *plugin)$/;"	f
rehash	ccan/ccan/htable/htable.h	/^	size_t (*rehash)(const void *elem, void *priv);$/;"	m	struct:htable
rehash_table	ccan/ccan/htable/htable.c	/^static COLD void rehash_table(struct htable *ht)$/;"	f	file:
reinstall	Documentation/nvme-admin-passthru.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ana-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-attach-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-boot-part-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-capacity-mgmt.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-changed-ns-list-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-check-dhchap-key.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-cmdset-ind-id-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-compare.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-connect-all.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-connect.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-copy.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-create-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-delete-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-dera-stat.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-detach-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-device-self-test.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-dim.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-dir-receive.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-dir-send.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-disconnect-all.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-disconnect.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-discover.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-dsm.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-effects-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-endurance-event-agg-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-endurance-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-error-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-configs.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-events.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-set-events.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-status.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-update.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fdp-usage.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fid-support-effects-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-flush.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-format.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fw-commit.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fw-download.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-fw-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-gen-dhchap-key.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-gen-hostnqn.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-get-feature.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-get-lba-status.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-get-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-get-ns-id.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-get-property.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-help.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-huawei-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-huawei-list.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-domain.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-iocs.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-ns-lba-format.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-id-nvmset.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-inspur-nvme-vendor-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-internal-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-lat-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-market-name.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-smart-log-add.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-intel-temp-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-io-mgmt-recv.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-io-mgmt-send.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-io-passthru.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-lba-status-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-list-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-list-endgrp.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-list-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-list-subsys.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-list.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-lockdown.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-media-unit-stat-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-mi-cmd-support-effects-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-clear-pcie-errors.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-internal-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-nand-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-pcie-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-selective-download.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-micron-temperature-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-netapp-ontapdevices.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-netapp-smdevices.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ns-descs.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ns-rescan.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-nvm-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-nvm-id-ns-lba-format.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-nvm-id-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-nvme-mi-recv.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-nvme-mi-send.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ocp-clear-fw-activate-history.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ocp-clear-pcie-correctable-error-counters.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ocp-eol-plp-failure-mode.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ocp-latency-monitor-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-ocp-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-persistent-event-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-pred-lat-event-agg-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-predictable-lat-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-primary-ctrl-caps.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-read.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-reset.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-resv-acquire.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-resv-notif-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-resv-register.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-resv-release.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-resv-report.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-rpmb.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-sanitize-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-sanitize.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-clear-fw-activate-history.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-clear-pcie-correctable-errors.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-cloud-SSD-plugin-version.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-get-ctrl-tele.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-get-host-tele.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-help.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-plugin-version.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-version.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-fw-activate-history.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-internal-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-log-page-sup.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-pcie-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-seagate-vs-temperature-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-security-recv.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-security-send.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-self-test-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-set-feature.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-set-property.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-show-hostnqn.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-show-regs.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-show-topology.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-smart-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-subsystem-reset.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-supported-log-pages.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-telemetry-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-toshiba-clear-pcie-correctable-errors.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-toshiba-vs-internal-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-toshiba-vs-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-transcend-badblock.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-transcend-healthvalue.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-verify.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-virtium-save-smart-to-vtview-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-virtium-show-identify.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-cap-diag.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-capabilities.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-clear-assert-dump.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-clear-fw-activate-history.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-clear-pcie-corr.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-clear-pcie-correctable-errors.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-cloud-SSD-plugin-version.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-cloud-boot-SSD-version.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-drive-essentials.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-drive-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-drive-resize.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-enc-get-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-crash-dump.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-dev-capabilities-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-drive-status.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-error-recovery-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-latency-monitor-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-pfail-dump.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-get-unsupported-reqs-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-log-page-directory.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-namespace-resize.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-purge-monitor.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-purge.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-cloud-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-device-waf.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-drive-info.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-error-reason-identifier.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-fw-activate-history.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-hw-rev-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-internal-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-nand-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-smart-add-log.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-telemetry-controller-option.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-wdc-vs-temperature-stats.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-write-uncor.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-write-zeroes.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-write.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-changed-zone-list.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-close-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-finish-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-id-ctrl.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-id-ns.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-offline-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-open-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-report-zones.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-reset-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-set-zone-desc.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-zone-append.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-zone-mgmt-recv.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-zone-mgmt-send.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme-zns-zrwa-flush-zone.html	/^  function reinstall() {$/;"	f
reinstall	Documentation/nvme.html	/^  function reinstall() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-admin-passthru.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ana-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-attach-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-boot-part-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-capacity-mgmt.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-changed-ns-list-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-check-dhchap-key.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-cmdset-ind-id-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-compare.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-connect-all.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-connect.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-copy.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-create-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-delete-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-dera-stat.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-detach-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-device-self-test.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-dim.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-dir-receive.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-dir-send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-disconnect-all.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-disconnect.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-discover.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-dsm.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-effects-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-endurance-event-agg-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-endurance-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-error-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-configs.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-events.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-set-events.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-status.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-update.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fdp-usage.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fid-support-effects-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-flush.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-format.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fw-commit.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fw-download.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-fw-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-gen-dhchap-key.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-gen-hostnqn.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-get-feature.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-get-lba-status.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-get-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-get-ns-id.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-get-property.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-help.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-huawei-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-huawei-list.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-domain.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-iocs.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-ns-lba-format.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-id-nvmset.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-inspur-nvme-vendor-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-internal-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-lat-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-market-name.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-smart-log-add.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-intel-temp-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-io-mgmt-recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-io-mgmt-send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-io-passthru.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-lba-status-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-list-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-list-endgrp.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-list-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-list-subsys.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-list.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-lockdown.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-media-unit-stat-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-mi-cmd-support-effects-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-clear-pcie-errors.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-internal-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-nand-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-pcie-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-selective-download.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-micron-temperature-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-netapp-ontapdevices.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-netapp-smdevices.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ns-descs.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ns-rescan.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-nvm-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-nvm-id-ns-lba-format.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-nvm-id-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-nvme-mi-recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-nvme-mi-send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ocp-clear-fw-activate-history.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ocp-clear-pcie-correctable-error-counters.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ocp-eol-plp-failure-mode.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ocp-latency-monitor-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-ocp-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-persistent-event-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-pred-lat-event-agg-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-predictable-lat-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-primary-ctrl-caps.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-read.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-reset.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-resv-acquire.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-resv-notif-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-resv-register.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-resv-release.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-resv-report.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-rpmb.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-sanitize-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-sanitize.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-clear-fw-activate-history.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-clear-pcie-correctable-errors.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-cloud-SSD-plugin-version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-get-ctrl-tele.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-get-host-tele.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-help.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-plugin-version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-fw-activate-history.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-internal-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-log-page-sup.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-pcie-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-seagate-vs-temperature-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-security-recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-security-send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-self-test-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-set-feature.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-set-property.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-show-hostnqn.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-show-regs.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-show-topology.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-smart-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-subsystem-reset.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-supported-log-pages.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-telemetry-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-toshiba-clear-pcie-correctable-errors.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-toshiba-vs-internal-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-toshiba-vs-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-transcend-badblock.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-transcend-healthvalue.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-verify.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-virtium-save-smart-to-vtview-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-virtium-show-identify.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-cap-diag.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-capabilities.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-clear-assert-dump.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-clear-fw-activate-history.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-clear-pcie-corr.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-clear-pcie-correctable-errors.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-cloud-SSD-plugin-version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-cloud-boot-SSD-version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-drive-essentials.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-drive-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-drive-resize.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-enc-get-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-crash-dump.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-dev-capabilities-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-drive-status.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-error-recovery-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-latency-monitor-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-pfail-dump.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-get-unsupported-reqs-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-log-page-directory.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-namespace-resize.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-purge-monitor.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-purge.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-cloud-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-device-waf.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-drive-info.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-error-reason-identifier.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-fw-activate-history.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-hw-rev-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-internal-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-nand-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-smart-add-log.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-telemetry-controller-option.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-wdc-vs-temperature-stats.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-write-uncor.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-write-zeroes.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-write.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-changed-zone-list.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-close-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-finish-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-id-ctrl.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-id-ns.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-offline-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-open-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-report-zones.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-reset-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-set-zone-desc.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-zone-append.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-zone-mgmt-recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-zone-mgmt-send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme-zns-zrwa-flush-zone.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	Documentation/nvme.html	/^  function reinstallAndRemoveTimer() {$/;"	f
replayNumRolloverStCount	plugins/wdc/wdc-nvme.c	/^	__le64 replayNumRolloverStCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
replayTimerToStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 replayTimerToStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
report_zones	plugins/zns/zns.c	/^static int report_zones(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
reserve_erase_block_count	plugins/wdc/wdc-nvme.c	/^	__le32  reserve_erase_block_count;             \/* 0x18 - Reserve erase block count                  *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
reserved	plugins/innogrit/typedef.h	/^	unsigned int reserved[2];$/;"	m	struct:evlg_flush_hdr
reserved	plugins/intel/intel-nvme.c	/^	__u32 reserved[3];$/;"	m	struct:intel_vu_nlog	file:
reserved	plugins/intel/intel-nvme.c	/^	__u8     reserved[4080];$/;"	m	struct:intel_vu_log	file:
reserved	plugins/intel/intel-nvme.c	/^	__u8  reserved[2];$/;"	m	struct:intel_assert_dump	file:
reserved	plugins/micron/micron-nvme.c	/^	uint8_t  reserved[7];$/;"	m	struct:micron_common_log_header	file:
reserved	plugins/ocp/ocp-nvme.c	/^	__u8    reserved[0x3];                           \/* 3 bytes      - 0x11 - 0x13 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
reserved	plugins/ocp/ocp-nvme.c	/^	__u8    reserved[3934];$/;"	m	struct:ocp_device_capabilities_log_page	file:
reserved	plugins/ocp/ocp-nvme.c	/^	__u8  reserved[4083];$/;"	m	struct:feature_latency_monitor	file:
reserved	plugins/solidigm/solidigm-garbage-collection.c	/^	__u8 reserved[2892];$/;"	m	struct:garbage_control_collection_log	file:
reserved	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 reserved[2];$/;"	m	struct:nlog_dump_header4_0	file:
reserved	plugins/solidigm/solidigm-internal-logs.c	/^	__u8  reserved[2];$/;"	m	struct:assert_dump_core	file:
reserved	plugins/wdc/wdc-nvme.c	/^	__le16		reserved;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
reserved	plugins/wdc/wdc-nvme.c	/^	__u8		reserved[279];$/;"	m	struct:wdc_nand_stats_V3	file:
reserved	plugins/wdc/wdc-nvme.c	/^	__u8		reserved[3];$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
reserved	plugins/wdc/wdc-nvme.c	/^	__u8    reserved;$/;"	m	struct:wdc_dui_log_section_v4	file:
reserved	plugins/wdc/wdc-nvme.c	/^	__u8 reserved[12];$/;"	m	struct:wdc_fw_act_history_log_entry	file:
reserved	plugins/wdc/wdc-nvme.c	/^	uint8_t	reserved;$/;"	m	struct:wdc_log_page_header	file:
reserved0	plugins/amzn/amzn-nvme.c	/^	__u8			reserved0[992];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
reserved0	plugins/dell/dell-nvme.c	/^	__u8		reserved0[1018];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
reserved0	plugins/nvidia/nvidia-nvme.c	/^	__u8		reserved0[1018];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
reserved1	plugins/ocp/ocp-fw-activation-history.c	/^	__u16 reserved1;$/;"	m	struct:fw_activation_history_entry	file:
reserved1	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 reserved1[3];$/;"	m	struct:fw_activation_history	file:
reserved1	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t reserved1 : 8;$/;"	m	struct:cod_item	file:
reserved1	plugins/wdc/wdc-nvme.c	/^	__u8	reserved1[2];$/;"	m	struct:wdc_bd_ca_log_format	file:
reserved1	plugins/wdc/wdc-nvme.c	/^	__u8 reserved1;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
reserved1	plugins/wdc/wdc-nvme.c	/^	__u8 reserved1[384];$/;"	m	struct:wdc_vs_pcie_stats	file:
reserved2	plugins/innogrit/typedef.h	/^	u_char reserved2[3];$/;"	m	struct:vsc_smart_log
reserved2	plugins/intel/intel-nvme.c	/^			__u32 reserved2  : 16;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
reserved2	plugins/ocp/ocp-fw-activation-history.c	/^	__u64 reserved2;$/;"	m	struct:fw_activation_history_entry	file:
reserved2	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 reserved2[2790];$/;"	m	struct:fw_activation_history	file:
reserved2	plugins/ocp/ocp-nvme.c	/^	__u8    reserved2[0x1cf];                        \/* 463 bytes    - 0x1F - 0x1ED *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
reserved2	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t reserved2 : 13;$/;"	m	struct:cod_item	file:
reserved2	plugins/wdc/wdc-nvme.c	/^	__u8		reserved2[2790];$/;"	m	struct:wdc_fw_act_history_log_format_c2	file:
reserved2	plugins/wdc/wdc-nvme.c	/^	__u8		reserved2[8];$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
reserved2	plugins/wdc/wdc-nvme.c	/^	__u8 reserved2;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
reserved3	plugins/innogrit/typedef.h	/^	unsigned int reserved3[44];$/;"	m	struct:vsc_smart_log
reserved3	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 reserved3[14];$/;"	m	struct:fw_activation_history_entry	file:
reserved3	plugins/wdc/wdc-nvme.c	/^	__le32 reserved3;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
reserved3	plugins/wdc/wdc-nvme.c	/^	__u8		reserved3[14];$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
reset	nvme.c	/^static int reset(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
reset_zone	plugins/zns/zns.c	/^static int reset_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
result	nvme-rpmb.c	/^	unsigned short result;$/;"	m	struct:rpmb_data_frame_t	file:
result	plugins/micron/micron-nvme.c	/^	__le16                             result;$/;"	m	struct:fw_activation_history_entry	file:
result	plugins/ocp/ocp-fw-activation-history.c	/^	__u16 result;$/;"	m	struct:fw_activation_history_entry	file:
result	plugins/seagate/seagate-diag.h	/^    __u16   result;$/;"	m	struct:_stx_fw_activ_his_ele
result	plugins/wdc/wdc-nvme.c	/^	__le16		result;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
result	plugins/wdc/wdc-nvme.c	/^	__le16 result;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
resv	plugins/memblaze/memblaze-utils.h	/^	__u8 resv;$/;"	m	struct:nvme_memblaze_smart_log_item
resv	plugins/memblaze/memblaze-utils.h	/^	__u8 resv[SMART_INFO_NEW_SIZE - sizeof(struct nvme_p4_smart_log_item) * NR_SMART_ITEMS];$/;"	m	struct:nvme_p4_smart_log
resv	plugins/memblaze/memblaze-utils.h	/^	__u8 resv[SMART_INFO_OLD_SIZE - sizeof(struct nvme_memblaze_smart_log_item) * NR_SMART_ITEMS];$/;"	m	struct:nvme_memblaze_smart_log
resv	plugins/toshiba/toshiba-nvme.c	/^	__u8 resv[512 - NR_SMART_ITEMS_C0];$/;"	m	struct:nvme_xdn_smart_log_c0	file:
resv	plugins/ymtc/ymtc-utils.h	/^    u8 resv[SMART_INFO_SIZE - sizeof(struct nvme_ymtc_smart_log_item) * NR_SMART_ITEMS];$/;"	m	struct:nvme_ymtc_smart_log
resv_acquire	nvme.c	/^static int resv_acquire(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
resv_notification_log	nvme-print.h	/^	void (*resv_notification_log)(struct nvme_resv_notification_log *resv, const char *devname);$/;"	m	struct:print_ops
resv_register	nvme.c	/^static int resv_register(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
resv_release	nvme.c	/^static int resv_release(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
resv_report	nvme-print.h	/^	void (*resv_report)(struct nvme_resv_status *status, int bytes, bool eds);$/;"	m	struct:print_ops
resv_report	nvme.c	/^static int resv_report(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
ret	unit/test-argconfig-parse.c	/^	int ret;$/;"	m	struct:toval_test	file:
ret	unit/test-suffix-binary-parse.c	/^	int ret;$/;"	m	struct:tonum_test	file:
ret	unit/test-suffix-si-parse.c	/^	int ret;$/;"	m	struct:tonum_test	file:
retry_buffer_overflow_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	retry_buffer_overflow_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
retry_buffer_overflow_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item retry_buffer_overflow_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
retry_req_cnt	plugins/inspur/inspur-utils.h	/^    __u16 retry_req_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
retry_success_cnt	plugins/inspur/inspur-utils.h	/^    __u16 retry_success_cnt;$/;"	m	struct:r1_vendor_log_ncm_cout
rev01_03	plugins/seagate/seagate-diag.h	/^   __u8                     rev01_03[3];$/;"	m	struct:_stx_fw_activ_history_log_page
rev02_03	plugins/seagate/seagate-diag.h	/^    __u16   rev02_03;$/;"	m	struct:_stx_fw_activ_his_ele
rev1288_4077	plugins/seagate/seagate-diag.h	/^   __u8                     rev1288_4077[2790];$/;"	m	struct:_stx_fw_activ_history_log_page
rev14_21	plugins/seagate/seagate-diag.h	/^    __u64   rev14_21;$/;"	m	struct:_stx_fw_activ_his_ele
rev50_63	plugins/seagate/seagate-diag.h	/^    __u8    rev50_63[14];$/;"	m	struct:_stx_fw_activ_his_ele
revision	plugins/memblaze/memblaze-nvme.c	/^	__u8 revision;$/;"	m	struct:log_page_high_latency	file:
right	ccan/ccan/likely/likely.c	/^	unsigned long count, right;$/;"	m	struct:trace	file:
right_ratio	ccan/ccan/likely/likely.c	/^static double right_ratio(const struct trace *t)$/;"	f	file:
root	nvme.h	/^			nvme_root_t root;$/;"	m	struct:nvme_dev::__anon28::__anon30
root	plugins/solidigm/solidigm-telemetry/telemetry-log.h	/^	struct json_object *root;$/;"	m	struct:telemetry_log	typeref:struct:telemetry_log::json_object
rot	ccan/ccan/hash/hash.c	84;"	d	file:
rpmb_auth_data_read	nvme-rpmb.c	/^static int rpmb_auth_data_read(int fd, unsigned char target,$/;"	f	file:
rpmb_auth_data_write	nvme-rpmb.c	/^static int rpmb_auth_data_write(int fd, unsigned char target,$/;"	f	file:
rpmb_cmd	nvme.c	/^static int rpmb_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
rpmb_cmd_option	nvme-rpmb.c	/^int rpmb_cmd_option(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
rpmb_config_block_t	nvme-rpmb.c	/^struct rpmb_config_block_t {$/;"	s	file:
rpmb_data_frame_t	nvme-rpmb.c	/^struct rpmb_data_frame_t {$/;"	s	file:
rpmb_md5	nvme-rpmb.c	/^rpmb_md5(unsigned char *data, int datalen)$/;"	f
rpmb_nonce_init	nvme-rpmb.c	/^static void rpmb_nonce_init(struct rpmb_data_frame_t *req)$/;"	f	file:
rpmb_program_auth_key	nvme-rpmb.c	/^static int rpmb_program_auth_key(int fd, unsigned char target,$/;"	f	file:
rpmb_read_config_block	nvme-rpmb.c	/^static unsigned int rpmb_read_config_block(int fd, unsigned char **config_buf)$/;"	f	file:
rpmb_read_request	nvme-rpmb.c	/^rpmb_read_request(int fd, $/;"	f	file:
rpmb_read_write_counter	nvme-rpmb.c	/^static int rpmb_read_write_counter(int fd,$/;"	f	file:
rpmb_request_init	nvme-rpmb.c	/^rpmb_request_init(unsigned int   req_size,$/;"	f	file:
rpmb_request_type	nvme-rpmb.c	/^enum rpmb_request_type {$/;"	g	file:
rpmb_response_type	nvme-rpmb.c	/^enum rpmb_response_type {$/;"	g	file:
rpmb_write_config_block	nvme-rpmb.c	/^static int rpmb_write_config_block(int fd, unsigned char *cfg_buf,$/;"	f	file:
rsv	plugins/inspur/inspur-utils.h	/^    __u32 rsv : 25;$/;"	m	struct:vendor_warning_bit
rsv1	plugins/shannon/shannon-nvme.c	/^	__u8			rsv1[3];$/;"	m	struct:nvme_shannon_smart_log_item	file:
rsv2	plugins/shannon/shannon-nvme.c	/^	__u8			rsv2;$/;"	m	struct:nvme_shannon_smart_log_item	file:
rsvFE	plugins/inspur/inspur-utils.h	/^    __u8 rsvFE[56];$/;"	m	struct:r1_vendor_log_s
rsvd	nvme-rpmb.c	/^	unsigned char  rsvd[510]; $/;"	m	struct:rpmb_config_block_t	file:
rsvd	nvme.c	/^	__u16	rsvd;$/;"	m	struct:passthru_config	file:
rsvd	plugins/intel/intel-nvme.c	/^	__u8	rsvd[40];$/;"	m	struct:intel_temp_stats	file:
rsvd	plugins/memblaze/memblaze-nvme.c	/^	__u16 rsvd;$/;"	m	struct:log_page_high_latency	file:
rsvd	plugins/wdc/wdc-nvme.c	/^	__u8		rsvd[442];$/;"	m	struct:wdc_nand_stats	file:
rsvd	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd[392];                              \/* 0x78 - Reserved bytes 120-511           *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
rsvd	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd[408];                             \/* 0x68 - 408 Reserved bytes                         *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
rsvd1	plugins/intel/intel-nvme.c	/^	__u8			rsvd1[3];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
rsvd1	plugins/micron/micron-nvme.c	/^	__u16                              rsvd1;$/;"	m	struct:fw_activation_history_entry	file:
rsvd1	plugins/micron/micron-nvme.c	/^	__u8                               rsvd1[3];$/;"	m	struct:micron_fw_activation_history_table	file:
rsvd1	plugins/ocp/ocp-nvme.c	/^	__u8	rsvd1;				\/* 0x01 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
rsvd1	plugins/ocp/ocp-nvme.c	/^	__u8    rsvd1[14];$/;"	m	struct:unsupported_requirement_log	file:
rsvd1	plugins/seagate/seagate-diag.h	/^    __u8        rsvd1[4];$/;"	m	struct:nvme_temetry_log_hdr
rsvd1	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8	rsvd1[3];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
rsvd1	plugins/wdc/wdc-nvme.c	/^	__le16 rsvd1;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd1	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd1;                                  \/* 0x01 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
rsvd1	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd1;                                 \/* 0016 - Reserved must be cleared to zero    *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
rsvd1	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd1[14];                             \/* 0002 - Reserved must be cleared to zero                   *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
rsvd1	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd1[3];                               \/* 017 - 3 Reserved Bytes                    *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
rsvd14	plugins/seagate/seagate-diag.h	/^    __u8        rsvd14[368];$/;"	m	struct:nvme_temetry_log_hdr
rsvd2	plugins/intel/intel-nvme.c	/^	__u8			rsvd2[38];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
rsvd2	plugins/micron/micron-nvme.c	/^	__le64                             rsvd2;$/;"	m	struct:fw_activation_history_entry	file:
rsvd2	plugins/micron/micron-nvme.c	/^	__u8                               rsvd2[2790];$/;"	m	struct:micron_fw_activation_history_table	file:
rsvd2	plugins/ocp/ocp-nvme.c	/^	__u8	rsvd2[0x13];			\/* 0x0D *\/$/;"	m	struct:ssd_latency_monitor_log	file:
rsvd2	plugins/ocp/ocp-nvme.c	/^	__u8    rsvd2[14];$/;"	m	struct:unsupported_requirement_log	file:
rsvd2	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 rsvd2[38];$/;"	m	struct:nvme_vu_id_ctrl_field	file:
rsvd2	plugins/wdc/wdc-nvme.c	/^	__le16 rsvd2;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd2	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd2[0x13];                            \/* 0x0D *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
rsvd2	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd2[14];                             \/* 4064 - Reserved must be cleared to zero                   *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
rsvd2	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd2[3934];                           \/* 0144 - Reserved must be cleared to zero    *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
rsvd2	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd2[463];                             \/* 031 - 463 Reserved Bytes                  *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
rsvd3	plugins/micron/micron-nvme.c	/^	__u8                               rsvd3[14];$/;"	m	struct:fw_activation_history_entry	file:
rsvd3	plugins/ocp/ocp-nvme.c	/^	__u8	rsvd3[0x16];			\/* 0xDA *\/$/;"	m	struct:ssd_latency_monitor_log	file:
rsvd3	plugins/wdc/wdc-nvme.c	/^	__le16 rsvd3;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd3	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd3[0x16];                            \/* 0xDA *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
rsvd4	plugins/ocp/ocp-nvme.c	/^	__u8	rsvd4[0x16];			\/* 0x1AA *\/$/;"	m	struct:ssd_latency_monitor_log	file:
rsvd4	plugins/wdc/wdc-nvme.c	/^	__le32 rsvd4;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd4	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd4[0x16];                            \/* 0x1AA *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
rsvd5	plugins/ocp/ocp-nvme.c	/^	__u8	rsvd5[0x1D];			\/* 0x1D1 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
rsvd5	plugins/wdc/wdc-nvme.c	/^	__le32 rsvd5;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd5	plugins/wdc/wdc-nvme.c	/^	__u8    rsvd5[0x1D];                            \/* 0x1D1 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
rsvd6	plugins/wdc/wdc-nvme.c	/^	__u8 rsvd6[14];$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
rsvd_116_119	plugins/seagate/seagate-diag.h	/^    __u32           rsvd_116_119;       $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
rsvd_121_127	plugins/seagate/seagate-diag.h	/^    __u8            rsvd_121_127[7];    $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
rsvd_131_135	plugins/seagate/seagate-diag.h	/^    __u8            rsvd_131_135[5];    $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
rsvd_208_493	plugins/seagate/seagate-diag.h	/^    __u8            rsvd_208_493[286];  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
rsvd_crms_nsss_cmbs_pmrs	nvme-print-stdout.c	/^	__u8	rsvd_crms_nsss_cmbs_pmrs;$/;"	m	struct:nvme_bar_cap	file:
rsved	plugins/dera/dera-nvme.c	/^	__u8 rsved[395];$/;"	m	struct:nvme_dera_smart_info_log	file:
rsvlkm	plugins/inspur/inspur-utils.h	/^    __u8 rsvlkm[176];$/;"	m	struct:r1_vendor_log_s
rsvncm	plugins/inspur/inspur-utils.h	/^    __u8 rsvncm[216];$/;"	m	struct:r1_vendor_log_s
rsvwlm	plugins/inspur/inspur-utils.h	/^    __u8 rsvwlm[512 - sizeof(r1_wearlvl_vendor_log_count_t) * 4 % 512];$/;"	m	struct:r1_vendor_log_s
rt_pcie_volt_low	plugins/dera/dera-nvme.c	/^	__u8 rt_pcie_volt_low[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
rt_pcie_volt_thr	plugins/dera/dera-nvme.c	/^	__u8 rt_pcie_volt_thr[2]; $/;"	m	struct:nvme_dera_smart_info_log	file:
rtype	nvme.c	/^static const char *rtype = "reservation type";$/;"	v	file:
run_mypy	tests/run_py_linters.py	/^def run_mypy(path: Path) -> None:$/;"	f
run_ns_io	tests/nvme_test.py	/^    def run_ns_io(self, nsid, lbads):$/;"	m	class:TestNVMe
run_test	scripts/latency	/^function run_test {$/;"	f
run_test	scripts/regress	/^function run_test {$/;"	f
run_time_hrs	plugins/virtium/virtium-nvme.c	/^	double		run_time_hrs;$/;"	m	struct:vtview_save_log_settings	file:
s	ccan/ccan/strset/strset.h	/^		const char *s;$/;"	m	union:strset::__anon27
s16	ccan/ccan/short_types/short_types.h	/^typedef int16_t s16;$/;"	t
s32	ccan/ccan/short_types/short_types.h	/^typedef int32_t s32;$/;"	t
s64	ccan/ccan/short_types/short_types.h	/^typedef int64_t s64;$/;"	t
s8	ccan/ccan/short_types/short_types.h	/^typedef int8_t s8;$/;"	t
sLBA	plugins/memblaze/memblaze-nvme.c	/^	__u64 sLBA;$/;"	m	struct:log_page_high_latency	file:
safe_div_fp	plugins/wdc/wdc-nvme.c	/^static double safe_div_fp(double numerator, double denominator)$/;"	f	file:
sanitize_cmd	nvme.c	/^static int sanitize_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sanitize_cmd_support	plugins/ocp/ocp-nvme.c	/^	__le16  sanitize_cmd_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
sanitize_log	nvme.c	/^static int sanitize_log(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
sanitize_log_page	nvme-print.h	/^	void (*sanitize_log_page)(struct nvme_sanitize_log_page *sanitize_log, const char *devname);$/;"	m	struct:print_ops
sanitize_support	plugins/wdc/wdc-nvme.c	/^	__le16  sanitize_support;                      \/* 0006 - Sanitize Command Support            *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
save_discovery_log	fabrics.c	/^static void save_discovery_log(char *raw, struct nvmf_discovery_log *log)$/;"	f	file:
scan_db_err_cnt	plugins/inspur/inspur-utils.h	/^    __u32 scan_db_err_cnt;$/;"	m	struct:r1_vendor_log_s
scao_guid	plugins/ocp/ocp-smart-extended-log.c	/^static __u8 scao_guid[C0_GUID_LENGTH] = {$/;"	v	file:
scao_guid	plugins/wdc/wdc-nvme.c	/^static __u8 scao_guid[WDC_C0_GUID_LENGTH] = {$/;"	v	file:
scap	plugins/intel/intel-nvme.c	/^	__u8			scap;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
scap	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 scap;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
seagate_plugin_version	plugins/seagate/seagate-nvme.c	/^static int seagate_plugin_version(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
seaget_d_raw	plugins/seagate/seagate-nvme.c	/^void seaget_d_raw(unsigned char *buf, int len, int fd)$/;"	f
secVerNum	plugins/seagate/seagate-diag.h	/^    __u64           secVerNum;          $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
sec_recv	nvme.c	/^static int sec_recv(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sec_send	nvme.c	/^static int sec_send(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
second	plugins/wdc/wdc-utils.h	/^	unsigned int second;$/;"	m	struct:_UtilsTimeInfo
second_erase_failure_cnt	plugins/wdc/wdc-nvme.c	/^	__le16 second_erase_failure_cnt;$/;"	m	struct:wdc_nvme_purge_monitor_data	file:
secondary_ctrl_list	nvme-print.h	/^	void (*secondary_ctrl_list)(const struct nvme_secondary_ctrl_list *sc_list, __u32 count);$/;"	m	struct:print_ops
secp	nvme.c	/^static const char *secp = "security protocol (cf. SPC-4)";$/;"	v	file:
section_count	plugins/wdc/wdc-nvme.c	/^	__le16	section_count;$/;"	m	struct:wdc_dui_log_hdr	file:
section_count	plugins/wdc/wdc-nvme.c	/^	__le16	section_count;$/;"	m	struct:wdc_dui_log_hdr_v2	file:
section_count	plugins/wdc/wdc-nvme.c	/^	__le16	section_count;$/;"	m	struct:wdc_dui_log_hdr_v3	file:
section_count	plugins/wdc/wdc-nvme.c	/^	__le16	section_count;$/;"	m	struct:wdc_dui_log_hdr_v4	file:
section_size	plugins/wdc/wdc-nvme.c	/^	__le32	section_size;$/;"	m	struct:wdc_dui_log_section	file:
section_size	plugins/wdc/wdc-nvme.c	/^	__le64	section_size;$/;"	m	struct:wdc_dui_log_section_v2	file:
section_size_sectors	plugins/wdc/wdc-nvme.c	/^	__le32	section_size_sectors;$/;"	m	struct:wdc_dui_log_section_v4	file:
section_type	plugins/wdc/wdc-nvme.c	/^	__le16	section_type;$/;"	m	struct:wdc_dui_log_section	file:
section_type	plugins/wdc/wdc-nvme.c	/^	__le16	section_type;$/;"	m	struct:wdc_dui_log_section_v2	file:
section_type	plugins/wdc/wdc-nvme.c	/^	__le16	section_type;$/;"	m	struct:wdc_dui_log_section_v4	file:
sectors	nvme-rpmb.c	/^	unsigned int   sectors;$/;"	m	struct:rpmb_data_frame_t	file:
securityNonce	plugins/wdc/wdc-nvme.c	/^	__u8    securityNonce[36];$/;"	m	struct:wdc_dui_log_hdr_v3	file:
security_version_number	plugins/wdc/wdc-nvme.c	/^	__le64		security_version_number;$/;"	m	struct:wdc_nand_stats_V3	file:
seen	util/argconfig.h	/^	bool seen;$/;"	m	struct:argconfig_commandline_options
sel	nvme.c	/^	enum nvme_get_features_sel sel;$/;"	m	struct:feat_cfg	typeref:enum:feat_cfg::nvme_get_features_sel	file:
selectCore	plugins/intel/intel-nvme.c	/^			__u32 selectCore : 2;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
selectLog	plugins/intel/intel-nvme.c	/^			__u32 selectLog  : 3;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
selectNlog	plugins/intel/intel-nvme.c	/^			__u32 selectNlog : 8;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
selectNlogPause	plugins/intel/intel-nvme.c	/^			__u32 selectNlogPause : 2;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
selectOffsetRef	plugins/intel/intel-nvme.c	/^			__u8  selectOffsetRef : 1;$/;"	m	struct:intel_cd_log::__anon25::__anon26	file:
select_result	nvme-print.h	/^	void (*select_result)(__u32 result);$/;"	m	struct:print_ops
selectaddedoffset	plugins/intel/intel-nvme.c	/^	__u32 selectaddedoffset;$/;"	m	struct:intel_vu_nlog	file:
selectaddedoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectaddedoffset;$/;"	m	struct:nlog_dump_header3_0	file:
selectaddedoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectaddedoffset;$/;"	m	struct:nlog_dump_header4_0	file:
selectaddedoffset	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectaddedoffset;$/;"	m	struct:nlog_dump_header4_1	file:
selectnlogpause	plugins/intel/intel-nvme.c	/^	__u32 selectnlogpause;$/;"	m	struct:intel_vu_nlog	file:
selectnlogpause	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectnlogpause;$/;"	m	struct:nlog_dump_header3_0	file:
selectnlogpause	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectnlogpause;$/;"	m	struct:nlog_dump_header4_0	file:
selectnlogpause	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectnlogpause;$/;"	m	struct:nlog_dump_header4_1	file:
selectoffsetref	plugins/intel/intel-nvme.c	/^	__u32 selectoffsetref;$/;"	m	struct:intel_vu_nlog	file:
selectoffsetref	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectoffsetref;$/;"	m	struct:nlog_dump_header3_0	file:
selectoffsetref	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectoffsetref;$/;"	m	struct:nlog_dump_header4_0	file:
selectoffsetref	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 selectoffsetref;$/;"	m	struct:nlog_dump_header4_1	file:
self_test_fail1	plugins/inspur/inspur-utils.h	/^    __u32 self_test_fail1 : 1;$/;"	m	struct:vendor_warning_bit
self_test_fail2	plugins/inspur/inspur-utils.h	/^    __u32 self_test_fail2 : 1;$/;"	m	struct:vendor_warning_bit
self_test_fail3	plugins/inspur/inspur-utils.h	/^    __u32 self_test_fail3 : 1;$/;"	m	struct:vendor_warning_bit
self_test_fail4	plugins/inspur/inspur-utils.h	/^    __u32 self_test_fail4 : 1;$/;"	m	struct:vendor_warning_bit
self_test_log	nvme-print.h	/^	void (*self_test_log)(struct nvme_self_test_log *self_test, __u8 dst_entries, __u32 size, const char *devname);$/;"	m	struct:print_ops
self_test_log	nvme.c	/^static int self_test_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
send_rpmb_req	nvme-rpmb.c	/^static int send_rpmb_req(int fd, unsigned char tgt, int size,$/;"	f	file:
setUp	tests/nvme_attach_detach_ns_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeAttachDetachNSCmd
setUp	tests/nvme_compare_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeCompareCmd
setUp	tests/nvme_copy_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeCopy
setUp	tests/nvme_create_max_ns_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeCreateMaxNS
setUp	tests/nvme_ctrl_reset_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeCtrlReset
setUp	tests/nvme_dsm_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeDsm
setUp	tests/nvme_error_log_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeErrorLogCmd
setUp	tests/nvme_flush_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeFlushCmd
setUp	tests/nvme_format_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeFormatCmd
setUp	tests/nvme_fw_log_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeFwLogCmd
setUp	tests/nvme_get_features_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeGetMandatoryFeatures
setUp	tests/nvme_get_lba_status_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeGetLbaStatusCmd
setUp	tests/nvme_id_ctrl_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeIdctrlCmd
setUp	tests/nvme_id_ns_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeIdentifyNamespace
setUp	tests/nvme_lba_status_log_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeLbaStatLogCmd
setUp	tests/nvme_read_write_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeReadWriteTest
setUp	tests/nvme_simple_template_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeSimpleTestTemplate
setUp	tests/nvme_smart_log_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeSmartLogCmd
setUp	tests/nvme_test.py	/^    def setUp(self):$/;"	m	class:TestNVMe
setUp	tests/nvme_test_io.py	/^    def setUp(self):$/;"	m	class:TestNVMeIO
setUp	tests/nvme_verify_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeVerify
setUp	tests/nvme_writeuncor_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeUncor
setUp	tests/nvme_writezeros_test.py	/^    def setUp(self):$/;"	m	class:TestNVMeWriteZeros
set_additional_feature	plugins/shannon/shannon-nvme.c	/^static int set_additional_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
set_discovery_kato	fabrics.c	/^static int set_discovery_kato(struct nvme_fabrics_config *cfg)$/;"	f	file:
set_feature	nvme.c	/^static int set_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
set_lat_stats_thresholds	plugins/intel/intel-nvme.c	/^static int set_lat_stats_thresholds(int argc, char **argv,$/;"	f	file:
set_property	nvme.c	/^static int set_property(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
set_string	ccan/ccan/strset/strset.c	/^static bool set_string(struct strset *set,$/;"	f	file:
set_unit_string	plugins/intel/intel-nvme.c	/^static void set_unit_string(char *buffer, __u32 microseconds,$/;"	f	file:
set_zone_desc	plugins/zns/zns.c	/^static int set_zone_desc(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
setfilecontent	plugins/innogrit/innogrit-nvme.c	/^static unsigned char setfilecontent(char *filenamea, unsigned char *buffer,$/;"	f	file:
setup_file	plugins/intel/intel-nvme.c	/^static int setup_file(char *f, char *file, int fd, int type)$/;"	f	file:
setup_log_dir	tests/nvme_test.py	/^    def setup_log_dir(self, test_name):$/;"	m	class:TestNVMe
sfx_clean_card	plugins/scaleflux/sfx-nvme.c	/^static int sfx_clean_card(int fd)$/;"	f	file:
sfx_confirm_change	plugins/scaleflux/sfx-nvme.c	/^static int sfx_confirm_change(const char *str)$/;"	f	file:
sfx_dump_evtlog	plugins/scaleflux/sfx-nvme.c	/^static int sfx_dump_evtlog(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sfx_expand_cap	plugins/scaleflux/sfx-nvme.c	/^static int sfx_expand_cap(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sfx_feature_to_string	plugins/scaleflux/sfx-nvme.c	/^char *sfx_feature_to_string(int feature)$/;"	f
sfx_freespace_ctx	plugins/scaleflux/sfx-nvme.c	/^struct sfx_freespace_ctx {$/;"	s	file:
sfx_get_bad_block	plugins/scaleflux/sfx-nvme.c	/^static int sfx_get_bad_block(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sfx_get_feature	plugins/scaleflux/sfx-nvme.c	/^static int sfx_get_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sfx_lat_stats	plugins/scaleflux/sfx-nvme.c	/^struct sfx_lat_stats {$/;"	s	file:
sfx_lat_stats_myrtle	plugins/scaleflux/sfx-nvme.c	/^struct __packed sfx_lat_stats_myrtle {$/;"	s	file:
sfx_lat_stats_vanda	plugins/scaleflux/sfx-nvme.c	/^struct __packed sfx_lat_stats_vanda {$/;"	s	file:
sfx_lat_status_ver	plugins/scaleflux/sfx-nvme.c	/^struct __packed sfx_lat_status_ver {$/;"	s	file:
sfx_nvme_admin_opcode	plugins/scaleflux/sfx-nvme.c	/^enum sfx_nvme_admin_opcode {$/;"	g	file:
sfx_nvme_get_log	plugins/scaleflux/sfx-nvme.c	/^int sfx_nvme_get_log(int fd, __u32 nsid, __u8 log_id, __u32 data_len, void *data)$/;"	f
sfx_set_feature	plugins/scaleflux/sfx-nvme.c	/^static int sfx_set_feature(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
sfx_verify_chr	plugins/scaleflux/sfx-nvme.c	/^static int sfx_verify_chr(int fd)$/;"	f	file:
shannon_id_ctrl	plugins/shannon/shannon-nvme.c	/^static int shannon_id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
shift	util/suffix.c	/^	int shift;$/;"	m	struct:binary_suffix	file:
short_option	util/argconfig.h	/^	const char short_option;$/;"	m	struct:argconfig_commandline_options
short_val	util/argconfig.h	/^	uint16_t short_val;$/;"	m	union:argconfig_val
show_cap_info	plugins/scaleflux/sfx-nvme.c	/^static void show_cap_info(struct sfx_freespace_ctx *ctx)$/;"	f	file:
show_command	nvme.c	/^	bool	show_command;$/;"	m	struct:passthru_config	file:
show_feature_fields	nvme-print.h	/^	void (*show_feature_fields)(enum nvme_features_id id, unsigned int result, unsigned char *buf);$/;"	m	struct:print_ops
show_hostnqn_cmd	nvme.c	/^static int show_hostnqn_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
show_intel_smart_log	plugins/intel/intel-nvme.c	/^static void show_intel_smart_log(struct nvme_additional_smart_log *smart,$/;"	f	file:
show_intel_smart_log_jsn	plugins/intel/intel-nvme.c	/^static void show_intel_smart_log_jsn(struct nvme_additional_smart_log *smart,$/;"	f	file:
show_lat_stats	plugins/intel/intel-nvme.c	/^static void show_lat_stats(int write)$/;"	f	file:
show_lat_stats_3_0	plugins/intel/intel-nvme.c	/^static void show_lat_stats_3_0(struct intel_lat_stats *stats)$/;"	f	file:
show_lat_stats_4_0	plugins/intel/intel-nvme.c	/^static void show_lat_stats_4_0(struct intel_lat_stats *stats)$/;"	f	file:
show_lat_stats_bucket	plugins/intel/intel-nvme.c	/^static void show_lat_stats_bucket(struct intel_lat_stats *stats,$/;"	f	file:
show_lat_stats_linear	plugins/intel/intel-nvme.c	/^static void show_lat_stats_linear(struct intel_lat_stats *stats,$/;"	f	file:
show_lat_stats_myrtle	plugins/scaleflux/sfx-nvme.c	/^static void show_lat_stats_myrtle(struct sfx_lat_stats_myrtle *stats, int write)$/;"	f	file:
show_lat_stats_v1000_0	plugins/intel/intel-nvme.c	/^static void show_lat_stats_v1000_0(struct optane_lat_stats *stats, int write)$/;"	f	file:
show_lat_stats_vanda	plugins/scaleflux/sfx-nvme.c	/^static void show_lat_stats_vanda(struct sfx_lat_stats_vanda *stats, int write)$/;"	f	file:
show_memblaze_smart_log	plugins/memblaze/memblaze-nvme.c	/^static int show_memblaze_smart_log(int fd, __u32 nsid, const char *devname,$/;"	f	file:
show_memblaze_smart_log_new	plugins/memblaze/memblaze-nvme.c	/^static void show_memblaze_smart_log_new(struct nvme_memblaze_smart_log *s,$/;"	f	file:
show_memblaze_smart_log_old	plugins/memblaze/memblaze-nvme.c	/^static void show_memblaze_smart_log_old(struct nvme_memblaze_smart_log *smart,$/;"	f	file:
show_message	nvme-print.h	/^	void (*show_message)(bool error, const char *msg, va_list ap);$/;"	m	struct:print_ops
show_nbft	plugins/nbft/nbft-plugin.c	/^int show_nbft(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
show_nvme_id_ns_zoned_ozcs	nvme-print-stdout.c	/^static void show_nvme_id_ns_zoned_ozcs(__le16 ns_ozcs)$/;"	f	file:
show_nvme_id_ns_zoned_zoc	nvme-print-stdout.c	/^static void show_nvme_id_ns_zoned_zoc(__le16 ns_zoc)$/;"	f	file:
show_optane_lat_stats_bucket	plugins/intel/intel-nvme.c	/^static void show_optane_lat_stats_bucket(struct optane_lat_stats *stats,$/;"	f	file:
show_option	util/argconfig.c	/^static void show_option(const struct argconfig_commandline_options *option)$/;"	f	file:
show_perror	nvme-print.h	/^	void (*show_perror)(const char *msg);$/;"	m	struct:print_ops
show_r1_media_err_log	plugins/inspur/inspur-nvme.c	/^void show_r1_media_err_log(r1_cli_vendor_log_t *vendorlog)$/;"	f
show_r1_vendor_log	plugins/inspur/inspur-nvme.c	/^void show_r1_vendor_log(r1_cli_vendor_log_t *vendorlog)$/;"	f
show_registers	nvme.c	/^static int show_registers(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
show_sfx_smart_log	plugins/scaleflux/sfx-nvme.c	/^static void show_sfx_smart_log(struct nvme_additional_smart_log *smart,$/;"	f	file:
show_sfx_smart_log_jsn	plugins/scaleflux/sfx-nvme.c	/^static void show_sfx_smart_log_jsn(struct nvme_additional_smart_log *smart,$/;"	f	file:
show_shannon_smart_log	plugins/shannon/shannon-nvme.c	/^static void show_shannon_smart_log(struct nvme_shannon_smart_log *smart, unsigned int nsid,$/;"	f	file:
show_status	nvme-print.h	/^	void (*show_status)(int status);$/;"	m	struct:print_ops
show_temp_stats	plugins/intel/intel-nvme.c	/^static void show_temp_stats(struct intel_temp_stats *stats)$/;"	f	file:
show_topology_cmd	nvme.c	/^static int show_topology_cmd(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
show_ymtc_smart_log	plugins/ymtc/ymtc-nvme.c	/^static int show_ymtc_smart_log(struct nvme_dev *dev, __u32 nsid,$/;"	f	file:
shrt	unit/test-argconfig-parse.c	/^	__u16 shrt;$/;"	m	struct:cfg	file:
shrt	unit/test-argconfig-parse.c	/^	__u16 shrt;$/;"	m	union:val	file:
si_suffix	util/suffix.c	/^static struct si_suffix {$/;"	s	file:
si_suffixes	util/suffix.c	/^} si_suffixes[] = {$/;"	v	typeref:struct:si_suffix	file:
si_vendor_smart_item_e	plugins/ymtc/ymtc-utils.h	/^} si_vendor_smart_item_e;$/;"	t	typeref:enum:__anon9
sig	plugins/innogrit/typedef.h	/^	unsigned int sig;$/;"	m	struct:cdumpinfo
signature	plugins/innogrit/typedef.h	/^	unsigned int signature;$/;"	m	struct:evlg_flush_hdr
simple_template_test	tests/nvme_simple_template_test.py	/^    def simple_template_test(self):$/;"	m	class:TestNVMeSimpleTestTemplate
single_property	nvme-print.h	/^	void (*single_property)(int offset, uint64_t value64);$/;"	m	struct:print_ops
size	plugins/intel/intel-nvme.c	/^	__u32    size;$/;"	m	struct:intel_vu_log	file:
size	plugins/micron/micron-nvme.c	/^	int  size;	\/* FB client spec version 1.0 sizes - M5410 models *\/$/;"	m	struct:micron_vs_logpage	file:
size	unit/test-argconfig-parse.c	/^	int size;$/;"	m	struct:toval_test	file:
size	util/argconfig.h	/^	size_t size;$/;"	m	union:argconfig_val
size2	plugins/micron/micron-nvme.c	/^	int  size2; \/* FB client spec version 0.7 sizes - M5407 models *\/$/;"	m	struct:micron_vs_logpage	file:
slc_avg_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int slc_avg_ec_cnt;$/;"	m	struct:vsc_smart_log
slc_cap_mb	plugins/innogrit/typedef.h	/^	unsigned int slc_cap_mb;$/;"	m	struct:vsc_smart_log
slc_max_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int slc_max_ec_cnt;$/;"	m	struct:vsc_smart_log
slc_min_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int slc_min_ec_cnt;$/;"	m	struct:vsc_smart_log
slc_spb_cnt	plugins/innogrit/typedef.h	/^	unsigned short slc_spb_cnt;$/;"	m	struct:vsc_smart_log
slc_total_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int slc_total_ec_cnt;$/;"	m	struct:vsc_smart_log
sldgm_get_market_log	plugins/solidigm/solidigm-market-log.c	/^int sldgm_get_market_log(int argc, char **argv, struct command *command,$/;"	f
sldgm_id_ctrl	plugins/solidigm/solidigm-id-ctrl.c	/^void sldgm_id_ctrl(uint8_t *vs, struct json_object *root)$/;"	f
sleep_self_test	nvme.c	/^static int sleep_self_test(unsigned int seconds)$/;"	f	file:
slot	plugins/micron/micron-nvme.c	/^	__u8                               slot;$/;"	m	struct:fw_activation_history_entry	file:
slotNum	plugins/seagate/seagate-diag.h	/^    __u8    slotNum;$/;"	m	struct:_stx_fw_activ_his_ele
slot_number	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 slot_number;$/;"	m	struct:fw_activation_history_entry	file:
slot_number	plugins/wdc/wdc-nvme.c	/^	__u8		slot_number;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
slot_number	plugins/wdc/wdc-nvme.c	/^	__u8 slot_number;$/;"	m	struct:wdc_fw_act_history_log_entry	file:
smart_add_log	plugins/ocp/ocp-nvme.c	/^static int smart_add_log(int argc, char **argv, struct command *cmd,$/;"	f	file:
smart_attribute_vs	plugins/seagate/seagate-nvme.c	/^static __u64 smart_attribute_vs(__u16 verNo, SmartVendorSpecific attr)$/;"	f	file:
smart_attributes_ids	plugins/seagate/seagate-diag.h	/^} smart_attributes_ids;$/;"	t	typeref:enum:__anon2
smart_cloud	plugins/solidigm/solidigm-nvme.c	/^static int smart_cloud(int argc, char **argv, struct command *cmd,$/;"	f	file:
smart_log	nvme-print.h	/^	void (*smart_log)(struct nvme_smart_log *smart, unsigned int nsid, const char *devname);$/;"	m	struct:print_ops
smart_log_item_add_json	plugins/solidigm/solidigm-smart.c	/^static void smart_log_item_add_json(struct nvme_additional_smart_log_item *item, struct json_object *dev_stats)$/;"	f	file:
smart_log_item_print	plugins/solidigm/solidigm-smart.c	/^static void smart_log_item_print(struct nvme_additional_smart_log_item *item)$/;"	f	file:
smart_log_page_header	plugins/wdc/wdc-nvme.c	/^	__le32  smart_log_page_header;                 \/* 0x00 - Smart Log Page Header                      *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
smdevice_info	plugins/netapp/netapp-nvme.c	/^struct smdevice_info {$/;"	s	file:
softEccEc	plugins/seagate/seagate-diag.h	/^    __u64           softEccEc;          $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
soft_ecc_err_rate	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	soft_ecc_err_rate;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
soft_ecc_error_count	plugins/wdc/wdc-nvme.c	/^	__le64		soft_ecc_error_count;$/;"	m	struct:wdc_nand_stats_V3	file:
solidigm_config_get_nlog_formats	plugins/solidigm/solidigm-telemetry/config.c	/^struct json_object *solidigm_config_get_nlog_formats(const struct json_object *config)$/;"	f
solidigm_config_get_nlog_obj_name	plugins/solidigm/solidigm-telemetry/config.c	/^const char *solidigm_config_get_nlog_obj_name(const struct json_object *config, uint32_t token)$/;"	f
solidigm_config_get_struct_by_token_version	plugins/solidigm/solidigm-telemetry/config.c	/^bool solidigm_config_get_struct_by_token_version(const struct json_object *config, int token_id,$/;"	f
solidigm_get_additional_smart_log	plugins/solidigm/solidigm-smart.c	/^int solidigm_get_additional_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
solidigm_get_garbage_collection_log	plugins/solidigm/solidigm-garbage-collection.c	/^int solidigm_get_garbage_collection_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
solidigm_get_internal_log	plugins/solidigm/solidigm-internal-logs.c	/^int solidigm_get_internal_log(int argc, char **argv, struct command *command,$/;"	f
solidigm_get_latency_tracking_log	plugins/solidigm/solidigm-latency-tracking.c	/^int solidigm_get_latency_tracking_log(int argc, char **argv, struct command *cmd,$/;"	f
solidigm_get_log_page_directory_log	plugins/solidigm/solidigm-log-page-dir.c	/^int solidigm_get_log_page_directory_log(int argc, char **argv, struct command *cmd,$/;"	f
solidigm_get_telemetry_log	plugins/solidigm/solidigm-telemetry.c	/^int solidigm_get_telemetry_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f
solidigm_get_vu_uuid_index	plugins/solidigm/solidigm-util.c	/^__u8 solidigm_get_vu_uuid_index(struct nvme_dev *dev)$/;"	f
solidigm_nlog_parse	plugins/solidigm/solidigm-telemetry/nlog.c	/^int solidigm_nlog_parse(const char *buffer, uint64_t buff_size,	struct json_object *formats,$/;"	f
solidigm_telemetry_log_cod_parse	plugins/solidigm/solidigm-telemetry/cod.c	/^void solidigm_telemetry_log_cod_parse(struct telemetry_log *tl)$/;"	f
solidigm_telemetry_log_data_areas_parse	plugins/solidigm/solidigm-telemetry/data-area.c	/^int solidigm_telemetry_log_data_areas_parse(struct telemetry_log *tl,$/;"	f
solidigm_telemetry_log_header_parse	plugins/solidigm/solidigm-telemetry/header.c	/^bool solidigm_telemetry_log_header_parse(const struct telemetry_log *tl)$/;"	f
solidigm_telemetry_log_reason_id_parse	plugins/solidigm/solidigm-telemetry/header.c	/^static void solidigm_telemetry_log_reason_id_parse(const struct telemetry_log *tl, struct json_object *reason_id)$/;"	f	file:
sort_eventlog	plugins/innogrit/innogrit-nvme.c	/^static void sort_eventlog(struct eventlog *data16ksrc, unsigned int icount)$/;"	f	file:
sort_eventlog_fn	plugins/innogrit/innogrit-nvme.c	/^static int sort_eventlog_fn(const void *a, const void *b)$/;"	f	file:
source_root	tests/run_py_linters.py	/^source_root = Path(environ['MESON_SOURCE_ROOT'])$/;"	v
sout_crc	plugins/innogrit/typedef.h	/^	unsigned int sout_crc;$/;"	m	struct:evlg_flush_hdr
space	nvme.c	/^static const char space[51] = {[0 ... 49] = ' ', '\\0'};$/;"	v	file:
spare_space_warning	plugins/inspur/inspur-utils.h	/^    __u32 spare_space_warning : 1;$/;"	m	struct:vendor_warning_bit
spcode	plugins/wdc/wdc-nvme.c	/^	uint8_t	spcode;$/;"	m	struct:wdc_log_page_subpage_header	file:
spsp	nvme.c	/^static const char *spsp = "security-protocol-specific (cf. SPC-4)";$/;"	v	file:
sqe	plugins/memblaze/memblaze-nvme.c	/^	__u8 sqe;$/;"	m	struct:log_page_high_latency	file:
ss	plugins/intel/intel-nvme.c	/^	__u8			ss;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
ss	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 ss;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
ssd_correct_count	plugins/wdc/wdc-nvme.c	/^	__le32  ssd_correct_count;                      \/* 0x3C - SSD End to End Correction Count  *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
ssd_correction_counts	plugins/wdc/wdc-nvme.c	/^	__u8		ssd_correction_counts[16];$/;"	m	struct:wdc_nand_stats_V3	file:
ssd_detect_count	plugins/wdc/wdc-nvme.c	/^	__le32  ssd_detect_count;                       \/* 0x38 - SSD End to End Detection Count   *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
ssd_latency_monitor_log	plugins/ocp/ocp-nvme.c	/^struct __packed ssd_latency_monitor_log {$/;"	s	file:
ssns_to_json	plugins/nbft/nbft-plugin.c	/^static json_object *ssns_to_json(struct nbft_info_subsystem_ns *ss)$/;"	f	file:
sstat	plugins/intel/intel-nvme.c	/^	__u8			sstat;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
sstat	plugins/solidigm/solidigm-id-ctrl.c	/^	__u8 sstat;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
st	plugins/shannon/shannon-nvme.c	/^			__u8	st;$/;"	m	struct:nvme_shannon_smart_log_item::__anon8::thermal_throttle	file:
start_block	nvme.c	/^static const char *start_block = "64-bit LBA of first block to access";$/;"	v	file:
stat	nvme.h	/^			struct stat stat;$/;"	m	struct:nvme_dev::__anon28::__anon29	typeref:struct:nvme_dev::__anon28::__anon29::stat
static_assert	plugins/solidigm/solidigm-telemetry/telemetry-log.h	16;"	d
static_bucket_counter	plugins/ocp/ocp-nvme.c	/^	__le32	static_bucket_counter[4][4];	\/* 0x0F0 - 0x12F *\/$/;"	m	struct:ssd_latency_monitor_log	file:
static_bucket_counter	plugins/wdc/wdc-nvme.c	/^	__le32  static_bucket_counter[4][4] ;           \/* 0xF0  - 0x12F *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
static_latency_stamp_units	plugins/ocp/ocp-nvme.c	/^	__le16	static_latency_stamp_units;	\/* 0x1A8 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
static_latency_stamp_units	plugins/wdc/wdc-nvme.c	/^	__le16  static_latency_stamp_units;             \/* 0x1A8 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
static_latency_timestamp	plugins/ocp/ocp-nvme.c	/^	__le64	static_latency_timestamp[4][3];	\/* 0x130 - 0x18F *\/$/;"	m	struct:ssd_latency_monitor_log	file:
static_latency_timestamp	plugins/wdc/wdc-nvme.c	/^	__le64  static_latency_timestamp[4][3];         \/* 0x130 - 0x18F *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
static_measured_latency	plugins/ocp/ocp-nvme.c	/^	__le16	static_measured_latency[4][3];	\/* 0x190 - 0x1A7 *\/$/;"	m	struct:ssd_latency_monitor_log	file:
static_measured_latency	plugins/wdc/wdc-nvme.c	/^	__le16  static_measured_latency[4][3];          \/* 0x190 - 0x1A7 *\/$/;"	m	struct:wdc_ssd_latency_monitor_log	file:
stats	plugins/intel/intel-nvme.c	/^static struct intel_lat_stats stats;$/;"	v	typeref:struct:intel_lat_stats	file:
stats	plugins/solidigm/solidigm-latency-tracking.c	/^	struct latency_statistics stats;$/;"	m	struct:latency_tracker	typeref:struct:latency_tracker::latency_statistics	file:
stdout_add_bitmap	nvme-print-stdout.c	/^static void stdout_add_bitmap(int i, __u8 seb)$/;"	f	file:
stdout_ana_log	nvme-print-stdout.c	/^static void stdout_ana_log(struct nvme_ana_log *ana_log, const char *devname,$/;"	f	file:
stdout_auto_pst	nvme-print-stdout.c	/^static void stdout_auto_pst(struct nvme_feat_auto_pst *apst)$/;"	f	file:
stdout_boot_part_log	nvme-print-stdout.c	/^static void stdout_boot_part_log(void *bp_log, const char *devname,$/;"	f	file:
stdout_changed_ns_list_log	nvme-print-stdout.c	/^static void stdout_changed_ns_list_log(struct nvme_ns_list *log,$/;"	f	file:
stdout_cmd_set_independent_id_ns	nvme-print-stdout.c	/^static void stdout_cmd_set_independent_id_ns(struct nvme_id_independent_id_ns *ns,$/;"	f	file:
stdout_cmd_set_independent_id_ns_nsfeat	nvme-print-stdout.c	/^static void stdout_cmd_set_independent_id_ns_nsfeat(__u8 nsfeat)$/;"	f	file:
stdout_cmd_set_independent_id_ns_nstat	nvme-print-stdout.c	/^static void stdout_cmd_set_independent_id_ns_nstat(__u8 nstat)$/;"	f	file:
stdout_connect_msg	nvme-print-stdout.c	/^static void stdout_connect_msg(nvme_ctrl_t c)$/;"	f	file:
stdout_ctrl_registers	nvme-print-stdout.c	/^void stdout_ctrl_registers(void *bar, bool fabrics)$/;"	f
stdout_detailed_ctrl	nvme-print-stdout.c	/^static bool stdout_detailed_ctrl(const char *name, void *arg)$/;"	f	file:
stdout_detailed_list	nvme-print-stdout.c	/^static void stdout_detailed_list(nvme_root_t r)$/;"	f	file:
stdout_detailed_name	nvme-print-stdout.c	/^static bool stdout_detailed_name(const char *name, void *arg)$/;"	f	file:
stdout_detailed_ns	nvme-print-stdout.c	/^static bool stdout_detailed_ns(const char *name, void *arg)$/;"	f	file:
stdout_detailed_subsys	nvme-print-stdout.c	/^static bool stdout_detailed_subsys(const char *name, void *arg)$/;"	f	file:
stdout_dev_full_path	nvme-print-stdout.c	/^static void stdout_dev_full_path(nvme_ns_t n, char *path, size_t len)$/;"	f	file:
stdout_directive_show	nvme-print-stdout.c	/^static void stdout_directive_show(__u8 type, __u8 oper, __u16 spec, __u32 nsid, __u32 result,$/;"	f	file:
stdout_directive_show_fields	nvme-print-stdout.c	/^static void stdout_directive_show_fields(__u8 dtype, __u8 doper,$/;"	f	file:
stdout_discovery_log	nvme-print-stdout.c	/^static void stdout_discovery_log(struct nvmf_discovery_log *log, int numrec)$/;"	f	file:
stdout_effects_entry	nvme-print-stdout.c	/^static void stdout_effects_entry(FILE* stream, int admin, int index,$/;"	f	file:
stdout_effects_log_human	nvme-print-stdout.c	/^static void stdout_effects_log_human(FILE *stream, __u32 effect)$/;"	f	file:
stdout_effects_log_page	nvme-print-stdout.c	/^static void stdout_effects_log_page(enum nvme_csi csi,$/;"	f	file:
stdout_effects_log_pages	nvme-print-stdout.c	/^static void stdout_effects_log_pages(struct list_head *list)$/;"	f	file:
stdout_effects_log_segment	nvme-print-stdout.c	/^static void stdout_effects_log_segment(int admin, int a, int b,$/;"	f	file:
stdout_endurance_group_event_agg_log	nvme-print-stdout.c	/^static void stdout_endurance_group_event_agg_log($/;"	f	file:
stdout_endurance_group_list	nvme-print-stdout.c	/^static void stdout_endurance_group_list(struct nvme_id_endurance_group_list *endgrp_list)$/;"	f	file:
stdout_endurance_log	nvme-print-stdout.c	/^static void stdout_endurance_log(struct nvme_endurance_group_log *endurance_log,$/;"	f	file:
stdout_error_log	nvme-print-stdout.c	/^static void stdout_error_log(struct nvme_error_log_page *err_log, int entries,$/;"	f	file:
stdout_estimate_sanitize_time	nvme-print-stdout.c	/^static void stdout_estimate_sanitize_time(const char *text, uint32_t value)$/;"	f	file:
stdout_fdp_config_fdpa	nvme-print-stdout.c	/^static void stdout_fdp_config_fdpa(uint8_t fdpa)$/;"	f	file:
stdout_fdp_configs	nvme-print-stdout.c	/^static void stdout_fdp_configs(struct nvme_fdp_config_log *log, size_t len)$/;"	f	file:
stdout_fdp_events	nvme-print-stdout.c	/^static void stdout_fdp_events(struct nvme_fdp_events_log *log)$/;"	f	file:
stdout_fdp_ruh_status	nvme-print-stdout.c	/^static void stdout_fdp_ruh_status(struct nvme_fdp_ruh_status *status, size_t len)$/;"	f	file:
stdout_fdp_stats	nvme-print-stdout.c	/^static void stdout_fdp_stats(struct nvme_fdp_stats_log *log)$/;"	f	file:
stdout_fdp_usage	nvme-print-stdout.c	/^static void stdout_fdp_usage(struct nvme_fdp_ruhu_log *log, size_t len)$/;"	f	file:
stdout_feature_show_fields	nvme-print-stdout.c	/^static void stdout_feature_show_fields(enum nvme_features_id fid,$/;"	f	file:
stdout_fid_support_effects_log	nvme-print-stdout.c	/^static void stdout_fid_support_effects_log(struct nvme_fid_supported_effects_log *fid_log,$/;"	f	file:
stdout_fid_support_effects_log_human	nvme-print-stdout.c	/^static void stdout_fid_support_effects_log_human(__u32 fid_support)$/;"	f	file:
stdout_fw_log	nvme-print-stdout.c	/^static void stdout_fw_log(struct nvme_firmware_slot *fw_log,$/;"	f	file:
stdout_generic_full_path	nvme-print-stdout.c	/^static void stdout_generic_full_path(nvme_ns_t n, char *path, size_t len)$/;"	f	file:
stdout_host_mem_buffer	nvme-print-stdout.c	/^static void stdout_host_mem_buffer(struct nvme_host_mem_buf_attrs *hmb)$/;"	f	file:
stdout_host_metadata	nvme-print-stdout.c	/^static void stdout_host_metadata(enum nvme_features_id fid,$/;"	f	file:
stdout_id_ctrl	nvme-print-stdout.c	/^static void stdout_id_ctrl(struct nvme_id_ctrl *ctrl,$/;"	f	file:
stdout_id_ctrl_anacap	nvme-print-stdout.c	/^static void stdout_id_ctrl_anacap(__u8 anacap)$/;"	f	file:
stdout_id_ctrl_apsta	nvme-print-stdout.c	/^static void stdout_id_ctrl_apsta(__u8 apsta)$/;"	f	file:
stdout_id_ctrl_avscc	nvme-print-stdout.c	/^static void stdout_id_ctrl_avscc(__u8 avscc)$/;"	f	file:
stdout_id_ctrl_cctemp	nvme-print-stdout.c	/^static void stdout_id_ctrl_cctemp(__le16 cctemp)$/;"	f	file:
stdout_id_ctrl_cmic	nvme-print-stdout.c	/^static void stdout_id_ctrl_cmic(__u8 cmic)$/;"	f	file:
stdout_id_ctrl_cntrltype	nvme-print-stdout.c	/^static void stdout_id_ctrl_cntrltype(__u8 cntrltype)$/;"	f	file:
stdout_id_ctrl_cqes	nvme-print-stdout.c	/^static void stdout_id_ctrl_cqes(__u8 cqes)$/;"	f	file:
stdout_id_ctrl_ctratt	nvme-print-stdout.c	/^static void stdout_id_ctrl_ctratt(__le32 ctrl_ctratt)$/;"	f	file:
stdout_id_ctrl_elpe	nvme-print-stdout.c	/^static void stdout_id_ctrl_elpe(__u8 elpe)$/;"	f	file:
stdout_id_ctrl_fcatt	nvme-print-stdout.c	/^static void stdout_id_ctrl_fcatt(__u8 fcatt)$/;"	f	file:
stdout_id_ctrl_fna	nvme-print-stdout.c	/^static void stdout_id_ctrl_fna(__u8 fna)$/;"	f	file:
stdout_id_ctrl_frmw	nvme-print-stdout.c	/^static void stdout_id_ctrl_frmw(__u8 frmw)$/;"	f	file:
stdout_id_ctrl_fuses	nvme-print-stdout.c	/^static void stdout_id_ctrl_fuses(__le16 ctrl_fuses)$/;"	f	file:
stdout_id_ctrl_hctma	nvme-print-stdout.c	/^static void stdout_id_ctrl_hctma(__le16 ctrl_hctma)$/;"	f	file:
stdout_id_ctrl_icsvscc	nvme-print-stdout.c	/^static void stdout_id_ctrl_icsvscc(__u8 icsvscc)$/;"	f	file:
stdout_id_ctrl_lpa	nvme-print-stdout.c	/^static void stdout_id_ctrl_lpa(__u8 lpa)$/;"	f	file:
stdout_id_ctrl_mec	nvme-print-stdout.c	/^static void stdout_id_ctrl_mec(__u8 mec)$/;"	f	file:
stdout_id_ctrl_mntmt	nvme-print-stdout.c	/^static void stdout_id_ctrl_mntmt(__le16 mntmt)$/;"	f	file:
stdout_id_ctrl_mxtmt	nvme-print-stdout.c	/^static void stdout_id_ctrl_mxtmt(__le16 mxtmt)$/;"	f	file:
stdout_id_ctrl_npss	nvme-print-stdout.c	/^static void stdout_id_ctrl_npss(__u8 npss)$/;"	f	file:
stdout_id_ctrl_nvm	nvme-print-stdout.c	/^static void stdout_id_ctrl_nvm(struct nvme_id_ctrl_nvm *ctrl_nvm)$/;"	f	file:
stdout_id_ctrl_nvmsr	nvme-print-stdout.c	/^static void stdout_id_ctrl_nvmsr(__u8 nvmsr)$/;"	f	file:
stdout_id_ctrl_nwpc	nvme-print-stdout.c	/^static void stdout_id_ctrl_nwpc(__u8 nwpc)$/;"	f	file:
stdout_id_ctrl_oacs	nvme-print-stdout.c	/^static void stdout_id_ctrl_oacs(__le16 ctrl_oacs)$/;"	f	file:
stdout_id_ctrl_oaes	nvme-print-stdout.c	/^static void stdout_id_ctrl_oaes(__le32 ctrl_oaes)$/;"	f	file:
stdout_id_ctrl_ocfs	nvme-print-stdout.c	/^static void stdout_id_ctrl_ocfs(__le16 ctrl_ocfs)$/;"	f	file:
stdout_id_ctrl_ofcs	nvme-print-stdout.c	/^static void stdout_id_ctrl_ofcs(__le16 ofcs)$/;"	f	file:
stdout_id_ctrl_oncs	nvme-print-stdout.c	/^static void stdout_id_ctrl_oncs(__le16 ctrl_oncs)$/;"	f	file:
stdout_id_ctrl_power	nvme-print-stdout.c	/^static void stdout_id_ctrl_power(struct nvme_id_ctrl *ctrl)$/;"	f	file:
stdout_id_ctrl_rpmbs	nvme-print-stdout.c	/^void stdout_id_ctrl_rpmbs(__le32 ctrl_rpmbs)$/;"	f
stdout_id_ctrl_sanicap	nvme-print-stdout.c	/^static void stdout_id_ctrl_sanicap(__le32 ctrl_sanicap)$/;"	f	file:
stdout_id_ctrl_sgls	nvme-print-stdout.c	/^static void stdout_id_ctrl_sgls(__le32 ctrl_sgls)$/;"	f	file:
stdout_id_ctrl_sqes	nvme-print-stdout.c	/^static void stdout_id_ctrl_sqes(__u8 sqes)$/;"	f	file:
stdout_id_ctrl_tnvmcap	nvme-print-stdout.c	/^static void stdout_id_ctrl_tnvmcap(__u8 *tnvmcap)$/;"	f	file:
stdout_id_ctrl_unvmcap	nvme-print-stdout.c	/^static void stdout_id_ctrl_unvmcap(__u8 *unvmcap)$/;"	f	file:
stdout_id_ctrl_vwc	nvme-print-stdout.c	/^static void stdout_id_ctrl_vwc(__u8 vwc)$/;"	f	file:
stdout_id_ctrl_vwci	nvme-print-stdout.c	/^static void stdout_id_ctrl_vwci(__u8 vwci)$/;"	f	file:
stdout_id_ctrl_wctemp	nvme-print-stdout.c	/^static void stdout_id_ctrl_wctemp(__le16 wctemp)$/;"	f	file:
stdout_id_domain_list	nvme-print-stdout.c	/^static void stdout_id_domain_list(struct nvme_id_domain_list *id_dom)$/;"	f	file:
stdout_id_iocs	nvme-print-stdout.c	/^static void stdout_id_iocs(struct nvme_id_iocs *iocs)$/;"	f	file:
stdout_id_ns	nvme-print-stdout.c	/^static void stdout_id_ns(struct nvme_id_ns *ns, unsigned int nsid,$/;"	f	file:
stdout_id_ns_descs	nvme-print-stdout.c	/^static void stdout_id_ns_descs(void *data, unsigned int nsid)$/;"	f	file:
stdout_id_ns_dlfeat	nvme-print-stdout.c	/^static void stdout_id_ns_dlfeat(__u8 dlfeat)$/;"	f	file:
stdout_id_ns_dpc	nvme-print-stdout.c	/^static void stdout_id_ns_dpc(__u8 dpc)$/;"	f	file:
stdout_id_ns_dps	nvme-print-stdout.c	/^static void stdout_id_ns_dps(__u8 dps)$/;"	f	file:
stdout_id_ns_flbas	nvme-print-stdout.c	/^static void stdout_id_ns_flbas(__u8 flbas)$/;"	f	file:
stdout_id_ns_fpi	nvme-print-stdout.c	/^static void stdout_id_ns_fpi(__u8 fpi)$/;"	f	file:
stdout_id_ns_granularity_list	nvme-print-stdout.c	/^static void stdout_id_ns_granularity_list(const struct nvme_id_ns_granularity_list *glist)$/;"	f	file:
stdout_id_ns_mc	nvme-print-stdout.c	/^static void stdout_id_ns_mc(__u8 mc)$/;"	f	file:
stdout_id_ns_nmic	nvme-print-stdout.c	/^static void stdout_id_ns_nmic(__u8 nmic)$/;"	f	file:
stdout_id_ns_nsattr	nvme-print-stdout.c	/^static void stdout_id_ns_nsattr(__u8 nsattr)$/;"	f	file:
stdout_id_ns_nsfeat	nvme-print-stdout.c	/^static void stdout_id_ns_nsfeat(__u8 nsfeat)$/;"	f	file:
stdout_id_ns_rescap	nvme-print-stdout.c	/^static void stdout_id_ns_rescap(__u8 rescap)$/;"	f	file:
stdout_id_nvmset	nvme-print-stdout.c	/^static void stdout_id_nvmset(struct nvme_id_nvmset_list *nvmset,$/;"	f	file:
stdout_id_uuid_list	nvme-print-stdout.c	/^static void stdout_id_uuid_list(const struct nvme_id_uuid_list *uuid_list)$/;"	f	file:
stdout_lba_range	nvme-print-stdout.c	/^static void stdout_lba_range(struct nvme_lba_range_type *lbrt, int nr_ranges)$/;"	f	file:
stdout_lba_status	nvme-print-stdout.c	/^static void stdout_lba_status(struct nvme_lba_status *list,$/;"	f	file:
stdout_lba_status_info	nvme-print-stdout.c	/^static void stdout_lba_status_info(__u32 result)$/;"	f	file:
stdout_lba_status_log	nvme-print-stdout.c	/^static void stdout_lba_status_log(void *lba_status, __u32 size,$/;"	f	file:
stdout_list_ctrl	nvme-print-stdout.c	/^static void stdout_list_ctrl(struct nvme_ctrl_list *ctrl_list)$/;"	f	file:
stdout_list_item	nvme-print-stdout.c	/^static void stdout_list_item(nvme_ns_t n)$/;"	f	file:
stdout_list_items	nvme-print-stdout.c	/^static void stdout_list_items(nvme_root_t r)$/;"	f	file:
stdout_list_ns	nvme-print-stdout.c	/^static void stdout_list_ns(struct nvme_ns_list *ns_list)$/;"	f	file:
stdout_list_secondary_ctrl	nvme-print-stdout.c	/^static void stdout_list_secondary_ctrl(const struct nvme_secondary_ctrl_list *sc_list,$/;"	f	file:
stdout_media_unit_stat_log	nvme-print-stdout.c	/^static void stdout_media_unit_stat_log(struct nvme_media_unit_stat_log *mus_log)$/;"	f	file:
stdout_message	nvme-print-stdout.c	/^static void stdout_message(bool error, const char *msg, va_list ap)$/;"	f	file:
stdout_mi_cmd_support_effects_log	nvme-print-stdout.c	/^static void stdout_mi_cmd_support_effects_log(struct nvme_mi_cmd_supported_effects_log *mi_cmd_log,$/;"	f	file:
stdout_mi_cmd_support_effects_log_human	nvme-print-stdout.c	/^static void stdout_mi_cmd_support_effects_log_human(__u32 mi_cmd_support)$/;"	f	file:
stdout_ns_details	nvme-print-stdout.c	/^static void stdout_ns_details(nvme_ns_t n)$/;"	f	file:
stdout_nvm_id_ns	nvme-print-stdout.c	/^static void stdout_nvm_id_ns(struct nvme_nvm_id_ns *nvm_ns, unsigned int nsid,$/;"	f	file:
stdout_nvm_id_ns_pic	nvme-print-stdout.c	/^static void stdout_nvm_id_ns_pic(__u8 pic)$/;"	f	file:
stdout_perror	nvme-print-stdout.c	/^static void stdout_perror(const char *msg)$/;"	f	file:
stdout_persistent_event_entry_ehai	nvme-print-stdout.c	/^static void stdout_persistent_event_entry_ehai(__u8 ehai)$/;"	f	file:
stdout_persistent_event_log	nvme-print-stdout.c	/^static void stdout_persistent_event_log(void *pevent_log_info,$/;"	f	file:
stdout_persistent_event_log_rci	nvme-print-stdout.c	/^static void stdout_persistent_event_log_rci(__le32 pel_header_rci)$/;"	f	file:
stdout_plm_config	nvme-print-stdout.c	/^static void stdout_plm_config(struct nvme_plm_config *plmcfg)$/;"	f	file:
stdout_predictable_latency_event_agg_log	nvme-print-stdout.c	/^static void stdout_predictable_latency_event_agg_log($/;"	f	file:
stdout_predictable_latency_per_nvmset	nvme-print-stdout.c	/^static void stdout_predictable_latency_per_nvmset($/;"	f	file:
stdout_primary_ctrl_cap	nvme-print-stdout.c	/^static void stdout_primary_ctrl_cap(const struct nvme_primary_ctrl_cap *caps)$/;"	f	file:
stdout_primary_ctrl_caps_crt	nvme-print-stdout.c	/^static void stdout_primary_ctrl_caps_crt(__u8 crt)$/;"	f	file:
stdout_print_ops	nvme-print-stdout.c	/^static struct print_ops stdout_print_ops = {$/;"	v	typeref:struct:print_ops	file:
stdout_print_ops	nvme-print-stdout.c	/^static struct print_ops stdout_print_ops;$/;"	v	typeref:struct:print_ops	file:
stdout_registers_aqa	nvme-print-stdout.c	/^static void stdout_registers_aqa(__u32 aqa)$/;"	f	file:
stdout_registers_bpinfo	nvme-print-stdout.c	/^static void stdout_registers_bpinfo(__u32 bpinfo)$/;"	f	file:
stdout_registers_bpinfo_brs	nvme-print-stdout.c	/^static void stdout_registers_bpinfo_brs(__u8 brs)$/;"	f	file:
stdout_registers_bpmbl	nvme-print-stdout.c	/^static void stdout_registers_bpmbl(uint64_t bpmbl)$/;"	f	file:
stdout_registers_bprsel	nvme-print-stdout.c	/^static void stdout_registers_bprsel(__u32 bprsel)$/;"	f	file:
stdout_registers_cap	nvme-print-stdout.c	/^static void stdout_registers_cap(struct nvme_bar_cap *cap)$/;"	f	file:
stdout_registers_cc	nvme-print-stdout.c	/^static void stdout_registers_cc(__u32 cc)$/;"	f	file:
stdout_registers_cc_ams	nvme-print-stdout.c	/^static void stdout_registers_cc_ams (__u8 ams)$/;"	f	file:
stdout_registers_cc_shn	nvme-print-stdout.c	/^static void stdout_registers_cc_shn (__u8 shn)$/;"	f	file:
stdout_registers_cmbloc	nvme-print-stdout.c	/^static void stdout_registers_cmbloc(__u32 cmbloc, __u32 cmbsz)$/;"	f	file:
stdout_registers_cmbmsc	nvme-print-stdout.c	/^static void stdout_registers_cmbmsc(uint64_t cmbmsc)$/;"	f	file:
stdout_registers_cmbsts	nvme-print-stdout.c	/^static void stdout_registers_cmbsts(__u32 cmbsts)$/;"	f	file:
stdout_registers_cmbsz	nvme-print-stdout.c	/^static void stdout_registers_cmbsz(__u32 cmbsz)$/;"	f	file:
stdout_registers_crto	nvme-print-stdout.c	/^static void stdout_registers_crto(__u32 crto)$/;"	f	file:
stdout_registers_csts	nvme-print-stdout.c	/^static void stdout_registers_csts(__u32 csts)$/;"	f	file:
stdout_registers_csts_shst	nvme-print-stdout.c	/^static void stdout_registers_csts_shst(__u8 shst)$/;"	f	file:
stdout_registers_pmrcap	nvme-print-stdout.c	/^static void stdout_registers_pmrcap(__u32 pmrcap)$/;"	f	file:
stdout_registers_pmrctl	nvme-print-stdout.c	/^static void stdout_registers_pmrctl(__u32 pmrctl)$/;"	f	file:
stdout_registers_pmrebs	nvme-print-stdout.c	/^static void stdout_registers_pmrebs(__u32 pmrebs)$/;"	f	file:
stdout_registers_pmrmscl	nvme-print-stdout.c	/^static void stdout_registers_pmrmscl(uint32_t pmrmscl)$/;"	f	file:
stdout_registers_pmrmscu	nvme-print-stdout.c	/^static void stdout_registers_pmrmscu(uint32_t pmrmscu)$/;"	f	file:
stdout_registers_pmrsts	nvme-print-stdout.c	/^static void stdout_registers_pmrsts(__u32 pmrsts, __u32 pmrctl)$/;"	f	file:
stdout_registers_pmrswtp	nvme-print-stdout.c	/^static void stdout_registers_pmrswtp(__u32 pmrswtp)$/;"	f	file:
stdout_registers_version	nvme-print-stdout.c	/^static void stdout_registers_version(__u32 vs)$/;"	f	file:
stdout_resv_notif_log	nvme-print-stdout.c	/^static void stdout_resv_notif_log(struct nvme_resv_notification_log *resv,$/;"	f	file:
stdout_resv_report	nvme-print-stdout.c	/^static void stdout_resv_report(struct nvme_resv_status *status, int bytes,$/;"	f	file:
stdout_sanitize_log	nvme-print-stdout.c	/^static void stdout_sanitize_log(struct nvme_sanitize_log_page *sanitize,$/;"	f	file:
stdout_sanitize_log_sprog	nvme-print-stdout.c	/^static void stdout_sanitize_log_sprog(__u32 sprog)$/;"	f	file:
stdout_sanitize_log_sstat	nvme-print-stdout.c	/^static void stdout_sanitize_log_sstat(__u16 status)$/;"	f	file:
stdout_select_result	nvme-print-stdout.c	/^static void stdout_select_result(__u32 result)$/;"	f	file:
stdout_self_test_log	nvme-print-stdout.c	/^static void stdout_self_test_log(struct nvme_self_test_log *self_test,$/;"	f	file:
stdout_self_test_result	nvme-print-stdout.c	/^static void stdout_self_test_result(struct nvme_st_result *res)$/;"	f	file:
stdout_simple_list	nvme-print-stdout.c	/^static void stdout_simple_list(nvme_root_t r)$/;"	f	file:
stdout_simple_ns	nvme-print-stdout.c	/^static bool stdout_simple_ns(const char *name, void *arg)$/;"	f	file:
stdout_simple_topology	nvme-print-stdout.c	/^static void stdout_simple_topology(nvme_root_t r,$/;"	f	file:
stdout_single_property	nvme-print-stdout.c	/^static void stdout_single_property(int offset, uint64_t value64)$/;"	f	file:
stdout_smart_log	nvme-print-stdout.c	/^static void stdout_smart_log(struct nvme_smart_log *smart, unsigned int nsid,$/;"	f	file:
stdout_status	nvme-print-stdout.c	/^static void stdout_status(int status)$/;"	f	file:
stdout_subsystem	nvme-print-stdout.c	/^static void stdout_subsystem(nvme_root_t r, bool show_ana)$/;"	f	file:
stdout_subsystem_ctrls	nvme-print-stdout.c	/^static void stdout_subsystem_ctrls(nvme_subsystem_t s)$/;"	f	file:
stdout_subsystem_list	nvme-print-stdout.c	/^static void stdout_subsystem_list(nvme_root_t r, bool show_ana)$/;"	f	file:
stdout_subsystem_multipath	nvme-print-stdout.c	/^static unsigned int stdout_subsystem_multipath(nvme_subsystem_t s)$/;"	f	file:
stdout_subsystem_topology	nvme-print-stdout.c	/^static void stdout_subsystem_topology(nvme_subsystem_t s,$/;"	f	file:
stdout_subsystem_topology_multipath	nvme-print-stdout.c	/^static void stdout_subsystem_topology_multipath(nvme_subsystem_t s,$/;"	f	file:
stdout_support_log_human	nvme-print-stdout.c	/^static void stdout_support_log_human(__u32 support, __u8 lid)$/;"	f	file:
stdout_supported_cap_config_log	nvme-print-stdout.c	/^static void stdout_supported_cap_config_log(struct nvme_supported_cap_config_list_log *cap)$/;"	f	file:
stdout_supported_log	nvme-print-stdout.c	/^static void stdout_supported_log(struct nvme_supported_log_pages *support_log,$/;"	f	file:
stdout_timestamp	nvme-print-stdout.c	/^static void stdout_timestamp(struct nvme_timestamp *ts)$/;"	f	file:
stdout_topology_ctrl	nvme-print-stdout.c	/^static void stdout_topology_ctrl(nvme_root_t r)$/;"	f	file:
stdout_topology_namespace	nvme-print-stdout.c	/^static void stdout_topology_namespace(nvme_root_t r)$/;"	f	file:
stdout_zns_changed	nvme-print-stdout.c	/^static void stdout_zns_changed(struct nvme_zns_changed_zone_log *log)$/;"	f	file:
stdout_zns_id_ctrl	nvme-print-stdout.c	/^static void stdout_zns_id_ctrl(struct nvme_zns_id_ctrl *ctrl)$/;"	f	file:
stdout_zns_id_ns	nvme-print-stdout.c	/^static void stdout_zns_id_ns(struct nvme_zns_id_ns *ns,$/;"	f	file:
stdout_zns_id_ns_recommended_limit	nvme-print-stdout.c	/^static void stdout_zns_id_ns_recommended_limit(__le32 ns_rl, int human,$/;"	f	file:
stdout_zns_id_ns_zrwacap	nvme-print-stdout.c	/^static void stdout_zns_id_ns_zrwacap(__u8 zrwacap)$/;"	f	file:
stdout_zns_report_zone_attributes	nvme-print-stdout.c	/^static void stdout_zns_report_zone_attributes(__u8 za, __u8 zai)$/;"	f	file:
stdout_zns_report_zones	nvme-print-stdout.c	/^static void stdout_zns_report_zones(void *report, __u32 descs,$/;"	f	file:
storage_tag	nvme.c	/^static const char *storage_tag = "storage tag for end-to-end PI";$/;"	v	file:
str	plugins/solidigm/solidigm-log-page-dir.c	/^		const char *str;$/;"	m	struct:lid_dir::__packed	file:
str	unit/test-argconfig-parse.c	/^	char *str;$/;"	m	struct:cfg	file:
str	unit/test-argconfig-parse.c	/^	char *str;$/;"	m	union:val	file:
str	util/argconfig.h	/^	const char *str;$/;"	m	struct:argconfig_opt_val
str_check_arg_	ccan/ccan/str/str.h	188;"	d
str_check_arg_	ccan/ccan/str/str.h	193;"	d
str_isalnum	ccan/ccan/str/debug.c	/^int str_isalnum(int i)$/;"	f
str_isalpha	ccan/ccan/str/debug.c	/^int str_isalpha(int i)$/;"	f
str_isascii	ccan/ccan/str/debug.c	/^int str_isascii(int i)$/;"	f
str_isblank	ccan/ccan/str/debug.c	/^int str_isblank(int i)$/;"	f
str_iscntrl	ccan/ccan/str/debug.c	/^int str_iscntrl(int i)$/;"	f
str_isdigit	ccan/ccan/str/debug.c	/^int str_isdigit(int i)$/;"	f
str_isgraph	ccan/ccan/str/debug.c	/^int str_isgraph(int i)$/;"	f
str_islower	ccan/ccan/str/debug.c	/^int str_islower(int i)$/;"	f
str_isprint	ccan/ccan/str/debug.c	/^int str_isprint(int i)$/;"	f
str_ispunct	ccan/ccan/str/debug.c	/^int str_ispunct(int i)$/;"	f
str_isspace	ccan/ccan/str/debug.c	/^int str_isspace(int i)$/;"	f
str_isupper	ccan/ccan/str/debug.c	/^int str_isupper(int i)$/;"	f
str_isxdigit	ccan/ccan/str/debug.c	/^int str_isxdigit(int i)$/;"	f
str_strchr	ccan/ccan/str/debug.c	/^char *str_strchr(const char *haystack, int c)$/;"	f
str_strrchr	ccan/ccan/str/debug.c	/^char *str_strrchr(const char *haystack, int c)$/;"	f
str_strstr	ccan/ccan/str/debug.c	/^char *str_strstr(const char *haystack, const char *needle)$/;"	f
strcasecmp0	fabrics.c	/^static inline int strcasecmp0(const char *s1, const char *s2)$/;"	f	file:
strchr	ccan/ccan/str/debug.c	91;"	d	file:
strchr	ccan/ccan/str/str.h	215;"	d
strchr	ccan/ccan/str/str.h	221;"	d
strcmp0	fabrics.c	/^static inline int strcmp0(const char *s1, const char *s2)$/;"	f	file:
strcount	ccan/ccan/str/str.c	/^size_t strcount(const char *haystack, const char *needle)$/;"	f
strends	ccan/ccan/str/str.h	/^static inline bool strends(const char *str, const char *postfix)$/;"	f
streq	ccan/ccan/str/str.h	21;"	d
string	unit/test-argconfig-parse.c	/^	char *string;$/;"	m	struct:cfg	file:
string	unit/test-argconfig-parse.c	/^	char *string;$/;"	m	union:val	file:
string	util/argconfig.h	/^	char *string;$/;"	m	union:argconfig_val
stringify	ccan/ccan/str/str.h	59;"	d
stringify_1	ccan/ccan/str/str.h	61;"	d
strrchr	ccan/ccan/str/debug.c	92;"	d	file:
strrchr	ccan/ccan/str/str.h	216;"	d
strrchr	ccan/ccan/str/str.h	223;"	d
strset	ccan/ccan/strset/strset.h	/^struct strset {$/;"	s
strset_add	ccan/ccan/strset/strset.c	/^bool strset_add(struct strset *set, const char *member)$/;"	f
strset_clear	ccan/ccan/strset/strset.c	/^void strset_clear(struct strset *set)$/;"	f
strset_del	ccan/ccan/strset/strset.c	/^char *strset_del(struct strset *set, const char *member)$/;"	f
strset_empty	ccan/ccan/strset/strset.h	/^static inline bool strset_empty(const struct strset *set)$/;"	f
strset_get	ccan/ccan/strset/strset.c	/^char *strset_get(const struct strset *set, const char *member)$/;"	f
strset_init	ccan/ccan/strset/strset.h	/^static inline void strset_init(struct strset *set)$/;"	f
strset_iterate	ccan/ccan/strset/strset.h	136;"	d
strset_iterate_	ccan/ccan/strset/strset.c	/^void strset_iterate_(const struct strset *set,$/;"	f
strset_prefix	ccan/ccan/strset/strset.c	/^const struct strset *strset_prefix(const struct strset *set, const char *prefix)$/;"	f
strstarts	ccan/ccan/str/str.h	32;"	d
strstr	ccan/ccan/str/debug.c	90;"	d	file:
strstr	ccan/ccan/str/str.h	214;"	d
strstr	ccan/ccan/str/str.h	219;"	d
stx_fw_activ_his_ele	plugins/seagate/seagate-diag.h	/^} stx_fw_activ_his_ele;$/;"	t	typeref:struct:_stx_fw_activ_his_ele
stx_fw_activ_history_log_page	plugins/seagate/seagate-diag.h	/^} stx_fw_activ_history_log_page;$/;"	t	typeref:struct:_stx_fw_activ_history_log_page
stx_is_jag_pan	plugins/seagate/seagate-nvme.c	/^static int stx_is_jag_pan(char *devMN)$/;"	f	file:
stx_jag_pan_mn	plugins/seagate/seagate-diag.h	/^const char* stx_jag_pan_mn[STX_NUM_LEGACY_DRV] = {"ST1000KN0002", "ST1000KN0012", "ST2000KN0002", $/;"	v
stx_ocp_plugin_version	plugins/seagate/seagate-nvme.c	/^static int stx_ocp_plugin_version(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
stx_vs_fw_activate_history	plugins/seagate/seagate-nvme.c	/^static int stx_vs_fw_activate_history(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
submit_io	nvme.c	/^static int submit_io(int opcode, char *command, const char *desc, int argc, char **argv)$/;"	f	file:
subpage_length	plugins/wdc/wdc-nvme.c	/^	__le16	subpage_length;$/;"	m	struct:wdc_log_page_subpage_header	file:
subsys_cmp	nvme-print-stdout.c	/^static bool subsys_cmp(const struct nvme_subsystem *s, const char *name)$/;"	f	file:
subsys_key	nvme-print-stdout.c	/^static const char *subsys_key(const struct nvme_subsystem *s)$/;"	f	file:
subsysnqn	fabrics.h	/^	const char *subsysnqn;$/;"	m	struct:tr_config
subsystem_reset	nvme.c	/^static int subsystem_reset(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
subsystems	nvme-print-stdout.c	/^	struct strset subsystems;$/;"	m	struct:nvme_resources	typeref:struct:nvme_resources::strset	file:
successful_ns_resize_event	plugins/wdc/wdc-nvme.c	/^	__le64		successful_ns_resize_event;$/;"	m	struct:wdc_nand_stats	file:
suffix	unit/test-argconfig-parse.c	/^	__u64 suffix;$/;"	m	struct:cfg	file:
suffix	unit/test-argconfig-parse.c	/^	__u64 suffix;$/;"	m	union:val	file:
suffix	util/suffix.c	/^	const char *suffix;$/;"	m	struct:binary_suffix	file:
suffix	util/suffix.c	/^	const char *suffix;$/;"	m	struct:si_suffix	file:
suffix_binary_get	util/suffix.c	/^const char *suffix_binary_get(long long *value)$/;"	f
suffix_binary_parse	util/suffix.c	/^int suffix_binary_parse(const char *str, char **endptr, uint64_t *val)$/;"	f
suffix_dbinary_get	util/suffix.c	/^const char *suffix_dbinary_get(double *value)$/;"	f
suffix_si_check	util/suffix.c	/^static bool suffix_si_check(const char val)$/;"	f	file:
suffix_si_get	util/suffix.c	/^const char *suffix_si_get(double *value)$/;"	f
suffix_si_get_ld	util/suffix.c	/^const char *suffix_si_get_ld(long double *value)$/;"	f
suffix_si_parse	util/suffix.c	/^int suffix_si_parse(const char *str, char **endptr, uint64_t *val)$/;"	f
supp_check_id_ctrl	tests/nvme_test.py	/^    def supp_check_id_ctrl(self, key):$/;"	m	class:TestNVMe
supported	plugins/solidigm/solidigm-log-page-dir.c	/^		bool supported;$/;"	m	struct:lid_dir::__packed	file:
supported_cap_config_list_log	nvme-print.h	/^	void (*supported_cap_config_list_log)(struct nvme_supported_cap_config_list_log *cap_log);$/;"	m	struct:print_ops
supported_log_pages	nvme-print.h	/^	void (*supported_log_pages)(struct nvme_supported_log_pages *support_log, const char *devname);$/;"	m	struct:print_ops
supported_log_pages_json	plugins/solidigm/solidigm-log-page-dir.c	/^static void supported_log_pages_json(struct lid_dir *lid_dir[SOLIDIGM_MAX_UUID + 1])$/;"	f	file:
supported_log_pages_normal	plugins/solidigm/solidigm-log-page-dir.c	/^static void supported_log_pages_normal(struct lid_dir *lid_dir[SOLIDIGM_MAX_UUID + 1])$/;"	f	file:
sysDataUsed	plugins/seagate/seagate-diag.h	/^    __u64           sysDataUsed  :  8;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
system_erase_fail	plugins/wdc/wdc-nvme.c	/^	__le64  system_erase_fail;                      \/* 0x61 - System Area Erase Fail Count     *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
table	ccan/ccan/htable/htable.h	/^	uintptr_t *table;$/;"	m	struct:htable
table_of_contents	plugins/solidigm/solidigm-telemetry/data-area.c	/^struct table_of_contents {$/;"	s	file:
tail	plugin.h	/^	struct plugin *tail;$/;"	m	struct:plugin	typeref:struct:plugin::plugin
tarCmd	plugins/wdc/wdc-nvme.c	/^	char tarCmd[MAX_PATH_LEN+MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
tarFileName	plugins/wdc/wdc-nvme.c	/^	char tarFileName[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
tarFiles	plugins/wdc/wdc-nvme.c	/^	char tarFiles[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
tarfile_metadata	plugins/wdc/wdc-nvme.c	/^struct tarfile_metadata {$/;"	s	file:
target	nvme-rpmb.c	/^	unsigned char  target;     \/* 0-6, should match with NSSF with SS, SR *\/$/;"	m	struct:rpmb_data_frame_t	file:
tearDown	tests/nvme_attach_detach_ns_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeAttachDetachNSCmd
tearDown	tests/nvme_compare_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeCompareCmd
tearDown	tests/nvme_copy_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeCopy
tearDown	tests/nvme_create_max_ns_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeCreateMaxNS
tearDown	tests/nvme_ctrl_reset_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeCtrlReset
tearDown	tests/nvme_dsm_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeDsm
tearDown	tests/nvme_error_log_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeErrorLogCmd
tearDown	tests/nvme_flush_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeFlushCmd
tearDown	tests/nvme_format_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeFormatCmd
tearDown	tests/nvme_fw_log_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeFwLogCmd
tearDown	tests/nvme_get_features_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeGetMandatoryFeatures
tearDown	tests/nvme_get_lba_status_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeGetLbaStatusCmd
tearDown	tests/nvme_id_ctrl_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeIdctrlCmd
tearDown	tests/nvme_id_ns_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeIdentifyNamespace
tearDown	tests/nvme_lba_status_log_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeLbaStatLogCmd
tearDown	tests/nvme_read_write_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeReadWriteTest
tearDown	tests/nvme_simple_template_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeSimpleTestTemplate
tearDown	tests/nvme_smart_log_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeSmartLogCmd
tearDown	tests/nvme_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMe
tearDown	tests/nvme_test_io.py	/^    def tearDown(self):$/;"	m	class:TestNVMeIO
tearDown	tests/nvme_verify_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeVerify
tearDown	tests/nvme_writeuncor_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeUncor
tearDown	tests/nvme_writezeros_test.py	/^    def tearDown(self):$/;"	m	class:TestNVMeWriteZeros
tele_data_area1	plugins/seagate/seagate-diag.h	/^    __le16      tele_data_area1;$/;"	m	struct:nvme_temetry_log_hdr
tele_data_area2	plugins/seagate/seagate-diag.h	/^    __le16      tele_data_area2;$/;"	m	struct:nvme_temetry_log_hdr
tele_data_area3	plugins/seagate/seagate-diag.h	/^    __le16      tele_data_area3;$/;"	m	struct:nvme_temetry_log_hdr
tele_data_aval	plugins/seagate/seagate-diag.h	/^    __u8        tele_data_aval;$/;"	m	struct:nvme_temetry_log_hdr
tele_data_gen_num	plugins/seagate/seagate-diag.h	/^    __u8        tele_data_gen_num;$/;"	m	struct:nvme_temetry_log_hdr
telemetry_hdr	plugins/wdc/wdc-nvme.c	/^	__u8    telemetry_hdr[512];$/;"	m	struct:wdc_dui_log_hdr	file:
telemetry_hdr	plugins/wdc/wdc-nvme.c	/^	__u8    telemetry_hdr[512];$/;"	m	struct:wdc_dui_log_hdr_v2	file:
telemetry_hdr	plugins/wdc/wdc-nvme.c	/^	__u8    telemetry_hdr[512];$/;"	m	struct:wdc_dui_log_hdr_v3	file:
telemetry_hdr	plugins/wdc/wdc-nvme.c	/^	__u8    telemetry_hdr[512];$/;"	m	struct:wdc_dui_log_hdr_v4	file:
telemetry_initiated_log	plugins/ocp/ocp-nvme.c	/^struct telemetry_initiated_log {$/;"	s	file:
telemetry_log	plugins/solidigm/solidigm-telemetry/telemetry-log.h	/^struct telemetry_log {$/;"	s
telemetry_log_data_area_get_offset	plugins/solidigm/solidigm-telemetry/data-area.c	/^static int telemetry_log_data_area_get_offset(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_data_area_toc_parse	plugins/solidigm/solidigm-telemetry/data-area.c	/^static void telemetry_log_data_area_toc_parse(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_get_value	plugins/solidigm/solidigm-telemetry/data-area.c	/^static bool telemetry_log_get_value(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_nlog_parse	plugins/solidigm/solidigm-telemetry/data-area.c	/^static int telemetry_log_nlog_parse(const struct telemetry_log *tl, struct json_object *formats,$/;"	f	file:
telemetry_log_reason_id_parse1_0_ext	plugins/solidigm/solidigm-telemetry/header.c	/^static void telemetry_log_reason_id_parse1_0_ext(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_reason_id_parse1_1_ext	plugins/solidigm/solidigm-telemetry/header.c	/^static void telemetry_log_reason_id_parse1_1_ext(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_reason_id_parse1_2_ext	plugins/solidigm/solidigm-telemetry/header.c	/^static void telemetry_log_reason_id_parse1_2_ext(const struct telemetry_log *tl,$/;"	f	file:
telemetry_log_structure_parse	plugins/solidigm/solidigm-telemetry/data-area.c	/^static int telemetry_log_structure_parse(const struct telemetry_log *tl,$/;"	f	file:
telemetry_object_header	plugins/solidigm/solidigm-telemetry/data-area.c	/^struct telemetry_object_header {$/;"	s	file:
telemetry_type	plugins/solidigm/solidigm-internal-logs.c	/^enum telemetry_type {$/;"	g	file:
temp_ctrl_limit_cnt	plugins/inspur/inspur-utils.h	/^    __u32 temp_ctrl_limit_cnt;$/;"	m	struct:r1_vendor_log_s
temp_ctrl_stop_cnt	plugins/inspur/inspur-utils.h	/^    __u32 temp_ctrl_stop_cnt;$/;"	m	struct:r1_vendor_log_s
temp_high_warning	plugins/inspur/inspur-utils.h	/^    __u32 temp_high_warning : 1;$/;"	m	struct:vendor_warning_bit
temp_low_warning	plugins/inspur/inspur-utils.h	/^    __u32 temp_low_warning : 1;$/;"	m	struct:vendor_warning_bit
temp_sensor_abnormal	plugins/dera/dera-nvme.c	/^	__u8 temp_sensor_abnormal[2];$/;"	m	struct:nvme_dera_smart_info_log	file:
temp_stats	plugins/seagate/seagate-nvme.c	/^static int temp_stats(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
temp_throttle_per	plugins/inspur/inspur-utils.h	/^    __u32 temp_throttle_per;$/;"	m	struct:r1_vendor_log_s
temperature	plugins/memblaze/memblaze-utils.h	/^		struct temperature {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
temperature	plugins/memblaze/memblaze-utils.h	/^		} temperature;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::temperature
temperature_p	plugins/memblaze/memblaze-utils.h	/^		struct temperature_p {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
temperature_p	plugins/memblaze/memblaze-utils.h	/^		} temperature_p;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::temperature_p
test_attach_detach_ns	tests/nvme_attach_detach_ns_test.py	/^    def test_attach_detach_ns(self):$/;"	m	class:TestNVMeAttachDetachNSCmd
test_attach_detach_ns	tests/nvme_create_max_ns_test.py	/^    def test_attach_detach_ns(self):$/;"	m	class:TestNVMeCreateMaxNS
test_copy	tests/nvme_copy_test.py	/^    def test_copy(self):$/;"	m	class:TestNVMeCopy
test_ctrl_reset	tests/nvme_ctrl_reset_test.py	/^    def test_ctrl_reset(self):$/;"	m	class:TestNVMeCtrlReset
test_dsm	tests/nvme_dsm_test.py	/^    def test_dsm(self):$/;"	m	class:TestNVMeDsm
test_format_ns	tests/nvme_format_test.py	/^    def test_format_ns(self):$/;"	m	class:TestNVMeFormatCmd
test_fw_log	tests/nvme_fw_log_test.py	/^    def test_fw_log(self):$/;"	m	class:TestNVMeFwLogCmd
test_get_error_log	tests/nvme_error_log_test.py	/^    def test_get_error_log(self):$/;"	m	class:TestNVMeErrorLogCmd
test_get_lba_status	tests/nvme_get_lba_status_test.py	/^    def test_get_lba_status(self):$/;"	m	class:TestNVMeGetLbaStatusCmd
test_get_mandatory_features	tests/nvme_get_features_test.py	/^    def test_get_mandatory_features(self):$/;"	m	class:TestNVMeGetMandatoryFeatures
test_get_mandetory_features	tests/nvme_simple_template_test.py	/^    def test_get_mandetory_features(self):$/;"	m	class:TestNVMeSimpleTestTemplate
test_id_ctrl	tests/nvme_id_ctrl_test.py	/^    def test_id_ctrl(self):$/;"	m	class:TestNVMeIdctrlCmd
test_id_ns	tests/nvme_id_ns_test.py	/^    def test_id_ns(self):$/;"	m	class:TestNVMeIdentifyNamespace
test_lba_stat_log	tests/nvme_lba_status_log_test.py	/^    def test_lba_stat_log(self):$/;"	m	class:TestNVMeLbaStatLogCmd
test_meson	scripts/build.sh	/^test_meson() {$/;"	f
test_muon	scripts/build.sh	/^test_muon() {$/;"	f
test_name	plugins/virtium/virtium-nvme.c	/^	char				test_name[256];$/;"	m	struct:vtview_log_header	file:
test_name	plugins/virtium/virtium-nvme.c	/^	const char	*test_name;$/;"	m	struct:vtview_save_log_settings	file:
test_nvme_compare	tests/nvme_compare_test.py	/^    def test_nvme_compare(self):$/;"	m	class:TestNVMeCompareCmd
test_nvme_flush	tests/nvme_flush_test.py	/^    def test_nvme_flush(self):$/;"	m	class:TestNVMeFlushCmd
test_nvme_write	tests/nvme_read_write_test.py	/^    def test_nvme_write(self):$/;"	m	class:TestNVMeReadWriteTest
test_rc	unit/test-argconfig-parse.c	/^static int test_rc;$/;"	v	file:
test_rc	unit/test-suffix-binary-parse.c	/^static int test_rc;$/;"	v	file:
test_rc	unit/test-suffix-si-parse.c	/^static int test_rc;$/;"	v	file:
test_rc	unit/test-uint128-si.c	/^static int test_rc;$/;"	v	file:
test_rc	unit/test-uint128.c	/^static int test_rc;$/;"	v	file:
test_smart_log	tests/nvme_smart_log_test.py	/^    def test_smart_log(self):$/;"	m	class:TestNVMeSmartLogCmd
test_verify	tests/nvme_verify_test.py	/^    def test_verify(self):$/;"	m	class:TestNVMeVerify
test_write_uncor	tests/nvme_writeuncor_test.py	/^    def test_write_uncor(self):$/;"	m	class:TestNVMeUncor
test_write_zeros	tests/nvme_writezeros_test.py	/^    def test_write_zeros(self):$/;"	m	class:TestNVMeWriteZeros
tests_dir	tests/run_py_linters.py	/^tests_dir = source_root \/ 'tests'$/;"	v
thermalThrottling	plugins/seagate/seagate-diag.h	/^    __u16           thermalThrottling;  $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
thermal_throttle	plugins/intel/intel-nvme.c	/^		struct __packed thermal_throttle {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
thermal_throttle	plugins/intel/intel-nvme.c	/^		} thermal_throttle;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
thermal_throttle	plugins/memblaze/memblaze-utils.h	/^		} thermal_throttle;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_mb
thermal_throttle	plugins/scaleflux/sfx-nvme.c	/^		struct __packed thermal_throttle {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
thermal_throttle	plugins/scaleflux/sfx-nvme.c	/^		} thermal_throttle;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
thermal_throttle	plugins/shannon/shannon-nvme.c	/^		struct thermal_throttle {$/;"	s	union:nvme_shannon_smart_log_item::__anon8	file:
thermal_throttle	plugins/shannon/shannon-nvme.c	/^		} thermal_throttle;$/;"	m	union:nvme_shannon_smart_log_item::__anon8	typeref:struct:nvme_shannon_smart_log_item::__anon8::thermal_throttle	file:
thermal_throttle	plugins/solidigm/solidigm-smart.c	/^		struct __packed thermal_throttle {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
thermal_throttle	plugins/solidigm/solidigm-smart.c	/^		} thermal_throttle;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::thermal_throttle	file:
thermal_throttle_cnt	plugins/memblaze/memblaze-utils.h	/^		struct thermal_throttle_cnt {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
thermal_throttle_cnt	plugins/memblaze/memblaze-utils.h	/^		} thermal_throttle_cnt;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::thermal_throttle_cnt
thermal_throttle_count	plugins/wdc/wdc-nvme.c	/^	__u8    thermal_throttle_count;                 \/* 0x6A - Thermal Throttling Count         *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
thermal_throttle_mb	plugins/memblaze/memblaze-utils.h	/^		struct thermal_throttle_mb {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
thermal_throttle_status	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	thermal_throttle_status;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
thermal_throttle_status	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item thermal_throttle_status;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
thermal_throttle_status	plugins/wdc/wdc-nvme.c	/^	__u8    thermal_throttle_status;                \/* 0x69 - Thermal Throttling Status        *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
thermal_throttling_st_ct	plugins/wdc/wdc-nvme.c	/^	__u8		thermal_throttling_st_ct[2];$/;"	m	struct:wdc_nand_stats_V3	file:
tickspersecond	plugins/intel/intel-nvme.c	/^	__u32 tickspersecond;$/;"	m	struct:intel_vu_nlog	file:
tickspersecond	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 tickspersecond;$/;"	m	struct:nlog_dump_header_common	file:
timeInfo	plugins/wdc/wdc-nvme.c	/^	UtilsTimeInfo timeInfo;$/;"	m	struct:tarfile_metadata	file:
timeStamp	plugins/seagate/seagate-diag.h	/^    __u64   timeStamp;$/;"	m	struct:_stx_fw_activ_his_ele
timeString	plugins/wdc/wdc-nvme.c	/^	uint8_t *timeString[MAX_PATH_LEN];$/;"	m	struct:tarfile_metadata	file:
time_stamp	plugins/virtium/virtium-nvme.c	/^	long				time_stamp;$/;"	m	struct:vtview_log_header	file:
time_stamp	plugins/virtium/virtium-nvme.c	/^	long			time_stamp;$/;"	m	struct:vtview_smart_log_entry	file:
timed_workload_host_reads	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	timed_workload_host_reads;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timed_workload_host_reads	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item timed_workload_host_reads;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timed_workload_media_wear	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	timed_workload_media_wear;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timed_workload_media_wear	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item timed_workload_media_wear;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timed_workload_timer	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	timed_workload_timer;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timed_workload_timer	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item timed_workload_timer;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
timeout	nvme.c	/^	__u32	timeout;$/;"	m	struct:passthru_config	file:
timeout	nvme.c	/^static const char *timeout = "timeout value, in milliseconds";$/;"	v	file:
timer_type	plugins/solidigm/solidigm-garbage-collection.c	/^	__le32 timer_type;$/;"	m	struct:gc_item	file:
timestamp	plugins/ocp/ocp-fw-activation-history.c	/^	__u64 timestamp;$/;"	m	struct:fw_activation_history_entry	file:
timestamp	plugins/solidigm/solidigm-garbage-collection.c	/^	__le64 timestamp;$/;"	m	struct:gc_item	file:
timestamp	plugins/wdc/wdc-nvme.c	/^	__le64		timestamp;$/;"	m	struct:wdc_fw_act_history_log_entry_c2	file:
timestampH	plugins/memblaze/memblaze-nvme.c	/^	__u16 timestampH;$/;"	m	struct:log_page_high_latency	file:
timestampL	plugins/memblaze/memblaze-nvme.c	/^	__u32 timestampL;$/;"	m	struct:log_page_high_latency	file:
to	nvme-print-stdout.c	/^	__u8	to;$/;"	m	struct:nvme_bar_cap	file:
tocEntries	Documentation/nvme-admin-passthru.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ana-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-attach-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-boot-part-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-capacity-mgmt.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-changed-ns-list-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-check-dhchap-key.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-cmdset-ind-id-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-compare.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-connect-all.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-connect.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-copy.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-create-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-delete-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-dera-stat.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-detach-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-device-self-test.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-dim.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-dir-receive.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-dir-send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-disconnect-all.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-disconnect.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-discover.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-dsm.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-effects-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-endurance-event-agg-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-endurance-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-error-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-configs.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-events.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-set-events.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-status.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-update.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fdp-usage.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fid-support-effects-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-flush.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-format.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fw-commit.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fw-download.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-fw-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-gen-dhchap-key.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-gen-hostnqn.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-get-feature.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-get-lba-status.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-get-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-get-ns-id.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-get-property.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-help.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-huawei-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-huawei-list.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-domain.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-iocs.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-ns-lba-format.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-id-nvmset.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-inspur-nvme-vendor-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-internal-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-lat-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-market-name.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-smart-log-add.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-intel-temp-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-io-mgmt-recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-io-mgmt-send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-io-passthru.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-lba-status-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-list-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-list-endgrp.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-list-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-list-subsys.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-list.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-lockdown.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-media-unit-stat-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-mi-cmd-support-effects-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-clear-pcie-errors.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-internal-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-nand-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-pcie-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-selective-download.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-micron-temperature-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-netapp-ontapdevices.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-netapp-smdevices.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ns-descs.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ns-rescan.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-nvm-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-nvm-id-ns-lba-format.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-nvm-id-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-nvme-mi-recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-nvme-mi-send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ocp-clear-fw-activate-history.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ocp-clear-pcie-correctable-error-counters.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ocp-eol-plp-failure-mode.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ocp-latency-monitor-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-ocp-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-persistent-event-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-pred-lat-event-agg-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-predictable-lat-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-primary-ctrl-caps.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-read.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-reset.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-resv-acquire.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-resv-notif-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-resv-register.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-resv-release.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-resv-report.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-rpmb.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-sanitize-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-sanitize.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-clear-fw-activate-history.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-clear-pcie-correctable-errors.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-cloud-SSD-plugin-version.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-get-ctrl-tele.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-get-host-tele.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-help.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-plugin-version.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-version.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-fw-activate-history.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-internal-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-log-page-sup.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-pcie-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-seagate-vs-temperature-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-security-recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-security-send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-self-test-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-set-feature.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-set-property.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-show-hostnqn.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-show-regs.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-show-topology.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-smart-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-subsystem-reset.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-supported-log-pages.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-telemetry-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-toshiba-clear-pcie-correctable-errors.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-toshiba-vs-internal-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-toshiba-vs-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-transcend-badblock.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-transcend-healthvalue.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-verify.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-virtium-save-smart-to-vtview-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-virtium-show-identify.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-cap-diag.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-capabilities.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-clear-assert-dump.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-clear-fw-activate-history.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-clear-pcie-corr.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-clear-pcie-correctable-errors.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-cloud-SSD-plugin-version.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-cloud-boot-SSD-version.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-drive-essentials.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-drive-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-drive-resize.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-enc-get-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-crash-dump.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-dev-capabilities-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-drive-status.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-error-recovery-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-latency-monitor-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-pfail-dump.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-get-unsupported-reqs-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-log-page-directory.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-namespace-resize.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-purge-monitor.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-purge.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-cloud-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-device-waf.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-drive-info.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-error-reason-identifier.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-fw-activate-history.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-hw-rev-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-internal-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-nand-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-smart-add-log.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-telemetry-controller-option.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-wdc-vs-temperature-stats.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-write-uncor.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-write-zeroes.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-write.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-changed-zone-list.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-close-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-finish-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-id-ctrl.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-id-ns.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-offline-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-open-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-report-zones.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-reset-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-set-zone-desc.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-zone-append.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-zone-mgmt-recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-zone-mgmt-send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme-zns-zrwa-flush-zone.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	Documentation/nvme.html	/^  function tocEntries(el, toclevels) {$/;"	f
toc_item	plugins/solidigm/solidigm-telemetry/data-area.c	/^struct toc_item {$/;"	s	file:
tonum_test	unit/test-suffix-binary-parse.c	/^struct tonum_test {$/;"	s	file:
tonum_test	unit/test-suffix-binary-parse.c	/^void tonum_test(struct tonum_test *test)$/;"	f
tonum_test	unit/test-suffix-si-parse.c	/^struct tonum_test {$/;"	s	file:
tonum_test	unit/test-suffix-si-parse.c	/^void tonum_test(struct tonum_test *test)$/;"	f
tonum_tests	unit/test-suffix-binary-parse.c	/^static struct tonum_test tonum_tests[] = {$/;"	v	typeref:struct:tonum_test	file:
tonum_tests	unit/test-suffix-si-parse.c	/^static struct tonum_test tonum_tests[] = {$/;"	v	typeref:struct:tonum_test	file:
tools_build_muon	scripts/build.sh	/^tools_build_muon() {$/;"	f
tools_build_samurai	scripts/build.sh	/^tools_build_samurai() {$/;"	f
topology_ctrl	nvme-print.h	/^	void (*topology_ctrl)(nvme_root_t r);$/;"	m	struct:print_ops
topology_namespace	nvme-print.h	/^	void (*topology_namespace)(nvme_root_t r);$/;"	m	struct:print_ops
tostr_test	unit/test-uint128-si.c	/^struct tostr_test {$/;"	s	file:
tostr_test	unit/test-uint128-si.c	/^void tostr_test(struct tostr_test *test)$/;"	f
tostr_test	unit/test-uint128.c	/^struct tostr_test {$/;"	s	file:
tostr_test	unit/test-uint128.c	/^void tostr_test(struct tostr_test *test)$/;"	f
tostr_tests	unit/test-uint128-si.c	/^static struct tostr_test tostr_tests[] = {$/;"	v	typeref:struct:tostr_test	file:
tostr_tests	unit/test-uint128.c	/^static struct tostr_test tostr_tests[] = {$/;"	v	typeref:struct:tostr_test	file:
totalNUSE	plugins/seagate/seagate-diag.h	/^    __u64           totalNUSE;          $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
total_ec_cnt	plugins/innogrit/typedef.h	/^	unsigned int total_ec_cnt;$/;"	m	struct:vsc_smart_log
total_log_size	plugins/wdc/wdc-nvme.c	/^	__le16	total_log_size;$/;"	m	struct:wdc_log_page_header	file:
totalnlogs	plugins/intel/intel-nvme.c	/^	__u32 totalnlogs;$/;"	m	struct:intel_vu_nlog	file:
totalnlogs	plugins/solidigm/solidigm-internal-logs.c	/^	__u32 totalnlogs;$/;"	m	struct:nlog_dump_header_common	file:
toval_test	unit/test-argconfig-parse.c	/^struct toval_test {$/;"	s	file:
toval_test	unit/test-argconfig-parse.c	/^void toval_test(struct toval_test *test)$/;"	f
toval_tests	unit/test-argconfig-parse.c	/^static struct toval_test toval_tests[] = {$/;"	v	typeref:struct:toval_test	file:
tr_config	fabrics.h	/^struct tr_config {$/;"	s
trace	ccan/ccan/likely/likely.c	/^struct trace {$/;"	s	file:
trace_cnt	plugins/innogrit/typedef.h	/^	unsigned int trace_cnt;$/;"	m	struct:evlg_flush_hdr
trace_eq	ccan/ccan/likely/likely.c	/^static bool trace_eq(const struct trace *t1, const struct trace *t2)$/;"	f	file:
traddr	fabrics.h	/^	const char *traddr;$/;"	m	struct:tr_config
trailing_hr_wrt_amp_factor	plugins/wdc/wdc-nvme.c	/^	__le32  trailing_hr_wrt_amp_factor;            \/* 0x14 - Trailing hour write amplification factor   *\/$/;"	m	struct:wdc_ssd_d0_smart_log	file:
transport	fabrics.h	/^	const char *transport;$/;"	m	struct:tr_config
trim_completions	plugins/wdc/wdc-nvme.c	/^	__u8		trim_completions[25];$/;"	m	struct:wdc_nand_stats_V3	file:
trsvcid	fabrics.h	/^	const char *trsvcid;$/;"	m	struct:tr_config
type	nvme-rpmb.c	/^	unsigned short type;       \/* req or response *\/$/;"	m	struct:rpmb_data_frame_t	file:
type	nvme.h	/^	enum nvme_dev_type type;$/;"	m	struct:nvme_dev	typeref:enum:nvme_dev::nvme_dev_type
type	plugins/solidigm/solidigm-internal-logs.c	/^	char *type;$/;"	m	struct:config	file:
type	plugins/solidigm/solidigm-latency-tracking.c	/^	unsigned char type;$/;"	m	struct:config	file:
type	util/argconfig.h	/^	enum argconfig_types type;$/;"	m	struct:argconfig_opt_val	typeref:enum:argconfig_opt_val::argconfig_types
typesafe_cb	ccan/ccan/typesafe_cb/typesafe_cb.h	86;"	d
typesafe_cb_cast	ccan/ccan/typesafe_cb/typesafe_cb.h	32;"	d
typesafe_cb_cast	ccan/ccan/typesafe_cb/typesafe_cb.h	38;"	d
typesafe_cb_cast3	ccan/ccan/typesafe_cb/typesafe_cb.h	61;"	d
typesafe_cb_postargs	ccan/ccan/typesafe_cb/typesafe_cb.h	130;"	d
typesafe_cb_preargs	ccan/ccan/typesafe_cb/typesafe_cb.h	108;"	d
u	ccan/ccan/strset/strset.h	/^	} u;$/;"	m	struct:strset	typeref:union:strset::__anon27
u	plugins/intel/intel-nvme.c	/^	} u;$/;"	m	struct:intel_cd_log	typeref:union:intel_cd_log::__anon25	file:
u16	ccan/ccan/short_types/short_types.h	/^typedef uint16_t u16;$/;"	t
u32	ccan/ccan/short_types/short_types.h	/^typedef uint32_t u32;$/;"	t
u64	ccan/ccan/short_types/short_types.h	/^typedef uint64_t u64;$/;"	t
u8	ccan/ccan/short_types/short_types.h	/^typedef uint8_t u8;$/;"	t
u8	plugins/ymtc/ymtc-utils.h	/^typedef unsigned char           u8;$/;"	t
ucRdEc	plugins/seagate/seagate-diag.h	/^    __u64           ucRdEc;             $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
uecc_read_error_count	plugins/wdc/wdc-nvme.c	/^	__le64		uecc_read_error_count;$/;"	m	struct:wdc_nand_stats_V3	file:
uefi_driver_version	plugins/dera/dera-nvme.c	/^	__u8 uefi_driver_version[8]; $/;"	m	struct:nvme_dera_smart_info_log	file:
uint	unit/test-argconfig-parse.c	/^	__u32 uint;$/;"	m	struct:cfg	file:
uint	unit/test-argconfig-parse.c	/^	__u32 uint;$/;"	m	union:val	file:
uint128_t_to_double	util/types.c	/^static long double uint128_t_to_double(nvme_uint128_t data)$/;"	f	file:
uint128_t_to_l10n_string	util/types.c	/^char *uint128_t_to_l10n_string(nvme_uint128_t val)$/;"	f
uint128_t_to_si_string	util/types.c	/^char *uint128_t_to_si_string(nvme_uint128_t val, __u32 bytes_per_unit)$/;"	f
uint128_t_to_string	util/types.c	/^char *uint128_t_to_string(nvme_uint128_t val)$/;"	f
unalignedIO	plugins/seagate/seagate-diag.h	/^    __u64           unalignedIO;        $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
unaligned_IO	plugins/wdc/wdc-nvme.c	/^	__le64		unaligned_IO;$/;"	m	struct:wdc_nand_stats_V3	file:
unc_badblk_num	plugins/inspur/inspur-utils.h	/^    __u32 unc_badblk_num;$/;"	m	struct:r1_vendor_log_ncm_cout
uncorr_read_count	plugins/wdc/wdc-nvme.c	/^	__le64  uncorr_read_count;                      \/* 0x28 - Uncorrectable Read Count         *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
unexp_power_loss	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	unexp_power_loss;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
unexpectedCmpltnStatusCount	plugins/wdc/wdc-nvme.c	/^	__le64 unexpectedCmpltnStatusCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
unlikely	ccan/ccan/likely/likely.h	53;"	d
unlikely	ccan/ccan/likely/likely.h	56;"	d
unlikely	ccan/ccan/likely/likely.h	63;"	d
unset_another_common_bit	ccan/ccan/htable/htable.c	/^static COLD void unset_another_common_bit(struct htable *ht,$/;"	f	file:
unsupportedRequestErrorCount	plugins/wdc/wdc-nvme.c	/^	__le64 unsupportedRequestErrorCount;$/;"	m	struct:wdc_vs_pcie_stats	file:
unsupported_count	plugins/ocp/ocp-nvme.c	/^	__le16  unsupported_count;$/;"	m	struct:unsupported_requirement_log	file:
unsupported_count	plugins/wdc/wdc-nvme.c	/^	__le16  unsupported_count;                     \/* 0000 - Number of Unsupported Requirement IDs              *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
unsupported_req_guid	plugins/ocp/ocp-nvme.c	/^static __u8 unsupported_req_guid[C5_GUID_LENGTH] = {$/;"	v	file:
unsupported_req_list	plugins/ocp/ocp-nvme.c	/^	__u8    unsupported_req_list[C5_NUM_UNSUPPORTED_REQ_ENTRIES][16];$/;"	m	struct:unsupported_requirement_log	file:
unsupported_req_list	plugins/wdc/wdc-nvme.c	/^	__u8    unsupported_req_list[WDC_NUM_UNSUPPORTED_REQ_ENTRIES][16];  \/* 0016 - Unsupported Requirements List *\/$/;"	m	struct:wdc_ocp_C5_unsupported_reqs	file:
unsupported_requirement_log	plugins/ocp/ocp-nvme.c	/^struct __packed unsupported_requirement_log {$/;"	s	file:
update_common	ccan/ccan/htable/htable.c	/^static COLD void update_common(struct htable *ht, const void *p)$/;"	f	file:
update_common_fix_invalid	ccan/ccan/htable/htable.c	/^static COLD void update_common_fix_invalid(struct htable *ht, const void *p, size_t h)$/;"	f	file:
update_vendor_lid_supported	plugins/solidigm/solidigm-log-page-dir.c	/^static void update_vendor_lid_supported(struct nvme_supported_log_pages *supported,$/;"	f	file:
usage	plugin.h	/^	const char *usage;$/;"	m	struct:program
usage	plugins/huawei/huawei-nvme.c	/^	unsigned int usage;$/;"	m	struct:huawei_list_element_len	file:
usage	scripts/build.sh	/^usage() {$/;"	f
usage	scripts/release.sh	/^usage() {$/;"	f
usage_cmd	plugin.c	/^static void usage_cmd(struct plugin *plugin)$/;"	f	file:
used_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 used_space;$/;"	m	struct:nvme_capacity_info	file:
user_data_erase_counts	plugins/wdc/wdc-nvme.c	/^	__le64		user_data_erase_counts[4];$/;"	m	struct:wdc_nand_stats_V3	file:
user_erase_fail	plugins/wdc/wdc-nvme.c	/^	__le64  user_erase_fail;                        \/* 0x59 - User Data Erase Fail Count       *\/$/;"	m	struct:wdc_ssd_ca_perf_stats	file:
user_space	plugins/scaleflux/sfx-nvme.c	/^	__u64 user_space;	\/* user required space, in unit of sector*\/$/;"	m	struct:sfx_freespace_ctx	file:
usrDataEraseCnt	plugins/seagate/seagate-diag.h	/^    __u64           usrDataEraseCnt;    $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
util_fw_to_string	util/types.c	/^const char *util_fw_to_string(char *c)$/;"	f
util_json_object_get_uint64	util/json.c	/^uint64_t util_json_object_get_uint64(struct json_object *obj)$/;"	f
util_json_object_new_double	util/json.c	/^struct json_object *util_json_object_new_double(long double d)$/;"	f
util_json_object_new_uint128	util/json.c	/^struct json_object *util_json_object_new_uint128(nvme_uint128_t  val)$/;"	f
util_json_object_new_uint64	util/json.c	/^struct json_object *util_json_object_new_uint64(uint64_t i)$/;"	f
util_json_object_string_to_number	util/json.c	/^static int util_json_object_string_to_number(struct json_object *jso,$/;"	f	file:
util_spinner	util/types.c	/^void util_spinner(const char *disp_name, float percent)$/;"	f
util_uuid_to_string	util/types.c	/^const char *util_uuid_to_string(unsigned char uuid[NVME_UUID_LEN])$/;"	f
uuid	plugins/netapp/netapp-nvme.c	/^	unsigned char		uuid[NVME_UUID_LEN];$/;"	m	struct:ontapdevice_info	file:
uuid_index	nvme.c	/^	__u8  uuid_index;$/;"	m	struct:feat_cfg	file:
uuid_index	nvme.c	/^static const char *uuid_index = "UUID index";$/;"	v	file:
uuid_index	plugins/solidigm/solidigm-latency-tracking.c	/^	__u8 uuid_index;$/;"	m	struct:latency_tracker	file:
uuid_index_specify	nvme.c	/^static const char *uuid_index_specify = "specify uuid index";$/;"	v	file:
v1000_bucket	plugins/intel/intel-nvme.c	/^static struct v1000_thresholds v1000_bucket;$/;"	v	typeref:struct:v1000_thresholds	file:
v1000_stats	plugins/intel/intel-nvme.c	/^static struct optane_lat_stats v1000_stats;$/;"	v	typeref:struct:optane_lat_stats	file:
v1000_thresholds	plugins/intel/intel-nvme.c	/^struct v1000_thresholds {$/;"	s	file:
val	unit/test-argconfig-parse.c	/^	void *val;$/;"	m	struct:toval_test	file:
val	unit/test-argconfig-parse.c	/^union val {$/;"	u	file:
val	unit/test-suffix-binary-parse.c	/^	const char *val;$/;"	m	struct:tonum_test	file:
val	unit/test-suffix-si-parse.c	/^	const char *val;$/;"	m	struct:tonum_test	file:
val	unit/test-uint128-si.c	/^	nvme_uint128_t val;$/;"	m	struct:tostr_test	file:
val	unit/test-uint128.c	/^	nvme_uint128_t val;$/;"	m	struct:tostr_test	file:
val	util/argconfig.h	/^	union argconfig_val val;$/;"	m	struct:argconfig_opt_val	typeref:union:argconfig_opt_val::argconfig_val
valid	plugins/micron/micron-nvme.c	/^	__le16                             valid;$/;"	m	struct:fw_activation_history_entry	file:
valid_entries	plugins/ocp/ocp-fw-activation-history.c	/^	__u32 valid_entries;$/;"	m	struct:fw_activation_history	file:
validate_output_format	nvme.c	/^enum nvme_print_flags validate_output_format(const char *format)$/;"	f
validate_pci_device	tests/nvme_test.py	/^    def validate_pci_device(self):$/;"	m	class:TestNVMe
validate_write_read	tests/nvme_writezeros_test.py	/^    def validate_write_read(self):$/;"	m	class:TestNVMeWriteZeros
validate_zeroes	tests/nvme_writezeros_test.py	/^    def validate_zeroes(self):$/;"	m	class:TestNVMeWriteZeros
vanda	plugins/scaleflux/sfx-nvme.c	/^		struct sfx_lat_stats_vanda  vanda;$/;"	m	union:sfx_lat_stats::__anon19	typeref:struct:sfx_lat_stats::__anon19::sfx_lat_stats_vanda	file:
vend_spec_resv	plugins/shannon/shannon-nvme.c	/^	__u8  vend_spec_resv;$/;"	m	struct:nvme_shannon_smart_log	file:
vendorData	plugins/seagate/seagate-diag.h	/^   SmartVendorSpecific vendorData[NUMBER_EXTENDED_SMART_ATTRIBUTES];            $/;"	m	struct:_EXTENDED_SMART_INFO_T
vendor_id	plugins/micron/micron-nvme.c	/^static unsigned short vendor_id;$/;"	v	file:
vendor_log	plugins/toshiba/toshiba-nvme.c	/^static int vendor_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vendor_log_nandctl_cnt	plugins/inspur/inspur-utils.h	/^    r1_vendor_log_nandctl_count_t vendor_log_nandctl_cnt[4];$/;"	m	struct:r1_vendor_log_s
vendor_log_page_CF	plugins/seagate/seagate-diag.h	/^} vendor_log_page_CF;$/;"	t	typeref:struct:_vendor_log_page_CF
vendor_log_page_CF_Attr	plugins/seagate/seagate-diag.h	/^} vendor_log_page_CF_Attr;$/;"	t	typeref:struct:_vendor_log_page_CF_Attr
vendor_media_err	plugins/inspur/inspur-utils.h	/^typedef struct vendor_media_err {$/;"	s
vendor_media_err_t	plugins/inspur/inspur-utils.h	/^} vendor_media_err_t;$/;"	t	typeref:struct:vendor_media_err
vendor_sepc_log_page_id_e	plugins/inspur/inspur-utils.h	/^} vendor_sepc_log_page_id_e;$/;"	t	typeref:enum:__anon20
vendor_smart_attribute_data	plugins/seagate/seagate-diag.h	/^typedef struct __attribute__((__packed__)) vendor_smart_attribute_data$/;"	s
vendor_smart_attribute_data	plugins/seagate/seagate-diag.h	/^} vendor_smart_attribute_data;$/;"	t	typeref:struct:vendor_smart_attribute_data
vendor_specific_command_cdw12	plugins/ocp/ocp-nvme.c	/^	__le32  vendor_specific_command_cdw12;           \/* 4 bytes      - 0x14 - 0x17 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
vendor_specific_command_cdw13	plugins/ocp/ocp-nvme.c	/^	__le32  vendor_specific_command_cdw13;           \/* 4 bytes      - 0x18 - 0x1B *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
vendor_specific_command_timeout	plugins/ocp/ocp-nvme.c	/^	__u8    vendor_specific_command_timeout;         \/* 1 byte       - 0x1C *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
vendor_specific_recovery_opcode	plugins/ocp/ocp-nvme.c	/^	__u8    vendor_specific_recovery_opcode;         \/* 1 byte       - 0x10 *\/$/;"	m	struct:ocp_error_recovery_log_page	file:
vendor_specific_reserved	plugins/seagate/seagate-diag.h	/^   __u8  vendor_specific_reserved[6];                                                                           $/;"	m	struct:_EXTENDED_SMART_INFO_T
vendor_warning_bit	plugins/inspur/inspur-utils.h	/^typedef struct vendor_warning_bit {$/;"	s
vendor_warning_str	plugins/inspur/inspur-utils.h	/^} vendor_warning_str;$/;"	t	typeref:struct:vendor_warning_bit
ver	plugins/intel/intel-nvme.c	/^	struct intel_vu_version ver;$/;"	m	struct:intel_vu_log	typeref:struct:intel_vu_log::intel_vu_version	file:
ver	plugins/intel/intel-nvme.c	/^	struct intel_vu_version ver;$/;"	m	struct:intel_vu_nlog	typeref:struct:intel_vu_nlog::intel_vu_version	file:
ver	plugins/scaleflux/sfx-nvme.c	/^		struct sfx_lat_status_ver   ver;$/;"	m	union:sfx_lat_stats::__anon19	typeref:struct:sfx_lat_stats::__anon19::sfx_lat_status_ver	file:
ver	plugins/solidigm/solidigm-internal-logs.c	/^	struct version ver;$/;"	m	struct:commom_header	typeref:struct:commom_header::version	file:
ver	plugins/solidigm/solidigm-internal-logs.c	/^	struct version ver;$/;"	m	struct:nlog_dump_header_common	typeref:struct:nlog_dump_header_common::version	file:
ver_num	plugins/ocp/ocp-fw-activation-history.c	/^	__u8 ver_num;$/;"	m	struct:fw_activation_history_entry	file:
verbose	nvme.c	/^static const char *verbose = "Increase output verbosity";$/;"	v	file:
verbose	plugins/solidigm/solidigm-internal-logs.c	/^	bool verbose;$/;"	m	struct:config	file:
verify	tests/nvme_verify_test.py	/^    def verify(self):$/;"	m	class:TestNVMeVerify
verify_cmd	nvme.c	/^static int verify_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
version	plugin.h	/^	const char *version;$/;"	m	struct:plugin
version	plugin.h	/^	const char *version;$/;"	m	struct:program
version	plugins/micron/micron-nvme.c	/^	__u16                              version;$/;"	m	struct:micron_fw_activation_history_table	file:
version	plugins/micron/micron-nvme.c	/^	__u8                               version;$/;"	m	struct:fw_activation_history_entry	file:
version	plugins/micron/micron-nvme.c	/^	uint8_t  version;$/;"	m	struct:micron_common_log_header	file:
version	plugins/solidigm/solidigm-internal-logs.c	/^struct version {$/;"	s	file:
version	plugins/wdc/wdc-nvme.c	/^	__le32	version;$/;"	m	struct:wdc_c2_log_page_header	file:
version	plugins/wdc/wdc-nvme.c	/^	__u8 version;$/;"	m	struct:wdc_fw_act_history_log_hdr	file:
versionMajor	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t versionMajor;$/;"	m	struct:cod_header	file:
versionMajor	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint16_t versionMajor;$/;"	m	struct:telemetry_object_header	file:
versionMajor	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint8_t versionMajor;$/;"	m	struct:data_area_header	file:
versionMajor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMajor;$/;"	m	struct:reason_indentifier_1_0	file:
versionMajor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMajor;$/;"	m	struct:reason_indentifier_1_1	file:
versionMajor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMajor;$/;"	m	struct:reason_indentifier_1_2	file:
versionMinor	plugins/solidigm/solidigm-telemetry/cod.c	/^	uint32_t versionMinor;$/;"	m	struct:cod_header	file:
versionMinor	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint16_t versionMinor;$/;"	m	struct:telemetry_object_header	file:
versionMinor	plugins/solidigm/solidigm-telemetry/data-area.c	/^	uint8_t versionMinor;$/;"	m	struct:data_area_header	file:
versionMinor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMinor;$/;"	m	struct:reason_indentifier_1_0	file:
versionMinor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMinor;$/;"	m	struct:reason_indentifier_1_1	file:
versionMinor	plugins/solidigm/solidigm-telemetry/header.c	/^	uint16_t versionMinor;$/;"	m	struct:reason_indentifier_1_2	file:
version_cmd	plugin.c	/^static int version_cmd(struct plugin *plugin)$/;"	f	file:
version_major	plugins/solidigm/solidigm-garbage-collection.c	/^	__le16 version_major;$/;"	m	struct:garbage_control_collection_log	file:
version_major	plugins/solidigm/solidigm-latency-tracking.c	/^	__u16 version_major;$/;"	m	struct:latency_statistics	file:
version_minor	plugins/solidigm/solidigm-garbage-collection.c	/^	__le16 version_minor;$/;"	m	struct:garbage_control_collection_log	file:
version_minor	plugins/solidigm/solidigm-latency-tracking.c	/^	__u16 version_minor;$/;"	m	struct:latency_statistics	file:
virtual_mgmt	nvme.c	/^static int virtual_mgmt(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
voltage_info	plugins/inspur/inspur-utils.h	/^    __u32 voltage_info;$/;"	m	struct:r1_vendor_log_s
vs_clr_pcie_correctable_errs	plugins/seagate/seagate-nvme.c	/^static int vs_clr_pcie_correctable_errs(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vs_cmd_cdw12	plugins/wdc/wdc-nvme.c	/^	__le32  vs_cmd_cdw12;                           \/* 020 - Vendor Specific Command CDW12       *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
vs_cmd_cdw13	plugins/wdc/wdc-nvme.c	/^	__le32  vs_cmd_cdw13;                           \/* 024 - Vendor Specific Command CDW13       *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
vs_cmd_to	plugins/wdc/wdc-nvme.c	/^	__u8    vs_cmd_to;                              \/* 028 - Vendor Specific Command Timeout V2  *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
vs_internal_log	plugins/seagate/seagate-nvme.c	/^static int vs_internal_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vs_pcie_error_log	plugins/seagate/seagate-nvme.c	/^static int vs_pcie_error_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vs_recovery_opc	plugins/wdc/wdc-nvme.c	/^	__u8    vs_recovery_opc;                        \/* 016 - Vendor Specific Recovery Opcode     *\/$/;"	m	struct:wdc_ocp_c1_error_recovery_log	file:
vs_smart_log	plugins/seagate/seagate-nvme.c	/^static int vs_smart_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vsc_smart_log	plugins/innogrit/typedef.h	/^struct vsc_smart_log {$/;"	s
vt_add_entry_to_log	plugins/virtium/virtium-nvme.c	/^static int vt_add_entry_to_log(const int fd, const char *path, const struct vtview_save_log_settings *cfg)$/;"	f	file:
vt_append_header	plugins/virtium/virtium-nvme.c	/^static int vt_append_header(const struct vtview_log_header *header, const char *filename)$/;"	f	file:
vt_append_log	plugins/virtium/virtium-nvme.c	/^static int vt_append_log(struct vtview_smart_log_entry *smart, const char *filename)$/;"	f	file:
vt_append_text_file	plugins/virtium/virtium-nvme.c	/^static int vt_append_text_file(const char *text, const char *filename)$/;"	f	file:
vt_build_identify_lv2	plugins/virtium/virtium-nvme.c	/^static void vt_build_identify_lv2(unsigned int data, unsigned int start,$/;"	f	file:
vt_build_power_state_descriptor	plugins/virtium/virtium-nvme.c	/^static void vt_build_power_state_descriptor(const struct nvme_id_ctrl *ctrl)$/;"	f	file:
vt_convert_data_buffer_to_hex_string	plugins/virtium/virtium-nvme.c	/^static void vt_convert_data_buffer_to_hex_string(const unsigned char *bufPtr,$/;"	f	file:
vt_convert_smart_data_to_human_readable_format	plugins/virtium/virtium-nvme.c	/^static void vt_convert_smart_data_to_human_readable_format(struct vtview_smart_log_entry *smart, char *text)$/;"	f	file:
vt_default_log_file_name	plugins/virtium/virtium-nvme.c	/^static char vt_default_log_file_name[256];$/;"	v	file:
vt_dump_hex_data	plugins/virtium/virtium-nvme.c	/^static void vt_dump_hex_data(const unsigned char *pbuff, size_t pbuffsize)$/;"	f	file:
vt_generate_vtview_log_file_name	plugins/virtium/virtium-nvme.c	/^static void vt_generate_vtview_log_file_name(char *fname)$/;"	f	file:
vt_header_to_string	plugins/virtium/virtium-nvme.c	/^static void vt_header_to_string(const struct vtview_log_header *header, char *text)$/;"	f	file:
vt_initialize_header_buffer	plugins/virtium/virtium-nvme.c	/^static void vt_initialize_header_buffer(struct vtview_log_header *pbuff)$/;"	f	file:
vt_parse_detail_identify	plugins/virtium/virtium-nvme.c	/^static void vt_parse_detail_identify(const struct nvme_id_ctrl *ctrl)$/;"	f	file:
vt_process_string	plugins/virtium/virtium-nvme.c	/^static void vt_process_string(char *str, const size_t size)$/;"	f	file:
vt_save_smart_to_vtview_log	plugins/virtium/virtium-nvme.c	/^static int vt_save_smart_to_vtview_log(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vt_show_identify	plugins/virtium/virtium-nvme.c	/^static int vt_show_identify(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
vt_update_vtview_log_header	plugins/virtium/virtium-nvme.c	/^static int vt_update_vtview_log_header(const int fd, const char *path, const struct vtview_save_log_settings *cfg)$/;"	f	file:
vtview_log_header	plugins/virtium/virtium-nvme.c	/^struct vtview_log_header {$/;"	s	file:
vtview_save_log_settings	plugins/virtium/virtium-nvme.c	/^struct vtview_save_log_settings {$/;"	s	file:
vtview_smart_log_entry	plugins/virtium/virtium-nvme.c	/^struct vtview_smart_log_entry {$/;"	s	file:
vuLogPageReqd	plugins/wdc/wdc-nvme.c	/^	enum NVME_VU_DE_LOGPAGE_NAMES vuLogPageReqd;$/;"	m	struct:WDC_NVME_DE_VU_LOGPAGES	typeref:enum:WDC_NVME_DE_VU_LOGPAGES::NVME_VU_DE_LOGPAGE_NAMES	file:
vu_gc_log_show	plugins/solidigm/solidigm-garbage-collection.c	/^static void vu_gc_log_show(struct garbage_control_collection_log *payload, const char *devname,$/;"	f	file:
vu_gc_log_show_json	plugins/solidigm/solidigm-garbage-collection.c	/^static void vu_gc_log_show_json(struct garbage_control_collection_log *payload, const char *devname)$/;"	f	file:
vu_smart_log	plugins/solidigm/solidigm-smart.c	/^struct vu_smart_log {$/;"	s	file:
vu_smart_log_show	plugins/solidigm/solidigm-smart.c	/^static void vu_smart_log_show(struct vu_smart_log *payload, unsigned int nsid, const char *devname,$/;"	f	file:
vu_smart_log_show_json	plugins/solidigm/solidigm-smart.c	/^static void vu_smart_log_show_json(struct vu_smart_log *payload, unsigned int nsid, const char *devname)$/;"	f	file:
wa	plugins/innogrit/typedef.h	/^	unsigned int wa;$/;"	m	struct:vsc_smart_log
wait_self_test	nvme.c	/^static int wait_self_test(struct nvme_dev *dev)$/;"	f	file:
wdc_StrFormat	plugins/wdc/wdc-utils.c	/^void wdc_StrFormat(char *formatter, size_t fmt_sz, char *tofmt, size_t tofmtsz)$/;"	f
wdc_UtilsCreateDir	plugins/wdc/wdc-utils.c	/^int wdc_UtilsCreateDir(char *path)$/;"	f
wdc_UtilsDeleteCharFromString	plugins/wdc/wdc-utils.c	/^void wdc_UtilsDeleteCharFromString(char *buffer, int buffSize, char charToRemove)$/;"	f
wdc_UtilsGetTime	plugins/wdc/wdc-utils.c	/^int wdc_UtilsGetTime(PUtilsTimeInfo timeInfo)$/;"	f
wdc_UtilsSnprintf	plugins/wdc/wdc-utils.c	/^int wdc_UtilsSnprintf(char *buffer, unsigned int sizeOfBuffer, const char *format, ...)$/;"	f
wdc_UtilsStrCompare	plugins/wdc/wdc-utils.c	/^int wdc_UtilsStrCompare(char *pcSrc, char *pcDst)$/;"	f
wdc_WriteToFile	plugins/wdc/wdc-utils.c	/^int wdc_WriteToFile(char *fileName, char *buffer, unsigned int bufferLen)$/;"	f
wdc_bd_ca_log_format	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_bd_ca_log_format {$/;"	s	file:
wdc_c2_cbs_data	plugins/wdc/wdc-nvme.c	/^struct wdc_c2_cbs_data {$/;"	s	file:
wdc_c2_log_page_header	plugins/wdc/wdc-nvme.c	/^struct wdc_c2_log_page_header {$/;"	s	file:
wdc_c2_log_subpage_header	plugins/wdc/wdc-nvme.c	/^struct wdc_c2_log_subpage_header {$/;"	s	file:
wdc_cap_diag	plugins/wdc/wdc-nvme.c	/^static int wdc_cap_diag(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_capabilities	plugins/wdc/wdc-nvme.c	/^static int wdc_capabilities(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
wdc_check_device	plugins/wdc/wdc-nvme.c	/^static bool wdc_check_device(nvme_root_t r, struct nvme_dev *dev)$/;"	f	file:
wdc_check_power_of_2	plugins/wdc/wdc-nvme.c	/^static bool wdc_check_power_of_2(int num)$/;"	f	file:
wdc_clear_assert_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_clear_assert_dump(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_clear_fw_activate_history	plugins/wdc/wdc-nvme.c	/^static int wdc_clear_fw_activate_history(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_clear_pcie_correctable_errors	plugins/wdc/wdc-nvme.c	/^static int wdc_clear_pcie_correctable_errors(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_clear_reason_id	plugins/wdc/wdc-nvme.c	/^static int wdc_clear_reason_id(struct nvme_dev *dev)$/;"	f	file:
wdc_cloud_boot_SSD_version	plugins/wdc/wdc-nvme.c	/^static int wdc_cloud_boot_SSD_version(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_cloud_ssd_plugin_version	plugins/wdc/wdc-nvme.c	/^static int wdc_cloud_ssd_plugin_version(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_crash_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_crash_dump(struct nvme_dev *dev, char *file, int type)$/;"	f	file:
wdc_create_log_file	plugins/wdc/wdc-nvme.c	/^static int wdc_create_log_file(char *file, __u8 *drive_log_data,$/;"	f	file:
wdc_de_VU_read_buffer	plugins/wdc/wdc-nvme.c	/^static int wdc_de_VU_read_buffer(struct nvme_dev *dev, __u32 fileId, __u16 spiDestn,$/;"	f	file:
wdc_de_VU_read_size	plugins/wdc/wdc-nvme.c	/^static int wdc_de_VU_read_size(struct nvme_dev *dev, __u32 fileId, __u16 spiDestn, __u32 *logSize)$/;"	f	file:
wdc_de_get_dump_trace	plugins/wdc/wdc-nvme.c	/^static int wdc_de_get_dump_trace(struct nvme_dev *dev, char *filePath, __u16 binFileNameLen, char *binFileName)$/;"	f	file:
wdc_do_cap_diag	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_diag(nvme_root_t r, struct nvme_dev *dev, char *file,$/;"	f	file:
wdc_do_cap_dui	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_dui(int fd, char *file, __u32 xfer_size, int data_area, int verbose,$/;"	f	file:
wdc_do_cap_dui_v1	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_dui_v1(int fd, char *file, __u32 xfer_size, int data_area, int verbose,$/;"	f	file:
wdc_do_cap_dui_v2_v3	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_dui_v2_v3(int fd, char *file, __u32 xfer_size, int data_area, int verbose,$/;"	f	file:
wdc_do_cap_dui_v4	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_dui_v4(int fd, char *file, __u32 xfer_size, int data_area, int verbose,$/;"	f	file:
wdc_do_cap_telemetry_log	plugins/wdc/wdc-nvme.c	/^static int wdc_do_cap_telemetry_log(struct nvme_dev *dev, char *file,$/;"	f	file:
wdc_do_clear_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_dump(struct nvme_dev *dev, __u8 opcode, __u32 cdw12)$/;"	f	file:
wdc_do_clear_fw_activate_history_fid	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_fw_activate_history_fid(int fd)$/;"	f	file:
wdc_do_clear_fw_activate_history_vuc	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_fw_activate_history_vuc(int fd)$/;"	f	file:
wdc_do_clear_pcie_correctable_errors	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_pcie_correctable_errors(int fd)$/;"	f	file:
wdc_do_clear_pcie_correctable_errors_fid	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_pcie_correctable_errors_fid(int fd)$/;"	f	file:
wdc_do_clear_pcie_correctable_errors_vuc	plugins/wdc/wdc-nvme.c	/^static int wdc_do_clear_pcie_correctable_errors_vuc(int fd)$/;"	f	file:
wdc_do_crash_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_do_crash_dump(struct nvme_dev *dev, char *file, int type)$/;"	f	file:
wdc_do_drive_essentials	plugins/wdc/wdc-nvme.c	/^static int wdc_do_drive_essentials(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
wdc_do_drive_info	plugins/wdc/wdc-nvme.c	/^static int wdc_do_drive_info(struct nvme_dev *dev, __u32 *result)$/;"	f	file:
wdc_do_drive_log	plugins/wdc/wdc-nvme.c	/^static int wdc_do_drive_log(struct nvme_dev *dev, char *file)$/;"	f	file:
wdc_do_drive_resize	plugins/wdc/wdc-nvme.c	/^static int wdc_do_drive_resize(struct nvme_dev *dev, uint64_t new_size)$/;"	f	file:
wdc_do_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_do_dump(struct nvme_dev *dev, __u32 opcode, __u32 data_len,$/;"	f	file:
wdc_do_dump_e6	plugins/wdc/wdc-nvme.c	/^static int wdc_do_dump_e6(int fd, __u32 opcode, __u32 data_len,$/;"	f	file:
wdc_do_get_reason_id	plugins/wdc/wdc-nvme.c	/^static int wdc_do_get_reason_id(struct nvme_dev *dev, char *file, int log_id)$/;"	f	file:
wdc_do_get_sn730_log	plugins/wdc/wdc-nvme.c	/^static int wdc_do_get_sn730_log(int fd, void *log_buf, uint32_t offset, uint32_t subopcode)$/;"	f	file:
wdc_do_get_sn730_log_len	plugins/wdc/wdc-nvme.c	/^static int wdc_do_get_sn730_log_len(int fd, uint32_t *len_buf, uint32_t subopcode)$/;"	f	file:
wdc_do_id_ctrl	plugins/wdc/wdc-nvme.c	/^static void wdc_do_id_ctrl(__u8 *vs, struct json_object *root)$/;"	f	file:
wdc_do_namespace_resize	plugins/wdc/wdc-nvme.c	/^static int wdc_do_namespace_resize(struct nvme_dev *dev, __u32 nsid, __u32 op_option)$/;"	f	file:
wdc_do_sn730_get_and_tar	plugins/wdc/wdc-nvme.c	/^static int wdc_do_sn730_get_and_tar(int fd, char *outputName)$/;"	f	file:
wdc_do_vs_nand_stats	plugins/wdc/wdc-nvme.c	/^static int wdc_do_vs_nand_stats(struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_do_vs_nand_stats_sn810_2	plugins/wdc/wdc-nvme.c	/^static int wdc_do_vs_nand_stats_sn810_2(struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_do_vs_pcie_stats	plugins/wdc/wdc-nvme.c	/^static int wdc_do_vs_pcie_stats(struct nvme_dev *dev,$/;"	f	file:
wdc_drive_essentials	plugins/wdc/wdc-nvme.c	/^static int wdc_drive_essentials(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_drive_log	plugins/wdc/wdc-nvme.c	/^static int wdc_drive_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_drive_resize	plugins/wdc/wdc-nvme.c	/^static int wdc_drive_resize(int argc, char **argv,$/;"	f	file:
wdc_drive_status	plugins/wdc/wdc-nvme.c	/^static int wdc_drive_status(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_dui_log_hdr	plugins/wdc/wdc-nvme.c	/^struct wdc_dui_log_hdr {$/;"	s	file:
wdc_dui_log_hdr_v2	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_dui_log_hdr_v2 {$/;"	s	file:
wdc_dui_log_hdr_v3	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_dui_log_hdr_v3 {$/;"	s	file:
wdc_dui_log_hdr_v4	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_dui_log_hdr_v4 {$/;"	s	file:
wdc_dui_log_section	plugins/wdc/wdc-nvme.c	/^struct wdc_dui_log_section {$/;"	s	file:
wdc_dui_log_section_v2	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_dui_log_section_v2 {$/;"	s	file:
wdc_dui_log_section_v4	plugins/wdc/wdc-nvme.c	/^struct wdc_dui_log_section_v4 {$/;"	s	file:
wdc_dump_dui_data	plugins/wdc/wdc-nvme.c	/^static __u32 wdc_dump_dui_data(int fd, __u32 dataLen, __u32 offset, __u8 *dump_data, bool last_xfer)$/;"	f	file:
wdc_dump_dui_data_v2	plugins/wdc/wdc-nvme.c	/^static __u32 wdc_dump_dui_data_v2(int fd, __u32 dataLen, __u64 offset, __u8 *dump_data, bool last_xfer)$/;"	f	file:
wdc_dump_length	plugins/wdc/wdc-nvme.c	/^static __u32 wdc_dump_length(int fd, __u32 opcode, __u32 cdw10, __u32 cdw12, __u32 *dump_length)$/;"	f	file:
wdc_dump_length_e6	plugins/wdc/wdc-nvme.c	/^static __u32 wdc_dump_length_e6(int fd, __u32 opcode, __u32 cdw10, __u32 cdw12, struct wdc_e6_log_hdr *dump_hdr)$/;"	f	file:
wdc_dump_telemetry_hdr	plugins/wdc/wdc-nvme.c	/^static int wdc_dump_telemetry_hdr(struct nvme_dev *dev, int log_id, struct nvme_telemetry_log *log_hdr)$/;"	f	file:
wdc_e6_log_hdr	plugins/wdc/wdc-nvme.c	/^struct wdc_e6_log_hdr {$/;"	s	file:
wdc_enc_check_model	plugins/wdc/wdc-nvme.c	/^static bool wdc_enc_check_model(struct nvme_dev *dev)$/;"	f	file:
wdc_enc_get_log	plugins/wdc/wdc-nvme.c	/^static int wdc_enc_get_log(int argc, char **argv, struct command *command, struct plugin *plugin)$/;"	f	file:
wdc_enc_get_nic_log	plugins/wdc/wdc-nvme.c	/^static int wdc_enc_get_nic_log(struct nvme_dev *dev, __u8 log_id, __u32 xfer_size, __u32 data_len, FILE *out)$/;"	f	file:
wdc_enc_submit_move_data	plugins/wdc/wdc-nvme.c	/^static int wdc_enc_submit_move_data(struct nvme_dev *dev, char *cmd, int len,$/;"	f	file:
wdc_fetch_log_directory	plugins/wdc/wdc-nvme.c	/^static int wdc_fetch_log_directory(struct nvme_dev *dev, struct WDC_DE_VU_LOG_DIRECTORY *directory)$/;"	f	file:
wdc_fetch_log_file_from_device	plugins/wdc/wdc-nvme.c	/^static int wdc_fetch_log_file_from_device(struct nvme_dev *dev, __u32 fileId,$/;"	f	file:
wdc_fetch_vu_file_directory	plugins/wdc/wdc-nvme.c	/^int wdc_fetch_vu_file_directory(struct nvme_dev *dev,$/;"	f
wdc_fw_act_history_log_entry	plugins/wdc/wdc-nvme.c	/^struct wdc_fw_act_history_log_entry {$/;"	s	file:
wdc_fw_act_history_log_entry_c2	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_fw_act_history_log_entry_c2 {$/;"	s	file:
wdc_fw_act_history_log_format_c2	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_fw_act_history_log_format_c2 {$/;"	s	file:
wdc_fw_act_history_log_hdr	plugins/wdc/wdc-nvme.c	/^struct wdc_fw_act_history_log_hdr {$/;"	s	file:
wdc_get_c0_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_c0_log_page(nvme_root_t r, struct nvme_dev *dev, char *format, int uuid_index,$/;"	f	file:
wdc_get_c0_log_page_sn	plugins/wdc/wdc-nvme.c	/^static int wdc_get_c0_log_page_sn(nvme_root_t r, struct nvme_dev *dev, int uuid_index, char *format,$/;"	f	file:
wdc_get_c0_log_page_sn_customer_id_0x100X	plugins/wdc/wdc-nvme.c	/^static int wdc_get_c0_log_page_sn_customer_id_0x100X(struct nvme_dev *dev, int uuid_index,$/;"	f	file:
wdc_get_c1_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_c1_log_page(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
wdc_get_c3_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_c3_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_ca_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_ca_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_commit_action_bin	plugins/wdc/wdc-nvme.c	/^static void wdc_get_commit_action_bin(__u8 commit_action_type, char *action_bin)$/;"	f	file:
wdc_get_crash_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_get_crash_dump(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_d0_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_d0_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_dev_capabilities_log	plugins/wdc/wdc-nvme.c	/^static int wdc_get_dev_capabilities_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_dev_mng_log_entry	plugins/wdc/wdc-nvme.c	/^bool wdc_get_dev_mng_log_entry(__u32 log_length, __u32 entry_id,$/;"	f
wdc_get_drive_capabilities	plugins/wdc/wdc-nvme.c	/^static __u64 wdc_get_drive_capabilities(nvme_root_t r, struct nvme_dev *dev)$/;"	f	file:
wdc_get_drive_reason_id	plugins/wdc/wdc-nvme.c	/^static int wdc_get_drive_reason_id(struct nvme_dev *dev, char *drive_reason_id, size_t len)$/;"	f	file:
wdc_get_enc_drive_capabilities	plugins/wdc/wdc-nvme.c	/^static __u64 wdc_get_enc_drive_capabilities(nvme_root_t r,$/;"	f	file:
wdc_get_error_recovery_log	plugins/wdc/wdc-nvme.c	/^static int wdc_get_error_recovery_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_essential_type	plugins/wdc/wdc-nvme.c	/^static enum WDC_DRIVE_ESSENTIAL_TYPE wdc_get_essential_type(__u8 fileName[])$/;"	f	file:
wdc_get_fw_act_history	plugins/wdc/wdc-nvme.c	/^static int wdc_get_fw_act_history(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
wdc_get_fw_act_history_C2	plugins/wdc/wdc-nvme.c	/^static int wdc_get_fw_act_history_C2(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
wdc_get_fw_cust_id	plugins/wdc/wdc-nvme.c	/^static __u32 wdc_get_fw_cust_id(nvme_root_t r, struct nvme_dev *dev)$/;"	f	file:
wdc_get_latency_monitor_log	plugins/wdc/wdc-nvme.c	/^static int wdc_get_latency_monitor_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_log_dir_max_entries	plugins/wdc/wdc-nvme.c	/^static int wdc_get_log_dir_max_entries(struct nvme_dev *dev, __u32 *maxNumOfEntries)$/;"	f	file:
wdc_get_max_transfer_len	plugins/wdc/wdc-nvme.c	/^static int wdc_get_max_transfer_len(struct nvme_dev *dev, __u32 *maxTransferLen)$/;"	f	file:
wdc_get_model_number	plugins/wdc/wdc-nvme.c	/^static int wdc_get_model_number(struct nvme_dev *dev, char *model)$/;"	f	file:
wdc_get_ocp_c1_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_ocp_c1_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_ocp_c4_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_ocp_c4_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_ocp_c5_log_page	plugins/wdc/wdc-nvme.c	/^static int wdc_get_ocp_c5_log_page(nvme_root_t r, struct nvme_dev *dev, char *format)$/;"	f	file:
wdc_get_pci_ids	plugins/wdc/wdc-nvme.c	/^static int wdc_get_pci_ids(nvme_root_t r, struct nvme_dev *dev,$/;"	f	file:
wdc_get_pfail_dump	plugins/wdc/wdc-nvme.c	/^static int wdc_get_pfail_dump(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_serial_and_fw_rev	plugins/wdc/wdc-nvme.c	/^static int wdc_get_serial_and_fw_rev(struct nvme_dev *dev, char *sn, char *fw_rev)$/;"	f	file:
wdc_get_serial_name	plugins/wdc/wdc-nvme.c	/^static int wdc_get_serial_name(struct nvme_dev *dev, char *file, size_t len,$/;"	f	file:
wdc_get_unsupported_reqs_log	plugins/wdc/wdc-nvme.c	/^static int wdc_get_unsupported_reqs_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_get_vendor_id	plugins/wdc/wdc-nvme.c	/^static int wdc_get_vendor_id(struct nvme_dev *dev, uint32_t *vendor_id)$/;"	f	file:
wdc_id_ctrl	plugins/wdc/wdc-nvme.c	/^static int wdc_id_ctrl(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
wdc_lat_mon_guid	plugins/wdc/wdc-nvme.c	/^static __u8 wdc_lat_mon_guid[WDC_C3_GUID_LENGTH] = {$/;"	v	file:
wdc_log_page_directory	plugins/wdc/wdc-nvme.c	/^static int wdc_log_page_directory(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_log_page_header	plugins/wdc/wdc-nvme.c	/^struct wdc_log_page_header {$/;"	s	file:
wdc_log_page_subpage_header	plugins/wdc/wdc-nvme.c	/^struct wdc_log_page_subpage_header {$/;"	s	file:
wdc_log_size	plugins/wdc/wdc-nvme.c	/^struct wdc_log_size {$/;"	s	file:
wdc_namespace_resize	plugins/wdc/wdc-nvme.c	/^static int wdc_namespace_resize(int argc, char **argv,$/;"	f	file:
wdc_nand_stats	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_nand_stats {$/;"	s	file:
wdc_nand_stats_V3	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_nand_stats_V3 {$/;"	s	file:
wdc_nvme_check_supported_log_page	plugins/wdc/wdc-nvme.c	/^static bool wdc_nvme_check_supported_log_page(nvme_root_t r, struct nvme_dev *dev, __u8 log_id)$/;"	f	file:
wdc_nvme_ext_smart_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_nvme_ext_smart_log {$/;"	s	file:
wdc_nvme_get_dev_status_log_data	plugins/wdc/wdc-nvme.c	/^static bool wdc_nvme_get_dev_status_log_data(nvme_root_t r, struct nvme_dev *dev, __le32 *ret_data,$/;"	f	file:
wdc_nvme_hw_rev_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_nvme_hw_rev_log {$/;"	s	file:
wdc_nvme_purge_monitor_data	plugins/wdc/wdc-nvme.c	/^struct wdc_nvme_purge_monitor_data {$/;"	s	file:
wdc_ocp_C4_dev_cap_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ocp_C4_dev_cap_log {$/;"	s	file:
wdc_ocp_C5_unsupported_reqs	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ocp_C5_unsupported_reqs {$/;"	s	file:
wdc_ocp_c1_error_recovery_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ocp_c1_error_recovery_log {$/;"	s	file:
wdc_ocp_c1_guid	plugins/wdc/wdc-nvme.c	/^static __u8 wdc_ocp_c1_guid[WDC_OCP_C1_GUID_LENGTH]    = { 0x44, 0xD9, 0x31, 0x21, 0xFE, 0x30, 0x34, 0xAE,$/;"	v	file:
wdc_ocp_c4_guid	plugins/wdc/wdc-nvme.c	/^static __u8 wdc_ocp_c4_guid[WDC_OCP_C4_GUID_LENGTH]  = {$/;"	v	file:
wdc_ocp_c5_guid	plugins/wdc/wdc-nvme.c	/^static __u8 wdc_ocp_c5_guid[WDC_OCP_C5_GUID_LENGTH]    = { 0x2F, 0x72, 0x9C, 0x0E, 0x99, 0x23, 0x2C, 0xBB,$/;"	v	file:
wdc_print_bd_ca_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_bd_ca_log(struct nvme_dev *dev, void *bd_data, int fmt)$/;"	f	file:
wdc_print_bd_ca_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_bd_ca_log_json(void *data)$/;"	f	file:
wdc_print_bd_ca_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_bd_ca_log_normal(struct nvme_dev *dev, void *data)$/;"	f	file:
wdc_print_c0_cloud_attr_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_c0_cloud_attr_log(void *data, int fmt)$/;"	f	file:
wdc_print_c0_eol_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_c0_eol_log(void *data, int fmt)$/;"	f	file:
wdc_print_d0_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_d0_log(struct wdc_ssd_d0_smart_log *perf, int fmt)$/;"	f	file:
wdc_print_d0_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_d0_log_json(struct wdc_ssd_d0_smart_log *perf)$/;"	f	file:
wdc_print_d0_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_d0_log_normal(struct wdc_ssd_d0_smart_log *perf)$/;"	f	file:
wdc_print_dev_cap_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_dev_cap_log(struct wdc_ocp_C4_dev_cap_log *log_data, int fmt)$/;"	f	file:
wdc_print_dev_cap_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_dev_cap_log_json(struct wdc_ocp_C4_dev_cap_log *log_data)$/;"	f	file:
wdc_print_dev_cap_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_dev_cap_log_normal(struct wdc_ocp_C4_dev_cap_log *log_data)$/;"	f	file:
wdc_print_eol_c0_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_eol_c0_json(void *data)$/;"	f	file:
wdc_print_eol_c0_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_eol_c0_normal(void *data)$/;"	f	file:
wdc_print_error_rec_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_error_rec_log(struct wdc_ocp_c1_error_recovery_log *log_data, int fmt)$/;"	f	file:
wdc_print_error_rec_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_error_rec_log_json(struct wdc_ocp_c1_error_recovery_log *log_data)$/;"	f	file:
wdc_print_error_rec_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_error_rec_log_normal(struct wdc_ocp_c1_error_recovery_log *log_data)$/;"	f	file:
wdc_print_ext_smart_cloud_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_ext_smart_cloud_log(void *data, int fmt)$/;"	f	file:
wdc_print_ext_smart_cloud_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_ext_smart_cloud_log_json(void *data, int mask)$/;"	f	file:
wdc_print_ext_smart_cloud_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_ext_smart_cloud_log_normal(void *data, int mask)$/;"	f	file:
wdc_print_fb_ca_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_fb_ca_log(struct wdc_ssd_ca_perf_stats *perf, int fmt)$/;"	f	file:
wdc_print_fb_ca_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_fb_ca_log_json(struct wdc_ssd_ca_perf_stats *perf)$/;"	f	file:
wdc_print_fb_ca_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_fb_ca_log_normal(struct wdc_ssd_ca_perf_stats *perf)$/;"	f	file:
wdc_print_fw_act_history_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_fw_act_history_log(__u8 *data, int num_entries, int fmt, __u32 cust_id, __u32 vendor_id)$/;"	f	file:
wdc_print_fw_act_history_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_fw_act_history_log_json(__u8 *data, int num_entries, __u32 cust_id, __u32 vendor_id)$/;"	f	file:
wdc_print_fw_act_history_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_fw_act_history_log_normal(__u8 *data, int num_entries, __u32 cust_id, __u32 vendor_id)$/;"	f	file:
wdc_print_hw_rev_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_hw_rev_log_json(void *data)$/;"	f	file:
wdc_print_hw_rev_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_hw_rev_log_normal(void *data)$/;"	f	file:
wdc_print_latency_monitor_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_latency_monitor_log(struct nvme_dev *dev,$/;"	f	file:
wdc_print_latency_monitor_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_latency_monitor_log_json(struct wdc_ssd_latency_monitor_log *log_data)$/;"	f	file:
wdc_print_latency_monitor_log_normal	plugins/wdc/wdc-nvme.c	/^static int wdc_print_latency_monitor_log_normal(struct nvme_dev *dev,$/;"	f	file:
wdc_print_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_log(struct wdc_ssd_perf_stats *perf, int fmt)$/;"	f	file:
wdc_print_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_log_json(struct wdc_ssd_perf_stats *perf)$/;"	f	file:
wdc_print_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_log_normal(struct wdc_ssd_perf_stats *perf)$/;"	f	file:
wdc_print_nand_stats_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_nand_stats_json(__u16 version, void *data)$/;"	f	file:
wdc_print_nand_stats_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_nand_stats_normal(__u16 version, void *data)$/;"	f	file:
wdc_print_pcie_stats_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_pcie_stats_json(struct wdc_vs_pcie_stats *pcie_stats)$/;"	f	file:
wdc_print_pcie_stats_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_pcie_stats_normal(struct wdc_vs_pcie_stats *pcie_stats)$/;"	f	file:
wdc_print_smart_cloud_attr_C0_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_smart_cloud_attr_C0_json(void *data)$/;"	f	file:
wdc_print_smart_cloud_attr_C0_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_smart_cloud_attr_C0_normal(void *data)$/;"	f	file:
wdc_print_unsupported_reqs_log	plugins/wdc/wdc-nvme.c	/^static int wdc_print_unsupported_reqs_log(struct wdc_ocp_C5_unsupported_reqs *log_data, int fmt)$/;"	f	file:
wdc_print_unsupported_reqs_log_json	plugins/wdc/wdc-nvme.c	/^static void wdc_print_unsupported_reqs_log_json(struct wdc_ocp_C5_unsupported_reqs *log_data)$/;"	f	file:
wdc_print_unsupported_reqs_log_normal	plugins/wdc/wdc-nvme.c	/^static void wdc_print_unsupported_reqs_log_normal(struct wdc_ocp_C5_unsupported_reqs *log_data)$/;"	f	file:
wdc_purge	plugins/wdc/wdc-nvme.c	/^static int wdc_purge(int argc, char **argv,$/;"	f	file:
wdc_purge_mon_status_to_string	plugins/wdc/wdc-nvme.c	/^static const char *wdc_purge_mon_status_to_string(__u32 status)$/;"	f	file:
wdc_purge_monitor	plugins/wdc/wdc-nvme.c	/^static int wdc_purge_monitor(int argc, char **argv,$/;"	f	file:
wdc_read_debug_directory	plugins/wdc/wdc-nvme.c	/^int wdc_read_debug_directory(struct nvme_dev *dev, __s8 *bufferFolderPath, __u8 *serialNo,$/;"	f
wdc_reason_identifier	plugins/wdc/wdc-nvme.c	/^static int wdc_reason_identifier(int argc, char **argv,$/;"	f	file:
wdc_save_reason_id	plugins/wdc/wdc-nvme.c	/^static int wdc_save_reason_id(struct nvme_dev *dev, __u8 *rsn_ident,  int size)$/;"	f	file:
wdc_ssd_ca_perf_stats	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ssd_ca_perf_stats {$/;"	s	file:
wdc_ssd_d0_smart_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ssd_d0_smart_log {$/;"	s	file:
wdc_ssd_latency_monitor_log	plugins/wdc/wdc-nvme.c	/^struct __packed wdc_ssd_latency_monitor_log {$/;"	s	file:
wdc_ssd_perf_stats	plugins/wdc/wdc-nvme.c	/^struct wdc_ssd_perf_stats {$/;"	s	file:
wdc_vs_cloud_log	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_cloud_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_device_waf	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_device_waf(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_drive_info	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_drive_info(int argc, char **argv,$/;"	f	file:
wdc_vs_fw_activate_history	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_fw_activate_history(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_hw_rev_log	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_hw_rev_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_internal_fw_log	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_internal_fw_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_nand_stats	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_nand_stats(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_pcie_stats	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_pcie_stats(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_pcie_stats	plugins/wdc/wdc-nvme.c	/^struct wdc_vs_pcie_stats {$/;"	s	file:
wdc_vs_smart_add_log	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_smart_add_log(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_telemetry_controller_option	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_telemetry_controller_option(int argc, char **argv, struct command *command,$/;"	f	file:
wdc_vs_temperature_stats	plugins/wdc/wdc-nvme.c	/^static int wdc_vs_temperature_stats(int argc, char **argv,$/;"	f	file:
wear_level	plugins/intel/intel-nvme.c	/^		struct __packed  wear_level {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
wear_level	plugins/intel/intel-nvme.c	/^		} wear_level;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::wear_level	file:
wear_level	plugins/scaleflux/sfx-nvme.c	/^		struct __packed  wear_level {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
wear_level	plugins/scaleflux/sfx-nvme.c	/^		} wear_level;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::wear_level	file:
wear_level	plugins/shannon/shannon-nvme.c	/^		struct wear_level {$/;"	s	union:nvme_shannon_smart_log_item::__anon8	file:
wear_level	plugins/shannon/shannon-nvme.c	/^		} wear_level;$/;"	m	union:nvme_shannon_smart_log_item::__anon8	typeref:struct:nvme_shannon_smart_log_item::__anon8::wear_level	file:
wear_level	plugins/solidigm/solidigm-smart.c	/^		struct __packed  wear_level {$/;"	s	union:nvme_additional_smart_log_item::__packed	file:
wear_level	plugins/solidigm/solidigm-smart.c	/^		} wear_level;$/;"	m	union:nvme_additional_smart_log_item::__packed	typeref:struct:nvme_additional_smart_log_item::__packed::wear_level	file:
wear_leveling_cnt	plugins/intel/intel-nvme.c	/^	struct nvme_additional_smart_log_item	wear_leveling_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
wear_leveling_cnt	plugins/scaleflux/sfx-nvme.c	/^	struct nvme_additional_smart_log_item wear_leveling_cnt;$/;"	m	struct:nvme_additional_smart_log	typeref:struct:nvme_additional_smart_log::nvme_additional_smart_log_item	file:
wearleveling_count	plugins/memblaze/memblaze-utils.h	/^		struct wearleveling_count {$/;"	s	union:nvme_memblaze_smart_log_item::__anon13
wearleveling_count	plugins/memblaze/memblaze-utils.h	/^		} wearleveling_count;$/;"	m	union:nvme_memblaze_smart_log_item::__anon13	typeref:struct:nvme_memblaze_smart_log_item::__anon13::wearleveling_count
wearlvl_vendor_log_count	plugins/inspur/inspur-utils.h	/^    r1_wearlvl_vendor_log_count_t wearlvl_vendor_log_count[4];$/;"	m	struct:r1_vendor_log_s
weight_ec	plugins/innogrit/typedef.h	/^	unsigned int weight_ec;$/;"	m	struct:vsc_smart_log
words	util/types.h	/^	__u32 words[4]; \/* [0] is most significant word *\/$/;"	m	union:nvme_uint128
write	nvme.c	/^	bool	write;$/;"	m	struct:passthru_config	file:
write	plugins/intel/intel-nvme.c	/^	__u32 write[OPTANE_V1000_BUCKET_LEN];$/;"	m	struct:v1000_thresholds	file:
write	plugins/solidigm/solidigm-latency-tracking.c	/^	bool write;$/;"	m	struct:config	file:
write	tests/nvme_test_logger.py	/^    def write(self, log_message):$/;"	m	class:TestNVMeLogger
write_cmd	nvme.c	/^static int write_cmd(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
write_counter	nvme-rpmb.c	/^	unsigned int   write_counter;$/;"	m	struct:rpmb_data_frame_t	file:
write_file	nvme-rpmb.c	/^static void write_file(unsigned char *data, size_t len, const char *dir,$/;"	f	file:
write_header	plugins/intel/intel-nvme.c	/^static int write_header(__u8 *buf, int fd, size_t amnt)$/;"	f	file:
write_header	plugins/solidigm/solidigm-internal-logs.c	/^static int write_header(__u8 *buf, int fd, size_t amnt)$/;"	f	file:
write_pointer	plugins/micron/micron-nvme.c	/^	uint32_t write_pointer;$/;"	m	struct:micron_common_log_header	file:
write_uncor	nvme.c	/^static int write_uncor(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
write_uncor	tests/nvme_writeuncor_test.py	/^    def write_uncor(self):$/;"	m	class:TestNVMeUncor
write_zeroes	nvme.c	/^static int write_zeroes(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
write_zeroes	tests/nvme_writezeros_test.py	/^    def write_zeroes(self):$/;"	m	class:TestNVMeWriteZeros
wrt_uncor_support	plugins/wdc/wdc-nvme.c	/^	__le16  wrt_uncor_support;                     \/* 0010 - Write Uncorrectable Command Support *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
wrt_zeros_support	plugins/wdc/wdc-nvme.c	/^	__le16  wrt_zeros_support;                     \/* 0004 - Write Zeros Commmand Support        *\/$/;"	m	struct:wdc_ocp_C4_dev_cap_log	file:
wu_cmd_support	plugins/ocp/ocp-nvme.c	/^	__le16  wu_cmd_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
ww	plugins/intel/intel-nvme.c	/^	__u8			ww[8]; \/* little endian *\/$/;"	m	struct:nvme_vu_id_ctrl_field	file:
ww	plugins/solidigm/solidigm-id-ctrl.c	/^	__le64 ww;$/;"	m	struct:nvme_vu_id_ctrl_field	file:
wz_cmd_support	plugins/ocp/ocp-nvme.c	/^	__le16  wz_cmd_support;$/;"	m	struct:ocp_device_capabilities_log_page	file:
xorRecoveryCnt	plugins/seagate/seagate-diag.h	/^    __u64           xorRecoveryCnt;     $/;"	m	struct:_STX_EXT_SMART_LOG_PAGE_C0
xor_recovery_count	plugins/wdc/wdc-nvme.c	/^	__le64		xor_recovery_count;$/;"	m	struct:wdc_nand_stats_V3	file:
year	plugins/wdc/wdc-utils.h	/^	unsigned int year;$/;"	m	struct:_UtilsTimeInfo
zero_uuid	nvme-print-json.c	/^static const uint8_t zero_uuid[16] = { 0 };$/;"	v	file:
zero_uuid	nvme-print-stdout.c	/^static const uint8_t zero_uuid[16] = { 0 };$/;"	v	file:
zns_changed_zone_log	nvme-print.h	/^	void (*zns_changed_zone_log)(struct nvme_zns_changed_zone_log *log);$/;"	m	struct:print_ops
zns_finish_zone_list	nvme-print.h	/^	void (*zns_finish_zone_list)(__u64 nr_zones, struct json_object *zone_list);$/;"	m	struct:print_ops
zns_id_ctrl	nvme-print.h	/^	void (*zns_id_ctrl)(struct nvme_zns_id_ctrl *ctrl);$/;"	m	struct:print_ops
zns_id_ns	nvme-print.h	/^	void (*zns_id_ns)(struct nvme_zns_id_ns *ns, struct nvme_id_ns *id_ns);$/;"	m	struct:print_ops
zns_mgmt_send	plugins/zns/zns.c	/^static int zns_mgmt_send(int argc, char **argv, struct command *cmd, struct plugin *plugin,$/;"	f	file:
zns_report_zones	nvme-print.h	/^	void (*zns_report_zones)(void *report, __u32 descs, __u8 ext_size, __u32 report_size, struct json_object *zone_list);$/;"	m	struct:print_ops
zone	plugins/wdc/wdc-utils.h	/^    int      zone; \/* Zone value like +530 or -300 *\/$/;"	m	struct:_UtilsTimeInfo
zone_append	plugins/zns/zns.c	/^static int zone_append(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
zone_mgmt_recv	plugins/zns/zns.c	/^static int zone_mgmt_recv(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
zone_mgmt_send	plugins/zns/zns.c	/^static int zone_mgmt_send(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
zrwa_flush_zone	plugins/zns/zns.c	/^static int zrwa_flush_zone(int argc, char **argv, struct command *cmd, struct plugin *plugin)$/;"	f	file:
