!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := ${NAME}$/;"	m
ACTION_ADMIN_RAW	examples/mi-mctp.c	/^	ACTION_ADMIN_RAW,$/;"	e	enum:action	file:
ACTION_CONFIG_GET	examples/mi-mctp.c	/^	ACTION_CONFIG_GET,$/;"	e	enum:action	file:
ACTION_CONFIG_SET	examples/mi-mctp.c	/^	ACTION_CONFIG_SET,$/;"	e	enum:action	file:
ACTION_CONTROLLERS	examples/mi-mctp.c	/^	ACTION_CONTROLLERS,$/;"	e	enum:action	file:
ACTION_GET_LOG_PAGE	examples/mi-mctp.c	/^	ACTION_GET_LOG_PAGE,$/;"	e	enum:action	file:
ACTION_IDENTIFY	examples/mi-mctp.c	/^	ACTION_IDENTIFY,$/;"	e	enum:action	file:
ACTION_INFO	examples/mi-mctp.c	/^	ACTION_INFO,$/;"	e	enum:action	file:
ACTION_SECURITY_INFO	examples/mi-mctp.c	/^	ACTION_SECURITY_INFO,$/;"	e	enum:action	file:
AF_MCTP	src/nvme/mi-mctp.c	40;"	d	file:
ARGSTR	src/nvme/util.c	339;"	d	file:
ARRAY_SIZE	ccan/ccan/array_size/array_size.h	15;"	d
ARRAY_SIZE	src/nvme/util.c	338;"	d	file:
BE16_TO_CPU	ccan/ccan/endian/endian.h	227;"	d
BE16_TO_CPU	ccan/ccan/endian/endian.h	235;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	221;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	234;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	215;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	233;"	d
BSWAP_16	ccan/ccan/endian/endian.h	18;"	d
BSWAP_32	ccan/ccan/endian/endian.h	33;"	d
BSWAP_64	ccan/ccan/endian/endian.h	50;"	d
BUILD-DIR	Makefile	/^BUILD-DIR     := .build$/;"	m
BUILD_ASSERT	ccan/ccan/build_assert/build_assert.h	22;"	d
BUILD_ASSERT_OR_ZERO	ccan/ccan/build_assert/build_assert.h	37;"	d
CCAN_ARRAY_SIZE_H	ccan/ccan/array_size/array_size.h	3;"	d
CCAN_BUILD_ASSERT_H	ccan/ccan/build_assert/build_assert.h	3;"	d
CCAN_CHECK_TYPE_H	ccan/ccan/check_type/check_type.h	3;"	d
CCAN_CONTAINER_OF_H	ccan/ccan/container_of/container_of.h	3;"	d
CCAN_ENDIAN_H	ccan/ccan/endian/endian.h	3;"	d
CCAN_LIST_H	ccan/ccan/list/list.h	3;"	d
CCAN_MINMAX_H	ccan/ccan/minmax/minmax.h	3;"	d
CCAN_SHORT_TYPES_H	ccan/ccan/short_types/short_types.h	3;"	d
CCAN_STR_DEBUG_H	ccan/ccan/str/str_debug.h	3;"	d
CCAN_STR_H	ccan/ccan/str/str.h	3;"	d
CPU_TO_BE16	ccan/ccan/endian/endian.h	209;"	d
CPU_TO_BE16	ccan/ccan/endian/endian.h	232;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	203;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	231;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	197;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	230;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	163;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	186;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	157;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	185;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	151;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	184;"	d
DECLARE_CLEANUP_FUNC	src/nvme/cleanup.h	7;"	d
DEFAULT_LOGLEVEL	src/nvme/log.h	18;"	d
DEFAULT_SUBSYSNAME	test/tree.c	30;"	d	file:
DEFAULT_SUBSYSNQN	test/tree.c	31;"	d	file:
DEFINE_CLEANUP_FUNC	src/nvme/cleanup.h	10;"	d
DEFINE_TEST	test/mi-mctp.c	714;"	d	file:
DEFINE_TEST	test/mi.c	1860;"	d	file:
DMI_SYSTEM_INFORMATION	src/nvme/fabrics.c	1284;"	d	file:
ENDIAN_CAST	ccan/ccan/endian/endian.h	132;"	d
ENDIAN_CAST	ccan/ccan/endian/endian.h	135;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	133;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	136;"	d
ENVME_CONNECT_AARG	src/nvme/util.h	/^	ENVME_CONNECT_AARG,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_ADDRFAM	src/nvme/util.h	/^	ENVME_CONNECT_ADDRFAM,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_ADDRINUSE	src/nvme/util.h	/^	ENVME_CONNECT_ADDRINUSE,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_ADDRNOTAVAIL	src/nvme/util.h	/^	ENVME_CONNECT_ADDRNOTAVAIL,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_ALREADY	src/nvme/util.h	/^	ENVME_CONNECT_ALREADY,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_CONNREFUSED	src/nvme/util.h	/^	ENVME_CONNECT_CONNREFUSED,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_IGNORED	src/nvme/util.h	/^	ENVME_CONNECT_IGNORED,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_INVAL	src/nvme/util.h	/^	ENVME_CONNECT_INVAL,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_INVAL_TR	src/nvme/util.h	/^	ENVME_CONNECT_INVAL_TR,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_LOOKUP_SUBSYS	src/nvme/util.h	/^	ENVME_CONNECT_LOOKUP_SUBSYS,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_LOOKUP_SUBSYS_NAME	src/nvme/util.h	/^	ENVME_CONNECT_LOOKUP_SUBSYS_NAME,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_NODEV	src/nvme/util.h	/^	ENVME_CONNECT_NODEV,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_OPEN	src/nvme/util.h	/^	ENVME_CONNECT_OPEN,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_OPNOTSUPP	src/nvme/util.h	/^	ENVME_CONNECT_OPNOTSUPP,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_PARSE	src/nvme/util.h	/^	ENVME_CONNECT_PARSE,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_READ	src/nvme/util.h	/^	ENVME_CONNECT_READ,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_RESOLVE	src/nvme/util.h	/^	ENVME_CONNECT_RESOLVE	= 1000,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_TARG	src/nvme/util.h	/^	ENVME_CONNECT_TARG,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_TRADDR	src/nvme/util.h	/^	ENVME_CONNECT_TRADDR,$/;"	e	enum:nvme_connect_err
ENVME_CONNECT_WRITE	src/nvme/util.h	/^	ENVME_CONNECT_WRITE,$/;"	e	enum:nvme_connect_err
FREE_CTRL_ATTR	src/nvme/tree.c	1054;"	d	file:
JSON_BOOL_OPTION	src/nvme/json.c	273;"	d	file:
JSON_INT_OPTION	src/nvme/json.c	269;"	d	file:
JSON_STRING_OPTION	src/nvme/json.c	265;"	d	file:
JSON_UPDATE_BOOL_OPTION	src/nvme/json.c	24;"	d	file:
JSON_UPDATE_INT_OPTION	src/nvme/json.c	22;"	d	file:
LE16_TO_CPU	ccan/ccan/endian/endian.h	181;"	d
LE16_TO_CPU	ccan/ccan/endian/endian.h	189;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	175;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	188;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	169;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	187;"	d
LINE_MAX	src/nvme/util.c	31;"	d	file:
LIST_HEAD	ccan/ccan/list/list.h	129;"	d
LIST_HEAD_INIT	ccan/ccan/list/list.h	114;"	d
LIST_LOC	ccan/ccan/list/list.h	93;"	d
LOG_CLOCK	src/nvme/log.c	26;"	d	file:
LOG_FUNCNAME	src/nvme/log.c	20;"	d	file:
MAX_BUFSIZ	test/mi-mctp.c	26;"	d	file:
MAX_LOGLEVEL	src/nvme/log.h	15;"	d
MCTP_ADDR_ANY	src/nvme/mi-mctp.c	71;"	d	file:
MCTP_ADDR_NULL	src/nvme/mi-mctp.c	70;"	d	file:
MCTP_DBUS_EP_IFACE	examples/mi-conf.c	30;"	d	file:
MCTP_DBUS_IFACE	src/nvme/mi-mctp.c	30;"	d	file:
MCTP_DBUS_IFACE_ENDPOINT	src/nvme/mi-mctp.c	31;"	d	file:
MCTP_DBUS_NAME	examples/mi-conf.c	28;"	d	file:
MCTP_DBUS_PATH	examples/mi-conf.c	29;"	d	file:
MCTP_DBUS_PATH	src/nvme/mi-mctp.c	29;"	d	file:
MCTP_NET_ANY	src/nvme/mi-mctp.c	68;"	d	file:
MCTP_TAG_MASK	src/nvme/mi-mctp.c	73;"	d	file:
MCTP_TAG_OWNER	src/nvme/mi-mctp.c	74;"	d	file:
MCTP_TYPE_MIC	src/nvme/mi-mctp.c	79;"	d	file:
MCTP_TYPE_NVME	src/nvme/mi-mctp.c	78;"	d	file:
MERGE_CFG_OPTION	src/nvme/fabrics.c	237;"	d	file:
MERGE_CFG_OPTION_STR	src/nvme/fabrics.c	239;"	d	file:
MIN	src/nvme/nbft.c	22;"	d	file:
MINMAX_ASSERT_COMPATIBLE	ccan/ccan/minmax/minmax.h	18;"	d
MINMAX_ASSERT_COMPATIBLE	ccan/ccan/minmax/minmax.h	21;"	d
NAME	Makefile	/^NAME          := libnvme$/;"	m
NBFT_CONTROL_VALID	src/nvme/nbft.h	/^	NBFT_CONTROL_VALID	= 1 << 0,$/;"	e	enum:nbft_control_flags
NBFT_DESC_CONTROL	src/nvme/nbft.h	/^	NBFT_DESC_CONTROL	= 1,$/;"	e	enum:nbft_desc_type
NBFT_DESC_DISCOVERY	src/nvme/nbft.h	/^	NBFT_DESC_DISCOVERY	= 6,$/;"	e	enum:nbft_desc_type
NBFT_DESC_HEADER	src/nvme/nbft.h	/^	NBFT_DESC_HEADER	= 0,$/;"	e	enum:nbft_desc_type
NBFT_DESC_HFI	src/nvme/nbft.h	/^	NBFT_DESC_HFI		= 3,$/;"	e	enum:nbft_desc_type
NBFT_DESC_HFI_TRINFO	src/nvme/nbft.h	/^	NBFT_DESC_HFI_TRINFO	= 7,$/;"	e	enum:nbft_desc_type
NBFT_DESC_HOST	src/nvme/nbft.h	/^	NBFT_DESC_HOST		= 2,$/;"	e	enum:nbft_desc_type
NBFT_DESC_RESERVED_8	src/nvme/nbft.h	/^	NBFT_DESC_RESERVED_8	= 8,$/;"	e	enum:nbft_desc_type
NBFT_DESC_SECURITY	src/nvme/nbft.h	/^	NBFT_DESC_SECURITY	= 5,$/;"	e	enum:nbft_desc_type
NBFT_DESC_SSNS	src/nvme/nbft.h	/^	NBFT_DESC_SSNS		= 4,$/;"	e	enum:nbft_desc_type
NBFT_DESC_SSNS_EXT_INFO	src/nvme/nbft.h	/^	NBFT_DESC_SSNS_EXT_INFO	= 9,$/;"	e	enum:nbft_desc_type
NBFT_DISCOVERY_VALID	src/nvme/nbft.h	/^	NBFT_DISCOVERY_VALID	= 1 << 0,$/;"	e	enum:nbft_discovery_flags
NBFT_HEADER_SIG	src/nvme/nbft.h	61;"	d
NBFT_HFI_INFO_TCP_DHCP_OVERRIDE	src/nvme/nbft.h	/^	NBFT_HFI_INFO_TCP_DHCP_OVERRIDE	= 1 << 2,$/;"	e	enum:nbft_hfi_info_tcp_flags
NBFT_HFI_INFO_TCP_GLOBAL_ROUTE	src/nvme/nbft.h	/^	NBFT_HFI_INFO_TCP_GLOBAL_ROUTE	= 1 << 1,$/;"	e	enum:nbft_hfi_info_tcp_flags
NBFT_HFI_INFO_TCP_VALID	src/nvme/nbft.h	/^	NBFT_HFI_INFO_TCP_VALID		= 1 << 0,$/;"	e	enum:nbft_hfi_info_tcp_flags
NBFT_HFI_VALID	src/nvme/nbft.h	/^	NBFT_HFI_VALID	= 1 << 0,$/;"	e	enum:nbft_hfi_flags
NBFT_HOST_HOSTID_CONFIGURED	src/nvme/nbft.h	/^	NBFT_HOST_HOSTID_CONFIGURED		= 1 << 1,$/;"	e	enum:nbft_host_flags
NBFT_HOST_HOSTNQN_CONFIGURED	src/nvme/nbft.h	/^	NBFT_HOST_HOSTNQN_CONFIGURED		= 1 << 2,$/;"	e	enum:nbft_host_flags
NBFT_HOST_PRIMARY_ADMIN_MASK	src/nvme/nbft.h	/^	NBFT_HOST_PRIMARY_ADMIN_MASK		= 0x18,$/;"	e	enum:nbft_host_flags
NBFT_HOST_PRIMARY_ADMIN_NOT_INDICATED	src/nvme/nbft.h	/^	NBFT_HOST_PRIMARY_ADMIN_NOT_INDICATED	= 0x00,$/;"	e	enum:nbft_host_flags
NBFT_HOST_PRIMARY_ADMIN_SELECTED	src/nvme/nbft.h	/^	NBFT_HOST_PRIMARY_ADMIN_SELECTED	= 0x10,$/;"	e	enum:nbft_host_flags
NBFT_HOST_PRIMARY_ADMIN_UNSELECTED	src/nvme/nbft.h	/^	NBFT_HOST_PRIMARY_ADMIN_UNSELECTED	= 0x08,$/;"	e	enum:nbft_host_flags
NBFT_HOST_VALID	src/nvme/nbft.h	/^	NBFT_HOST_VALID				= 1 << 0,$/;"	e	enum:nbft_host_flags
NBFT_INFO_NID_TYPE_EUI64	src/nvme/nbft.h	/^	NBFT_INFO_NID_TYPE_EUI64	= 1,$/;"	e	enum:nbft_info_nid_type
NBFT_INFO_NID_TYPE_NGUID	src/nvme/nbft.h	/^	NBFT_INFO_NID_TYPE_NGUID	= 2,$/;"	e	enum:nbft_info_nid_type
NBFT_INFO_NID_TYPE_NONE	src/nvme/nbft.h	/^	NBFT_INFO_NID_TYPE_NONE		= 0,$/;"	e	enum:nbft_info_nid_type
NBFT_INFO_NID_TYPE_NS_UUID	src/nvme/nbft.h	/^	NBFT_INFO_NID_TYPE_NS_UUID	= 3,$/;"	e	enum:nbft_info_nid_type
NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_NOT_INDICATED	src/nvme/nbft.h	/^	NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_NOT_INDICATED,$/;"	e	enum:nbft_info_primary_admin_host_flag
NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_RESERVED	src/nvme/nbft.h	/^	NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_RESERVED,$/;"	e	enum:nbft_info_primary_admin_host_flag
NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_SELECTED	src/nvme/nbft.h	/^	NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_SELECTED,$/;"	e	enum:nbft_info_primary_admin_host_flag
NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_UNSELECTED	src/nvme/nbft.h	/^	NBFT_INFO_PRIMARY_ADMIN_HOST_FLAG_UNSELECTED,$/;"	e	enum:nbft_info_primary_admin_host_flag
NBFT_SECURITY_AUTH_DH_GROUPS_RESTRICTED	src/nvme/nbft.h	/^	NBFT_SECURITY_AUTH_DH_GROUPS_RESTRICTED		= 1 << 10,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_AUTH_POLICY_LIST_ADMIN	src/nvme/nbft.h	/^	NBFT_SECURITY_AUTH_POLICY_LIST_ADMIN		= 0x0010,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_AUTH_POLICY_LIST_DRIVER	src/nvme/nbft.h	/^	NBFT_SECURITY_AUTH_POLICY_LIST_DRIVER		= 0x0008,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_AUTH_POLICY_LIST_MASK	src/nvme/nbft.h	/^	NBFT_SECURITY_AUTH_POLICY_LIST_MASK		= 0x0018,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_AUTH_POLICY_LIST_NOT_SUPPORTED	src/nvme/nbft.h	/^	NBFT_SECURITY_AUTH_POLICY_LIST_NOT_SUPPORTED	= 0x0000,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_CIPHER_RESTRICTED	src/nvme/nbft.h	/^	NBFT_SECURITY_CIPHER_RESTRICTED			= 1 << 9,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_IN_BAND_AUTH_MASK	src/nvme/nbft.h	/^	NBFT_SECURITY_IN_BAND_AUTH_MASK			= 0x0006,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_IN_BAND_AUTH_NOT_REQUIRED	src/nvme/nbft.h	/^	NBFT_SECURITY_IN_BAND_AUTH_NOT_REQUIRED		= 0x0002,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_IN_BAND_AUTH_NOT_SUPPORTED	src/nvme/nbft.h	/^	NBFT_SECURITY_IN_BAND_AUTH_NOT_SUPPORTED	= 0x0000,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_IN_BAND_AUTH_REQUIRED	src/nvme/nbft.h	/^	NBFT_SECURITY_IN_BAND_AUTH_REQUIRED		= 0x0004,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SECRET_REDFISH_HOST_IFACE_URI	src/nvme/nbft.h	/^	NBFT_SECURITY_SECRET_REDFISH_HOST_IFACE_URI	= 1 << 1,$/;"	e	enum:nbft_security_secret_type
NBFT_SECURITY_SEC_CHAN_NEG_MASK	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_CHAN_NEG_MASK			= 0x0060,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_CHAN_NEG_NOT_REQUIRED	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_CHAN_NEG_NOT_REQUIRED		= 0x0020,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_CHAN_NEG_NOT_SUPPORTED	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_CHAN_NEG_NOT_SUPPORTED	= 0x0000,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_CHAN_NEG_REQUIRED	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_CHAN_NEG_REQUIRED		= 0x0040,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_HASH_FUNC_POLICY_LIST	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_HASH_FUNC_POLICY_LIST		= 1 << 11,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_POLICY_LIST_ADMIN	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_POLICY_LIST_ADMIN		= 0x0100,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_POLICY_LIST_DRIVER	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_POLICY_LIST_DRIVER		= 0x0080,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_POLICY_LIST_MASK	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_POLICY_LIST_MASK		= 0x0180,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_SEC_POLICY_LIST_NOT_SUPPORTED	src/nvme/nbft.h	/^	NBFT_SECURITY_SEC_POLICY_LIST_NOT_SUPPORTED	= 0x0000,$/;"	e	enum:nbft_security_flags
NBFT_SECURITY_VALID	src/nvme/nbft.h	/^	NBFT_SECURITY_VALID				= 1 << 0,$/;"	e	enum:nbft_security_flags
NBFT_SSNS_DATA_DIGEST	src/nvme/nbft.h	/^	NBFT_SSNS_DATA_DIGEST		= 1 << 2,$/;"	e	enum:nbft_ssns_trflags
NBFT_SSNS_DHCP_ROOT_PATH_OVERRIDE	src/nvme/nbft.h	/^	NBFT_SSNS_DHCP_ROOT_PATH_OVERRIDE	= 1 << 3,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_DISCOVERED_NAMESPACE	src/nvme/nbft.h	/^	NBFT_SSNS_DISCOVERED_NAMESPACE		= 1 << 6,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_EXTENDED_INFO_IN_USE	src/nvme/nbft.h	/^	NBFT_SSNS_EXTENDED_INFO_IN_USE		= 1 << 4,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_EXT_INFO_ADMIN_ASQSZ	src/nvme/nbft.h	/^	NBFT_SSNS_EXT_INFO_ADMIN_ASQSZ	= 1 << 1,$/;"	e	enum:nbft_ssns_ext_info_flags
NBFT_SSNS_EXT_INFO_VALID	src/nvme/nbft.h	/^	NBFT_SSNS_EXT_INFO_VALID	= 1 << 0,$/;"	e	enum:nbft_ssns_ext_info_flags
NBFT_SSNS_NON_BOOTABLE_ENTRY	src/nvme/nbft.h	/^	NBFT_SSNS_NON_BOOTABLE_ENTRY		= 1 << 1,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_PDU_HEADER_DIGEST	src/nvme/nbft.h	/^	NBFT_SSNS_PDU_HEADER_DIGEST	= 1 << 1,$/;"	e	enum:nbft_ssns_trflags
NBFT_SSNS_SEPARATE_DISCOVERY_CTRL	src/nvme/nbft.h	/^	NBFT_SSNS_SEPARATE_DISCOVERY_CTRL	= 1 << 5,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_TRFLAG_VALID	src/nvme/nbft.h	/^	NBFT_SSNS_TRFLAG_VALID		= 1 << 0,$/;"	e	enum:nbft_ssns_trflags
NBFT_SSNS_UNAVAIL_NAMESPACE_AVAIL	src/nvme/nbft.h	/^	NBFT_SSNS_UNAVAIL_NAMESPACE_AVAIL	= 0x0080,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_UNAVAIL_NAMESPACE_MASK	src/nvme/nbft.h	/^	NBFT_SSNS_UNAVAIL_NAMESPACE_MASK	= 0x0180,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_UNAVAIL_NAMESPACE_NOTIND	src/nvme/nbft.h	/^	NBFT_SSNS_UNAVAIL_NAMESPACE_NOTIND	= 0x0000,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_UNAVAIL_NAMESPACE_UNAVAIL	src/nvme/nbft.h	/^	NBFT_SSNS_UNAVAIL_NAMESPACE_UNAVAIL	= 0x0100,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_USE_SECURITY_FIELD	src/nvme/nbft.h	/^	NBFT_SSNS_USE_SECURITY_FIELD		= 1 << 2,$/;"	e	enum:nbft_ssns_flags
NBFT_SSNS_VALID	src/nvme/nbft.h	/^	NBFT_SSNS_VALID				= 1 << 0,$/;"	e	enum:nbft_ssns_flags
NBFT_TRTYPE_TCP	src/nvme/nbft.h	/^	NBFT_TRTYPE_TCP	= 3,$/;"	e	enum:nbft_trtype
NDEBUG	test/mi-mctp.c	7;"	d	file:
NDEBUG	test/mi.c	7;"	d	file:
NS_ACTIVE	test/mi.c	/^	NS_ACTIVE,$/;"	e	enum:ns_type	file:
NS_ALLOC	test/mi.c	/^	NS_ALLOC,$/;"	e	enum:ns_type	file:
NS_ATTACH	test/mi.c	/^		NS_ATTACH,$/;"	e	enum:attach_op::__anon8	file:
NS_DETACH	test/mi.c	/^		NS_DETACH,$/;"	e	enum:attach_op::__anon8	file:
NVME_AER_CSS	src/nvme/types.h	/^	NVME_AER_CSS				= 6,$/;"	e	enum:nvme_ae_type
NVME_AER_CSS_NVM_RESERVATION	src/nvme/types.h	/^	NVME_AER_CSS_NVM_RESERVATION			= 0x00,$/;"	e	enum:nvme_ae_info_css_nvm
NVME_AER_CSS_NVM_SANITIZE_COMPLETED	src/nvme/types.h	/^	NVME_AER_CSS_NVM_SANITIZE_COMPLETED		= 0x01,$/;"	e	enum:nvme_ae_info_css_nvm
NVME_AER_CSS_NVM_UNEXPECTED_SANITIZE_DEALLOC	src/nvme/types.h	/^	NVME_AER_CSS_NVM_UNEXPECTED_SANITIZE_DEALLOC	= 0x02,$/;"	e	enum:nvme_ae_info_css_nvm
NVME_AER_ERROR	src/nvme/types.h	/^	NVME_AER_ERROR				= 0,$/;"	e	enum:nvme_ae_type
NVME_AER_ERROR_DIAG_FAILURE	src/nvme/types.h	/^	NVME_AER_ERROR_DIAG_FAILURE			= 0x02,$/;"	e	enum:nvme_ae_info_error
NVME_AER_ERROR_FW_IMAGE_LOAD_ERROR	src/nvme/types.h	/^	NVME_AER_ERROR_FW_IMAGE_LOAD_ERROR		= 0x05,$/;"	e	enum:nvme_ae_info_error
NVME_AER_ERROR_INVALID_DB_REG	src/nvme/types.h	/^	NVME_AER_ERROR_INVALID_DB_REG			= 0x00,$/;"	e	enum:nvme_ae_info_error
NVME_AER_ERROR_INVALID_DB_VAL	src/nvme/types.h	/^	NVME_AER_ERROR_INVALID_DB_VAL			= 0x01,$/;"	e	enum:nvme_ae_info_error
NVME_AER_ERROR_PERSISTENT_INTERNAL_ERROR	src/nvme/types.h	/^	NVME_AER_ERROR_PERSISTENT_INTERNAL_ERROR	= 0x03,$/;"	e	enum:nvme_ae_info_error
NVME_AER_ERROR_TRANSIENT_INTERNAL_ERROR	src/nvme/types.h	/^	NVME_AER_ERROR_TRANSIENT_INTERNAL_ERROR		= 0x04,$/;"	e	enum:nvme_ae_info_error
NVME_AER_NOTICE	src/nvme/types.h	/^	NVME_AER_NOTICE				= 2,$/;"	e	enum:nvme_ae_type
NVME_AER_NOTICE_ANA	src/nvme/types.h	/^	NVME_AER_NOTICE_ANA				= 0x03,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_DISC_CHANGED	src/nvme/types.h	/^	NVME_AER_NOTICE_DISC_CHANGED			= 0xf0,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_EG_EVENT	src/nvme/types.h	/^	NVME_AER_NOTICE_EG_EVENT			= 0x06,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_FW_ACT_STARTING	src/nvme/types.h	/^	NVME_AER_NOTICE_FW_ACT_STARTING			= 0x01,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_LBA_STATUS_ALERT	src/nvme/types.h	/^	NVME_AER_NOTICE_LBA_STATUS_ALERT		= 0x05,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_NS_CHANGED	src/nvme/types.h	/^	NVME_AER_NOTICE_NS_CHANGED			= 0x00,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_PL_EVENT	src/nvme/types.h	/^	NVME_AER_NOTICE_PL_EVENT			= 0x04,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_NOTICE_TELEMETRY	src/nvme/types.h	/^	NVME_AER_NOTICE_TELEMETRY			= 0x02,$/;"	e	enum:nvme_ae_info_notice
NVME_AER_SMART	src/nvme/types.h	/^	NVME_AER_SMART				= 1,$/;"	e	enum:nvme_ae_type
NVME_AER_SMART_SPARE_THRESHOLD	src/nvme/types.h	/^	NVME_AER_SMART_SPARE_THRESHOLD			= 0x02,$/;"	e	enum:nvme_ae_info_smart
NVME_AER_SMART_SUBSYSTEM_RELIABILITY	src/nvme/types.h	/^	NVME_AER_SMART_SUBSYSTEM_RELIABILITY		= 0x00,$/;"	e	enum:nvme_ae_info_smart
NVME_AER_SMART_TEMPERATURE_THRESHOLD	src/nvme/types.h	/^	NVME_AER_SMART_TEMPERATURE_THRESHOLD		= 0x01,$/;"	e	enum:nvme_ae_info_smart
NVME_AER_VS	src/nvme/types.h	/^	NVME_AER_VS				= 7,$/;"	e	enum:nvme_ae_type
NVME_ANA_STATE_CHANGE	src/nvme/types.h	/^	NVME_ANA_STATE_CHANGE		= 0xf,$/;"	e	enum:nvme_ana_state
NVME_ANA_STATE_INACCESSIBLE	src/nvme/types.h	/^	NVME_ANA_STATE_INACCESSIBLE	= 0x3,$/;"	e	enum:nvme_ana_state
NVME_ANA_STATE_NONOPTIMIZED	src/nvme/types.h	/^	NVME_ANA_STATE_NONOPTIMIZED	= 0x2,$/;"	e	enum:nvme_ana_state
NVME_ANA_STATE_OPTIMIZED	src/nvme/types.h	/^	NVME_ANA_STATE_OPTIMIZED	= 0x1,$/;"	e	enum:nvme_ana_state
NVME_ANA_STATE_PERSISTENT_LOSS	src/nvme/types.h	/^	NVME_ANA_STATE_PERSISTENT_LOSS	= 0x4,$/;"	e	enum:nvme_ana_state
NVME_APST_ENTRY_ITPS_MASK	src/nvme/types.h	/^	NVME_APST_ENTRY_ITPS_MASK = 0x1f,$/;"	e	enum:nvme_apst_entry
NVME_APST_ENTRY_ITPS_SHIFT	src/nvme/types.h	/^	NVME_APST_ENTRY_ITPS_SHIFT = 3,$/;"	e	enum:nvme_apst_entry
NVME_APST_ENTRY_ITPT_MASK	src/nvme/types.h	/^	NVME_APST_ENTRY_ITPT_MASK = 0xffffff,$/;"	e	enum:nvme_apst_entry
NVME_APST_ENTRY_ITPT_SHIFT	src/nvme/types.h	/^	NVME_APST_ENTRY_ITPT_SHIFT = 8,$/;"	e	enum:nvme_apst_entry
NVME_AQA_ACQS	src/nvme/types.h	364;"	d
NVME_AQA_ACQS_MASK	src/nvme/types.h	/^	NVME_AQA_ACQS_MASK	= 0xfff,$/;"	e	enum:nvme_aqa
NVME_AQA_ACQS_SHIFT	src/nvme/types.h	/^	NVME_AQA_ACQS_SHIFT	= 16,$/;"	e	enum:nvme_aqa
NVME_AQA_ASQS	src/nvme/types.h	363;"	d
NVME_AQA_ASQS_MASK	src/nvme/types.h	/^	NVME_AQA_ASQS_MASK	= 0xfff,$/;"	e	enum:nvme_aqa
NVME_AQA_ASQS_SHIFT	src/nvme/types.h	/^	NVME_AQA_ASQS_SHIFT	= 0,$/;"	e	enum:nvme_aqa
NVME_BPINFO_ABPID	src/nvme/types.h	453;"	d
NVME_BPINFO_ABPID_MASK	src/nvme/types.h	/^	NVME_BPINFO_ABPID_MASK			= 0x1,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_ABPID_SHIFT	src/nvme/types.h	/^	NVME_BPINFO_ABPID_SHIFT			= 31,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BPSZ	src/nvme/types.h	451;"	d
NVME_BPINFO_BPSZ_MASK	src/nvme/types.h	/^	NVME_BPINFO_BPSZ_MASK			= 0x7fff,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BPSZ_SHIFT	src/nvme/types.h	/^	NVME_BPINFO_BPSZ_SHIFT			= 0,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS	src/nvme/types.h	452;"	d
NVME_BPINFO_BRS_MASK	src/nvme/types.h	/^	NVME_BPINFO_BRS_MASK			= 0x3,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS_NONE	src/nvme/types.h	/^	NVME_BPINFO_BRS_NONE			= 0,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS_READ_ERROR	src/nvme/types.h	/^	NVME_BPINFO_BRS_READ_ERROR		= 3,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS_READ_IN_PROGRESS	src/nvme/types.h	/^	NVME_BPINFO_BRS_READ_IN_PROGRESS	= 1,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS_READ_SUCCESS	src/nvme/types.h	/^	NVME_BPINFO_BRS_READ_SUCCESS		= 2,$/;"	e	enum:nvme_bpinfo
NVME_BPINFO_BRS_SHIFT	src/nvme/types.h	/^	NVME_BPINFO_BRS_SHIFT			= 24,$/;"	e	enum:nvme_bpinfo
NVME_BPRSEL_BPID	src/nvme/types.h	466;"	d
NVME_BPRSEL_BPID_MASK	src/nvme/types.h	/^	NVME_BPRSEL_BPID_MASK		= 0x1,$/;"	e	enum:nvme_bprsel
NVME_BPRSEL_BPID_SHIFT	src/nvme/types.h	/^	NVME_BPRSEL_BPID_SHIFT		= 31,$/;"	e	enum:nvme_bprsel
NVME_BPRSEL_BPROF	src/nvme/types.h	465;"	d
NVME_BPRSEL_BPROF_MASK	src/nvme/types.h	/^	NVME_BPRSEL_BPROF_MASK		= 0xfff,$/;"	e	enum:nvme_bprsel
NVME_BPRSEL_BPROF_SHIFT	src/nvme/types.h	/^	NVME_BPRSEL_BPROF_SHIFT		= 10,$/;"	e	enum:nvme_bprsel
NVME_BPRSEL_BPRSZ	src/nvme/types.h	464;"	d
NVME_BPRSEL_BPRSZ_MASK	src/nvme/types.h	/^	NVME_BPRSEL_BPRSZ_MASK		= 0x3ff,$/;"	e	enum:nvme_bprsel
NVME_BPRSEL_BPRSZ_SHIFT	src/nvme/types.h	/^	NVME_BPRSEL_BPRSZ_SHIFT		= 0,$/;"	e	enum:nvme_bprsel
NVME_CAP_AMS	src/nvme/types.h	265;"	d
NVME_CAP_AMS_MASK	src/nvme/types.h	/^	NVME_CAP_AMS_MASK		= 0x3,$/;"	e	enum:nvme_cap
NVME_CAP_AMS_SHIFT	src/nvme/types.h	/^	NVME_CAP_AMS_SHIFT		= 17,$/;"	e	enum:nvme_cap
NVME_CAP_AMS_VS	src/nvme/types.h	/^	NVME_CAP_AMS_VS			= 1 << 1,$/;"	e	enum:nvme_cap
NVME_CAP_AMS_WRR	src/nvme/types.h	/^	NVME_CAP_AMS_WRR		= 1 << 0,$/;"	e	enum:nvme_cap
NVME_CAP_BPS	src/nvme/types.h	270;"	d
NVME_CAP_BPS_MASK	src/nvme/types.h	/^	NVME_CAP_BPS_MASK		= 0x1,$/;"	e	enum:nvme_cap
NVME_CAP_BPS_SHIFT	src/nvme/types.h	/^	NVME_CAP_BPS_SHIFT		= 45,$/;"	e	enum:nvme_cap
NVME_CAP_CMBS	src/nvme/types.h	274;"	d
NVME_CAP_CMBS_MASK	src/nvme/types.h	/^	NVME_CAP_CMBS_MASK		= 0x1,$/;"	e	enum:nvme_cap
NVME_CAP_CMBS_SHIFT	src/nvme/types.h	/^	NVME_CAP_CMBS_SHIFT		= 57,$/;"	e	enum:nvme_cap
NVME_CAP_CQR	src/nvme/types.h	264;"	d
NVME_CAP_CQR_MASK	src/nvme/types.h	/^	NVME_CAP_CQR_MASK		= 0x1,$/;"	e	enum:nvme_cap
NVME_CAP_CQR_SHIFT	src/nvme/types.h	/^	NVME_CAP_CQR_SHIFT		= 16,$/;"	e	enum:nvme_cap
NVME_CAP_CRIMS	src/nvme/types.h	/^	NVME_CAP_CRIMS			= 1 << 1,$/;"	e	enum:nvme_cap
NVME_CAP_CRMS	src/nvme/types.h	275;"	d
NVME_CAP_CRMS_MASK	src/nvme/types.h	/^	NVME_CAP_CRMS_MASK		= 0x3,$/;"	e	enum:nvme_cap
NVME_CAP_CRMS_SHIFT	src/nvme/types.h	/^	NVME_CAP_CRMS_SHIFT		= 59,$/;"	e	enum:nvme_cap
NVME_CAP_CRWMS	src/nvme/types.h	/^	NVME_CAP_CRWMS			= 1 << 0,$/;"	e	enum:nvme_cap
NVME_CAP_CSS	src/nvme/types.h	269;"	d
NVME_CAP_CSS_ADMIN	src/nvme/types.h	/^	NVME_CAP_CSS_ADMIN		= 1 << 7,$/;"	e	enum:nvme_cap
NVME_CAP_CSS_CSI	src/nvme/types.h	/^	NVME_CAP_CSS_CSI		= 1 << 6,$/;"	e	enum:nvme_cap
NVME_CAP_CSS_MASK	src/nvme/types.h	/^	NVME_CAP_CSS_MASK		= 0xff,$/;"	e	enum:nvme_cap
NVME_CAP_CSS_NVM	src/nvme/types.h	/^	NVME_CAP_CSS_NVM		= 1 << 0,$/;"	e	enum:nvme_cap
NVME_CAP_CSS_SHIFT	src/nvme/types.h	/^	NVME_CAP_CSS_SHIFT		= 37,$/;"	e	enum:nvme_cap
NVME_CAP_DSTRD	src/nvme/types.h	267;"	d
NVME_CAP_DSTRD_MASK	src/nvme/types.h	/^	NVME_CAP_DSTRD_MASK		= 0xf,$/;"	e	enum:nvme_cap
NVME_CAP_DSTRD_SHIFT	src/nvme/types.h	/^	NVME_CAP_DSTRD_SHIFT		= 32,$/;"	e	enum:nvme_cap
NVME_CAP_MPSMAX	src/nvme/types.h	272;"	d
NVME_CAP_MPSMAX_MASK	src/nvme/types.h	/^	NVME_CAP_MPSMAX_MASK		= 0xf,$/;"	e	enum:nvme_cap
NVME_CAP_MPSMAX_SHIFT	src/nvme/types.h	/^	NVME_CAP_MPSMAX_SHIFT		= 52,$/;"	e	enum:nvme_cap
NVME_CAP_MPSMIN	src/nvme/types.h	271;"	d
NVME_CAP_MPSMIN_MASK	src/nvme/types.h	/^	NVME_CAP_MPSMIN_MASK		= 0xf,$/;"	e	enum:nvme_cap
NVME_CAP_MPSMIN_SHIFT	src/nvme/types.h	/^	NVME_CAP_MPSMIN_SHIFT		= 48,$/;"	e	enum:nvme_cap
NVME_CAP_MQES	src/nvme/types.h	263;"	d
NVME_CAP_MQES_MASK	src/nvme/types.h	/^	NVME_CAP_MQES_MASK		= 0xffff,$/;"	e	enum:nvme_cap
NVME_CAP_MQES_SHIFT	src/nvme/types.h	/^	NVME_CAP_MQES_SHIFT		= 0,$/;"	e	enum:nvme_cap
NVME_CAP_NSSRC	src/nvme/types.h	268;"	d
NVME_CAP_NSSRC_MASK	src/nvme/types.h	/^	NVME_CAP_NSSRC_MASK		= 0x1,$/;"	e	enum:nvme_cap
NVME_CAP_NSSRC_SHIFT	src/nvme/types.h	/^	NVME_CAP_NSSRC_SHIFT		= 36,$/;"	e	enum:nvme_cap
NVME_CAP_PMRS	src/nvme/types.h	273;"	d
NVME_CAP_PMRS_MASK	src/nvme/types.h	/^	NVME_CAP_PMRS_MASK		= 0x1,$/;"	e	enum:nvme_cap
NVME_CAP_PMRS_SHIFT	src/nvme/types.h	/^	NVME_CAP_PMRS_SHIFT		= 56,$/;"	e	enum:nvme_cap
NVME_CAP_TO	src/nvme/types.h	266;"	d
NVME_CAP_TO_MASK	src/nvme/types.h	/^	NVME_CAP_TO_MASK		= 0xff,$/;"	e	enum:nvme_cap
NVME_CAP_TO_SHIFT	src/nvme/types.h	/^	NVME_CAP_TO_SHIFT		= 24,$/;"	e	enum:nvme_cap
NVME_CC_AMS	src/nvme/types.h	327;"	d
NVME_CC_AMS_MASK	src/nvme/types.h	/^	NVME_CC_AMS_MASK	= 0x7,$/;"	e	enum:nvme_cc
NVME_CC_AMS_RR	src/nvme/types.h	/^	NVME_CC_AMS_RR		= 0,$/;"	e	enum:nvme_cc
NVME_CC_AMS_SHIFT	src/nvme/types.h	/^	NVME_CC_AMS_SHIFT	= 11,$/;"	e	enum:nvme_cc
NVME_CC_AMS_VS	src/nvme/types.h	/^	NVME_CC_AMS_VS		= 7,$/;"	e	enum:nvme_cc
NVME_CC_AMS_WRRU	src/nvme/types.h	/^	NVME_CC_AMS_WRRU	= 1,$/;"	e	enum:nvme_cc
NVME_CC_CRIME	src/nvme/types.h	/^	NVME_CC_CRIME		= 1,$/;"	e	enum:nvme_cc
NVME_CC_CRIME	src/nvme/types.h	331;"	d
NVME_CC_CRIME_MASK	src/nvme/types.h	/^	NVME_CC_CRIME_MASK	= 0x1,$/;"	e	enum:nvme_cc
NVME_CC_CRIME_SHIFT	src/nvme/types.h	/^	NVME_CC_CRIME_SHIFT	= 24,$/;"	e	enum:nvme_cc
NVME_CC_CRWME	src/nvme/types.h	/^	NVME_CC_CRWME		= 0,$/;"	e	enum:nvme_cc
NVME_CC_CSS	src/nvme/types.h	325;"	d
NVME_CC_CSS_ADMIN	src/nvme/types.h	/^	NVME_CC_CSS_ADMIN	= 7,$/;"	e	enum:nvme_cc
NVME_CC_CSS_CSI	src/nvme/types.h	/^	NVME_CC_CSS_CSI		= 6,$/;"	e	enum:nvme_cc
NVME_CC_CSS_MASK	src/nvme/types.h	/^	NVME_CC_CSS_MASK	= 0x7,$/;"	e	enum:nvme_cc
NVME_CC_CSS_NVM	src/nvme/types.h	/^	NVME_CC_CSS_NVM		= 0,$/;"	e	enum:nvme_cc
NVME_CC_CSS_SHIFT	src/nvme/types.h	/^	NVME_CC_CSS_SHIFT	= 4,$/;"	e	enum:nvme_cc
NVME_CC_EN	src/nvme/types.h	324;"	d
NVME_CC_EN_MASK	src/nvme/types.h	/^	NVME_CC_EN_MASK		= 0x1,$/;"	e	enum:nvme_cc
NVME_CC_EN_SHIFT	src/nvme/types.h	/^	NVME_CC_EN_SHIFT	= 0,$/;"	e	enum:nvme_cc
NVME_CC_IOCQES	src/nvme/types.h	330;"	d
NVME_CC_IOCQES_MASK	src/nvme/types.h	/^	NVME_CC_IOCQES_MASK	= 0xf,$/;"	e	enum:nvme_cc
NVME_CC_IOCQES_SHIFT	src/nvme/types.h	/^	NVME_CC_IOCQES_SHIFT	= 20,$/;"	e	enum:nvme_cc
NVME_CC_IOSQES	src/nvme/types.h	329;"	d
NVME_CC_IOSQES_MASK	src/nvme/types.h	/^	NVME_CC_IOSQES_MASK	= 0xf,$/;"	e	enum:nvme_cc
NVME_CC_IOSQES_SHIFT	src/nvme/types.h	/^	NVME_CC_IOSQES_SHIFT	= 16,$/;"	e	enum:nvme_cc
NVME_CC_MPS	src/nvme/types.h	326;"	d
NVME_CC_MPS_MASK	src/nvme/types.h	/^	NVME_CC_MPS_MASK	= 0xf,$/;"	e	enum:nvme_cc
NVME_CC_MPS_SHIFT	src/nvme/types.h	/^	NVME_CC_MPS_SHIFT	= 7,$/;"	e	enum:nvme_cc
NVME_CC_SHN	src/nvme/types.h	328;"	d
NVME_CC_SHN_ABRUPT	src/nvme/types.h	/^	NVME_CC_SHN_ABRUPT	= 2,$/;"	e	enum:nvme_cc
NVME_CC_SHN_MASK	src/nvme/types.h	/^	NVME_CC_SHN_MASK	= 0x3,$/;"	e	enum:nvme_cc
NVME_CC_SHN_NONE	src/nvme/types.h	/^	NVME_CC_SHN_NONE	= 0,$/;"	e	enum:nvme_cc
NVME_CC_SHN_NORMAL	src/nvme/types.h	/^	NVME_CC_SHN_NORMAL	= 1,$/;"	e	enum:nvme_cc
NVME_CC_SHN_SHIFT	src/nvme/types.h	/^	NVME_CC_SHN_SHIFT	= 14,$/;"	e	enum:nvme_cc
NVME_CMBLOC_BIR	src/nvme/types.h	385;"	d
NVME_CMBLOC_BIR_MASK	src/nvme/types.h	/^	NVME_CMBLOC_BIR_MASK		= 0x7,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_BIR_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_BIR_SHIFT		= 0,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDMMMS	src/nvme/types.h	390;"	d
NVME_CMBLOC_CDMMMS_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CDMMMS_MASK		= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDMMMS_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CDMMMS_SHIFT	= 7,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDPCILS	src/nvme/types.h	389;"	d
NVME_CMBLOC_CDPCILS_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CDPCILS_MASK	= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDPCILS_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CDPCILS_SHIFT	= 6,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDPLMS	src/nvme/types.h	388;"	d
NVME_CMBLOC_CDPLMS_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CDPLMS_MASK		= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CDPLMS_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CDPLMS_SHIFT	= 5,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQDA	src/nvme/types.h	391;"	d
NVME_CMBLOC_CQDA_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CQDA_MASK		= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQDA_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CQDA_SHIFT		= 8,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQMMS	src/nvme/types.h	386;"	d
NVME_CMBLOC_CQMMS_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CQMMS_MASK		= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQMMS_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CQMMS_SHIFT		= 3,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQPDS	src/nvme/types.h	387;"	d
NVME_CMBLOC_CQPDS_MASK	src/nvme/types.h	/^	NVME_CMBLOC_CQPDS_MASK		= 0x1,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_CQPDS_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_CQPDS_SHIFT		= 4,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_OFST	src/nvme/types.h	392;"	d
NVME_CMBLOC_OFST_MASK	src/nvme/types.h	/^	NVME_CMBLOC_OFST_MASK		= 0xfffff,$/;"	e	enum:nvme_cmbloc
NVME_CMBLOC_OFST_SHIFT	src/nvme/types.h	/^	NVME_CMBLOC_OFST_SHIFT		= 12,$/;"	e	enum:nvme_cmbloc
NVME_CMBMSC_CBA	src/nvme/types.h	479;"	d
NVME_CMBMSC_CBA_MASK	src/nvme/types.h	/^static const __u64 NVME_CMBMSC_CBA_MASK = 0xfffffffffffffull;$/;"	v
NVME_CMBMSC_CBA_SHIFT	src/nvme/types.h	/^	NVME_CMBMSC_CBA_SHIFT		= 12,$/;"	e	enum:nvme_cmbmsc
NVME_CMBMSC_CMSE	src/nvme/types.h	478;"	d
NVME_CMBMSC_CMSE_MASK	src/nvme/types.h	/^	NVME_CMBMSC_CMSE_MASK		= 0x1,$/;"	e	enum:nvme_cmbmsc
NVME_CMBMSC_CMSE_SHIFT	src/nvme/types.h	/^	NVME_CMBMSC_CMSE_SHIFT		= 1,$/;"	e	enum:nvme_cmbmsc
NVME_CMBMSC_CRE	src/nvme/types.h	477;"	d
NVME_CMBMSC_CRE_MASK	src/nvme/types.h	/^	NVME_CMBMSC_CRE_MASK		= 0x1,$/;"	e	enum:nvme_cmbmsc
NVME_CMBMSC_CRE_SHIFT	src/nvme/types.h	/^	NVME_CMBMSC_CRE_SHIFT		= 0,$/;"	e	enum:nvme_cmbmsc
NVME_CMBSTS_CBAI	src/nvme/types.h	486;"	d
NVME_CMBSTS_CBAI_MASK	src/nvme/types.h	/^	NVME_CMBSTS_CBAI_MASK	= 0x1,$/;"	e	enum:nvme_cmbsts
NVME_CMBSTS_CBAI_SHIFT	src/nvme/types.h	/^	NVME_CMBSTS_CBAI_SHIFT	= 0,$/;"	e	enum:nvme_cmbsts
NVME_CMBSZ_CQS	src/nvme/types.h	419;"	d
NVME_CMBSZ_CQS_MASK	src/nvme/types.h	/^	NVME_CMBSZ_CQS_MASK	= 0x1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_CQS_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_CQS_SHIFT	= 1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_LISTS	src/nvme/types.h	420;"	d
NVME_CMBSZ_LISTS_MASK	src/nvme/types.h	/^	NVME_CMBSZ_LISTS_MASK	= 0x1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_LISTS_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_LISTS_SHIFT	= 2,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_RDS	src/nvme/types.h	421;"	d
NVME_CMBSZ_RDS_MASK	src/nvme/types.h	/^	NVME_CMBSZ_RDS_MASK	= 0x1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_RDS_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_RDS_SHIFT	= 3,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SQS	src/nvme/types.h	418;"	d
NVME_CMBSZ_SQS_MASK	src/nvme/types.h	/^	NVME_CMBSZ_SQS_MASK	= 0x1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SQS_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_SQS_SHIFT	= 0,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZ	src/nvme/types.h	424;"	d
NVME_CMBSZ_SZU	src/nvme/types.h	423;"	d
NVME_CMBSZ_SZU_16M	src/nvme/types.h	/^	NVME_CMBSZ_SZU_16M	= 3,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_1M	src/nvme/types.h	/^	NVME_CMBSZ_SZU_1M	= 2,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_256M	src/nvme/types.h	/^	NVME_CMBSZ_SZU_256M	= 4,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_4G	src/nvme/types.h	/^	NVME_CMBSZ_SZU_4G	= 5,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_4K	src/nvme/types.h	/^	NVME_CMBSZ_SZU_4K	= 0,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_64G	src/nvme/types.h	/^	NVME_CMBSZ_SZU_64G	= 6,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_64K	src/nvme/types.h	/^	NVME_CMBSZ_SZU_64K	= 1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_MASK	src/nvme/types.h	/^	NVME_CMBSZ_SZU_MASK	= 0xf,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZU_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_SZU_SHIFT	= 8,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZ_MASK	src/nvme/types.h	/^	NVME_CMBSZ_SZ_MASK	= 0xfffff,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_SZ_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_SZ_SHIFT	= 12,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_WDS	src/nvme/types.h	422;"	d
NVME_CMBSZ_WDS_MASK	src/nvme/types.h	/^	NVME_CMBSZ_WDS_MASK	= 0x1,$/;"	e	enum:nvme_cmbsz
NVME_CMBSZ_WDS_SHIFT	src/nvme/types.h	/^	NVME_CMBSZ_WDS_SHIFT	= 4,$/;"	e	enum:nvme_cmbsz
NVME_CMD_EFFECTS_CCC	src/nvme/types.h	/^	NVME_CMD_EFFECTS_CCC		= 1 << 4,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_CSE_MASK	src/nvme/types.h	/^	NVME_CMD_EFFECTS_CSE_MASK	= 3 << 16,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_CSUPP	src/nvme/types.h	/^	NVME_CMD_EFFECTS_CSUPP		= 1 << 0,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_LBCC	src/nvme/types.h	/^	NVME_CMD_EFFECTS_LBCC		= 1 << 1,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_NCC	src/nvme/types.h	/^	NVME_CMD_EFFECTS_NCC		= 1 << 2,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_NIC	src/nvme/types.h	/^	NVME_CMD_EFFECTS_NIC		= 1 << 3,$/;"	e	enum:nvme_cmd_effects
NVME_CMD_EFFECTS_UUID_SEL	src/nvme/types.h	/^	NVME_CMD_EFFECTS_UUID_SEL	= 1 << 19,$/;"	e	enum:nvme_cmd_effects
NVME_CNSSPECID_NONE	src/nvme/types.h	/^	NVME_CNSSPECID_NONE			= 0,$/;"	e	enum:nvme_constants
NVME_CNTLID_NONE	src/nvme/types.h	/^	NVME_CNTLID_NONE			= 0,$/;"	e	enum:nvme_constants
NVME_CRTO_CRIMT	src/nvme/types.h	495;"	d
NVME_CRTO_CRIMT_MASK	src/nvme/types.h	/^	NVME_CRTO_CRIMT_MASK	= 0xffff0000,$/;"	e	enum:nvme_crto
NVME_CRTO_CRIMT_SHIFT	src/nvme/types.h	/^	NVME_CRTO_CRIMT_SHIFT	= 16,$/;"	e	enum:nvme_crto
NVME_CRTO_CRWMT	src/nvme/types.h	496;"	d
NVME_CRTO_CRWMT_MASK	src/nvme/types.h	/^	NVME_CRTO_CRWMT_MASK	= 0x0000ffff,$/;"	e	enum:nvme_crto
NVME_CRTO_CRWMT_SHIFT	src/nvme/types.h	/^	NVME_CRTO_CRWMT_SHIFT	= 0,$/;"	e	enum:nvme_crto
NVME_CSI_KV	src/nvme/types.h	/^	NVME_CSI_KV			= 1,$/;"	e	enum:nvme_csi
NVME_CSI_NVM	src/nvme/types.h	/^	NVME_CSI_NVM			= 0,$/;"	e	enum:nvme_csi
NVME_CSI_ZNS	src/nvme/types.h	/^	NVME_CSI_ZNS			= 2,$/;"	e	enum:nvme_csi
NVME_CSTS_CFS	src/nvme/types.h	351;"	d
NVME_CSTS_CFS_MASK	src/nvme/types.h	/^	NVME_CSTS_CFS_MASK	= 0x1,$/;"	e	enum:nvme_csts
NVME_CSTS_CFS_SHIFT	src/nvme/types.h	/^	NVME_CSTS_CFS_SHIFT	= 1,$/;"	e	enum:nvme_csts
NVME_CSTS_NSSRO	src/nvme/types.h	353;"	d
NVME_CSTS_NSSRO_MASK	src/nvme/types.h	/^	NVME_CSTS_NSSRO_MASK	= 0x1,$/;"	e	enum:nvme_csts
NVME_CSTS_NSSRO_SHIFT	src/nvme/types.h	/^	NVME_CSTS_NSSRO_SHIFT	= 4,$/;"	e	enum:nvme_csts
NVME_CSTS_PP	src/nvme/types.h	354;"	d
NVME_CSTS_PP_MASK	src/nvme/types.h	/^	NVME_CSTS_PP_MASK	= 0x1,$/;"	e	enum:nvme_csts
NVME_CSTS_PP_SHIFT	src/nvme/types.h	/^	NVME_CSTS_PP_SHIFT	= 5,$/;"	e	enum:nvme_csts
NVME_CSTS_RDY	src/nvme/types.h	350;"	d
NVME_CSTS_RDY_MASK	src/nvme/types.h	/^	NVME_CSTS_RDY_MASK	= 0x1,$/;"	e	enum:nvme_csts
NVME_CSTS_RDY_SHIFT	src/nvme/types.h	/^	NVME_CSTS_RDY_SHIFT	= 0,$/;"	e	enum:nvme_csts
NVME_CSTS_SHN_MASK	src/nvme/types.h	/^	NVME_CSTS_SHN_MASK	= 0x3,$/;"	e	enum:nvme_csts
NVME_CSTS_SHST	src/nvme/types.h	352;"	d
NVME_CSTS_SHST_CMPLT	src/nvme/types.h	/^	NVME_CSTS_SHST_CMPLT	= 2,$/;"	e	enum:nvme_csts
NVME_CSTS_SHST_MASK	src/nvme/types.h	/^	NVME_CSTS_SHST_MASK	= 3,$/;"	e	enum:nvme_csts
NVME_CSTS_SHST_NORMAL	src/nvme/types.h	/^	NVME_CSTS_SHST_NORMAL	= 0,$/;"	e	enum:nvme_csts
NVME_CSTS_SHST_OCCUR	src/nvme/types.h	/^	NVME_CSTS_SHST_OCCUR	= 1,$/;"	e	enum:nvme_csts
NVME_CSTS_SHST_SHIFT	src/nvme/types.h	/^	NVME_CSTS_SHST_SHIFT	= 2,$/;"	e	enum:nvme_csts
NVME_CTRL_ANACAP_CHANGE	src/nvme/types.h	/^	NVME_CTRL_ANACAP_CHANGE			= 1 << 4,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_GRPID_MGMT	src/nvme/types.h	/^	NVME_CTRL_ANACAP_GRPID_MGMT		= 1 << 7,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_GRPID_NO_CHG	src/nvme/types.h	/^	NVME_CTRL_ANACAP_GRPID_NO_CHG		= 1 << 6,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_INACCESSIBLE	src/nvme/types.h	/^	NVME_CTRL_ANACAP_INACCESSIBLE		= 1 << 2,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_NON_OPT	src/nvme/types.h	/^	NVME_CTRL_ANACAP_NON_OPT		= 1 << 1,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_OPT	src/nvme/types.h	/^	NVME_CTRL_ANACAP_OPT			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_ANACAP_PERSISTENT_LOSS	src/nvme/types.h	/^	NVME_CTRL_ANACAP_PERSISTENT_LOSS	= 1 << 3,$/;"	e	enum:nvme_id_ctrl_anacap
NVME_CTRL_APSTA_APST	src/nvme/types.h	/^	NVME_CTRL_APSTA_APST			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_apsta
NVME_CTRL_AVSCC_AVS	src/nvme/types.h	/^	NVME_CTRL_AVSCC_AVS			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_avscc
NVME_CTRL_CMIC_MULTI_ANA_REPORTING	src/nvme/types.h	/^	NVME_CTRL_CMIC_MULTI_ANA_REPORTING	= 1 << 3,$/;"	e	enum:nvme_id_ctrl_cmic
NVME_CTRL_CMIC_MULTI_CTRL	src/nvme/types.h	/^	NVME_CTRL_CMIC_MULTI_CTRL		= 1 << 1,$/;"	e	enum:nvme_id_ctrl_cmic
NVME_CTRL_CMIC_MULTI_PORT	src/nvme/types.h	/^	NVME_CTRL_CMIC_MULTI_PORT		= 1 << 0,$/;"	e	enum:nvme_id_ctrl_cmic
NVME_CTRL_CMIC_MULTI_SRIOV	src/nvme/types.h	/^	NVME_CTRL_CMIC_MULTI_SRIOV		= 1 << 2,$/;"	e	enum:nvme_id_ctrl_cmic
NVME_CTRL_CNTRLTYPE_ADMIN	src/nvme/types.h	/^	NVME_CTRL_CNTRLTYPE_ADMIN		= 3,$/;"	e	enum:nvme_id_ctrl_cntrltype
NVME_CTRL_CNTRLTYPE_DISCOVERY	src/nvme/types.h	/^	NVME_CTRL_CNTRLTYPE_DISCOVERY		= 2,$/;"	e	enum:nvme_id_ctrl_cntrltype
NVME_CTRL_CNTRLTYPE_IO	src/nvme/types.h	/^	NVME_CTRL_CNTRLTYPE_IO			= 1,$/;"	e	enum:nvme_id_ctrl_cntrltype
NVME_CTRL_CQES_MAX	src/nvme/types.h	/^	NVME_CTRL_CQES_MAX			= 0xf << 4,$/;"	e	enum:nvme_id_ctrl_cqes
NVME_CTRL_CQES_MIN	src/nvme/types.h	/^	NVME_CTRL_CQES_MIN			= 0xf << 0,$/;"	e	enum:nvme_id_ctrl_cqes
NVME_CTRL_CTRATT_128_ID	src/nvme/types.h	/^	NVME_CTRL_CTRATT_128_ID			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_DEL_ENDURANCE_GROUPS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_DEL_ENDURANCE_GROUPS	= 1 << 13,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_DEL_NVM_SETS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_DEL_NVM_SETS		= 1 << 14,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_ELBAS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_ELBAS			= 1 << 15,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_ENDURANCE_GROUPS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_ENDURANCE_GROUPS	= 1 << 4,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_FDPS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_FDPS			= 1 << 19,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_FIXED_CAP	src/nvme/types.h	/^	NVME_CTRL_CTRATT_FIXED_CAP		= 1 << 11,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_MDS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_MDS			= 1 << 10,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_NAMESPACE_GRANULARITY	src/nvme/types.h	/^	NVME_CTRL_CTRATT_NAMESPACE_GRANULARITY	= 1 << 7,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_NON_OP_PSP	src/nvme/types.h	/^	NVME_CTRL_CTRATT_NON_OP_PSP		= 1 << 1,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_NVM_SETS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_NVM_SETS		= 1 << 2,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_PREDICTABLE_LAT	src/nvme/types.h	/^	NVME_CTRL_CTRATT_PREDICTABLE_LAT	= 1 << 5,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_READ_RECV_LVLS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_READ_RECV_LVLS		= 1 << 3,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_SQ_ASSOCIATIONS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_SQ_ASSOCIATIONS	= 1 << 8,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_TBKAS	src/nvme/types.h	/^	NVME_CTRL_CTRATT_TBKAS			= 1 << 6,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_UUID_LIST	src/nvme/types.h	/^	NVME_CTRL_CTRATT_UUID_LIST		= 1 << 9,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_CTRATT_VARIABLE_CAP	src/nvme/types.h	/^	NVME_CTRL_CTRATT_VARIABLE_CAP		= 1 << 12,$/;"	e	enum:nvme_id_ctrl_ctratt
NVME_CTRL_DCTYPE_CDC	src/nvme/types.h	/^	NVME_CTRL_DCTYPE_CDC		= 2,$/;"	e	enum:nvme_id_ctrl_dctype
NVME_CTRL_DCTYPE_DDC	src/nvme/types.h	/^	NVME_CTRL_DCTYPE_DDC		= 1,$/;"	e	enum:nvme_id_ctrl_dctype
NVME_CTRL_DCTYPE_NOT_REPORTED	src/nvme/types.h	/^	NVME_CTRL_DCTYPE_NOT_REPORTED	= 0,$/;"	e	enum:nvme_id_ctrl_dctype
NVME_CTRL_DSTO_ONE_DST	src/nvme/types.h	/^	NVME_CTRL_DSTO_ONE_DST			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_dsto
NVME_CTRL_FCATT_DYNAMIC	src/nvme/types.h	/^	NVME_CTRL_FCATT_DYNAMIC			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_fcatt
NVME_CTRL_FNA_CRYPTO_ERASE	src/nvme/types.h	/^	NVME_CTRL_FNA_CRYPTO_ERASE		= 1 << 2,$/;"	e	enum:nvme_id_ctrl_fna
NVME_CTRL_FNA_FMT_ALL_NAMESPACES	src/nvme/types.h	/^	NVME_CTRL_FNA_FMT_ALL_NAMESPACES	= 1 << 0,$/;"	e	enum:nvme_id_ctrl_fna
NVME_CTRL_FNA_NSID_FFFFFFFF	src/nvme/types.h	/^	NVME_CTRL_FNA_NSID_FFFFFFFF		= 1 << 3,$/;"	e	enum:nvme_id_ctrl_fna
NVME_CTRL_FNA_SEC_ALL_NAMESPACES	src/nvme/types.h	/^	NVME_CTRL_FNA_SEC_ALL_NAMESPACES	= 1 << 1,$/;"	e	enum:nvme_id_ctrl_fna
NVME_CTRL_FRMW_1ST_RO	src/nvme/types.h	/^	NVME_CTRL_FRMW_1ST_RO			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_frmw
NVME_CTRL_FRMW_FW_ACT_NO_RESET	src/nvme/types.h	/^	NVME_CTRL_FRMW_FW_ACT_NO_RESET		= 1 << 4,$/;"	e	enum:nvme_id_ctrl_frmw
NVME_CTRL_FRMW_MP_UP_DETECTION	src/nvme/types.h	/^	NVME_CTRL_FRMW_MP_UP_DETECTION		= 1 << 5,$/;"	e	enum:nvme_id_ctrl_frmw
NVME_CTRL_FRMW_NR_SLOTS	src/nvme/types.h	/^	NVME_CTRL_FRMW_NR_SLOTS			= 3 << 1,$/;"	e	enum:nvme_id_ctrl_frmw
NVME_CTRL_FUSES_COMPARE_AND_WRITE	src/nvme/types.h	/^	NVME_CTRL_FUSES_COMPARE_AND_WRITE	= 1 << 0,$/;"	e	enum:nvme_id_ctrl_fuses
NVME_CTRL_HCTMA_HCTM	src/nvme/types.h	/^	NVME_CTRL_HCTMA_HCTM			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_hctm
NVME_CTRL_LPA_CMD_EFFECTS	src/nvme/types.h	/^	NVME_CTRL_LPA_CMD_EFFECTS		= 1 << 1,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_DA4_TELEMETRY	src/nvme/types.h	/^	NVME_CTRL_LPA_DA4_TELEMETRY		= 1 << 6,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_EXTENDED	src/nvme/types.h	/^	NVME_CTRL_LPA_EXTENDED			= 1 << 2,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_LI0_LI5_LI12_LI13	src/nvme/types.h	/^	NVME_CTRL_LPA_LI0_LI5_LI12_LI13		= 1 << 5,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_PERSETENT_EVENT	src/nvme/types.h	/^	NVME_CTRL_LPA_PERSETENT_EVENT		= 1 << 4,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_SMART_PER_NS	src/nvme/types.h	/^	NVME_CTRL_LPA_SMART_PER_NS		= 1 << 0,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_LPA_TELEMETRY	src/nvme/types.h	/^	NVME_CTRL_LPA_TELEMETRY			= 1 << 3,$/;"	e	enum:nvme_id_ctrl_lpa
NVME_CTRL_MEC_PCIEME	src/nvme/types.h	/^	NVME_CTRL_MEC_PCIEME			= 1 << 1,$/;"	e	enum:nvme_id_ctrl_mec
NVME_CTRL_MEC_SMBUSME	src/nvme/types.h	/^	NVME_CTRL_MEC_SMBUSME			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_mec
NVME_CTRL_METADATA_CHIPSET_DRV_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_CHIPSET_DRV_NAME	= 0x08,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_CHIPSET_DRV_VERSION	src/nvme/types.h	/^	NVME_CTRL_METADATA_CHIPSET_DRV_VERSION	= 0x09,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_DISPLAY_DRV_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_DISPLAY_DRV_NAME	= 0x0e,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_DISPLAY_DRV_VERSION	src/nvme/types.h	/^	NVME_CTRL_METADATA_DISPLAY_DRV_VERSION	= 0x0f,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_FIRMWARE_VERSION	src/nvme/types.h	/^	NVME_CTRL_METADATA_FIRMWARE_VERSION	= 0x0c,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_HOST_DET_FAIL_REC	src/nvme/types.h	/^	NVME_CTRL_METADATA_HOST_DET_FAIL_REC	= 0x10,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_OS_CTRL_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_OS_CTRL_NAME		= 0x01,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_OS_DRIVER_FILENAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_OS_DRIVER_FILENAME	= 0x0d,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_OS_DRIVER_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_OS_DRIVER_NAME	= 0x02,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_OS_DRIVER_VER	src/nvme/types.h	/^	NVME_CTRL_METADATA_OS_DRIVER_VER	= 0x03,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_OS_NAME_AND_BUILD	src/nvme/types.h	/^	NVME_CTRL_METADATA_OS_NAME_AND_BUILD	= 0x0a,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_PRE_BOOT_CTRL_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_PRE_BOOT_CTRL_NAME	= 0x04,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_PRE_BOOT_DRIVER_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_PRE_BOOT_DRIVER_NAME	= 0x05,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_PRE_BOOT_DRIVER_VER	src/nvme/types.h	/^	NVME_CTRL_METADATA_PRE_BOOT_DRIVER_VER	= 0x06,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_SYS_PROC_MODEL	src/nvme/types.h	/^	NVME_CTRL_METADATA_SYS_PROC_MODEL	= 0x07,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_METADATA_SYS_PROD_NAME	src/nvme/types.h	/^	NVME_CTRL_METADATA_SYS_PROD_NAME	= 0x0b,$/;"	e	enum:nvme_ctrl_metadata_type
NVME_CTRL_NVMSR_NVMEE	src/nvme/types.h	/^	NVME_CTRL_NVMSR_NVMEE			= 1 << 1,$/;"	e	enum:nvme_id_ctrl_nvmsr
NVME_CTRL_NVMSR_NVMESD	src/nvme/types.h	/^	NVME_CTRL_NVMSR_NVMESD			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_nvmsr
NVME_CTRL_NVSCC_FMT	src/nvme/types.h	/^	NVME_CTRL_NVSCC_FMT			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_nvscc
NVME_CTRL_NWPC_WRITE_PROTECT	src/nvme/types.h	/^	NVME_CTRL_NWPC_WRITE_PROTECT		= 1 << 0,$/;"	e	enum:nvme_id_ctrl_nwpc
NVME_CTRL_NWPC_WRITE_PROTECT_PERMANENT	src/nvme/types.h	/^	NVME_CTRL_NWPC_WRITE_PROTECT_PERMANENT	= 1 << 2,$/;"	e	enum:nvme_id_ctrl_nwpc
NVME_CTRL_NWPC_WRITE_PROTECT_POWER_CYCLE	src/nvme/types.h	/^	NVME_CTRL_NWPC_WRITE_PROTECT_POWER_CYCLE= 1 << 1,$/;"	e	enum:nvme_id_ctrl_nwpc
NVME_CTRL_OACS_CMD_FEAT_LD	src/nvme/types.h	/^	NVME_CTRL_OACS_CMD_FEAT_LD		= 1 << 10,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_DBBUF_CFG	src/nvme/types.h	/^	NVME_CTRL_OACS_DBBUF_CFG		= 1 << 8,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_DIRECTIVES	src/nvme/types.h	/^	NVME_CTRL_OACS_DIRECTIVES		= 1 << 5,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_FORMAT	src/nvme/types.h	/^	NVME_CTRL_OACS_FORMAT			= 1 << 1,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_FW	src/nvme/types.h	/^	NVME_CTRL_OACS_FW			= 1 << 2,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_LBA_STATUS	src/nvme/types.h	/^	NVME_CTRL_OACS_LBA_STATUS		= 1 << 9,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_NS_MGMT	src/nvme/types.h	/^	NVME_CTRL_OACS_NS_MGMT			= 1 << 3,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_NVME_MI	src/nvme/types.h	/^	NVME_CTRL_OACS_NVME_MI			= 1 << 6,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_SECURITY	src/nvme/types.h	/^	NVME_CTRL_OACS_SECURITY			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_SELF_TEST	src/nvme/types.h	/^	NVME_CTRL_OACS_SELF_TEST		= 1 << 4,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OACS_VIRT_MGMT	src/nvme/types.h	/^	NVME_CTRL_OACS_VIRT_MGMT		= 1 << 7,$/;"	e	enum:nvme_id_ctrl_oacs
NVME_CTRL_OAES_ANA	src/nvme/types.h	/^	NVME_CTRL_OAES_ANA			= 1 << 11,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_DL	src/nvme/types.h	/^	NVME_CTRL_OAES_DL			= 1 << 31,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_EGE	src/nvme/types.h	/^	NVME_CTRL_OAES_EGE			= 1 << 14,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_FA	src/nvme/types.h	/^	NVME_CTRL_OAES_FA			= 1 << 9,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_LBAS	src/nvme/types.h	/^	NVME_CTRL_OAES_LBAS			= 1 << 13,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_NA	src/nvme/types.h	/^	NVME_CTRL_OAES_NA			= 1 << 8,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_NS	src/nvme/types.h	/^	NVME_CTRL_OAES_NS			= 1 << 15,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_PLEA	src/nvme/types.h	/^	NVME_CTRL_OAES_PLEA			= 1 << 12,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OAES_ZD	src/nvme/types.h	/^	NVME_CTRL_OAES_ZD			= 1 << 27,$/;"	e	enum:nvme_id_ctrl_oaes
NVME_CTRL_OFCS_DISCONNECT	src/nvme/types.h	/^	NVME_CTRL_OFCS_DISCONNECT		= 1 << 0,$/;"	e	enum:nvme_id_ctrl_ofcs
NVME_CTRL_ONCS_COMPARE	src/nvme/types.h	/^	NVME_CTRL_ONCS_COMPARE			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_COPY	src/nvme/types.h	/^	NVME_CTRL_ONCS_COPY			= 1 << 8,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_DSM	src/nvme/types.h	/^	NVME_CTRL_ONCS_DSM			= 1 << 2,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_RESERVATIONS	src/nvme/types.h	/^	NVME_CTRL_ONCS_RESERVATIONS		= 1 << 5,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_SAVE_FEATURES	src/nvme/types.h	/^	NVME_CTRL_ONCS_SAVE_FEATURES		= 1 << 4,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_TIMESTAMP	src/nvme/types.h	/^	NVME_CTRL_ONCS_TIMESTAMP		= 1 << 6,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_VERIFY	src/nvme/types.h	/^	NVME_CTRL_ONCS_VERIFY			= 1 << 7,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_WRITE_UNCORRECTABLE	src/nvme/types.h	/^	NVME_CTRL_ONCS_WRITE_UNCORRECTABLE	= 1 << 1,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_ONCS_WRITE_ZEROES	src/nvme/types.h	/^	NVME_CTRL_ONCS_WRITE_ZEROES		= 1 << 3,$/;"	e	enum:nvme_id_ctrl_oncs
NVME_CTRL_RPMBS_ACCESS_SIZE	src/nvme/types.h	/^	NVME_CTRL_RPMBS_ACCESS_SIZE		= 0xff << 24,$/;"	e	enum:nvme_id_ctrl_rpmbs
NVME_CTRL_RPMBS_AUTH_METHOD	src/nvme/types.h	/^	NVME_CTRL_RPMBS_AUTH_METHOD		= 7 << 3,$/;"	e	enum:nvme_id_ctrl_rpmbs
NVME_CTRL_RPMBS_NR_UNITS	src/nvme/types.h	/^	NVME_CTRL_RPMBS_NR_UNITS		= 7 << 0,$/;"	e	enum:nvme_id_ctrl_rpmbs
NVME_CTRL_RPMBS_TOTAL_SIZE	src/nvme/types.h	/^	NVME_CTRL_RPMBS_TOTAL_SIZE		= 0xff << 16,$/;"	e	enum:nvme_id_ctrl_rpmbs
NVME_CTRL_SANICAP_BES	src/nvme/types.h	/^	NVME_CTRL_SANICAP_BES			= 1 << 1,$/;"	e	enum:nvme_id_ctrl_sanicap
NVME_CTRL_SANICAP_CES	src/nvme/types.h	/^	NVME_CTRL_SANICAP_CES			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_sanicap
NVME_CTRL_SANICAP_NDI	src/nvme/types.h	/^	NVME_CTRL_SANICAP_NDI			= 1 << 29,$/;"	e	enum:nvme_id_ctrl_sanicap
NVME_CTRL_SANICAP_NODMMAS	src/nvme/types.h	/^	NVME_CTRL_SANICAP_NODMMAS		= 3 << 30,$/;"	e	enum:nvme_id_ctrl_sanicap
NVME_CTRL_SANICAP_OWS	src/nvme/types.h	/^	NVME_CTRL_SANICAP_OWS			= 1 << 2,$/;"	e	enum:nvme_id_ctrl_sanicap
NVME_CTRL_SGLS_BIT_BUCKET	src/nvme/types.h	/^	NVME_CTRL_SGLS_BIT_BUCKET		= 1 << 16,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_KEYED	src/nvme/types.h	/^	NVME_CTRL_SGLS_KEYED			= 1 << 2,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_MPTR_BYTE_ALIGNED	src/nvme/types.h	/^	NVME_CTRL_SGLS_MPTR_BYTE_ALIGNED	= 1 << 17,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_MPTR_SGL	src/nvme/types.h	/^	NVME_CTRL_SGLS_MPTR_SGL			= 1 << 19,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_OFFSET	src/nvme/types.h	/^	NVME_CTRL_SGLS_OFFSET			= 1 << 20,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_OVERSIZE	src/nvme/types.h	/^	NVME_CTRL_SGLS_OVERSIZE			= 1 << 18,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_SUPPORTED	src/nvme/types.h	/^	NVME_CTRL_SGLS_SUPPORTED		= 3 << 0,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SGLS_TPORT	src/nvme/types.h	/^	NVME_CTRL_SGLS_TPORT			= 1 << 21,$/;"	e	enum:nvme_id_ctrl_sgls
NVME_CTRL_SQES_MAX	src/nvme/types.h	/^	NVME_CTRL_SQES_MAX			= 0xf << 4,$/;"	e	enum:nvme_id_ctrl_sqes
NVME_CTRL_SQES_MIN	src/nvme/types.h	/^	NVME_CTRL_SQES_MIN			= 0xf << 0,$/;"	e	enum:nvme_id_ctrl_sqes
NVME_CTRL_VWCI_VWCR	src/nvme/types.h	/^	NVME_CTRL_VWCI_VWCR			= 0x7f << 0,$/;"	e	enum:nvme_id_ctrl_vwci
NVME_CTRL_VWCI_VWCRV	src/nvme/types.h	/^	NVME_CTRL_VWCI_VWCRV			= 1 << 7,$/;"	e	enum:nvme_id_ctrl_vwci
NVME_CTRL_VWC_FLUSH	src/nvme/types.h	/^	NVME_CTRL_VWC_FLUSH			= 3 << 1,$/;"	e	enum:nvme_id_ctrl_vwc
NVME_CTRL_VWC_PRESENT	src/nvme/types.h	/^	NVME_CTRL_VWC_PRESENT			= 1 << 0,$/;"	e	enum:nvme_id_ctrl_vwc
NVME_DATA_TFR_BIDIRECTIONAL	src/nvme/types.h	/^	NVME_DATA_TFR_BIDIRECTIONAL	= 0x3,$/;"	e	enum:nvme_data_tfr
NVME_DATA_TFR_CTRL_TO_HOST	src/nvme/types.h	/^	NVME_DATA_TFR_CTRL_TO_HOST	= 0x2,$/;"	e	enum:nvme_data_tfr
NVME_DATA_TFR_HOST_TO_CTRL	src/nvme/types.h	/^	NVME_DATA_TFR_HOST_TO_CTRL	= 0x1,$/;"	e	enum:nvme_data_tfr
NVME_DATA_TFR_NO_DATA_TFR	src/nvme/types.h	/^	NVME_DATA_TFR_NO_DATA_TFR	= 0x0,$/;"	e	enum:nvme_data_tfr
NVME_DEFAULT_IOCTL_TIMEOUT	src/nvme/ioctl.h	35;"	d
NVME_DEVICE_SELF_TEST_CDW10_STC_MASK	src/nvme/ioctl.c	/^	NVME_DEVICE_SELF_TEST_CDW10_STC_MASK			= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DEVICE_SELF_TEST_CDW10_STC_SHIFT	src/nvme/ioctl.c	/^	NVME_DEVICE_SELF_TEST_CDW10_STC_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIM_TAS_MASK	src/nvme/ioctl.c	/^	NVME_DIM_TAS_MASK					= 0xF,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIM_TAS_SHIFT	src/nvme/ioctl.c	/^	NVME_DIM_TAS_SHIFT					= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DOPER_MASK	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DOPER_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DOPER_SHIFT	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DOPER_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DPSEC_MASK	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DPSEC_MASK				= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DPSEC_SHIFT	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DPSEC_SHIFT			= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DTYPE_MASK	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DTYPE_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_CDW11_DTYPE_SHIFT	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_CDW11_DTYPE_SHIFT			= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_DTYPE_IDENTIFY	src/nvme/types.h	/^	NVME_DIRECTIVE_DTYPE_IDENTIFY				= 0,$/;"	e	enum:nvme_directive_dtype
NVME_DIRECTIVE_DTYPE_STREAMS	src/nvme/types.h	/^	NVME_DIRECTIVE_DTYPE_STREAMS				= 1,$/;"	e	enum:nvme_directive_dtype
NVME_DIRECTIVE_RECEIVE_IDENTIFY_DOPER_PARAM	src/nvme/types.h	/^	NVME_DIRECTIVE_RECEIVE_IDENTIFY_DOPER_PARAM		= 0x01,$/;"	e	enum:nvme_directive_receive_doper
NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_PARAM	src/nvme/types.h	/^	NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_PARAM		= 0x01,$/;"	e	enum:nvme_directive_receive_doper
NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_RESOURCE	src/nvme/types.h	/^	NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_RESOURCE		= 0x03,$/;"	e	enum:nvme_directive_receive_doper
NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_STATUS	src/nvme/types.h	/^	NVME_DIRECTIVE_RECEIVE_STREAMS_DOPER_STATUS		= 0x02,$/;"	e	enum:nvme_directive_receive_doper
NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_DTYPE_MASK	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_DTYPE_MASK		= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_DTYPE_SHIFT	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_DTYPE_SHIFT		= 1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_ENDIR_MASK	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_ENDIR_MASK		= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_ENDIR_SHIFT	src/nvme/ioctl.c	/^	NVME_DIRECTIVE_SEND_IDENTIFY_CDW12_ENDIR_SHIFT		= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_DIRECTIVE_SEND_IDENTIFY_DOPER_ENDIR	src/nvme/types.h	/^	NVME_DIRECTIVE_SEND_IDENTIFY_DOPER_ENDIR		= 0x01,$/;"	e	enum:nvme_directive_send_doper
NVME_DIRECTIVE_SEND_IDENTIFY_ENDIR_DISABLE	src/nvme/types.h	/^	NVME_DIRECTIVE_SEND_IDENTIFY_ENDIR_DISABLE		= 0,$/;"	e	enum:nvme_directive_send_identify_endir
NVME_DIRECTIVE_SEND_IDENTIFY_ENDIR_ENABLE	src/nvme/types.h	/^	NVME_DIRECTIVE_SEND_IDENTIFY_ENDIR_ENABLE		= 1,$/;"	e	enum:nvme_directive_send_identify_endir
NVME_DIRECTIVE_SEND_STREAMS_DOPER_RELEASE_IDENTIFIER	src/nvme/types.h	/^	NVME_DIRECTIVE_SEND_STREAMS_DOPER_RELEASE_IDENTIFIER	= 0x01,$/;"	e	enum:nvme_directive_send_doper
NVME_DIRECTIVE_SEND_STREAMS_DOPER_RELEASE_RESOURCE	src/nvme/types.h	/^	NVME_DIRECTIVE_SEND_STREAMS_DOPER_RELEASE_RESOURCE	= 0x02,$/;"	e	enum:nvme_directive_send_doper
NVME_DISC_IP_PORT	src/nvme/types.h	4923;"	d
NVME_DISC_SUBSYS_NAME	src/nvme/types.h	4921;"	d
NVME_DSMGMT_AD	src/nvme/types.h	/^	NVME_DSMGMT_AD			= 1 << 2,$/;"	e	enum:nvme_dsm_attributes
NVME_DSMGMT_IDR	src/nvme/types.h	/^	NVME_DSMGMT_IDR			= 1 << 0,$/;"	e	enum:nvme_dsm_attributes
NVME_DSMGMT_IDW	src/nvme/types.h	/^	NVME_DSMGMT_IDW			= 1 << 1,$/;"	e	enum:nvme_dsm_attributes
NVME_DSM_MAX_RANGES	src/nvme/types.h	/^	NVME_DSM_MAX_RANGES			= 256,$/;"	e	enum:nvme_constants
NVME_DST_STC_ABORT	src/nvme/types.h	/^	NVME_DST_STC_ABORT					= 0xf,$/;"	e	enum:nvme_dst_stc
NVME_DST_STC_LONG	src/nvme/types.h	/^	NVME_DST_STC_LONG					= 0x2,$/;"	e	enum:nvme_dst_stc
NVME_DST_STC_SHORT	src/nvme/types.h	/^	NVME_DST_STC_SHORT					= 0x1,$/;"	e	enum:nvme_dst_stc
NVME_DST_STC_VS	src/nvme/types.h	/^	NVME_DST_STC_VS						= 0xe,$/;"	e	enum:nvme_dst_stc
NVME_EG_CRITICAL_WARNING_DEGRADED	src/nvme/types.h	/^	NVME_EG_CRITICAL_WARNING_DEGRADED	= 1 << 2,$/;"	e	enum:nvme_eg_critical_warning_flags
NVME_EG_CRITICAL_WARNING_READ_ONLY	src/nvme/types.h	/^	NVME_EG_CRITICAL_WARNING_READ_ONLY	= 1 << 3,$/;"	e	enum:nvme_eg_critical_warning_flags
NVME_EG_CRITICAL_WARNING_SPARE	src/nvme/types.h	/^	NVME_EG_CRITICAL_WARNING_SPARE		= 1 << 0,$/;"	e	enum:nvme_eg_critical_warning_flags
NVME_ENABLE_ACRE	src/nvme/types.h	/^	NVME_ENABLE_ACRE	= 1 << 0,$/;"	e	enum:nvme_host_behavior_support
NVME_ERR_PEL_BIT_MASK	src/nvme/types.h	/^	NVME_ERR_PEL_BIT_MASK	= 0x70,$/;"	e	enum:nvme_err_pel
NVME_ERR_PEL_BYTE_MASK	src/nvme/types.h	/^	NVME_ERR_PEL_BYTE_MASK	= 0xf,$/;"	e	enum:nvme_err_pel
NVME_FDP_CONFIG_FDPA_FDPVWC_MASK	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_FDPVWC_MASK = 0x1,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_CONFIG_FDPA_FDPVWC_SHIFT	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_FDPVWC_SHIFT = 4,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_CONFIG_FDPA_RGIF_MASK	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_RGIF_MASK = 0xf,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_CONFIG_FDPA_RGIF_SHIFT	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_RGIF_SHIFT = 0,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_CONFIG_FDPA_VALID_MASK	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_VALID_MASK = 0x1,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_CONFIG_FDPA_VALID_SHIFT	src/nvme/types.h	/^	NVME_FDP_CONFIG_FDPA_VALID_SHIFT = 7,$/;"	e	enum:nvme_fdp_config_fdpa
NVME_FDP_EVENT_F_LV	src/nvme/types.h	/^	NVME_FDP_EVENT_F_LV	= 1 << 2,$/;"	e	enum:nvme_fdp_event_flags
NVME_FDP_EVENT_F_NSIDV	src/nvme/types.h	/^	NVME_FDP_EVENT_F_NSIDV	= 1 << 1,$/;"	e	enum:nvme_fdp_event_flags
NVME_FDP_EVENT_F_PIV	src/nvme/types.h	/^	NVME_FDP_EVENT_F_PIV	= 1 << 0,$/;"	e	enum:nvme_fdp_event_flags
NVME_FDP_EVENT_MODIFY	src/nvme/types.h	/^	NVME_FDP_EVENT_MODIFY	= 0x81,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_EVENT_PID	src/nvme/types.h	/^	NVME_FDP_EVENT_PID	= 0x3,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_EVENT_REALLOC	src/nvme/types.h	/^	NVME_FDP_EVENT_REALLOC	= 0x80,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_EVENT_REALLOC_F_LBAV	src/nvme/types.h	/^	NVME_FDP_EVENT_REALLOC_F_LBAV = 1 << 0,$/;"	e	enum:nvme_fdp_event_realloc_flags
NVME_FDP_EVENT_RESET	src/nvme/types.h	/^	NVME_FDP_EVENT_RESET	= 0x2,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_EVENT_RUNFW	src/nvme/types.h	/^	NVME_FDP_EVENT_RUNFW	= 0x0,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_EVENT_RUTLE	src/nvme/types.h	/^	NVME_FDP_EVENT_RUTLE	= 0x1,$/;"	e	enum:nvme_fdp_event_type
NVME_FDP_RUHA_CTRL_MASK	src/nvme/types.h	/^	NVME_FDP_RUHA_CTRL_MASK		= 0x1,$/;"	e	enum:nvme_fdp_ruha
NVME_FDP_RUHA_CTRL_SHIFT	src/nvme/types.h	/^	NVME_FDP_RUHA_CTRL_SHIFT	= 1,$/;"	e	enum:nvme_fdp_ruha
NVME_FDP_RUHA_HOST_MASK	src/nvme/types.h	/^	NVME_FDP_RUHA_HOST_MASK		= 0x1,$/;"	e	enum:nvme_fdp_ruha
NVME_FDP_RUHA_HOST_SHIFT	src/nvme/types.h	/^	NVME_FDP_RUHA_HOST_SHIFT	= 0,$/;"	e	enum:nvme_fdp_ruha
NVME_FDP_RUHT_INITIALLY_ISOLATED	src/nvme/types.h	/^	NVME_FDP_RUHT_INITIALLY_ISOLATED = 1,$/;"	e	enum:nvme_fdp_ruh_type
NVME_FDP_RUHT_PERSISTENTLY_ISOLATED	src/nvme/types.h	/^	NVME_FDP_RUHT_PERSISTENTLY_ISOLATED = 2,$/;"	e	enum:nvme_fdp_ruh_type
NVME_FDP_SUPP_EVENT_ENABLED_MASK	src/nvme/types.h	/^	NVME_FDP_SUPP_EVENT_ENABLED_MASK  = 0x1,$/;"	e	enum:nvme_fdp_supported_event_attributes
NVME_FDP_SUPP_EVENT_ENABLED_SHIFT	src/nvme/types.h	/^	NVME_FDP_SUPP_EVENT_ENABLED_SHIFT = 0,$/;"	e	enum:nvme_fdp_supported_event_attributes
NVME_FEATURES_APST_APSTE_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_APST_APSTE_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_APST_APSTE_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_APST_APSTE_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_BURST_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_BURST_MASK			= 0x7,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_BURST_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_BURST_SHIFT			= 0,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_HPW_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_HPW_MASK			= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_HPW_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_HPW_SHIFT			= 24,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_LPW_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_LPW_MASK			= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_LPW_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_LPW_SHIFT			= 8,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_MPW_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_MPW_MASK			= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_ARBITRATION_MPW_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ARBITRATION_MPW_SHIFT			= 16,$/;"	e	enum:features	file:
NVME_FEATURES_CDW10_FID_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_CDW10_FID_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FEATURES_CDW10_FID_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_CDW10_FID_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FEATURES_CDW14_UUID_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_CDW14_UUID_MASK				= 0x7f,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FEATURES_CDW14_UUID_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_CDW14_UUID_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FEATURES_ERROR_RECOVERY_DULBE_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ERROR_RECOVERY_DULBE_MASK			= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_ERROR_RECOVERY_DULBE_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ERROR_RECOVERY_DULBE_SHIFT		= 16,$/;"	e	enum:features	file:
NVME_FEATURES_ERROR_RECOVERY_TLER_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_ERROR_RECOVERY_TLER_MASK			= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_ERROR_RECOVERY_TLER_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_ERROR_RECOVERY_TLER_SHIFT			= 0,$/;"	e	enum:features	file:
NVME_FEATURES_HCTM_TMT1_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_HCTM_TMT1_MASK				= 0xffff,$/;"	e	enum:features	file:
NVME_FEATURES_HCTM_TMT1_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_HCTM_TMT1_SHIFT				= 16,$/;"	e	enum:features	file:
NVME_FEATURES_HCTM_TMT2_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_HCTM_TMT2_MASK				= 0xffff,$/;"	e	enum:features	file:
NVME_FEATURES_HCTM_TMT2_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_HCTM_TMT2_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_IOCSP_IOCSCI_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_IOCSP_IOCSCI_MASK				= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_IOCSP_IOCSCI_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_IOCSP_IOCSCI_SHIFT			= 0,$/;"	e	enum:features	file:
NVME_FEATURES_IRQC_THR_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_IRQC_THR_MASK				= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_IRQC_THR_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_IRQC_THR_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_IRQC_TIME_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_IRQC_TIME_MASK				= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_IRQC_TIME_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_IRQC_TIME_SHIFT				= 8,$/;"	e	enum:features	file:
NVME_FEATURES_IVC_CD_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_IVC_CD_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_IVC_CD_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_IVC_CD_SHIFT				= 16,$/;"	e	enum:features	file:
NVME_FEATURES_IVC_IV_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_IVC_IV_MASK				= 0xffff,$/;"	e	enum:features	file:
NVME_FEATURES_IVC_IV_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_IVC_IV_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_LBAS_LSIPI_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_LBAS_LSIPI_MASK				= 0xffff,$/;"	e	enum:features	file:
NVME_FEATURES_LBAS_LSIPI_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_LBAS_LSIPI_SHIFT				= 16,$/;"	e	enum:features	file:
NVME_FEATURES_LBAS_LSIRI_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_LBAS_LSIRI_MASK				= 0xffff,$/;"	e	enum:features	file:
NVME_FEATURES_LBAS_LSIRI_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_LBAS_LSIRI_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_NOPS_NOPPME_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_NOPS_NOPPME_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_NOPS_NOPPME_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_NOPS_NOPPME_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_PLM_PLE_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_PLM_PLE_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_PLM_PLE_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_PLM_PLE_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_PLM_WINDOW_SELECT_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_PLM_WINDOW_SELECT_MASK			= 0xf,$/;"	e	enum:features	file:
NVME_FEATURES_PLM_WINDOW_SELECT_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_PLM_WINDOW_SELECT_SHIFT			= 0,$/;"	e	enum:features	file:
NVME_FEATURES_PWRMGMT_PS_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_PWRMGMT_PS_MASK				= 0x1f,$/;"	e	enum:features	file:
NVME_FEATURES_PWRMGMT_PS_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_PWRMGMT_PS_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_PWRMGMT_WH_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_PWRMGMT_WH_MASK				= 0x7,$/;"	e	enum:features	file:
NVME_FEATURES_PWRMGMT_WH_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_PWRMGMT_WH_SHIFT				= 5,$/;"	e	enum:features	file:
NVME_FEATURES_THSEL_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_THSEL_MASK				= 0x3,$/;"	e	enum:features	file:
NVME_FEATURES_THSEL_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_THSEL_SHIFT				= 20,$/;"	e	enum:features	file:
NVME_FEATURES_TMPSEL_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_TMPSEL_MASK				= 0xf,$/;"	e	enum:features	file:
NVME_FEATURES_TMPSEL_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_TMPSEL_SHIFT				= 16,$/;"	e	enum:features	file:
NVME_FEATURES_TMPTH_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_TMPTH_MASK				= 0xff,$/;"	e	enum:features	file:
NVME_FEATURES_TMPTH_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_TMPTH_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_VWC_WCE_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_VWC_WCE_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_VWC_WCE_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_VWC_WCE_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURES_WAN_DN_MASK	src/nvme/ioctl.c	/^	NVME_FEATURES_WAN_DN_MASK				= 0x1,$/;"	e	enum:features	file:
NVME_FEATURES_WAN_DN_SHIFT	src/nvme/ioctl.c	/^	NVME_FEATURES_WAN_DN_SHIFT				= 0,$/;"	e	enum:features	file:
NVME_FEATURE_AENCFG_NOTICE_ANA_CHANGE	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_ANA_CHANGE			= 1 << 11,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_DISCOVERY_CHANGE	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_DISCOVERY_CHANGE		= 1 << 31,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_EG_EVENT	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_EG_EVENT			= 1 << 14,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_FIRMWARE_ACTIVATION	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_FIRMWARE_ACTIVATION		= 1 << 9,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_LBA_STATUS	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_LBA_STATUS			= 1 << 13,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_NAMESPACE_ATTRIBUTES	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_NAMESPACE_ATTRIBUTES		= 1 << 8,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_PL_EVENT	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_PL_EVENT			= 1 << 12,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_NOTICE_TELEMETRY_LOG	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_NOTICE_TELEMETRY_LOG		= 1 << 10,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_DEGRADED	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_DEGRADED			= 1 << 2,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_READ_ONLY	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_READ_ONLY		= 1 << 3,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_READ_ONLY_PMR	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_READ_ONLY_PMR		= 1 << 5,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_SPARE	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_SPARE			= 1 << 0,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_TEMPERATURE	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_TEMPERATURE		= 1 << 1,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_AENCFG_SMART_CRIT_VOLATILE_BACKUP	src/nvme/types.h	/^	NVME_FEATURE_AENCFG_SMART_CRIT_VOLATILE_BACKUP		= 1 << 4,$/;"	e	enum:nvme_features_async_event_config_flags
NVME_FEATURE_PLM_DTWIN	src/nvme/types.h	/^	NVME_FEATURE_PLM_DTWIN					= 1,$/;"	e	enum:nvme_feat_plm_window_select
NVME_FEATURE_PLM_NDWIN	src/nvme/types.h	/^	NVME_FEATURE_PLM_NDWIN					= 2,$/;"	e	enum:nvme_feat_plm_window_select
NVME_FEATURE_TEMPTHRESH_THSEL_OVER	src/nvme/types.h	/^	NVME_FEATURE_TEMPTHRESH_THSEL_OVER			= 0,$/;"	e	enum:nvme_feat_tmpthresh_thsel
NVME_FEATURE_TEMPTHRESH_THSEL_UNDER	src/nvme/types.h	/^	NVME_FEATURE_TEMPTHRESH_THSEL_UNDER			= 1,$/;"	e	enum:nvme_feat_tmpthresh_thsel
NVME_FEAT_AE_ANA	src/nvme/util.h	298;"	d
NVME_FEAT_AE_ANA_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_ANA_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_ANA_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_ANA_SHIFT		= 11,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_EGA	src/nvme/util.h	301;"	d
NVME_FEAT_AE_EGA_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_EGA_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_EGA_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_EGA_SHIFT		= 14,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_FW	src/nvme/util.h	296;"	d
NVME_FEAT_AE_FW_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_FW_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_FW_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_FW_SHIFT		= 9,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_LBAS	src/nvme/util.h	300;"	d
NVME_FEAT_AE_LBAS_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_LBAS_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_LBAS_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_LBAS_SHIFT		= 13,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_NAN	src/nvme/util.h	295;"	d
NVME_FEAT_AE_NAN_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_NAN_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_NAN_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_NAN_SHIFT		= 8,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_PLA	src/nvme/util.h	299;"	d
NVME_FEAT_AE_PLA_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_PLA_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_PLA_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_PLA_SHIFT		= 12,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_SMART	src/nvme/util.h	294;"	d
NVME_FEAT_AE_SMART_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_SMART_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_SMART_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_SMART_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_TELEM	src/nvme/util.h	297;"	d
NVME_FEAT_AE_TELEM_MASK	src/nvme/types.h	/^	NVME_FEAT_AE_TELEM_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_AE_TELEM_SHIFT	src/nvme/types.h	/^	NVME_FEAT_AE_TELEM_SHIFT	= 10,$/;"	e	enum:nvme_feat
NVME_FEAT_APST_APSTE	src/nvme/util.h	317;"	d
NVME_FEAT_APST_APSTE_MASK	src/nvme/types.h	/^	NVME_FEAT_APST_APSTE_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_APST_APSTE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_APST_APSTE_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_BURST_MASK	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_BURST_MASK	= 0x7,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_BURST_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_BURST_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_HPW_MASK	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_HPW_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_HPW_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_HPW_SHIFT		= 24,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_LPW_MASK	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_LPW_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_LPW_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_LPW_SHIFT		= 8,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_MPW_MASK	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_MPW_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_ARBITRATION_MPW_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ARBITRATION_MPW_SHIFT		= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_ARB_BURST	src/nvme/util.h	193;"	d
NVME_FEAT_ARB_HPW	src/nvme/util.h	196;"	d
NVME_FEAT_ARB_LPW	src/nvme/util.h	194;"	d
NVME_FEAT_ARB_MPW	src/nvme/util.h	195;"	d
NVME_FEAT_EG_EGCW	src/nvme/util.h	394;"	d
NVME_FEAT_EG_EGCW_MASK	src/nvme/types.h	/^	NVME_FEAT_EG_EGCW_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_EG_EGCW_SHIFT	src/nvme/types.h	/^	NVME_FEAT_EG_EGCW_SHIFT		= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_EG_ENDGID	src/nvme/util.h	393;"	d
NVME_FEAT_EG_ENDGID_MASK	src/nvme/types.h	/^	NVME_FEAT_EG_ENDGID_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_EG_ENDGID_SHIFT	src/nvme/types.h	/^	NVME_FEAT_EG_ENDGID_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_ERROR_RECOVERY_DULBE_MASK	src/nvme/types.h	/^	NVME_FEAT_ERROR_RECOVERY_DULBE_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_ERROR_RECOVERY_DULBE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ERROR_RECOVERY_DULBE_SHIFT	= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_ERROR_RECOVERY_TLER_MASK	src/nvme/types.h	/^	NVME_FEAT_ERROR_RECOVERY_TLER_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_ERROR_RECOVERY_TLER_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ERROR_RECOVERY_TLER_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_ER_DULBE	src/nvme/util.h	238;"	d
NVME_FEAT_ER_TLER	src/nvme/util.h	237;"	d
NVME_FEAT_FDP_ENABLED_MASK	src/nvme/types.h	/^	NVME_FEAT_FDP_ENABLED_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_FDP_ENABLED_SHIFT	src/nvme/types.h	/^	NVME_FEAT_FDP_ENABLED_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_FDP_EVENTS_ENABLE_MASK	src/nvme/types.h	/^	NVME_FEAT_FDP_EVENTS_ENABLE_MASK  = 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_FDP_EVENTS_ENABLE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_FDP_EVENTS_ENABLE_SHIFT = 0,$/;"	e	enum:nvme_feat
NVME_FEAT_FDP_INDEX_MASK	src/nvme/types.h	/^	NVME_FEAT_FDP_INDEX_MASK	= 0xf,$/;"	e	enum:nvme_feat
NVME_FEAT_FDP_INDEX_SHIFT	src/nvme/types.h	/^	NVME_FEAT_FDP_INDEX_SHIFT	= 8,$/;"	e	enum:nvme_feat
NVME_FEAT_FID_ARBITRATION	src/nvme/types.h	/^	NVME_FEAT_FID_ARBITRATION				= 0x01,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_ASYNC_EVENT	src/nvme/types.h	/^	NVME_FEAT_FID_ASYNC_EVENT				= 0x0b,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_AUTO_PST	src/nvme/types.h	/^	NVME_FEAT_FID_AUTO_PST					= 0x0c,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_CTRL_METADATA	src/nvme/types.h	/^	NVME_FEAT_FID_CTRL_METADATA				= 0x7e,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_ENDURANCE_EVT_CFG	src/nvme/types.h	/^	NVME_FEAT_FID_ENDURANCE_EVT_CFG				= 0x18,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_ENH_CTRL_METADATA	src/nvme/types.h	/^	NVME_FEAT_FID_ENH_CTRL_METADATA				= 0x7d,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_ERR_RECOVERY	src/nvme/types.h	/^	NVME_FEAT_FID_ERR_RECOVERY				= 0x05,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_FDP	src/nvme/types.h	/^	NVME_FEAT_FID_FDP					= 0x1d,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_FDP_EVENTS	src/nvme/types.h	/^	NVME_FEAT_FID_FDP_EVENTS				= 0x1e,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_HCTM	src/nvme/types.h	/^	NVME_FEAT_FID_HCTM					= 0x10,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_HOST_BEHAVIOR	src/nvme/types.h	/^	NVME_FEAT_FID_HOST_BEHAVIOR				= 0x16,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_HOST_ID	src/nvme/types.h	/^	NVME_FEAT_FID_HOST_ID					= 0x81,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_HOST_MEM_BUF	src/nvme/types.h	/^	NVME_FEAT_FID_HOST_MEM_BUF				= 0x0d,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_IOCS_PROFILE	src/nvme/types.h	/^	NVME_FEAT_FID_IOCS_PROFILE				= 0x19, \/* XXX: Placeholder until assigned *\/$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_IRQ_COALESCE	src/nvme/types.h	/^	NVME_FEAT_FID_IRQ_COALESCE				= 0x08,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_IRQ_CONFIG	src/nvme/types.h	/^	NVME_FEAT_FID_IRQ_CONFIG				= 0x09,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_KATO	src/nvme/types.h	/^	NVME_FEAT_FID_KATO					= 0x0f,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_LBA_RANGE	src/nvme/types.h	/^	NVME_FEAT_FID_LBA_RANGE					= 0x03,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_LBA_STS_INTERVAL	src/nvme/types.h	/^	NVME_FEAT_FID_LBA_STS_INTERVAL				= 0x15,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_NOPSC	src/nvme/types.h	/^	NVME_FEAT_FID_NOPSC					= 0x11,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_NS_METADATA	src/nvme/types.h	/^	NVME_FEAT_FID_NS_METADATA				= 0x7f,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_NUM_QUEUES	src/nvme/types.h	/^	NVME_FEAT_FID_NUM_QUEUES				= 0x07,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_PLM_CONFIG	src/nvme/types.h	/^	NVME_FEAT_FID_PLM_CONFIG				= 0x13,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_PLM_WINDOW	src/nvme/types.h	/^	NVME_FEAT_FID_PLM_WINDOW				= 0x14,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_POWER_MGMT	src/nvme/types.h	/^	NVME_FEAT_FID_POWER_MGMT				= 0x02,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_RESV_MASK	src/nvme/types.h	/^	NVME_FEAT_FID_RESV_MASK					= 0x82,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_RESV_PERSIST	src/nvme/types.h	/^	NVME_FEAT_FID_RESV_PERSIST				= 0x83,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_RRL	src/nvme/types.h	/^	NVME_FEAT_FID_RRL					= 0x12,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_SANITIZE	src/nvme/types.h	/^	NVME_FEAT_FID_SANITIZE					= 0x17,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_SPINUP_CONTROL	src/nvme/types.h	/^	NVME_FEAT_FID_SPINUP_CONTROL				= 0x1a,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_SW_PROGRESS	src/nvme/types.h	/^	NVME_FEAT_FID_SW_PROGRESS				= 0x80,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_TEMP_THRESH	src/nvme/types.h	/^	NVME_FEAT_FID_TEMP_THRESH				= 0x04,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_TIMESTAMP	src/nvme/types.h	/^	NVME_FEAT_FID_TIMESTAMP					= 0x0e,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_VOLATILE_WC	src/nvme/types.h	/^	NVME_FEAT_FID_VOLATILE_WC				= 0x06,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_WRITE_ATOMIC	src/nvme/types.h	/^	NVME_FEAT_FID_WRITE_ATOMIC				= 0x0a,$/;"	e	enum:nvme_features_id
NVME_FEAT_FID_WRITE_PROTECT	src/nvme/types.h	/^	NVME_FEAT_FID_WRITE_PROTECT				= 0x84,$/;"	e	enum:nvme_features_id
NVME_FEAT_HCTM_TMT1	src/nvme/util.h	333;"	d
NVME_FEAT_HCTM_TMT1_MASK	src/nvme/types.h	/^	NVME_FEAT_HCTM_TMT1_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_HCTM_TMT1_SHIFT	src/nvme/types.h	/^	NVME_FEAT_HCTM_TMT1_SHIFT	= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_HCTM_TMT2	src/nvme/util.h	332;"	d
NVME_FEAT_HCTM_TMT2_MASK	src/nvme/types.h	/^	NVME_FEAT_HCTM_TMT2_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_HCTM_TMT2_SHIFT	src/nvme/types.h	/^	NVME_FEAT_HCTM_TMT2_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_HMEM_EHM	src/nvme/util.h	325;"	d
NVME_FEAT_HMEM_EHM_MASK	src/nvme/types.h	/^	NVME_FEAT_HMEM_EHM_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_HMEM_EHM_SHIFT	src/nvme/types.h	/^	NVME_FEAT_HMEM_EHM_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_HOSTID_EXHID	src/nvme/util.h	411;"	d
NVME_FEAT_HOSTID_EXHID_MASK	src/nvme/types.h	/^	NVME_FEAT_HOSTID_EXHID_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_HOSTID_EXHID_SHIFT	src/nvme/types.h	/^	NVME_FEAT_HOSTID_EXHID_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_ICFG_CD	src/nvme/util.h	278;"	d
NVME_FEAT_ICFG_CD_MASK	src/nvme/types.h	/^	NVME_FEAT_ICFG_CD_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_ICFG_CD_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ICFG_CD_SHIFT		= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_ICFG_IV	src/nvme/util.h	277;"	d
NVME_FEAT_ICFG_IV_MASK	src/nvme/types.h	/^	NVME_FEAT_ICFG_IV_MASK		= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_ICFG_IV_SHIFT	src/nvme/types.h	/^	NVME_FEAT_ICFG_IV_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_IOCSP_IOCSCI_MASK	src/nvme/types.h	/^	NVME_FEAT_IOCSP_IOCSCI_MASK	= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_IOCSP_IOCSCI_SHIFT	src/nvme/types.h	/^	NVME_FEAT_IOCSP_IOCSCI_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_IRQC_THR	src/nvme/util.h	266;"	d
NVME_FEAT_IRQC_THR_MASK	src/nvme/types.h	/^	NVME_FEAT_IRQC_THR_MASK	= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_IRQC_THR_SHIFT	src/nvme/types.h	/^	NVME_FEAT_IRQC_THR_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_IRQC_TIME	src/nvme/util.h	267;"	d
NVME_FEAT_IRQC_TIME_MASK	src/nvme/types.h	/^	NVME_FEAT_IRQC_TIME_MASK	= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_IRQC_TIME_SHIFT	src/nvme/types.h	/^	NVME_FEAT_IRQC_TIME_SHIFT	= 8,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAR_NR	src/nvme/util.h	218;"	d
NVME_FEAT_LBAR_NR_MASK	src/nvme/types.h	/^	NVME_FEAT_LBAR_NR_MASK			= 0x3f,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAR_NR_SHIFT	src/nvme/types.h	/^	NVME_FEAT_LBAR_NR_SHIFT			= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAS_LSIPI	src/nvme/util.h	376;"	d
NVME_FEAT_LBAS_LSIPI_MASK	src/nvme/types.h	/^	NVME_FEAT_LBAS_LSIPI_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAS_LSIPI_SHIFT	src/nvme/types.h	/^	NVME_FEAT_LBAS_LSIPI_SHIFT	= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAS_LSIRI	src/nvme/util.h	375;"	d
NVME_FEAT_LBAS_LSIRI_MASK	src/nvme/types.h	/^	NVME_FEAT_LBAS_LSIRI_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_LBAS_LSIRI_SHIFT	src/nvme/types.h	/^	NVME_FEAT_LBAS_LSIRI_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_LBA_RANGE_MAX	src/nvme/types.h	/^	NVME_FEAT_LBA_RANGE_MAX			= 64,$/;"	e	enum:nvme_constants
NVME_FEAT_NOPS_NOPPME	src/nvme/util.h	343;"	d
NVME_FEAT_NOPS_NOPPME_MASK	src/nvme/types.h	/^	NVME_FEAT_NOPS_NOPPME_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_NOPS_NOPPME_SHIFT	src/nvme/types.h	/^	NVME_FEAT_NOPS_NOPPME_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_NRQS_NCQR	src/nvme/util.h	256;"	d
NVME_FEAT_NRQS_NCQR_MASK	src/nvme/types.h	/^	NVME_FEAT_NRQS_NCQR_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_NRQS_NCQR_SHIFT	src/nvme/types.h	/^	NVME_FEAT_NRQS_NCQR_SHIFT	= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_NRQS_NSQR	src/nvme/util.h	255;"	d
NVME_FEAT_NRQS_NSQR_MASK	src/nvme/types.h	/^	NVME_FEAT_NRQS_NSQR_MASK	= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_NRQS_NSQR_SHIFT	src/nvme/types.h	/^	NVME_FEAT_NRQS_NSQR_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_NS_NO_WRITE_PROTECT	src/nvme/types.h	/^	NVME_FEAT_NS_NO_WRITE_PROTECT		= 0,$/;"	e	enum:nvme_feat_nswpcfg_state
NVME_FEAT_NS_WRITE_PROTECT	src/nvme/types.h	/^	NVME_FEAT_NS_WRITE_PROTECT		= 1,$/;"	e	enum:nvme_feat_nswpcfg_state
NVME_FEAT_NS_WRITE_PROTECT_PERMANENT	src/nvme/types.h	/^	NVME_FEAT_NS_WRITE_PROTECT_PERMANENT	= 3,$/;"	e	enum:nvme_feat_nswpcfg_state
NVME_FEAT_NS_WRITE_PROTECT_PWR_CYCLE	src/nvme/types.h	/^	NVME_FEAT_NS_WRITE_PROTECT_PWR_CYCLE	= 2,$/;"	e	enum:nvme_feat_nswpcfg_state
NVME_FEAT_PLMW_WS	src/nvme/util.h	367;"	d
NVME_FEAT_PLMW_WS_MASK	src/nvme/types.h	/^	NVME_FEAT_PLMW_WS_MASK		= 0x7,$/;"	e	enum:nvme_feat
NVME_FEAT_PLMW_WS_SHIFT	src/nvme/types.h	/^	NVME_FEAT_PLMW_WS_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_PLM_PLME	src/nvme/util.h	359;"	d
NVME_FEAT_PLM_PLME_MASK	src/nvme/types.h	/^	NVME_FEAT_PLM_PLME_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_PLM_PLME_SHIFT	src/nvme/types.h	/^	NVME_FEAT_PLM_PLME_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_PM_PS	src/nvme/util.h	208;"	d
NVME_FEAT_PM_WH	src/nvme/util.h	209;"	d
NVME_FEAT_PWRMGMT_PS_MASK	src/nvme/types.h	/^	NVME_FEAT_PWRMGMT_PS_MASK		= 0x1f,$/;"	e	enum:nvme_feat
NVME_FEAT_PWRMGMT_PS_SHIFT	src/nvme/types.h	/^	NVME_FEAT_PWRMGMT_PS_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_PWRMGMT_WH_MASK	src/nvme/types.h	/^	NVME_FEAT_PWRMGMT_WH_MASK		= 0x7,$/;"	e	enum:nvme_feat
NVME_FEAT_PWRMGMT_WH_SHIFT	src/nvme/types.h	/^	NVME_FEAT_PWRMGMT_WH_SHIFT		= 5,$/;"	e	enum:nvme_feat
NVME_FEAT_RESV_NOTIFY_REGPRE	src/nvme/types.h	/^	NVME_FEAT_RESV_NOTIFY_REGPRE		= 1 << 1,$/;"	e	enum:nvme_feat_resv_notify_flags
NVME_FEAT_RESV_NOTIFY_RESPRE	src/nvme/types.h	/^	NVME_FEAT_RESV_NOTIFY_RESPRE		= 1 << 3,$/;"	e	enum:nvme_feat_resv_notify_flags
NVME_FEAT_RESV_NOTIFY_RESREL	src/nvme/types.h	/^	NVME_FEAT_RESV_NOTIFY_RESREL		= 1 << 2,$/;"	e	enum:nvme_feat_resv_notify_flags
NVME_FEAT_RM_REGPRE	src/nvme/util.h	418;"	d
NVME_FEAT_RM_REGPRE_MASK	src/nvme/types.h	/^	NVME_FEAT_RM_REGPRE_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_RM_REGPRE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_RM_REGPRE_SHIFT	= 1,$/;"	e	enum:nvme_feat
NVME_FEAT_RM_RESPRE	src/nvme/util.h	420;"	d
NVME_FEAT_RM_RESPRE_MASK	src/nvme/types.h	/^	NVME_FEAT_RM_RESPRE_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_RM_RESPRE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_RM_RESPRE_SHIFT	= 0x3,$/;"	e	enum:nvme_feat
NVME_FEAT_RM_RESREL	src/nvme/util.h	419;"	d
NVME_FEAT_RM_RESREL_MASK	src/nvme/types.h	/^	NVME_FEAT_RM_RESREL_MASK	= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_RM_RESREL_SHIFT	src/nvme/types.h	/^	NVME_FEAT_RM_RESREL_SHIFT	= 2,$/;"	e	enum:nvme_feat
NVME_FEAT_RP_PTPL	src/nvme/util.h	432;"	d
NVME_FEAT_RP_PTPL_MASK	src/nvme/types.h	/^	NVME_FEAT_RP_PTPL_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_RP_PTPL_SHIFT	src/nvme/types.h	/^	NVME_FEAT_RP_PTPL_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_RRL_RRL	src/nvme/util.h	351;"	d
NVME_FEAT_RRL_RRL_MASK	src/nvme/types.h	/^	NVME_FEAT_RRL_RRL_MASK		= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_RRL_RRL_SHIFT	src/nvme/types.h	/^	NVME_FEAT_RRL_RRL_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_SC_NODRM	src/nvme/util.h	386;"	d
NVME_FEAT_SC_NODRM_MASK	src/nvme/types.h	/^	NVME_FEAT_SC_NODRM_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_SC_NODRM_SHIFT	src/nvme/types.h	/^	NVME_FEAT_SC_NODRM_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_SPM_PBSLC	src/nvme/util.h	403;"	d
NVME_FEAT_SPM_PBSLC_MASK	src/nvme/types.h	/^	NVME_FEAT_SPM_PBSLC_MASK	= 0xff,$/;"	e	enum:nvme_feat
NVME_FEAT_SPM_PBSLC_SHIFT	src/nvme/types.h	/^	NVME_FEAT_SPM_PBSLC_SHIFT	= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_THSEL	src/nvme/util.h	227;"	d
NVME_FEAT_TT_THSEL_MASK	src/nvme/types.h	/^	NVME_FEAT_TT_THSEL_MASK			= 0x3,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_THSEL_SHIFT	src/nvme/types.h	/^	NVME_FEAT_TT_THSEL_SHIFT		= 20,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_TMPSEL	src/nvme/util.h	226;"	d
NVME_FEAT_TT_TMPSEL_MASK	src/nvme/types.h	/^	NVME_FEAT_TT_TMPSEL_MASK		= 0xf,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_TMPSEL_SHIFT	src/nvme/types.h	/^	NVME_FEAT_TT_TMPSEL_SHIFT		= 16,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_TMPTH	src/nvme/util.h	225;"	d
NVME_FEAT_TT_TMPTH_MASK	src/nvme/types.h	/^	NVME_FEAT_TT_TMPTH_MASK			= 0xffff,$/;"	e	enum:nvme_feat
NVME_FEAT_TT_TMPTH_SHIFT	src/nvme/types.h	/^	NVME_FEAT_TT_TMPTH_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_VWC_WCE	src/nvme/util.h	247;"	d
NVME_FEAT_VWC_WCE_MASK	src/nvme/types.h	/^	NVME_FEAT_VWC_WCE_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_VWC_WCE_SHIFT	src/nvme/types.h	/^	NVME_FEAT_VWC_WCE_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_WA_DN	src/nvme/util.h	287;"	d
NVME_FEAT_WA_DN_MASK	src/nvme/types.h	/^	NVME_FEAT_WA_DN_MASK		= 0x1,$/;"	e	enum:nvme_feat
NVME_FEAT_WA_DN_SHIFT	src/nvme/types.h	/^	NVME_FEAT_WA_DN_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FEAT_WP_WPS	src/nvme/util.h	440;"	d
NVME_FEAT_WP_WPS_MASK	src/nvme/types.h	/^	NVME_FEAT_WP_WPS_MASK		= 0x7,$/;"	e	enum:nvme_feat
NVME_FEAT_WP_WPS_SHIFT	src/nvme/types.h	/^	NVME_FEAT_WP_WPS_SHIFT		= 0,$/;"	e	enum:nvme_feat
NVME_FID_SUPPORTED_EFFECTS_CCC	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_CCC		= 1 << 4,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_FSUPP	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_FSUPP	= 1 << 0,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_NCC	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_NCC		= 1 << 2,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_NIC	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_NIC		= 1 << 3,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_CTRL	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_CTRL	= 1 << 1,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_DOMAIN	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_DOMAIN	= 1 << 4,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_ENDGRP	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_ENDGRP	= 1 << 3,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_MASK	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_MASK	= 0xfff,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_NS	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_NS	= 1 << 0,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_NSS	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_NSS	= 1 << 5,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_NVM_SET	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_NVM_SET= 1 << 2,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_SCOPE_SHIFT	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_SCOPE_SHIFT	= 20,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_UDCC	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_UDCC		= 1 << 1,$/;"	e	enum:nvme_fid_supported_effects
NVME_FID_SUPPORTED_EFFECTS_UUID_SEL	src/nvme/types.h	/^	NVME_FID_SUPPORTED_EFFECTS_UUID_SEL	= 1 << 19,$/;"	e	enum:nvme_fid_supported_effects
NVME_FORMAT_CDW10_LBAFU_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_LBAFU_MASK				= 0x3,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_LBAFU_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_LBAFU_SHIFT				= 12,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_LBAF_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_LBAF_MASK				= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_LBAF_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_LBAF_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_MSET_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_MSET_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_MSET_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_MSET_SHIFT				= 4,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_PIL_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_PIL_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_PIL_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_PIL_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_PI_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_PI_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_PI_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_PI_SHIFT				= 5,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_SES_MASK	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_SES_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_CDW10_SES_SHIFT	src/nvme/ioctl.c	/^	NVME_FORMAT_CDW10_SES_SHIFT				= 9,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FORMAT_MSET_EXTENDED	src/nvme/types.h	/^	NVME_FORMAT_MSET_EXTENDED				= 1,$/;"	e	enum:nvme_cmd_format_mset
NVME_FORMAT_MSET_SEPARATE	src/nvme/types.h	/^	NVME_FORMAT_MSET_SEPARATE				= 0,$/;"	e	enum:nvme_cmd_format_mset
NVME_FORMAT_PIL_FIRST	src/nvme/types.h	/^	NVME_FORMAT_PIL_FIRST					= 1,$/;"	e	enum:nvme_cmd_format_pil
NVME_FORMAT_PIL_LAST	src/nvme/types.h	/^	NVME_FORMAT_PIL_LAST					= 0,$/;"	e	enum:nvme_cmd_format_pil
NVME_FORMAT_PI_DISABLE	src/nvme/types.h	/^	NVME_FORMAT_PI_DISABLE					= 0,$/;"	e	enum:nvme_cmd_format_pi
NVME_FORMAT_PI_TYPE1	src/nvme/types.h	/^	NVME_FORMAT_PI_TYPE1					= 1,$/;"	e	enum:nvme_cmd_format_pi
NVME_FORMAT_PI_TYPE2	src/nvme/types.h	/^	NVME_FORMAT_PI_TYPE2					= 2,$/;"	e	enum:nvme_cmd_format_pi
NVME_FORMAT_PI_TYPE3	src/nvme/types.h	/^	NVME_FORMAT_PI_TYPE3					= 3,$/;"	e	enum:nvme_cmd_format_pi
NVME_FORMAT_SES_CRYPTO_ERASE	src/nvme/types.h	/^	NVME_FORMAT_SES_CRYPTO_ERASE				= 2,$/;"	e	enum:nvme_cmd_format_ses
NVME_FORMAT_SES_NONE	src/nvme/types.h	/^	NVME_FORMAT_SES_NONE					= 0,$/;"	e	enum:nvme_cmd_format_ses
NVME_FORMAT_SES_USER_DATA_ERASE	src/nvme/types.h	/^	NVME_FORMAT_SES_USER_DATA_ERASE				= 1,$/;"	e	enum:nvme_cmd_format_ses
NVME_FW_COMMIT_CA_ACTIVATE_BOOT_PARTITION	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_ACTIVATE_BOOT_PARTITION		= 7,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CA_REPLACE	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_REPLACE				= 0,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CA_REPLACE_AND_ACTIVATE	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_REPLACE_AND_ACTIVATE			= 1,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CA_REPLACE_AND_ACTIVATE_IMMEDIATE	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_REPLACE_AND_ACTIVATE_IMMEDIATE	= 3,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CA_REPLACE_BOOT_PARTITION	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_REPLACE_BOOT_PARTITION		= 6,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CA_SET_ACTIVE	src/nvme/types.h	/^	NVME_FW_COMMIT_CA_SET_ACTIVE				= 2,$/;"	e	enum:nvme_fw_commit_ca
NVME_FW_COMMIT_CDW10_BPID_MASK	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_BPID_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FW_COMMIT_CDW10_BPID_SHIFT	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_BPID_SHIFT				= 31,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FW_COMMIT_CDW10_CA_MASK	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_CA_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FW_COMMIT_CDW10_CA_SHIFT	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_CA_SHIFT				= 3,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FW_COMMIT_CDW10_FS_MASK	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_FS_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_FW_COMMIT_CDW10_FS_SHIFT	src/nvme/ioctl.c	/^	NVME_FW_COMMIT_CDW10_FS_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET	src/nvme/types.h	35;"	d
NVME_GET_FEATURES_CDW10_SEL_MASK	src/nvme/ioctl.c	/^	NVME_GET_FEATURES_CDW10_SEL_MASK			= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET_FEATURES_CDW10_SEL_SHIFT	src/nvme/ioctl.c	/^	NVME_GET_FEATURES_CDW10_SEL_SHIFT			= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET_FEATURES_SEL_CURRENT	src/nvme/types.h	/^	NVME_GET_FEATURES_SEL_CURRENT				= 0,$/;"	e	enum:nvme_get_features_sel
NVME_GET_FEATURES_SEL_DEFAULT	src/nvme/types.h	/^	NVME_GET_FEATURES_SEL_DEFAULT				= 1,$/;"	e	enum:nvme_get_features_sel
NVME_GET_FEATURES_SEL_SAVED	src/nvme/types.h	/^	NVME_GET_FEATURES_SEL_SAVED				= 2,$/;"	e	enum:nvme_get_features_sel
NVME_GET_FEATURES_SEL_SUPPORTED	src/nvme/types.h	/^	NVME_GET_FEATURES_SEL_SUPPORTED				= 3,$/;"	e	enum:nvme_get_features_sel
NVME_GET_LBA_STATUS_CDW13_ATYPE_MASK	src/nvme/ioctl.c	/^	NVME_GET_LBA_STATUS_CDW13_ATYPE_MASK			= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET_LBA_STATUS_CDW13_ATYPE_SHIFT	src/nvme/ioctl.c	/^	NVME_GET_LBA_STATUS_CDW13_ATYPE_SHIFT			= 24,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET_LBA_STATUS_CDW13_RL_MASK	src/nvme/ioctl.c	/^	NVME_GET_LBA_STATUS_CDW13_RL_MASK			= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_GET_LBA_STATUS_CDW13_RL_SHIFT	src/nvme/ioctl.c	/^	NVME_GET_LBA_STATUS_CDW13_RL_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_HMAC_ALG_NONE	src/nvme/linux.h	/^	NVME_HMAC_ALG_NONE	= 0,$/;"	e	enum:nvme_hmac_alg
NVME_HMAC_ALG_SHA2_256	src/nvme/linux.h	/^	NVME_HMAC_ALG_SHA2_256	= 1,$/;"	e	enum:nvme_hmac_alg
NVME_HMAC_ALG_SHA2_384	src/nvme/linux.h	/^	NVME_HMAC_ALG_SHA2_384	= 2,$/;"	e	enum:nvme_hmac_alg
NVME_HMAC_ALG_SHA2_512	src/nvme/linux.h	/^	NVME_HMAC_ALG_SHA2_512	= 3,$/;"	e	enum:nvme_hmac_alg
NVME_IDENTIFY_CDW10_CNS_MASK	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW10_CNS_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW10_CNS_SHIFT	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW10_CNS_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW10_CNTID_MASK	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW10_CNTID_MASK				= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW10_CNTID_SHIFT	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW10_CNTID_SHIFT				= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW11_CNSSPECID_MASK	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW11_CNSSPECID_MASK			= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW11_CNSSPECID_SHIFT	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW11_CNSSPECID_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW11_CSI_MASK	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW11_CSI_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW11_CSI_SHIFT	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW11_CSI_SHIFT				= 24,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW14_UUID_MASK	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW14_UUID_MASK				= 0x7f,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CDW14_UUID_SHIFT	src/nvme/ioctl.c	/^	NVME_IDENTIFY_CDW14_UUID_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_IDENTIFY_CNS_ALLOCATED_NS	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_ALLOCATED_NS				= 0x11,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_ALLOCATED_NS_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_ALLOCATED_NS_LIST			= 0x10,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_COMMAND_SET_STRUCTURE	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_COMMAND_SET_STRUCTURE			= 0x1C,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_ALLOCATED_NS_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_ALLOCATED_NS_LIST			= 0x1A,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_CTRL	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_CTRL				= 0x06,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_ID_NS_DATA_STRUCTURE	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_ID_NS_DATA_STRUCTURE		= 0x1B,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_INDEPENDENT_ID_NS	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_INDEPENDENT_ID_NS			= 0x08,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_NS	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_NS				= 0x05,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_NS_ACTIVE_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_NS_ACTIVE_LIST			= 0x07,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CSI_NS_USER_DATA_FORMAT	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CSI_NS_USER_DATA_FORMAT		= 0x0A,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CTRL	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CTRL					= 0x01,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_CTRL_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_CTRL_LIST				= 0x13,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_DOMAIN_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_DOMAIN_LIST				= 0x18,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_ENDURANCE_GROUP_ID	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_ENDURANCE_GROUP_ID			= 0x19,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS					= 0x00,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS_ACTIVE_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS_ACTIVE_LIST			= 0x02,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS_CTRL_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS_CTRL_LIST				= 0x12,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS_DESC_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS_DESC_LIST				= 0x03,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS_GRANULARITY	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS_GRANULARITY			= 0x16,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NS_USER_DATA_FORMAT	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NS_USER_DATA_FORMAT			= 0x09,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_NVMSET_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_NVMSET_LIST				= 0x04,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_PRIMARY_CTRL_CAP	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_PRIMARY_CTRL_CAP			= 0x14,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_SECONDARY_CTRL_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_SECONDARY_CTRL_LIST			= 0x15,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_CNS_UUID_LIST	src/nvme/types.h	/^	NVME_IDENTIFY_CNS_UUID_LIST				= 0x17,$/;"	e	enum:nvme_identify_cns
NVME_IDENTIFY_DATA_SIZE	src/nvme/types.h	/^	NVME_IDENTIFY_DATA_SIZE			= 4096,$/;"	e	enum:nvme_constants
NVME_ID_CTRL_LIST_MAX	src/nvme/types.h	/^	NVME_ID_CTRL_LIST_MAX			= 2047,$/;"	e	enum:nvme_constants
NVME_ID_DIR_DP_BIT	src/nvme/types.h	/^	NVME_ID_DIR_DP_BIT	= 2,$/;"	e	enum:nvme_directive_types
NVME_ID_DIR_ID_BIT	src/nvme/types.h	/^	NVME_ID_DIR_ID_BIT	= 0,$/;"	e	enum:nvme_directive_types
NVME_ID_DIR_SD_BIT	src/nvme/types.h	/^	NVME_ID_DIR_SD_BIT	= 1,$/;"	e	enum:nvme_directive_types
NVME_ID_DOMAIN_LIST_MAX	src/nvme/types.h	/^	NVME_ID_DOMAIN_LIST_MAX			= 31,$/;"	e	enum:nvme_constants
NVME_ID_ENDURANCE_GROUP_LIST_MAX	src/nvme/types.h	/^	NVME_ID_ENDURANCE_GROUP_LIST_MAX	= 2047,$/;"	e	enum:nvme_constants
NVME_ID_ND_DESCRIPTOR_MAX	src/nvme/types.h	/^	NVME_ID_ND_DESCRIPTOR_MAX		= 16,$/;"	e	enum:nvme_constants
NVME_ID_NS_LIST_MAX	src/nvme/types.h	/^	NVME_ID_NS_LIST_MAX			= 1024,$/;"	e	enum:nvme_constants
NVME_ID_NVMSET_LIST_MAX	src/nvme/types.h	/^	NVME_ID_NVMSET_LIST_MAX			= 31,$/;"	e	enum:nvme_constants
NVME_ID_SECONDARY_CTRL_MAX	src/nvme/types.h	/^	NVME_ID_SECONDARY_CTRL_MAX		= 127,$/;"	e	enum:nvme_constants
NVME_ID_UUID_ASSOCIATION_NONE	src/nvme/types.h	/^	NVME_ID_UUID_ASSOCIATION_NONE			= 0,$/;"	e	enum:nvme_id_uuid
NVME_ID_UUID_ASSOCIATION_SUBSYSTEM_VENDOR	src/nvme/types.h	/^	NVME_ID_UUID_ASSOCIATION_SUBSYSTEM_VENDOR	= 2,$/;"	e	enum:nvme_id_uuid
NVME_ID_UUID_ASSOCIATION_VENDOR	src/nvme/types.h	/^	NVME_ID_UUID_ASSOCIATION_VENDOR			= 1,$/;"	e	enum:nvme_id_uuid
NVME_ID_UUID_HDR_ASSOCIATION_MASK	src/nvme/types.h	/^	NVME_ID_UUID_HDR_ASSOCIATION_MASK		= 0x3,$/;"	e	enum:nvme_id_uuid
NVME_ID_UUID_LIST_MAX	src/nvme/types.h	/^	NVME_ID_UUID_LIST_MAX			= 127,$/;"	e	enum:nvme_constants
NVME_IOCTL_ADMIN64_CMD	src/nvme/ioctl.h	177;"	d
NVME_IOCTL_ADMIN_CMD	src/nvme/ioctl.h	175;"	d
NVME_IOCTL_ID	src/nvme/ioctl.h	171;"	d
NVME_IOCTL_IO64_CMD	src/nvme/ioctl.h	178;"	d
NVME_IOCTL_IO_CMD	src/nvme/ioctl.h	176;"	d
NVME_IOCTL_RESCAN	src/nvme/ioctl.h	174;"	d
NVME_IOCTL_RESET	src/nvme/ioctl.h	172;"	d
NVME_IOCTL_SUBSYS_RESET	src/nvme/ioctl.h	173;"	d
NVME_IO_DEAC	src/nvme/types.h	/^	NVME_IO_DEAC			= 1 << 9,$/;"	e	enum:nvme_io_control_flags
NVME_IO_DSM_COMPRESSED	src/nvme/types.h	/^	NVME_IO_DSM_COMPRESSED		= 1 << 7,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_ONCE	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_ONCE		= 6,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_PREFETCH	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_PREFETCH	= 7,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_RARE	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_RARE		= 2,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_READS	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_READS		= 3,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_RW	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_RW		= 5,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_TEMP	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_TEMP		= 8,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_TYPICAL	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_TYPICAL	= 1,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_UNSPEC	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_UNSPEC		= 0,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_FREQ_WRITES	src/nvme/types.h	/^	NVME_IO_DSM_FREQ_WRITES		= 4,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_LATENCY_IDLE	src/nvme/types.h	/^	NVME_IO_DSM_LATENCY_IDLE	= 1 << 4,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_LATENCY_LOW	src/nvme/types.h	/^	NVME_IO_DSM_LATENCY_LOW		= 3 << 4,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_LATENCY_NONE	src/nvme/types.h	/^	NVME_IO_DSM_LATENCY_NONE	= 0 << 4,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_LATENCY_NORM	src/nvme/types.h	/^	NVME_IO_DSM_LATENCY_NORM	= 2 << 4,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DSM_SEQ_REQ	src/nvme/types.h	/^	NVME_IO_DSM_SEQ_REQ		= 1 << 6,$/;"	e	enum:nvme_io_dsm_flags
NVME_IO_DTYPE_STREAMS	src/nvme/types.h	/^	NVME_IO_DTYPE_STREAMS		= 1 << 4,$/;"	e	enum:nvme_io_control_flags
NVME_IO_FUA	src/nvme/types.h	/^	NVME_IO_FUA			= 1 << 14,$/;"	e	enum:nvme_io_control_flags
NVME_IO_LR	src/nvme/types.h	/^	NVME_IO_LR			= 1 << 15,$/;"	e	enum:nvme_io_control_flags
NVME_IO_MGMT_RECV_RUH_STATUS	src/nvme/types.h	/^	NVME_IO_MGMT_RECV_RUH_STATUS = 0x1,$/;"	e	enum:nvme_io_mgmt_recv_mo
NVME_IO_MGMT_SEND_RUH_UPDATE	src/nvme/types.h	/^	NVME_IO_MGMT_SEND_RUH_UPDATE = 0x1,$/;"	e	enum:nvme_io_mgmt_send_mo
NVME_IO_PRINFO_PRACT	src/nvme/types.h	/^	NVME_IO_PRINFO_PRACT		= 1 << 13,$/;"	e	enum:nvme_io_control_flags
NVME_IO_PRINFO_PRCHK_APP	src/nvme/types.h	/^	NVME_IO_PRINFO_PRCHK_APP	= 1 << 11,$/;"	e	enum:nvme_io_control_flags
NVME_IO_PRINFO_PRCHK_GUARD	src/nvme/types.h	/^	NVME_IO_PRINFO_PRCHK_GUARD	= 1 << 12,$/;"	e	enum:nvme_io_control_flags
NVME_IO_PRINFO_PRCHK_REF	src/nvme/types.h	/^	NVME_IO_PRINFO_PRCHK_REF	= 1 << 10,$/;"	e	enum:nvme_io_control_flags
NVME_IO_STC	src/nvme/types.h	/^	NVME_IO_STC			= 1 << 8,$/;"	e	enum:nvme_io_control_flags
NVME_IO_ZNS_APPEND_PIREMAP	src/nvme/types.h	/^	NVME_IO_ZNS_APPEND_PIREMAP	= 1 << 9,$/;"	e	enum:nvme_io_control_flags
NVME_LBAF_RP_BEST	src/nvme/types.h	/^	NVME_LBAF_RP_BEST	= 0,$/;"	e	enum:nvme_lbaf_rp
NVME_LBAF_RP_BETTER	src/nvme/types.h	/^	NVME_LBAF_RP_BETTER	= 1,$/;"	e	enum:nvme_lbaf_rp
NVME_LBAF_RP_DEGRADED	src/nvme/types.h	/^	NVME_LBAF_RP_DEGRADED	= 3,$/;"	e	enum:nvme_lbaf_rp
NVME_LBAF_RP_GOOD	src/nvme/types.h	/^	NVME_LBAF_RP_GOOD	= 2,$/;"	e	enum:nvme_lbaf_rp
NVME_LBAF_RP_MASK	src/nvme/types.h	/^	NVME_LBAF_RP_MASK	= 3,$/;"	e	enum:nvme_lbaf_rp
NVME_LBART_ATTRIB_HIDE	src/nvme/types.h	/^	NVME_LBART_ATTRIB_HIDE	= 1 << 1,$/;"	e	enum:nvme_lbart
NVME_LBART_ATTRIB_TEMP	src/nvme/types.h	/^	NVME_LBART_ATTRIB_TEMP	= 1 << 0,$/;"	e	enum:nvme_lbart
NVME_LBART_TYPE_CACHE	src/nvme/types.h	/^	NVME_LBART_TYPE_CACHE	= 3,$/;"	e	enum:nvme_lbart
NVME_LBART_TYPE_FS	src/nvme/types.h	/^	NVME_LBART_TYPE_FS	= 1,$/;"	e	enum:nvme_lbart
NVME_LBART_TYPE_GP	src/nvme/types.h	/^	NVME_LBART_TYPE_GP	= 0,$/;"	e	enum:nvme_lbart
NVME_LBART_TYPE_RAID	src/nvme/types.h	/^	NVME_LBART_TYPE_RAID	= 2,$/;"	e	enum:nvme_lbart
NVME_LBART_TYPE_SWAP	src/nvme/types.h	/^	NVME_LBART_TYPE_SWAP	= 4,$/;"	e	enum:nvme_lbart
NVME_LBA_STATUS_ATYPE_SCAN_TRACKED	src/nvme/types.h	/^	NVME_LBA_STATUS_ATYPE_SCAN_TRACKED			= 0x11,$/;"	e	enum:nvme_lba_status_atype
NVME_LBA_STATUS_ATYPE_SCAN_UNTRACKED	src/nvme/types.h	/^	NVME_LBA_STATUS_ATYPE_SCAN_UNTRACKED			= 0x10,$/;"	e	enum:nvme_lba_status_atype
NVME_LOG_ANA_LSP_RGO_GROUPS_ONLY	src/nvme/types.h	/^	NVME_LOG_ANA_LSP_RGO_GROUPS_ONLY			= 1,$/;"	e	enum:nvme_log_ana_lsp
NVME_LOG_ANA_LSP_RGO_NAMESPACES	src/nvme/types.h	/^	NVME_LOG_ANA_LSP_RGO_NAMESPACES				= 0,$/;"	e	enum:nvme_log_ana_lsp
NVME_LOG_CDW10_LID_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_LID_MASK					= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_LID_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_LID_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_LSP_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_LSP_MASK					= 0x7f,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_LSP_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_LSP_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_NUMDL_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_NUMDL_MASK				= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_NUMDL_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_NUMDL_SHIFT				= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_RAE_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_RAE_MASK					= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW10_RAE_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW10_RAE_SHIFT				= 15,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW11_LSI_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW11_LSI_MASK					= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW11_LSI_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW11_LSI_SHIFT				= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW11_NUMDU_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW11_NUMDU_MASK				= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW11_NUMDU_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW11_NUMDU_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_CSI_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_CSI_MASK					= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_CSI_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_CSI_SHIFT				= 24,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_OT_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_OT_MASK					= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_OT_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_OT_SHIFT					= 23,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_UUID_MASK	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_UUID_MASK				= 0x7f,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_CDW14_UUID_SHIFT	src/nvme/ioctl.c	/^	NVME_LOG_CDW14_UUID_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_LOG_FID_SUPPORTED_EFFECTS_MAX	src/nvme/types.h	/^	NVME_LOG_FID_SUPPORTED_EFFECTS_MAX	= 256,$/;"	e	enum:nvme_constants
NVME_LOG_LID_ANA	src/nvme/types.h	/^	NVME_LOG_LID_ANA					= 0x0c,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_BOOT_PARTITION	src/nvme/types.h	/^	NVME_LOG_LID_BOOT_PARTITION				= 0x15,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_CHANGED_NS	src/nvme/types.h	/^	NVME_LOG_LID_CHANGED_NS					= 0x04,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_CMD_EFFECTS	src/nvme/types.h	/^	NVME_LOG_LID_CMD_EFFECTS				= 0x05,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_DEVICE_SELF_TEST	src/nvme/types.h	/^	NVME_LOG_LID_DEVICE_SELF_TEST				= 0x06,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_DISCOVER	src/nvme/types.h	/^	NVME_LOG_LID_DISCOVER					= 0x70,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_ENDURANCE_GROUP	src/nvme/types.h	/^	NVME_LOG_LID_ENDURANCE_GROUP				= 0x09,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_ENDURANCE_GRP_EVT	src/nvme/types.h	/^	NVME_LOG_LID_ENDURANCE_GRP_EVT				= 0x0f,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_ERROR	src/nvme/types.h	/^	NVME_LOG_LID_ERROR					= 0x01,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FDP_CONFIGS	src/nvme/types.h	/^	NVME_LOG_LID_FDP_CONFIGS				= 0x20,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FDP_EVENTS	src/nvme/types.h	/^	NVME_LOG_LID_FDP_EVENTS					= 0x23,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FDP_RUH_USAGE	src/nvme/types.h	/^	NVME_LOG_LID_FDP_RUH_USAGE				= 0x21,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FDP_STATS	src/nvme/types.h	/^	NVME_LOG_LID_FDP_STATS					= 0x22,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FID_SUPPORTED_EFFECTS	src/nvme/types.h	/^	NVME_LOG_LID_FID_SUPPORTED_EFFECTS			= 0x12,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_FW_SLOT	src/nvme/types.h	/^	NVME_LOG_LID_FW_SLOT					= 0x03,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_LBA_STATUS	src/nvme/types.h	/^	NVME_LOG_LID_LBA_STATUS					= 0x0e,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_MEDIA_UNIT_STATUS	src/nvme/types.h	/^	NVME_LOG_LID_MEDIA_UNIT_STATUS				= 0x10,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_MI_CMD_SUPPORTED_EFFECTS	src/nvme/types.h	/^	NVME_LOG_LID_MI_CMD_SUPPORTED_EFFECTS			= 0x13,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_PERSISTENT_EVENT	src/nvme/types.h	/^	NVME_LOG_LID_PERSISTENT_EVENT				= 0x0d,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_PREDICTABLE_LAT_AGG	src/nvme/types.h	/^	NVME_LOG_LID_PREDICTABLE_LAT_AGG			= 0x0b,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_PREDICTABLE_LAT_NVMSET	src/nvme/types.h	/^	NVME_LOG_LID_PREDICTABLE_LAT_NVMSET			= 0x0a,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_RESERVATION	src/nvme/types.h	/^	NVME_LOG_LID_RESERVATION				= 0x80,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_SANITIZE	src/nvme/types.h	/^	NVME_LOG_LID_SANITIZE					= 0x81,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_SMART	src/nvme/types.h	/^	NVME_LOG_LID_SMART					= 0x02,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_SUPPORTED_CAP_CONFIG_LIST	src/nvme/types.h	/^	NVME_LOG_LID_SUPPORTED_CAP_CONFIG_LIST			= 0x11,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_SUPPORTED_LOG_PAGES	src/nvme/types.h	/^	NVME_LOG_LID_SUPPORTED_LOG_PAGES			= 0x00,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_TELEMETRY_CTRL	src/nvme/types.h	/^	NVME_LOG_LID_TELEMETRY_CTRL				= 0x08,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_TELEMETRY_HOST	src/nvme/types.h	/^	NVME_LOG_LID_TELEMETRY_HOST				= 0x07,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LID_ZNS_CHANGED_ZONES	src/nvme/types.h	/^	NVME_LOG_LID_ZNS_CHANGED_ZONES				= 0xbf,$/;"	e	enum:nvme_cmd_get_log_lid
NVME_LOG_LPO_NONE	src/nvme/types.h	/^	NVME_LOG_LPO_NONE			= 0,$/;"	e	enum:nvme_constants
NVME_LOG_LSI_NONE	src/nvme/types.h	/^	NVME_LOG_LSI_NONE			= 0,$/;"	e	enum:nvme_constants
NVME_LOG_LSP_NONE	src/nvme/types.h	/^	NVME_LOG_LSP_NONE			= 0,$/;"	e	enum:nvme_constants
NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_MAX	src/nvme/types.h	/^	NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_MAX	= 256,$/;"	e	enum:nvme_constants
NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_RESERVED	src/nvme/types.h	/^	NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_RESERVED = 768,$/;"	e	enum:nvme_constants
NVME_LOG_PAGE_PDU_SIZE	src/nvme/ioctl.h	41;"	d
NVME_LOG_ST_MAX_RESULTS	src/nvme/types.h	/^	NVME_LOG_ST_MAX_RESULTS			= 20,$/;"	e	enum:nvme_constants
NVME_LOG_SUPPORTED_LOG_PAGES_MAX	src/nvme/types.h	/^	NVME_LOG_SUPPORTED_LOG_PAGES_MAX	= 256,$/;"	e	enum:nvme_constants
NVME_LOG_TELEM_BLOCK_SIZE	src/nvme/types.h	/^	NVME_LOG_TELEM_BLOCK_SIZE		= 512,$/;"	e	enum:nvme_constants
NVME_LOG_TELEM_HOST_LSP_CREATE	src/nvme/types.h	/^	NVME_LOG_TELEM_HOST_LSP_CREATE			= 1,$/;"	e	enum:nvme_cmd_get_log_telemetry_host_lsp
NVME_LOG_TELEM_HOST_LSP_RETAIN	src/nvme/types.h	/^	NVME_LOG_TELEM_HOST_LSP_RETAIN			= 0,$/;"	e	enum:nvme_cmd_get_log_telemetry_host_lsp
NVME_MAJOR	src/nvme/types.h	290;"	d
NVME_MINOR	src/nvme/types.h	291;"	d
NVME_MI_CCS_CCWARN	src/nvme/types.h	/^	NVME_MI_CCS_CCWARN	= 1 << 12,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_CECO	src/nvme/types.h	/^	NVME_MI_CCS_CECO	= 1 << 5,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_CFS	src/nvme/types.h	/^	NVME_MI_CCS_CFS		= 1 << 1,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_CSTS	src/nvme/types.h	/^	NVME_MI_CCS_CSTS	= 1 << 8,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_CTEMP	src/nvme/types.h	/^	NVME_MI_CCS_CTEMP	= 1 << 9,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_FA	src/nvme/types.h	/^	NVME_MI_CCS_FA		= 1 << 7,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_NAC	src/nvme/types.h	/^	NVME_MI_CCS_NAC		= 1 << 6,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_NSSRO	src/nvme/types.h	/^	NVME_MI_CCS_NSSRO	= 1 << 4,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_PDLU	src/nvme/types.h	/^	NVME_MI_CCS_PDLU	= 1 << 10,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_RDY	src/nvme/types.h	/^	NVME_MI_CCS_RDY		= 1 << 0,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_SHST	src/nvme/types.h	/^	NVME_MI_CCS_SHST	= 1 << 2,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CCS_SPARE	src/nvme/types.h	/^	NVME_MI_CCS_SPARE	= 1 << 11,$/;"	e	enum:nvme_mi_ccs
NVME_MI_CMD_SUPPORTED_EFFECTS_CCC	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_CCC	    = 1 << 4,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_CSUPP	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_CSUPP	    = 1 << 0,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_NCC	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_NCC	    = 1 << 2,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_NIC	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_NIC	    = 1 << 3,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_CTRL	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_CTRL    = 1 << 1,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_DOMAIN	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_DOMAIN  = 1 << 4,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_ENDGRP	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_ENDGRP  = 1 << 3,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_MASK	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_MASK    = 0xfff,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NS	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NS	    = 1 << 0,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NSS	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NSS	    = 1 << 5,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NVM_SET	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_NVM_SET = 1 << 2,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_SHIFT	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_SCOPE_SHIFT   = 20,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CMD_SUPPORTED_EFFECTS_UDCC	src/nvme/types.h	/^	NVME_MI_CMD_SUPPORTED_EFFECTS_UDCC	    = 1 << 1,$/;"	e	enum:nvme_mi_cmd_supported_effects
NVME_MI_CONFIG_HEALTH_STATUS_CHANGE	src/nvme/mi.h	/^	NVME_MI_CONFIG_HEALTH_STATUS_CHANGE = 0x2,$/;"	e	enum:nvme_mi_config_id
NVME_MI_CONFIG_MCTP_MTU	src/nvme/mi.h	/^	NVME_MI_CONFIG_MCTP_MTU = 0x3,$/;"	e	enum:nvme_mi_config_id
NVME_MI_CONFIG_SMBUS_FREQ	src/nvme/mi.h	/^	NVME_MI_CONFIG_SMBUS_FREQ = 0x1,$/;"	e	enum:nvme_mi_config_id
NVME_MI_CONFIG_SMBUS_FREQ_100kHz	src/nvme/mi.h	/^	NVME_MI_CONFIG_SMBUS_FREQ_100kHz = 0x1,$/;"	e	enum:nvme_mi_config_smbus_freq
NVME_MI_CONFIG_SMBUS_FREQ_1MHz	src/nvme/mi.h	/^	NVME_MI_CONFIG_SMBUS_FREQ_1MHz = 0x3,$/;"	e	enum:nvme_mi_config_smbus_freq
NVME_MI_CONFIG_SMBUS_FREQ_400kHz	src/nvme/mi.h	/^	NVME_MI_CONFIG_SMBUS_FREQ_400kHz = 0x2,$/;"	e	enum:nvme_mi_config_smbus_freq
NVME_MI_CSS_CCWARN	src/nvme/types.h	5567;"	d
NVME_MI_CSS_CECO	src/nvme/types.h	5560;"	d
NVME_MI_CSS_CFS	src/nvme/types.h	5557;"	d
NVME_MI_CSS_CSTS	src/nvme/types.h	5563;"	d
NVME_MI_CSS_CTEMP	src/nvme/types.h	5564;"	d
NVME_MI_CSS_FA	src/nvme/types.h	5562;"	d
NVME_MI_CSS_NAC	src/nvme/types.h	5561;"	d
NVME_MI_CSS_NSSRO	src/nvme/types.h	5559;"	d
NVME_MI_CSS_PDLU	src/nvme/types.h	5565;"	d
NVME_MI_CSS_SHST	src/nvme/types.h	5558;"	d
NVME_MI_CSS_SPARE	src/nvme/types.h	5566;"	d
NVME_MI_CSTS_CECO	src/nvme/types.h	/^	NVME_MI_CSTS_CECO	= 1 << 5,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_CFS	src/nvme/types.h	/^	NVME_MI_CSTS_CFS	= 1 << 1,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_FA	src/nvme/types.h	/^	NVME_MI_CSTS_FA		= 1 << 7,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_NAC	src/nvme/types.h	/^	NVME_MI_CSTS_NAC	= 1 << 6,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_NSSRO	src/nvme/types.h	/^	NVME_MI_CSTS_NSSRO	= 1 << 4,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_RDY	src/nvme/types.h	/^	NVME_MI_CSTS_RDY	= 1 << 0,$/;"	e	enum:nvme_mi_csts
NVME_MI_CSTS_SHST	src/nvme/types.h	/^	NVME_MI_CSTS_SHST	= 1 << 2,$/;"	e	enum:nvme_mi_csts
NVME_MI_CWARN_RD	src/nvme/types.h	/^	NVME_MI_CWARN_RD	= 1 << 2,$/;"	e	enum:nvme_mi_cwarn
NVME_MI_CWARN_RO	src/nvme/types.h	/^	NVME_MI_CWARN_RO	= 1 << 3,$/;"	e	enum:nvme_mi_cwarn
NVME_MI_CWARN_ST	src/nvme/types.h	/^	NVME_MI_CWARN_ST	= 1 << 0,$/;"	e	enum:nvme_mi_cwarn
NVME_MI_CWARN_TAUT	src/nvme/types.h	/^	NVME_MI_CWARN_TAUT	= 1 << 1,$/;"	e	enum:nvme_mi_cwarn
NVME_MI_CWARN_VMBF	src/nvme/types.h	/^	NVME_MI_CWARN_VMBF	= 1 << 4,$/;"	e	enum:nvme_mi_cwarn
NVME_MI_ELEM_ECED	src/nvme/types.h	/^	NVME_MI_ELEM_ECED	= 3,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_EED	src/nvme/types.h	/^	NVME_MI_ELEM_EED	= 1,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_LED	src/nvme/types.h	/^	NVME_MI_ELEM_LED	= 4,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_NVMED	src/nvme/types.h	/^	NVME_MI_ELEM_NVMED	= 7,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_PCIESED	src/nvme/types.h	/^	NVME_MI_ELEM_PCIESED	= 6,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_SMBMED	src/nvme/types.h	/^	NVME_MI_ELEM_SMBMED	= 5,$/;"	e	enum:nvme_mi_elem
NVME_MI_ELEM_USCE	src/nvme/types.h	/^	NVME_MI_ELEM_USCE	= 2,$/;"	e	enum:nvme_mi_elem
NVME_MI_MSGTYPE_NVME	src/nvme/mi.h	100;"	d
NVME_MI_MT_ADMIN	src/nvme/mi.h	/^	NVME_MI_MT_ADMIN = 2,$/;"	e	enum:nvme_mi_message_type
NVME_MI_MT_CONTROL	src/nvme/mi.h	/^	NVME_MI_MT_CONTROL = 0,$/;"	e	enum:nvme_mi_message_type
NVME_MI_MT_MI	src/nvme/mi.h	/^	NVME_MI_MT_MI = 1,$/;"	e	enum:nvme_mi_message_type
NVME_MI_MT_PCIE	src/nvme/mi.h	/^	NVME_MI_MT_PCIE = 4,$/;"	e	enum:nvme_mi_message_type
NVME_MI_RESP_ACCESS_DENIED	src/nvme/mi.h	/^	NVME_MI_RESP_ACCESS_DENIED = 0x07,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_DEGRADED	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_DEGRADED = 0x29,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_FAILURE	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_FAILURE = 0x25,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_FUNC_UNSUP	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_FUNC_UNSUP = 0x27,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_SERV_FAILURE	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_SERV_FAILURE = 0x23,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_SERV_UNAVAIL	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_SERV_UNAVAIL = 0x28,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_SERV_XFER_FAILURE	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_SERV_XFER_FAILURE = 0x24,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_ENC_XFER_REFUSED	src/nvme/mi.h	/^	NVME_MI_RESP_ENC_XFER_REFUSED = 0x26,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_INTERNAL_ERR	src/nvme/mi.h	/^	NVME_MI_RESP_INTERNAL_ERR = 0x02,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_INVALID_CMD_SIZE	src/nvme/mi.h	/^	NVME_MI_RESP_INVALID_CMD_SIZE = 0x05,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_INVALID_INPUT_SIZE	src/nvme/mi.h	/^	NVME_MI_RESP_INVALID_INPUT_SIZE = 0x06,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_INVALID_OPCODE	src/nvme/mi.h	/^	NVME_MI_RESP_INVALID_OPCODE = 0x03,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_INVALID_PARAM	src/nvme/mi.h	/^	NVME_MI_RESP_INVALID_PARAM = 0x04,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_MEB_SANITIZED	src/nvme/mi.h	/^	NVME_MI_RESP_MEB_SANITIZED = 0x22,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_MPR	src/nvme/mi.h	/^	NVME_MI_RESP_MPR = 0x01,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_PCIE_INACCESSIBLE	src/nvme/mi.h	/^	NVME_MI_RESP_PCIE_INACCESSIBLE = 0x21,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_SANITIZE_IN_PROGRESS	src/nvme/mi.h	/^	NVME_MI_RESP_SANITIZE_IN_PROGRESS = 0x2a,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_SUCCESS	src/nvme/mi.h	/^	NVME_MI_RESP_SUCCESS = 0x00,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_RESP_VPD_UPDATES_EXCEEDED	src/nvme/mi.h	/^	NVME_MI_RESP_VPD_UPDATES_EXCEEDED = 0x20,$/;"	e	enum:nvme_mi_resp_status
NVME_MI_ROR_REQ	src/nvme/mi.h	/^	NVME_MI_ROR_REQ = 0,$/;"	e	enum:nvme_mi_ror
NVME_MI_ROR_RSP	src/nvme/mi.h	/^	NVME_MI_ROR_RSP = 1,$/;"	e	enum:nvme_mi_ror
NVME_NAMESPACE_ATTACH_CDW10_SEL_MASK	src/nvme/ioctl.c	/^	NVME_NAMESPACE_ATTACH_CDW10_SEL_MASK			= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NAMESPACE_ATTACH_CDW10_SEL_SHIFT	src/nvme/ioctl.c	/^	NVME_NAMESPACE_ATTACH_CDW10_SEL_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NAMESPACE_MGMT_CDW10_SEL_MASK	src/nvme/ioctl.c	/^	NVME_NAMESPACE_MGMT_CDW10_SEL_MASK			= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NAMESPACE_MGMT_CDW10_SEL_SHIFT	src/nvme/ioctl.c	/^	NVME_NAMESPACE_MGMT_CDW10_SEL_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NAMESPACE_MGMT_CDW11_CSI_MASK	src/nvme/ioctl.c	/^	NVME_NAMESPACE_MGMT_CDW11_CSI_MASK			= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NAMESPACE_MGMT_CDW11_CSI_SHIFT	src/nvme/ioctl.c	/^	NVME_NAMESPACE_MGMT_CDW11_CSI_SHIFT			= 24,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_NIDT_CSI	src/nvme/types.h	/^	NVME_NIDT_CSI		= 4,$/;"	e	enum:nvme_ns_id_desc_nidt
NVME_NIDT_CSI_LEN	src/nvme/types.h	/^	NVME_NIDT_CSI_LEN		= 1,$/;"	e	enum:nvme_ns_id_desc_nidt_lens
NVME_NIDT_EUI64	src/nvme/types.h	/^	NVME_NIDT_EUI64		= 1,$/;"	e	enum:nvme_ns_id_desc_nidt
NVME_NIDT_EUI64_LEN	src/nvme/types.h	/^	NVME_NIDT_EUI64_LEN		= 8,$/;"	e	enum:nvme_ns_id_desc_nidt_lens
NVME_NIDT_NGUID	src/nvme/types.h	/^	NVME_NIDT_NGUID		= 2,$/;"	e	enum:nvme_ns_id_desc_nidt
NVME_NIDT_NGUID_LEN	src/nvme/types.h	/^	NVME_NIDT_NGUID_LEN		= 16,$/;"	e	enum:nvme_ns_id_desc_nidt_lens
NVME_NIDT_UUID	src/nvme/types.h	/^	NVME_NIDT_UUID		= 3,$/;"	e	enum:nvme_ns_id_desc_nidt
NVME_NIDT_UUID_LEN	src/nvme/types.h	/^	NVME_NIDT_UUID_LEN		= 16,$/;"	e	enum:nvme_ns_id_desc_nidt_lens
NVME_NQN_CURR	src/nvme/types.h	/^	NVME_NQN_CURR	= 3,$/;"	e	enum:nvme_subsys_type
NVME_NQN_DISC	src/nvme/types.h	/^	NVME_NQN_DISC	= 1,$/;"	e	enum:nvme_subsys_type
NVME_NQN_LENGTH	src/nvme/types.h	/^	NVME_NQN_LENGTH				= 256,$/;"	e	enum:nvme_constants
NVME_NQN_NVME	src/nvme/types.h	/^	NVME_NQN_NVME	= 2,$/;"	e	enum:nvme_subsys_type
NVME_NSID_ALL	src/nvme/types.h	/^	NVME_NSID_ALL				= 0xffffffff,$/;"	e	enum:nvme_constants
NVME_NSID_NONE	src/nvme/types.h	/^	NVME_NSID_NONE				= 0,$/;"	e	enum:nvme_constants
NVME_NS_ATTACH_SEL_CTRL_ATTACH	src/nvme/types.h	/^	NVME_NS_ATTACH_SEL_CTRL_ATTACH				= 0,$/;"	e	enum:nvme_ns_attach_sel
NVME_NS_ATTACH_SEL_CTRL_DEATTACH	src/nvme/types.h	/^	NVME_NS_ATTACH_SEL_CTRL_DEATTACH			= 1,$/;"	e	enum:nvme_ns_attach_sel
NVME_NS_DLFEAT_CRC_GUARD	src/nvme/types.h	/^	NVME_NS_DLFEAT_CRC_GUARD	= 1 << 4,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DLFEAT_RB	src/nvme/types.h	/^	NVME_NS_DLFEAT_RB		= 7 << 0,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DLFEAT_RB_ALL_0S	src/nvme/types.h	/^	NVME_NS_DLFEAT_RB_ALL_0S	= 1,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DLFEAT_RB_ALL_FS	src/nvme/types.h	/^	NVME_NS_DLFEAT_RB_ALL_FS	= 2,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DLFEAT_RB_NR	src/nvme/types.h	/^	NVME_NS_DLFEAT_RB_NR		= 0,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DLFEAT_WRITE_ZEROES	src/nvme/types.h	/^	NVME_NS_DLFEAT_WRITE_ZEROES	= 1 << 3,$/;"	e	enum:nvme_id_ns_dlfeat
NVME_NS_DPC_PI_FIRST	src/nvme/types.h	/^	NVME_NS_DPC_PI_FIRST		= 1 << 3,$/;"	e	enum:nvme_id_ns_dpc
NVME_NS_DPC_PI_LAST	src/nvme/types.h	/^	NVME_NS_DPC_PI_LAST		= 1 << 4,$/;"	e	enum:nvme_id_ns_dpc
NVME_NS_DPC_PI_TYPE1	src/nvme/types.h	/^	NVME_NS_DPC_PI_TYPE1		= 1 << 0,$/;"	e	enum:nvme_id_ns_dpc
NVME_NS_DPC_PI_TYPE2	src/nvme/types.h	/^	NVME_NS_DPC_PI_TYPE2		= 1 << 1,$/;"	e	enum:nvme_id_ns_dpc
NVME_NS_DPC_PI_TYPE3	src/nvme/types.h	/^	NVME_NS_DPC_PI_TYPE3		= 1 << 2,$/;"	e	enum:nvme_id_ns_dpc
NVME_NS_DPS_PI_FIRST	src/nvme/types.h	/^	NVME_NS_DPS_PI_FIRST		= 1 << 3,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_DPS_PI_MASK	src/nvme/types.h	/^	NVME_NS_DPS_PI_MASK		= 7 << 0,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_DPS_PI_NONE	src/nvme/types.h	/^	NVME_NS_DPS_PI_NONE		= 0,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_DPS_PI_TYPE1	src/nvme/types.h	/^	NVME_NS_DPS_PI_TYPE1		= 1,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_DPS_PI_TYPE2	src/nvme/types.h	/^	NVME_NS_DPS_PI_TYPE2		= 2,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_DPS_PI_TYPE3	src/nvme/types.h	/^	NVME_NS_DPS_PI_TYPE3		= 3,$/;"	e	enum:nvme_id_ns_dps
NVME_NS_FEAT_DULBE	src/nvme/types.h	/^	NVME_NS_FEAT_DULBE		= 1 << 2,$/;"	e	enum:nvme_id_nsfeat
NVME_NS_FEAT_ID_REUSE	src/nvme/types.h	/^	NVME_NS_FEAT_ID_REUSE		= 1 << 3,$/;"	e	enum:nvme_id_nsfeat
NVME_NS_FEAT_IO_OPT	src/nvme/types.h	/^	NVME_NS_FEAT_IO_OPT		= 1 << 4,$/;"	e	enum:nvme_id_nsfeat
NVME_NS_FEAT_NATOMIC	src/nvme/types.h	/^	NVME_NS_FEAT_NATOMIC		= 1 << 1,$/;"	e	enum:nvme_id_nsfeat
NVME_NS_FEAT_THIN	src/nvme/types.h	/^	NVME_NS_FEAT_THIN		= 1 << 0,$/;"	e	enum:nvme_id_nsfeat
NVME_NS_FLBAS_HIGHER_MASK	src/nvme/types.h	/^	NVME_NS_FLBAS_HIGHER_MASK	= 3 << 5,$/;"	e	enum:nvme_id_ns_flbas
NVME_NS_FLBAS_LOWER_MASK	src/nvme/types.h	/^	NVME_NS_FLBAS_LOWER_MASK	= 15 << 0,$/;"	e	enum:nvme_id_ns_flbas
NVME_NS_FLBAS_META_EXT	src/nvme/types.h	/^	NVME_NS_FLBAS_META_EXT		= 1 << 4,$/;"	e	enum:nvme_id_ns_flbas
NVME_NS_FPI_REMAINING	src/nvme/types.h	/^	NVME_NS_FPI_REMAINING		= 0x7f << 0,$/;"	e	enum:nvme_nd_ns_fpi
NVME_NS_FPI_SUPPORTED	src/nvme/types.h	/^	NVME_NS_FPI_SUPPORTED		= 1 << 7,$/;"	e	enum:nvme_nd_ns_fpi
NVME_NS_MC_EXTENDED	src/nvme/types.h	/^	NVME_NS_MC_EXTENDED		= 1 << 0,$/;"	e	enum:nvme_id_ns_mc
NVME_NS_MC_SEPARATE	src/nvme/types.h	/^	NVME_NS_MC_SEPARATE		= 1 << 1,$/;"	e	enum:nvme_id_ns_mc
NVME_NS_METADATA_OS_NS_NAME	src/nvme/types.h	/^	NVME_NS_METADATA_OS_NS_NAME		= 0x01,$/;"	e	enum:nvme_ns_metadata_type
NVME_NS_METADATA_OS_NS_QUAL_1	src/nvme/types.h	/^	NVME_NS_METADATA_OS_NS_QUAL_1		= 0x03,$/;"	e	enum:nvme_ns_metadata_type
NVME_NS_METADATA_OS_NS_QUAL_2	src/nvme/types.h	/^	NVME_NS_METADATA_OS_NS_QUAL_2		= 0x04,$/;"	e	enum:nvme_ns_metadata_type
NVME_NS_METADATA_PRE_BOOT_NS_NAME	src/nvme/types.h	/^	NVME_NS_METADATA_PRE_BOOT_NS_NAME	= 0x02,$/;"	e	enum:nvme_ns_metadata_type
NVME_NS_MGMT_SEL_CREATE	src/nvme/types.h	/^	NVME_NS_MGMT_SEL_CREATE					= 0,$/;"	e	enum:nvme_ns_mgmt_sel
NVME_NS_MGMT_SEL_DELETE	src/nvme/types.h	/^	NVME_NS_MGMT_SEL_DELETE					= 1,$/;"	e	enum:nvme_ns_mgmt_sel
NVME_NS_NMIC_SHARED	src/nvme/types.h	/^	NVME_NS_NMIC_SHARED		= 1 << 0,$/;"	e	enum:nvme_id_ns_nmic
NVME_NS_NSATTR_WRITE_PROTECTED	src/nvme/types.h	/^	NVME_NS_NSATTR_WRITE_PROTECTED	= 1 << 0$/;"	e	enum:nvme_id_ns_attr
NVME_NS_RESCAP_EA	src/nvme/types.h	/^	NVME_NS_RESCAP_EA		= 1 << 2,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_EAAR	src/nvme/types.h	/^	NVME_NS_RESCAP_EAAR		= 1 << 6,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_EARO	src/nvme/types.h	/^	NVME_NS_RESCAP_EARO		= 1 << 4,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_IEK_13	src/nvme/types.h	/^	NVME_NS_RESCAP_IEK_13		= 1 << 7,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_PTPL	src/nvme/types.h	/^	NVME_NS_RESCAP_PTPL		= 1 << 0,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_WE	src/nvme/types.h	/^	NVME_NS_RESCAP_WE		= 1 << 1,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_WEAR	src/nvme/types.h	/^	NVME_NS_RESCAP_WEAR		= 1 << 5,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_RESCAP_WERO	src/nvme/types.h	/^	NVME_NS_RESCAP_WERO		= 1 << 3,$/;"	e	enum:nvme_id_ns_rescap
NVME_NS_WP_CFG_NONE	src/nvme/types.h	/^	NVME_NS_WP_CFG_NONE					= 0,$/;"	e	enum:nvme_ns_write_protect_cfg
NVME_NS_WP_CFG_PROTECT	src/nvme/types.h	/^	NVME_NS_WP_CFG_PROTECT					= 1,$/;"	e	enum:nvme_ns_write_protect_cfg
NVME_NS_WP_CFG_PROTECT_PERMANENT	src/nvme/types.h	/^	NVME_NS_WP_CFG_PROTECT_PERMANENT			= 3,$/;"	e	enum:nvme_ns_write_protect_cfg
NVME_NS_WP_CFG_PROTECT_POWER_CYCLE	src/nvme/types.h	/^	NVME_NS_WP_CFG_PROTECT_POWER_CYCLE			= 2,$/;"	e	enum:nvme_ns_write_protect_cfg
NVME_NVMSET_PL_EVENT_DTWIN_EXCEEDED	src/nvme/types.h	/^	NVME_NVMSET_PL_EVENT_DTWIN_EXCEEDED	= 1 << 14,$/;"	e	enum:nvme_nvmset_pl_events
NVME_NVMSET_PL_EVENT_DTWIN_EXCURSION	src/nvme/types.h	/^	NVME_NVMSET_PL_EVENT_DTWIN_EXCURSION	= 1 << 15,$/;"	e	enum:nvme_nvmset_pl_events
NVME_NVMSET_PL_EVENT_DTWIN_READ_WARN	src/nvme/types.h	/^	NVME_NVMSET_PL_EVENT_DTWIN_READ_WARN	= 1 << 0,$/;"	e	enum:nvme_nvmset_pl_events
NVME_NVMSET_PL_EVENT_DTWIN_TIME_WARN	src/nvme/types.h	/^	NVME_NVMSET_PL_EVENT_DTWIN_TIME_WARN	= 1 << 2,$/;"	e	enum:nvme_nvmset_pl_events
NVME_NVMSET_PL_EVENT_DTWIN_WRITE_WARN	src/nvme/types.h	/^	NVME_NVMSET_PL_EVENT_DTWIN_WRITE_WARN	= 1 << 1,$/;"	e	enum:nvme_nvmset_pl_events
NVME_NVMSET_PL_STATUS_DISABLED	src/nvme/types.h	/^	NVME_NVMSET_PL_STATUS_DISABLED	= 0,$/;"	e	enum:nvme_nvmeset_pl_status
NVME_NVMSET_PL_STATUS_DTWIN	src/nvme/types.h	/^	NVME_NVMSET_PL_STATUS_DTWIN	= 1,$/;"	e	enum:nvme_nvmeset_pl_status
NVME_NVMSET_PL_STATUS_NDWIN	src/nvme/types.h	/^	NVME_NVMSET_PL_STATUS_NDWIN	= 2,$/;"	e	enum:nvme_nvmeset_pl_status
NVME_NVM_ELBAF_PIF_MASK	src/nvme/types.h	/^	NVME_NVM_ELBAF_PIF_MASK		= 3 << 7,$/;"	e	enum:nvme_nvm_id_ns_elbaf
NVME_NVM_ELBAF_STS_MASK	src/nvme/types.h	/^	NVME_NVM_ELBAF_STS_MASK		= 127 << 0,$/;"	e	enum:nvme_nvm_id_ns_elbaf
NVME_PEL_CHANGE_NS_EVENT	src/nvme/types.h	/^	NVME_PEL_CHANGE_NS_EVENT		= 0x06,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_FORMAT_COMPLETION_EVENT	src/nvme/types.h	/^	NVME_PEL_FORMAT_COMPLETION_EVENT	= 0x08,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_FORMAT_START_EVENT	src/nvme/types.h	/^	NVME_PEL_FORMAT_START_EVENT		= 0x07,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_FW_COMMIT_EVENT	src/nvme/types.h	/^	NVME_PEL_FW_COMMIT_EVENT		= 0x02,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_NSS_HW_ERROR_EVENT	src/nvme/types.h	/^	NVME_PEL_NSS_HW_ERROR_EVENT		= 0x05,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_POWER_ON_RESET_EVENT	src/nvme/types.h	/^	NVME_PEL_POWER_ON_RESET_EVENT		= 0x04,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_SANITIZE_COMPLETION_EVENT	src/nvme/types.h	/^	NVME_PEL_SANITIZE_COMPLETION_EVENT	= 0x0a,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_SANITIZE_START_EVENT	src/nvme/types.h	/^	NVME_PEL_SANITIZE_START_EVENT		= 0x09,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_SET_FEATURE_EVENT	src/nvme/types.h	/^	NVME_PEL_SET_FEATURE_EVENT		= 0x0b,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_SMART_HEALTH_EVENT	src/nvme/types.h	/^	NVME_PEL_SMART_HEALTH_EVENT		= 0x01,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_TELEMETRY_CRT	src/nvme/types.h	/^	NVME_PEL_TELEMETRY_CRT			= 0x0c,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_THERMAL_EXCURSION_EVENT	src/nvme/types.h	/^	NVME_PEL_THERMAL_EXCURSION_EVENT	= 0x0d,$/;"	e	enum:nvme_persistent_event_types
NVME_PEL_TIMESTAMP_EVENT	src/nvme/types.h	/^	NVME_PEL_TIMESTAMP_EVENT		= 0x03,$/;"	e	enum:nvme_persistent_event_types
NVME_PEVENT_LOG_EST_CTX_AND_READ	src/nvme/types.h	/^	NVME_PEVENT_LOG_EST_CTX_AND_READ	= 0x1,$/;"	e	enum:nvme_pevent_log_action
NVME_PEVENT_LOG_READ	src/nvme/types.h	/^	NVME_PEVENT_LOG_READ			= 0x0,$/;"	e	enum:nvme_pevent_log_action
NVME_PEVENT_LOG_RELEASE_CTX	src/nvme/types.h	/^	NVME_PEVENT_LOG_RELEASE_CTX		= 0x2,$/;"	e	enum:nvme_pevent_log_action
NVME_PMRCAP_BIR	src/nvme/types.h	519;"	d
NVME_PMRCAP_BIR_MASK	src/nvme/types.h	/^	NVME_PMRCAP_BIR_MASK		= 0x7,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_BIR_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_BIR_SHIFT		= 5,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_CMSS	src/nvme/types.h	523;"	d
NVME_PMRCAP_CMSS_MASK	src/nvme/types.h	/^	NVME_PMRCAP_CMSS_MASK		= 0x1,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_CMSS_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_CMSS_SHIFT		= 24,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTO	src/nvme/types.h	522;"	d
NVME_PMRCAP_PMRTO_MASK	src/nvme/types.h	/^	NVME_PMRCAP_PMRTO_MASK		= 0xff,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTO_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_PMRTO_SHIFT		= 16,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTU	src/nvme/types.h	520;"	d
NVME_PMRCAP_PMRTU_500MS	src/nvme/types.h	/^	NVME_PMRCAP_PMRTU_500MS		= 0,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTU_60S	src/nvme/types.h	/^	NVME_PMRCAP_PMRTU_60S		= 1,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTU_MASK	src/nvme/types.h	/^	NVME_PMRCAP_PMRTU_MASK		= 0x3,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRTU_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_PMRTU_SHIFT		= 8,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRWMB	src/nvme/types.h	521;"	d
NVME_PMRCAP_PMRWMB_MASK	src/nvme/types.h	/^	NVME_PMRCAP_PMRWMB_MASK		= 0xf,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_PMRWMB_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_PMRWMB_SHIFT	= 10,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_RDS	src/nvme/types.h	517;"	d
NVME_PMRCAP_RDS_MASK	src/nvme/types.h	/^	NVME_PMRCAP_RDS_MASK		= 0x1,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_RDS_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_RDS_SHIFT		= 3,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_WDS	src/nvme/types.h	518;"	d
NVME_PMRCAP_WDS_MASK	src/nvme/types.h	/^	NVME_PMRCAP_WDS_MASK		= 0x1,$/;"	e	enum:nvme_pmrcap
NVME_PMRCAP_WDS_SHIFT	src/nvme/types.h	/^	NVME_PMRCAP_WDS_SHIFT		= 4,$/;"	e	enum:nvme_pmrcap
NVME_PMRCTL_EN	src/nvme/types.h	530;"	d
NVME_PMRCTL_EN_MASK	src/nvme/types.h	/^	NVME_PMRCTL_EN_MASK	= 0x1,$/;"	e	enum:nvme_pmrctl
NVME_PMRCTL_EN_SHIFT	src/nvme/types.h	/^	NVME_PMRCTL_EN_SHIFT	= 0,$/;"	e	enum:nvme_pmrctl
NVME_PMREBS_PMRSZU	src/nvme/types.h	561;"	d
NVME_PMREBS_PMRSZU_1G	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_1G		= 3,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRSZU_1K	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_1K		= 1,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRSZU_1M	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_1M		= 2,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRSZU_B	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_B		= 0,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRSZU_MASK	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_MASK		= 0xf,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRSZU_SHIFT	src/nvme/types.h	/^	NVME_PMREBS_PMRSZU_SHIFT	= 0,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRWBZ	src/nvme/types.h	563;"	d
NVME_PMREBS_PMRWBZ_MASK	src/nvme/types.h	/^	NVME_PMREBS_PMRWBZ_MASK		= 0xffffff,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_PMRWBZ_SHIFT	src/nvme/types.h	/^	NVME_PMREBS_PMRWBZ_SHIFT	= 8,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_RBB	src/nvme/types.h	562;"	d
NVME_PMREBS_RBB_MASK	src/nvme/types.h	/^	NVME_PMREBS_RBB_MASK		= 0x1,$/;"	e	enum:nvme_pmrebs
NVME_PMREBS_RBB_SHIFT	src/nvme/types.h	/^	NVME_PMREBS_RBB_SHIFT		= 4,$/;"	e	enum:nvme_pmrebs
NVME_PMRMSC_CBA	src/nvme/types.h	612;"	d
NVME_PMRMSC_CBA_MASK	src/nvme/types.h	/^static const __u64 NVME_PMRMSC_CBA_MASK = 0xfffffffffffffull;$/;"	v
NVME_PMRMSC_CBA_SHIFT	src/nvme/types.h	/^	NVME_PMRMSC_CBA_SHIFT	= 12,$/;"	e	enum:nvme_pmrmsc
NVME_PMRMSC_CMSE	src/nvme/types.h	611;"	d
NVME_PMRMSC_CMSE_MASK	src/nvme/types.h	/^	NVME_PMRMSC_CMSE_MASK	= 0x1,$/;"	e	enum:nvme_pmrmsc
NVME_PMRMSC_CMSE_SHIFT	src/nvme/types.h	/^	NVME_PMRMSC_CMSE_SHIFT	= 1,$/;"	e	enum:nvme_pmrmsc
NVME_PMRSTS_CBAI	src/nvme/types.h	546;"	d
NVME_PMRSTS_CBAI_MASK	src/nvme/types.h	/^	NVME_PMRSTS_CBAI_MASK		= 0x1,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_CBAI_SHIFT	src/nvme/types.h	/^	NVME_PMRSTS_CBAI_SHIFT		= 12,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_ERR	src/nvme/types.h	543;"	d
NVME_PMRSTS_ERR_MASK	src/nvme/types.h	/^	NVME_PMRSTS_ERR_MASK		= 0xff,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_ERR_SHIFT	src/nvme/types.h	/^	NVME_PMRSTS_ERR_SHIFT		= 0,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_HSTS	src/nvme/types.h	545;"	d
NVME_PMRSTS_HSTS_MASK	src/nvme/types.h	/^	NVME_PMRSTS_HSTS_MASK		= 0x7,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_HSTS_SHIFT	src/nvme/types.h	/^	NVME_PMRSTS_HSTS_SHIFT		= 9,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_NRDY	src/nvme/types.h	544;"	d
NVME_PMRSTS_NRDY_MASK	src/nvme/types.h	/^	NVME_PMRSTS_NRDY_MASK		= 0x1,$/;"	e	enum:nvme_pmrsts
NVME_PMRSTS_NRDY_SHIFT	src/nvme/types.h	/^	NVME_PMRSTS_NRDY_SHIFT		= 8,$/;"	e	enum:nvme_pmrsts
NVME_PMRSWTP_PMRSWTU	src/nvme/types.h	589;"	d
NVME_PMRSWTP_PMRSWTU_BPS	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_BPS	= 0,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTU_GBPS	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_GBPS	= 3,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTU_KBPS	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_KBPS	= 1,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTU_MASK	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_MASK	= 0xf,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTU_MBPS	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_MBPS	= 2,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTU_SHIFT	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTU_SHIFT	= 0,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTV	src/nvme/types.h	590;"	d
NVME_PMRSWTP_PMRSWTV_MASK	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTV_MASK	= 0xffffff,$/;"	e	enum:nvme_pmrswtp
NVME_PMRSWTP_PMRSWTV_SHIFT	src/nvme/types.h	/^	NVME_PMRSWTP_PMRSWTV_SHIFT	= 8,$/;"	e	enum:nvme_pmrswtp
NVME_PSD_FLAGS_MXPS	src/nvme/types.h	/^	 NVME_PSD_FLAGS_MXPS		= 1 << 0,$/;"	e	enum:nvme_psd_flags
NVME_PSD_FLAGS_NOPS	src/nvme/types.h	/^	 NVME_PSD_FLAGS_NOPS		= 1 << 1,$/;"	e	enum:nvme_psd_flags
NVME_PSD_PS_100_MICRO_WATT	src/nvme/types.h	/^	 NVME_PSD_PS_100_MICRO_WATT	= 1,$/;"	e	enum:nvme_psd_ps
NVME_PSD_PS_10_MILLI_WATT	src/nvme/types.h	/^	 NVME_PSD_PS_10_MILLI_WATT	= 2,$/;"	e	enum:nvme_psd_ps
NVME_PSD_PS_NOT_REPORTED	src/nvme/types.h	/^	 NVME_PSD_PS_NOT_REPORTED	= 0,$/;"	e	enum:nvme_psd_ps
NVME_PSD_WORKLOAD_1	src/nvme/types.h	/^	 NVME_PSD_WORKLOAD_1	= 1,$/;"	e	enum:nvme_psd_workload
NVME_PSD_WORKLOAD_2	src/nvme/types.h	/^	 NVME_PSD_WORKLOAD_2	= 2,$/;"	e	enum:nvme_psd_workload
NVME_PSD_WORKLOAD_NP	src/nvme/types.h	/^	 NVME_PSD_WORKLOAD_NP	= 0,$/;"	e	enum:nvme_psd_workload
NVME_QUIRK_MIN_INTER_COMMAND_TIME	src/nvme/private.h	242;"	d
NVME_RDMA_IP_PORT	src/nvme/types.h	4922;"	d
NVME_REG_ACQ	src/nvme/types.h	/^	NVME_REG_ACQ			= 0x0030,$/;"	e	enum:nvme_register_offsets
NVME_REG_AQA	src/nvme/types.h	/^	NVME_REG_AQA			= 0x0024,$/;"	e	enum:nvme_register_offsets
NVME_REG_ASQ	src/nvme/types.h	/^	NVME_REG_ASQ			= 0x0028,$/;"	e	enum:nvme_register_offsets
NVME_REG_BPINFO	src/nvme/types.h	/^	NVME_REG_BPINFO			= 0x0040,$/;"	e	enum:nvme_register_offsets
NVME_REG_BPMBL	src/nvme/types.h	/^	NVME_REG_BPMBL			= 0x0048,$/;"	e	enum:nvme_register_offsets
NVME_REG_BPRSEL	src/nvme/types.h	/^	NVME_REG_BPRSEL			= 0x0044,$/;"	e	enum:nvme_register_offsets
NVME_REG_CAP	src/nvme/types.h	/^	NVME_REG_CAP			= 0x0000,$/;"	e	enum:nvme_register_offsets
NVME_REG_CC	src/nvme/types.h	/^	NVME_REG_CC			= 0x0014,$/;"	e	enum:nvme_register_offsets
NVME_REG_CMBLOC	src/nvme/types.h	/^	NVME_REG_CMBLOC			= 0x0038,$/;"	e	enum:nvme_register_offsets
NVME_REG_CMBMSC	src/nvme/types.h	/^	NVME_REG_CMBMSC			= 0x0050,$/;"	e	enum:nvme_register_offsets
NVME_REG_CMBSTS	src/nvme/types.h	/^	NVME_REG_CMBSTS			= 0x0058,$/;"	e	enum:nvme_register_offsets
NVME_REG_CMBSZ	src/nvme/types.h	/^	NVME_REG_CMBSZ			= 0x003c,$/;"	e	enum:nvme_register_offsets
NVME_REG_CRTO	src/nvme/types.h	/^	NVME_REG_CRTO			= 0x0068,$/;"	e	enum:nvme_register_offsets
NVME_REG_CSTS	src/nvme/types.h	/^	NVME_REG_CSTS			= 0x001c,$/;"	e	enum:nvme_register_offsets
NVME_REG_INTMC	src/nvme/types.h	/^	NVME_REG_INTMC			= 0x0010,$/;"	e	enum:nvme_register_offsets
NVME_REG_INTMS	src/nvme/types.h	/^	NVME_REG_INTMS			= 0x000c,$/;"	e	enum:nvme_register_offsets
NVME_REG_NSSR	src/nvme/types.h	/^	NVME_REG_NSSR			= 0x0020,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRCAP	src/nvme/types.h	/^	NVME_REG_PMRCAP			= 0x0e00,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRCTL	src/nvme/types.h	/^	NVME_REG_PMRCTL			= 0x0e04,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMREBS	src/nvme/types.h	/^	NVME_REG_PMREBS			= 0x0e0c,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRMSCL	src/nvme/types.h	/^	NVME_REG_PMRMSCL		= 0x0e14,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRMSCU	src/nvme/types.h	/^	NVME_REG_PMRMSCU		= 0x0e18,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRSTS	src/nvme/types.h	/^	NVME_REG_PMRSTS			= 0x0e08,$/;"	e	enum:nvme_register_offsets
NVME_REG_PMRSWTP	src/nvme/types.h	/^	NVME_REG_PMRSWTP		= 0x0e10,$/;"	e	enum:nvme_register_offsets
NVME_REG_VS	src/nvme/types.h	/^	NVME_REG_VS			= 0x0008,$/;"	e	enum:nvme_register_offsets
NVME_RESERVATION_CPTPL_CLEAR	src/nvme/types.h	/^	NVME_RESERVATION_CPTPL_CLEAR			= 2,$/;"	e	enum:nvme_resv_cptpl
NVME_RESERVATION_CPTPL_NO_CHANGE	src/nvme/types.h	/^	NVME_RESERVATION_CPTPL_NO_CHANGE		= 0,$/;"	e	enum:nvme_resv_cptpl
NVME_RESERVATION_CPTPL_PERSIST	src/nvme/types.h	/^	NVME_RESERVATION_CPTPL_PERSIST			= 3,$/;"	e	enum:nvme_resv_cptpl
NVME_RESERVATION_RACQA_ACQUIRE	src/nvme/types.h	/^	NVME_RESERVATION_RACQA_ACQUIRE			= 0,$/;"	e	enum:nvme_resv_racqa
NVME_RESERVATION_RACQA_PREEMPT	src/nvme/types.h	/^	NVME_RESERVATION_RACQA_PREEMPT			= 1,$/;"	e	enum:nvme_resv_racqa
NVME_RESERVATION_RACQA_PREEMPT_AND_ABORT	src/nvme/types.h	/^	NVME_RESERVATION_RACQA_PREEMPT_AND_ABORT	= 2,$/;"	e	enum:nvme_resv_racqa
NVME_RESERVATION_RREGA_REGISTER_KEY	src/nvme/types.h	/^	NVME_RESERVATION_RREGA_REGISTER_KEY		= 0,$/;"	e	enum:nvme_resv_rrega
NVME_RESERVATION_RREGA_REPLACE_KEY	src/nvme/types.h	/^	NVME_RESERVATION_RREGA_REPLACE_KEY		= 2,$/;"	e	enum:nvme_resv_rrega
NVME_RESERVATION_RREGA_UNREGISTER_KEY	src/nvme/types.h	/^	NVME_RESERVATION_RREGA_UNREGISTER_KEY		= 1,$/;"	e	enum:nvme_resv_rrega
NVME_RESERVATION_RRELA_CLEAR	src/nvme/types.h	/^	NVME_RESERVATION_RRELA_CLEAR			= 1$/;"	e	enum:nvme_resv_rrela
NVME_RESERVATION_RRELA_RELEASE	src/nvme/types.h	/^	NVME_RESERVATION_RRELA_RELEASE			= 0,$/;"	e	enum:nvme_resv_rrela
NVME_RESERVATION_RTYPE_EA	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_EA	= 2,$/;"	e	enum:nvme_resv_rtype
NVME_RESERVATION_RTYPE_EAAR	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_EAAR	= 6,$/;"	e	enum:nvme_resv_rtype
NVME_RESERVATION_RTYPE_EARO	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_EARO	= 4,$/;"	e	enum:nvme_resv_rtype
NVME_RESERVATION_RTYPE_WE	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_WE	= 1,$/;"	e	enum:nvme_resv_rtype
NVME_RESERVATION_RTYPE_WEAR	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_WEAR	= 5,$/;"	e	enum:nvme_resv_rtype
NVME_RESERVATION_RTYPE_WERO	src/nvme/types.h	/^	NVME_RESERVATION_RTYPE_WERO	= 3,$/;"	e	enum:nvme_resv_rtype
NVME_RESV_NOTIFY_RNLPT_EMPTY	src/nvme/types.h	/^	NVME_RESV_NOTIFY_RNLPT_EMPTY			= 0,$/;"	e	enum:nvme_resv_notify_rnlpt
NVME_RESV_NOTIFY_RNLPT_REGISTRATION_PREEMPTED	src/nvme/types.h	/^	NVME_RESV_NOTIFY_RNLPT_REGISTRATION_PREEMPTED	= 1,$/;"	e	enum:nvme_resv_notify_rnlpt
NVME_RESV_NOTIFY_RNLPT_RESERVATION_PREEMPTED	src/nvme/types.h	/^	NVME_RESV_NOTIFY_RNLPT_RESERVATION_PREEMPTED	= 3,$/;"	e	enum:nvme_resv_notify_rnlpt
NVME_RESV_NOTIFY_RNLPT_RESERVATION_RELEASED	src/nvme/types.h	/^	NVME_RESV_NOTIFY_RNLPT_RESERVATION_RELEASED	= 2,$/;"	e	enum:nvme_resv_notify_rnlpt
NVME_SANITIZE_CDW10_AUSE_MASK	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_AUSE_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_AUSE_SHIFT	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_AUSE_SHIFT				= 3,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_NODAS_MASK	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_NODAS_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_NODAS_SHIFT	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_NODAS_SHIFT				= 9,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_OIPBP_MASK	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_OIPBP_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_OIPBP_SHIFT	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_OIPBP_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_OWPASS_MASK	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_OWPASS_MASK				= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_OWPASS_SHIFT	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_OWPASS_SHIFT			= 4,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_SANACT_MASK	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_SANACT_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_CDW10_SANACT_SHIFT	src/nvme/ioctl.c	/^	NVME_SANITIZE_CDW10_SANACT_SHIFT			= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SANITIZE_SANACT_EXIT_FAILURE	src/nvme/types.h	/^	NVME_SANITIZE_SANACT_EXIT_FAILURE			= 1,$/;"	e	enum:nvme_sanitize_sanact
NVME_SANITIZE_SANACT_START_BLOCK_ERASE	src/nvme/types.h	/^	NVME_SANITIZE_SANACT_START_BLOCK_ERASE			= 2,$/;"	e	enum:nvme_sanitize_sanact
NVME_SANITIZE_SANACT_START_CRYPTO_ERASE	src/nvme/types.h	/^	NVME_SANITIZE_SANACT_START_CRYPTO_ERASE			= 4,$/;"	e	enum:nvme_sanitize_sanact
NVME_SANITIZE_SANACT_START_OVERWRITE	src/nvme/types.h	/^	NVME_SANITIZE_SANACT_START_OVERWRITE			= 3,$/;"	e	enum:nvme_sanitize_sanact
NVME_SANITIZE_SSTAT_COMPLETED_PASSES_MASK	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_COMPLETED_PASSES_MASK	= 0x1f,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_COMPLETED_PASSES_SHIFT	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_COMPLETED_PASSES_SHIFT	= 3,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED		= 1 << NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED_SHIFT,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED_MASK	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED_MASK	= 0x1,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED_SHIFT	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_GLOBAL_DATA_ERASED_SHIFT	= 8,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_COMPLETED_FAILED	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_COMPLETED_FAILED	= 3,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_COMPLETE_SUCCESS	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_COMPLETE_SUCCESS	= 1,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_IN_PROGESS	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_IN_PROGESS		= 2,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_MASK	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_MASK			= 0x7,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_ND_COMPLETE_SUCCESS	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_ND_COMPLETE_SUCCESS	= 4,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_NEVER_SANITIZED	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_NEVER_SANITIZED	= 0,$/;"	e	enum:nvme_sanitize_sstat
NVME_SANITIZE_SSTAT_STATUS_SHIFT	src/nvme/types.h	/^	NVME_SANITIZE_SSTAT_STATUS_SHIFT		= 0,$/;"	e	enum:nvme_sanitize_sstat
NVME_SCT_CMD_SPECIFIC	src/nvme/types.h	/^	NVME_SCT_CMD_SPECIFIC		= 0x1,$/;"	e	enum:nvme_status_field
NVME_SCT_GENERIC	src/nvme/types.h	/^	NVME_SCT_GENERIC		= 0x0,$/;"	e	enum:nvme_status_field
NVME_SCT_MASK	src/nvme/types.h	/^	NVME_SCT_MASK			= 0x7,$/;"	e	enum:nvme_status_field
NVME_SCT_MEDIA	src/nvme/types.h	/^	NVME_SCT_MEDIA			= 0x2,$/;"	e	enum:nvme_status_field
NVME_SCT_PATH	src/nvme/types.h	/^	NVME_SCT_PATH			= 0x3,$/;"	e	enum:nvme_status_field
NVME_SCT_SHIFT	src/nvme/types.h	/^	NVME_SCT_SHIFT			= 0x8,$/;"	e	enum:nvme_status_field
NVME_SCT_VS	src/nvme/types.h	/^	NVME_SCT_VS			= 0x7,$/;"	e	enum:nvme_status_field
NVME_SC_ABORT_LIMIT	src/nvme/types.h	/^	NVME_SC_ABORT_LIMIT			= 0x03,$/;"	e	enum:nvme_status_field
NVME_SC_ABORT_MISSING	src/nvme/types.h	/^	NVME_SC_ABORT_MISSING			= 0x04,$/;"	e	enum:nvme_status_field
NVME_SC_ABORT_QUEUE	src/nvme/types.h	/^	NVME_SC_ABORT_QUEUE			= 0x8,$/;"	e	enum:nvme_status_field
NVME_SC_ABORT_REQ	src/nvme/types.h	/^	NVME_SC_ABORT_REQ			= 0x7,$/;"	e	enum:nvme_status_field
NVME_SC_ACCESS_DENIED	src/nvme/types.h	/^	NVME_SC_ACCESS_DENIED		= 0x86,$/;"	e	enum:nvme_status_field
NVME_SC_ADMIN_CMD_MEDIA_NOT_READY	src/nvme/types.h	/^	NVME_SC_ADMIN_CMD_MEDIA_NOT_READY	= 0x24,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_ATTACH_FAILED	src/nvme/types.h	/^	NVME_SC_ANA_ATTACH_FAILED		= 0x25,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_GROUP_ID_INVALID	src/nvme/types.h	/^	NVME_SC_ANA_GROUP_ID_INVALID		= 0x24,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_INACCESSIBLE	src/nvme/types.h	/^	NVME_SC_ANA_INACCESSIBLE	= 0x02,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_INTERNAL_PATH_ERROR	src/nvme/types.h	/^	NVME_SC_ANA_INTERNAL_PATH_ERROR	= 0x00,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_PERSISTENT_LOSS	src/nvme/types.h	/^	NVME_SC_ANA_PERSISTENT_LOSS	= 0x01,$/;"	e	enum:nvme_status_field
NVME_SC_ANA_TRANSITION	src/nvme/types.h	/^	NVME_SC_ANA_TRANSITION		= 0x03,$/;"	e	enum:nvme_status_field
NVME_SC_APPTAG_CHECK	src/nvme/types.h	/^	NVME_SC_APPTAG_CHECK		= 0x83,$/;"	e	enum:nvme_status_field
NVME_SC_ASYNC_LIMIT	src/nvme/types.h	/^	NVME_SC_ASYNC_LIMIT			= 0x05,$/;"	e	enum:nvme_status_field
NVME_SC_AUTH_REQUIRED	src/nvme/types.h	/^	NVME_SC_AUTH_REQUIRED		= 0x91,$/;"	e	enum:nvme_status_field
NVME_SC_AWU_EXCEEDED	src/nvme/types.h	/^	NVME_SC_AWU_EXCEEDED			= 0x14,$/;"	e	enum:nvme_status_field
NVME_SC_BAD_ATTRIBUTES	src/nvme/types.h	/^	NVME_SC_BAD_ATTRIBUTES		= 0x80,$/;"	e	enum:nvme_status_field
NVME_SC_BP_WRITE_PROHIBITED	src/nvme/types.h	/^	NVME_SC_BP_WRITE_PROHIBITED		= 0x1e,$/;"	e	enum:nvme_status_field
NVME_SC_CAP_EXCEEDED	src/nvme/types.h	/^	NVME_SC_CAP_EXCEEDED			= 0x81,$/;"	e	enum:nvme_status_field
NVME_SC_CMB_INVALID_USE	src/nvme/types.h	/^	NVME_SC_CMB_INVALID_USE			= 0x12,$/;"	e	enum:nvme_status_field
NVME_SC_CMDID_CONFLICT	src/nvme/types.h	/^	NVME_SC_CMDID_CONFLICT			= 0x3,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_ABORTED_BY_HOST	src/nvme/types.h	/^	NVME_SC_CMD_ABORTED_BY_HOST	= 0x71,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_ABORTED_PREMEPT	src/nvme/types.h	/^	NVME_SC_CMD_ABORTED_PREMEPT		= 0x1b,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_INTERRUPTED	src/nvme/types.h	/^	NVME_SC_CMD_INTERRUPTED			= 0x21,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_IN_CMBQ_NOT_SUPP	src/nvme/types.h	/^	NVME_SC_CMD_IN_CMBQ_NOT_SUPP		= 0x1f,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_SEQ_ERROR	src/nvme/types.h	/^	NVME_SC_CMD_SEQ_ERROR			= 0xc,$/;"	e	enum:nvme_status_field
NVME_SC_CMD_SIZE_LIMIT_EXCEEDED	src/nvme/types.h	/^	NVME_SC_CMD_SIZE_LIMIT_EXCEEDED = 0x83,$/;"	e	enum:nvme_status_field
NVME_SC_COMPARE_FAILED	src/nvme/types.h	/^	NVME_SC_COMPARE_FAILED		= 0x85,$/;"	e	enum:nvme_status_field
NVME_SC_CONNECT_CTRL_BUSY	src/nvme/types.h	/^	NVME_SC_CONNECT_CTRL_BUSY	= 0x81,$/;"	e	enum:nvme_status_field
NVME_SC_CONNECT_FORMAT	src/nvme/types.h	/^	NVME_SC_CONNECT_FORMAT		= 0x80,$/;"	e	enum:nvme_status_field
NVME_SC_CONNECT_INVALID_HOST	src/nvme/types.h	/^	NVME_SC_CONNECT_INVALID_HOST	= 0x84,$/;"	e	enum:nvme_status_field
NVME_SC_CONNECT_INVALID_PARAM	src/nvme/types.h	/^	NVME_SC_CONNECT_INVALID_PARAM	= 0x82,$/;"	e	enum:nvme_status_field
NVME_SC_CONNECT_RESTART_DISC	src/nvme/types.h	/^	NVME_SC_CONNECT_RESTART_DISC	= 0x83,$/;"	e	enum:nvme_status_field
NVME_SC_CQ_INVALID	src/nvme/types.h	/^	NVME_SC_CQ_INVALID			= 0x00,$/;"	e	enum:nvme_status_field
NVME_SC_CRD	src/nvme/types.h	/^	NVME_SC_CRD			= 0x1800,$/;"	e	enum:nvme_status_field
NVME_SC_CTRL_LIST_INVALID	src/nvme/types.h	/^	NVME_SC_CTRL_LIST_INVALID		= 0x1c,$/;"	e	enum:nvme_status_field
NVME_SC_CTRL_PATH_ERROR	src/nvme/types.h	/^	NVME_SC_CTRL_PATH_ERROR		= 0x60,$/;"	e	enum:nvme_status_field
NVME_SC_DATA_XFER_ERROR	src/nvme/types.h	/^	NVME_SC_DATA_XFER_ERROR			= 0x4,$/;"	e	enum:nvme_status_field
NVME_SC_DISCONNECT_INVALID_QTYPE	src/nvme/types.h	/^	NVME_SC_DISCONNECT_INVALID_QTYPE= 0x85,$/;"	e	enum:nvme_status_field
NVME_SC_DISCOVERY_RESTART	src/nvme/types.h	/^	NVME_SC_DISCOVERY_RESTART	= 0x90,$/;"	e	enum:nvme_status_field
NVME_SC_DNR	src/nvme/types.h	/^	NVME_SC_DNR			= 0x4000,$/;"	e	enum:nvme_status_field
NVME_SC_FDP_DISABLED	src/nvme/types.h	/^	NVME_SC_FDP_DISABLED			= 0x29,$/;"	e	enum:nvme_status_field
NVME_SC_FEATURE_NOT_CHANGEABLE	src/nvme/types.h	/^	NVME_SC_FEATURE_NOT_CHANGEABLE		= 0x0e,$/;"	e	enum:nvme_status_field
NVME_SC_FEATURE_NOT_PER_NS	src/nvme/types.h	/^	NVME_SC_FEATURE_NOT_PER_NS		= 0x0f,$/;"	e	enum:nvme_status_field
NVME_SC_FEATURE_NOT_SAVEABLE	src/nvme/types.h	/^	NVME_SC_FEATURE_NOT_SAVEABLE		= 0x0d,$/;"	e	enum:nvme_status_field
NVME_SC_FIRMWARE_IMAGE	src/nvme/types.h	/^	NVME_SC_FIRMWARE_IMAGE			= 0x07,$/;"	e	enum:nvme_status_field
NVME_SC_FIRMWARE_SLOT	src/nvme/types.h	/^	NVME_SC_FIRMWARE_SLOT			= 0x06,$/;"	e	enum:nvme_status_field
NVME_SC_FORMAT_IN_PROGRESS	src/nvme/types.h	/^	NVME_SC_FORMAT_IN_PROGRESS		= 0x84,$/;"	e	enum:nvme_status_field
NVME_SC_FUSED_FAIL	src/nvme/types.h	/^	NVME_SC_FUSED_FAIL			= 0x9,$/;"	e	enum:nvme_status_field
NVME_SC_FUSED_MISSING	src/nvme/types.h	/^	NVME_SC_FUSED_MISSING			= 0xa,$/;"	e	enum:nvme_status_field
NVME_SC_FW_ACTIVATE_PROHIBITED	src/nvme/types.h	/^	NVME_SC_FW_ACTIVATE_PROHIBITED		= 0x13,$/;"	e	enum:nvme_status_field
NVME_SC_FW_NEEDS_CONV_RESET	src/nvme/types.h	/^	NVME_SC_FW_NEEDS_CONV_RESET		= 0x0b,$/;"	e	enum:nvme_status_field
NVME_SC_FW_NEEDS_MAX_TIME	src/nvme/types.h	/^	NVME_SC_FW_NEEDS_MAX_TIME		= 0x12,$/;"	e	enum:nvme_status_field
NVME_SC_FW_NEEDS_RESET	src/nvme/types.h	/^	NVME_SC_FW_NEEDS_RESET			= 0x11,$/;"	e	enum:nvme_status_field
NVME_SC_FW_NEEDS_SUBSYS_RESET	src/nvme/types.h	/^	NVME_SC_FW_NEEDS_SUBSYS_RESET		= 0x10,$/;"	e	enum:nvme_status_field
NVME_SC_GUARD_CHECK	src/nvme/types.h	/^	NVME_SC_GUARD_CHECK		= 0x82,$/;"	e	enum:nvme_status_field
NVME_SC_HOSTID_FORMAT	src/nvme/types.h	/^	NVME_SC_HOSTID_FORMAT			= 0x18,$/;"	e	enum:nvme_status_field
NVME_SC_HOST_PATH_ERROR	src/nvme/types.h	/^	NVME_SC_HOST_PATH_ERROR		= 0x70,$/;"	e	enum:nvme_status_field
NVME_SC_ID_UNAVAILABLE	src/nvme/types.h	/^	NVME_SC_ID_UNAVAILABLE			= 0x2d,$/;"	e	enum:nvme_status_field
NVME_SC_INSUFFICIENT_CAP	src/nvme/types.h	/^	NVME_SC_INSUFFICIENT_CAP		= 0x26,$/;"	e	enum:nvme_status_field
NVME_SC_INSUFFICIENT_DISC_RES	src/nvme/types.h	/^	NVME_SC_INSUFFICIENT_DISC_RES		= 0x32,$/;"	e	enum:nvme_status_field
NVME_SC_INTERNAL	src/nvme/types.h	/^	NVME_SC_INTERNAL			= 0x6,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_CTRL_ID	src/nvme/types.h	/^	NVME_SC_INVALID_CTRL_ID			= 0x1f,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_CTRL_RESOURCES	src/nvme/types.h	/^	NVME_SC_INVALID_CTRL_RESOURCES		= 0x21,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_DISCOVERY_INFO	src/nvme/types.h	/^	NVME_SC_INVALID_DISCOVERY_INFO		= 0x2f,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_FIELD	src/nvme/types.h	/^	NVME_SC_INVALID_FIELD			= 0x2,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_FORMAT	src/nvme/types.h	/^	NVME_SC_INVALID_FORMAT			= 0x0a,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_IOCS	src/nvme/types.h	/^	NVME_SC_INVALID_IOCS			= 0x2c,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_LOG_PAGE	src/nvme/types.h	/^	NVME_SC_INVALID_LOG_PAGE		= 0x09,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_NS	src/nvme/types.h	/^	NVME_SC_INVALID_NS			= 0xb,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_OPCODE	src/nvme/types.h	/^	NVME_SC_INVALID_OPCODE			= 0x1,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_PI	src/nvme/types.h	/^	NVME_SC_INVALID_PI		= 0x81,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_PLACEMENT_HANDLE_LIST	src/nvme/types.h	/^	NVME_SC_INVALID_PLACEMENT_HANDLE_LIST	= 0x2A,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_QUEUE	src/nvme/types.h	/^	NVME_SC_INVALID_QUEUE			= 0x0c,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_RESOURCE_ID	src/nvme/types.h	/^	NVME_SC_INVALID_RESOURCE_ID		= 0x22,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_SEC_CTRL_STATE	src/nvme/types.h	/^	NVME_SC_INVALID_SEC_CTRL_STATE		= 0x20,$/;"	e	enum:nvme_status_field
NVME_SC_INVALID_VECTOR	src/nvme/types.h	/^	NVME_SC_INVALID_VECTOR			= 0x08,$/;"	e	enum:nvme_status_field
NVME_SC_IOCS_COMBINATION_REJECTED	src/nvme/types.h	/^	NVME_SC_IOCS_COMBINATION_REJECTED	= 0x2b,$/;"	e	enum:nvme_status_field
NVME_SC_IOCS_NOT_ENABLED	src/nvme/types.h	/^	NVME_SC_IOCS_NOT_ENABLED		= 0x2a,$/;"	e	enum:nvme_status_field
NVME_SC_IOCS_NOT_SUPPORTED	src/nvme/types.h	/^	NVME_SC_IOCS_NOT_SUPPORTED		= 0x29,$/;"	e	enum:nvme_status_field
NVME_SC_KAT_EXPIRED	src/nvme/types.h	/^	NVME_SC_KAT_EXPIRED			= 0x19,$/;"	e	enum:nvme_status_field
NVME_SC_KAT_INVALID	src/nvme/types.h	/^	NVME_SC_KAT_INVALID			= 0x1a,$/;"	e	enum:nvme_status_field
NVME_SC_LBA_RANGE	src/nvme/types.h	/^	NVME_SC_LBA_RANGE			= 0x80,$/;"	e	enum:nvme_status_field
NVME_SC_MASK	src/nvme/types.h	/^	NVME_SC_MASK			= 0xff,$/;"	e	enum:nvme_status_field
NVME_SC_MORE	src/nvme/types.h	/^	NVME_SC_MORE			= 0x2000,$/;"	e	enum:nvme_status_field
NVME_SC_NS_ALREADY_ATTACHED	src/nvme/types.h	/^	NVME_SC_NS_ALREADY_ATTACHED		= 0x18,$/;"	e	enum:nvme_status_field
NVME_SC_NS_ATTACHMENT_LIMIT_EXCEEDED	src/nvme/types.h	/^	NVME_SC_NS_ATTACHMENT_LIMIT_EXCEEDED	= 0x27,$/;"	e	enum:nvme_status_field
NVME_SC_NS_ID_UNAVAILABLE	src/nvme/types.h	/^	NVME_SC_NS_ID_UNAVAILABLE		= 0x16,$/;"	e	enum:nvme_status_field
NVME_SC_NS_INSUFFICIENT_CAP	src/nvme/types.h	/^	NVME_SC_NS_INSUFFICIENT_CAP		= 0x15,$/;"	e	enum:nvme_status_field
NVME_SC_NS_IS_PRIVATE	src/nvme/types.h	/^	NVME_SC_NS_IS_PRIVATE			= 0x19,$/;"	e	enum:nvme_status_field
NVME_SC_NS_NOT_ATTACHED	src/nvme/types.h	/^	NVME_SC_NS_NOT_ATTACHED			= 0x1a,$/;"	e	enum:nvme_status_field
NVME_SC_NS_NOT_READY	src/nvme/types.h	/^	NVME_SC_NS_NOT_READY			= 0x82,$/;"	e	enum:nvme_status_field
NVME_SC_NS_WRITE_PROTECTED	src/nvme/types.h	/^	NVME_SC_NS_WRITE_PROTECTED		= 0x20,$/;"	e	enum:nvme_status_field
NVME_SC_OP_DENIED	src/nvme/types.h	/^	NVME_SC_OP_DENIED			= 0x15,$/;"	e	enum:nvme_status_field
NVME_SC_OVERLAPPING_RANGE	src/nvme/types.h	/^	NVME_SC_OVERLAPPING_RANGE		= 0x14,$/;"	e	enum:nvme_status_field
NVME_SC_PMR_SAN_PROHIBITED	src/nvme/types.h	/^	NVME_SC_PMR_SAN_PROHIBITED		= 0x23,$/;"	e	enum:nvme_status_field
NVME_SC_POWER_LOSS	src/nvme/types.h	/^	NVME_SC_POWER_LOSS			= 0x5,$/;"	e	enum:nvme_status_field
NVME_SC_PROHIBITED_BY_CMD_AND_FEAT	src/nvme/types.h	/^	NVME_SC_PROHIBITED_BY_CMD_AND_FEAT	= 0x23,$/;"	e	enum:nvme_status_field
NVME_SC_PROHIBIT_CMD_EXEC_NOT_SUPPORTED	src/nvme/types.h	/^	NVME_SC_PROHIBIT_CMD_EXEC_NOT_SUPPORTED = 0x28,$/;"	e	enum:nvme_status_field
NVME_SC_PRP_INVALID_OFFSET	src/nvme/types.h	/^	NVME_SC_PRP_INVALID_OFFSET		= 0x13,$/;"	e	enum:nvme_status_field
NVME_SC_QID_INVALID	src/nvme/types.h	/^	NVME_SC_QID_INVALID			= 0x01,$/;"	e	enum:nvme_status_field
NVME_SC_QUEUE_SIZE	src/nvme/types.h	/^	NVME_SC_QUEUE_SIZE			= 0x02,$/;"	e	enum:nvme_status_field
NVME_SC_READ_ERROR	src/nvme/types.h	/^	NVME_SC_READ_ERROR		= 0x81,$/;"	e	enum:nvme_status_field
NVME_SC_READ_ONLY	src/nvme/types.h	/^	NVME_SC_READ_ONLY		= 0x82,$/;"	e	enum:nvme_status_field
NVME_SC_REFTAG_CHECK	src/nvme/types.h	/^	NVME_SC_REFTAG_CHECK		= 0x84,$/;"	e	enum:nvme_status_field
NVME_SC_REQSTD_FUNCTION_DISABLED	src/nvme/types.h	/^	NVME_SC_REQSTD_FUNCTION_DISABLED	= 0x33,$/;"	e	enum:nvme_status_field
NVME_SC_RESERVATION_CONFLICT	src/nvme/types.h	/^	NVME_SC_RESERVATION_CONFLICT		= 0x83,$/;"	e	enum:nvme_status_field
NVME_SC_SANITIZE_FAILED	src/nvme/types.h	/^	NVME_SC_SANITIZE_FAILED			= 0x1c,$/;"	e	enum:nvme_status_field
NVME_SC_SANITIZE_IN_PROGRESS	src/nvme/types.h	/^	NVME_SC_SANITIZE_IN_PROGRESS		= 0x1d,$/;"	e	enum:nvme_status_field
NVME_SC_SELF_TEST_IN_PROGRESS	src/nvme/types.h	/^	NVME_SC_SELF_TEST_IN_PROGRESS		= 0x1d,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_COUNT	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_COUNT		= 0xe,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_DATA	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_DATA		= 0xf,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_GRANULARITY	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_GRANULARITY		= 0x1e,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_LAST	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_LAST		= 0xd,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_METADATA	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_METADATA		= 0x10,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_OFFSET	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_OFFSET		= 0x16,$/;"	e	enum:nvme_status_field
NVME_SC_SGL_INVALID_TYPE	src/nvme/types.h	/^	NVME_SC_SGL_INVALID_TYPE		= 0x11,$/;"	e	enum:nvme_status_field
NVME_SC_SHIFT	src/nvme/types.h	/^	NVME_SC_SHIFT			= 0x0,$/;"	e	enum:nvme_status_field
NVME_SC_STORAGE_TAG_CHECK	src/nvme/types.h	/^	NVME_SC_STORAGE_TAG_CHECK	= 0x88,$/;"	e	enum:nvme_status_field
NVME_SC_SUCCESS	src/nvme/types.h	/^	NVME_SC_SUCCESS				= 0x0,$/;"	e	enum:nvme_status_field
NVME_SC_THIN_PROV_NOT_SUPP	src/nvme/types.h	/^	NVME_SC_THIN_PROV_NOT_SUPP		= 0x1b,$/;"	e	enum:nvme_status_field
NVME_SC_TRAN_TPORT_ERROR	src/nvme/types.h	/^	NVME_SC_TRAN_TPORT_ERROR		= 0x22,$/;"	e	enum:nvme_status_field
NVME_SC_UNWRITTEN_BLOCK	src/nvme/types.h	/^	NVME_SC_UNWRITTEN_BLOCK		= 0x87,$/;"	e	enum:nvme_status_field
NVME_SC_WRITE_FAULT	src/nvme/types.h	/^	NVME_SC_WRITE_FAULT		= 0x80,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_BOUNDARY_ERROR	src/nvme/types.h	/^	NVME_SC_ZNS_BOUNDARY_ERROR	       = 0xb8,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_FULL	src/nvme/types.h	/^	NVME_SC_ZNS_FULL		       = 0xb9,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_INVALID_OP_REQUEST	src/nvme/types.h	/^	NVME_SC_ZNS_INVALID_OP_REQUEST	       = 0xb6,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_INVALID_WRITE	src/nvme/types.h	/^	NVME_SC_ZNS_INVALID_WRITE	       = 0xbc,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_INVAL_TRANSITION	src/nvme/types.h	/^	NVME_SC_ZNS_INVAL_TRANSITION	       = 0xbf,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_OFFLINE	src/nvme/types.h	/^	NVME_SC_ZNS_OFFLINE		       = 0xbb,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_READ_ONLY	src/nvme/types.h	/^	NVME_SC_ZNS_READ_ONLY		       = 0xba,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_TOO_MANY_ACTIVE	src/nvme/types.h	/^	NVME_SC_ZNS_TOO_MANY_ACTIVE	       = 0xbd,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_TOO_MANY_OPENS	src/nvme/types.h	/^	NVME_SC_ZNS_TOO_MANY_OPENS	       = 0xbe,$/;"	e	enum:nvme_status_field
NVME_SC_ZNS_ZRWA_RESOURCES_UNAVAILABLE	src/nvme/types.h	/^	NVME_SC_ZNS_ZRWA_RESOURCES_UNAVAILABLE = 0xb7,$/;"	e	enum:nvme_status_field
NVME_SC_ZONEGRP_ORIGINATOR_INVLD	src/nvme/types.h	/^	NVME_SC_ZONEGRP_ORIGINATOR_INVLD	= 0x34,$/;"	e	enum:nvme_status_field
NVME_SC_ZONING_DATA_STRUCT_LOCKED	src/nvme/types.h	/^	NVME_SC_ZONING_DATA_STRUCT_LOCKED	= 0x30,$/;"	e	enum:nvme_status_field
NVME_SC_ZONING_DATA_STRUCT_NOTFND	src/nvme/types.h	/^	NVME_SC_ZONING_DATA_STRUCT_NOTFND	= 0x31,$/;"	e	enum:nvme_status_field
NVME_SECURITY_NSSF_MASK	src/nvme/ioctl.c	/^	NVME_SECURITY_NSSF_MASK					= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_NSSF_SHIFT	src/nvme/ioctl.c	/^	NVME_SECURITY_NSSF_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SECP_MASK	src/nvme/ioctl.c	/^	NVME_SECURITY_SECP_MASK					= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SECP_SHIFT	src/nvme/ioctl.c	/^	NVME_SECURITY_SECP_SHIFT				= 24,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SPSP0_MASK	src/nvme/ioctl.c	/^	NVME_SECURITY_SPSP0_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SPSP0_SHIFT	src/nvme/ioctl.c	/^	NVME_SECURITY_SPSP0_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SPSP1_MASK	src/nvme/ioctl.c	/^	NVME_SECURITY_SPSP1_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SECURITY_SPSP1_SHIFT	src/nvme/ioctl.c	/^	NVME_SECURITY_SPSP1_SHIFT				= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SET	src/nvme/types.h	45;"	d
NVME_SET_FEATURES_CDW10_SAVE_MASK	src/nvme/ioctl.c	/^	NVME_SET_FEATURES_CDW10_SAVE_MASK			= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SET_FEATURES_CDW10_SAVE_SHIFT	src/nvme/ioctl.c	/^	NVME_SET_FEATURES_CDW10_SAVE_SHIFT			= 31,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_SMART_CRIT_DEGRADED	src/nvme/types.h	/^	NVME_SMART_CRIT_DEGRADED	= 1 << 2,$/;"	e	enum:nvme_smart_crit
NVME_SMART_CRIT_MEDIA	src/nvme/types.h	/^	NVME_SMART_CRIT_MEDIA		= 1 << 3,$/;"	e	enum:nvme_smart_crit
NVME_SMART_CRIT_PMR_RO	src/nvme/types.h	/^	NVME_SMART_CRIT_PMR_RO		= 1 << 5,$/;"	e	enum:nvme_smart_crit
NVME_SMART_CRIT_SPARE	src/nvme/types.h	/^	NVME_SMART_CRIT_SPARE		= 1 << 0,$/;"	e	enum:nvme_smart_crit
NVME_SMART_CRIT_TEMPERATURE	src/nvme/types.h	/^	NVME_SMART_CRIT_TEMPERATURE	= 1 << 1,$/;"	e	enum:nvme_smart_crit
NVME_SMART_CRIT_VOLATILE_MEMORY	src/nvme/types.h	/^	NVME_SMART_CRIT_VOLATILE_MEMORY	= 1 << 4,$/;"	e	enum:nvme_smart_crit
NVME_SMART_EGCW_DEGRADED	src/nvme/types.h	/^	NVME_SMART_EGCW_DEGRADED	= 1 << 2,$/;"	e	enum:nvme_smart_egcw
NVME_SMART_EGCW_RO	src/nvme/types.h	/^	NVME_SMART_EGCW_RO		= 1 << 3,$/;"	e	enum:nvme_smart_egcw
NVME_SMART_EGCW_SPARE	src/nvme/types.h	/^	NVME_SMART_EGCW_SPARE		= 1 << 0,$/;"	e	enum:nvme_smart_egcw
NVME_STATUS_TYPE_MASK	src/nvme/types.h	/^	NVME_STATUS_TYPE_MASK		= 0x7,$/;"	e	enum:nvme_status_type
NVME_STATUS_TYPE_MI	src/nvme/types.h	/^	NVME_STATUS_TYPE_MI		= 1,$/;"	e	enum:nvme_status_type
NVME_STATUS_TYPE_NVME	src/nvme/types.h	/^	NVME_STATUS_TYPE_NVME		= 0,$/;"	e	enum:nvme_status_type
NVME_STATUS_TYPE_SHIFT	src/nvme/types.h	/^	NVME_STATUS_TYPE_SHIFT		= 27,$/;"	e	enum:nvme_status_type
NVME_ST_CODE_ABORT	src/nvme/types.h	/^	NVME_ST_CODE_ABORT		= 0xf,$/;"	e	enum:nvme_st_code
NVME_ST_CODE_EXTENDED	src/nvme/types.h	/^	NVME_ST_CODE_EXTENDED		= 0x2,$/;"	e	enum:nvme_st_code
NVME_ST_CODE_RESERVED	src/nvme/types.h	/^	NVME_ST_CODE_RESERVED		= 0x0,$/;"	e	enum:nvme_st_code
NVME_ST_CODE_SHIFT	src/nvme/types.h	/^	NVME_ST_CODE_SHIFT		= 4,$/;"	e	enum:nvme_st_code
NVME_ST_CODE_SHORT	src/nvme/types.h	/^	NVME_ST_CODE_SHORT		= 0x1,$/;"	e	enum:nvme_st_code
NVME_ST_CODE_VS	src/nvme/types.h	/^	NVME_ST_CODE_VS			= 0xe,$/;"	e	enum:nvme_st_code
NVME_ST_CURR_OP_CMPL_MASK	src/nvme/types.h	/^	NVME_ST_CURR_OP_CMPL_MASK	= 0x7f,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_EXTENDED	src/nvme/types.h	/^	NVME_ST_CURR_OP_EXTENDED	= 0x2,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_MASK	src/nvme/types.h	/^	NVME_ST_CURR_OP_MASK		= 0xf,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_NOT_RUNNING	src/nvme/types.h	/^	NVME_ST_CURR_OP_NOT_RUNNING	= 0x0,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_RESERVED	src/nvme/types.h	/^	NVME_ST_CURR_OP_RESERVED	= 0xf,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_SHORT	src/nvme/types.h	/^	NVME_ST_CURR_OP_SHORT		= 0x1,$/;"	e	enum:nvme_st_curr_op
NVME_ST_CURR_OP_VS	src/nvme/types.h	/^	NVME_ST_CURR_OP_VS		= 0xe,$/;"	e	enum:nvme_st_curr_op
NVME_ST_RESULT_ABORTED	src/nvme/types.h	/^	NVME_ST_RESULT_ABORTED		= 0x1,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_ABORTED_FORMAT	src/nvme/types.h	/^	NVME_ST_RESULT_ABORTED_FORMAT	= 0x4,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_ABORTED_SANITIZE	src/nvme/types.h	/^	NVME_ST_RESULT_ABORTED_SANITIZE	= 0x9,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_ABORTED_UNKNOWN	src/nvme/types.h	/^	NVME_ST_RESULT_ABORTED_UNKNOWN	= 0x8,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_CLR	src/nvme/types.h	/^	NVME_ST_RESULT_CLR		= 0x2,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_FATAL_ERR	src/nvme/types.h	/^	NVME_ST_RESULT_FATAL_ERR	= 0x5,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_KNOWN_SEG_FAIL	src/nvme/types.h	/^	NVME_ST_RESULT_KNOWN_SEG_FAIL	= 0x7,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_MASK	src/nvme/types.h	/^	NVME_ST_RESULT_MASK		= 0xf,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_NOT_USED	src/nvme/types.h	/^	NVME_ST_RESULT_NOT_USED		= 0xf,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_NO_ERR	src/nvme/types.h	/^	NVME_ST_RESULT_NO_ERR		= 0x0,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_NS_REMOVED	src/nvme/types.h	/^	NVME_ST_RESULT_NS_REMOVED	= 0x3,$/;"	e	enum:nvme_status_result
NVME_ST_RESULT_UNKNOWN_SEG_FAIL	src/nvme/types.h	/^	NVME_ST_RESULT_UNKNOWN_SEG_FAIL	= 0x6,$/;"	e	enum:nvme_status_result
NVME_ST_VALID_DIAG_INFO_FLBA	src/nvme/types.h	/^	NVME_ST_VALID_DIAG_INFO_FLBA		= 1 << 1,$/;"	e	enum:nvme_st_valid_diag_info
NVME_ST_VALID_DIAG_INFO_NSID	src/nvme/types.h	/^	NVME_ST_VALID_DIAG_INFO_NSID		= 1 << 0,$/;"	e	enum:nvme_st_valid_diag_info
NVME_ST_VALID_DIAG_INFO_SC	src/nvme/types.h	/^	NVME_ST_VALID_DIAG_INFO_SC		= 1 << 3,$/;"	e	enum:nvme_st_valid_diag_info
NVME_ST_VALID_DIAG_INFO_SCT	src/nvme/types.h	/^	NVME_ST_VALID_DIAG_INFO_SCT		= 1 << 2,$/;"	e	enum:nvme_st_valid_diag_info
NVME_TELEMETRY_DA_1	src/nvme/linux.h	/^	NVME_TELEMETRY_DA_1	= 1,$/;"	e	enum:nvme_telemetry_da
NVME_TELEMETRY_DA_2	src/nvme/linux.h	/^	NVME_TELEMETRY_DA_2	= 2,$/;"	e	enum:nvme_telemetry_da
NVME_TELEMETRY_DA_3	src/nvme/linux.h	/^	NVME_TELEMETRY_DA_3	= 3,$/;"	e	enum:nvme_telemetry_da
NVME_TELEMETRY_DA_4	src/nvme/linux.h	/^	NVME_TELEMETRY_DA_4	= 4,$/;"	e	enum:nvme_telemetry_da
NVME_TERTIARY	src/nvme/types.h	292;"	d
NVME_URING_CMD_IO	src/nvme/ioctl.h	181;"	d
NVME_URING_CMD_IO_VEC	src/nvme/ioctl.h	182;"	d
NVME_UUID_LEN	src/nvme/util.h	602;"	d
NVME_UUID_LEN_STRING	src/nvme/util.h	601;"	d
NVME_UUID_NONE	src/nvme/types.h	/^	NVME_UUID_NONE				= 0,$/;"	e	enum:nvme_constants
NVME_VERSION_GIT	src/nvme/util.h	/^	NVME_VERSION_GIT	= 1,$/;"	e	enum:nvme_version
NVME_VERSION_PROJECT	src/nvme/util.h	/^	NVME_VERSION_PROJECT	= 0,$/;"	e	enum:nvme_version
NVME_VIRT_MGMT_ACT_ASSIGN_SEC_CTRL	src/nvme/types.h	/^	NVME_VIRT_MGMT_ACT_ASSIGN_SEC_CTRL			= 8,$/;"	e	enum:nvme_virt_mgmt_act
NVME_VIRT_MGMT_ACT_OFFLINE_SEC_CTRL	src/nvme/types.h	/^	NVME_VIRT_MGMT_ACT_OFFLINE_SEC_CTRL			= 7,$/;"	e	enum:nvme_virt_mgmt_act
NVME_VIRT_MGMT_ACT_ONLINE_SEC_CTRL	src/nvme/types.h	/^	NVME_VIRT_MGMT_ACT_ONLINE_SEC_CTRL			= 9,$/;"	e	enum:nvme_virt_mgmt_act
NVME_VIRT_MGMT_ACT_PRIM_CTRL_FLEX_ALLOC	src/nvme/types.h	/^	NVME_VIRT_MGMT_ACT_PRIM_CTRL_FLEX_ALLOC			= 1,$/;"	e	enum:nvme_virt_mgmt_act
NVME_VIRT_MGMT_CDW10_ACT_MASK	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_ACT_MASK				= 0xf,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW10_ACT_SHIFT	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_ACT_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW10_CNTLID_MASK	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_CNTLID_MASK			= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW10_CNTLID_SHIFT	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_CNTLID_SHIFT			= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW10_RT_MASK	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_RT_MASK				= 0x7,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW10_RT_SHIFT	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW10_RT_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW11_NR_MASK	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW11_NR_MASK				= 0xffff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_CDW11_NR_SHIFT	src/nvme/ioctl.c	/^	NVME_VIRT_MGMT_CDW11_NR_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_VIRT_MGMT_RT_VI_RESOURCE	src/nvme/types.h	/^	NVME_VIRT_MGMT_RT_VI_RESOURCE				= 1,$/;"	e	enum:nvme_virt_mgmt_rt
NVME_VIRT_MGMT_RT_VQ_RESOURCE	src/nvme/types.h	/^	NVME_VIRT_MGMT_RT_VQ_RESOURCE				= 0,$/;"	e	enum:nvme_virt_mgmt_rt
NVME_VS_MJR	src/nvme/types.h	288;"	d
NVME_VS_MJR_MASK	src/nvme/types.h	/^	NVME_VS_MJR_MASK		= 0xffff,$/;"	e	enum:nvme_vs
NVME_VS_MJR_SHIFT	src/nvme/types.h	/^	NVME_VS_MJR_SHIFT		= 16,$/;"	e	enum:nvme_vs
NVME_VS_MNR	src/nvme/types.h	287;"	d
NVME_VS_MNR_MASK	src/nvme/types.h	/^	NVME_VS_MNR_MASK		= 0xff,$/;"	e	enum:nvme_vs
NVME_VS_MNR_SHIFT	src/nvme/types.h	/^	NVME_VS_MNR_SHIFT		= 8,$/;"	e	enum:nvme_vs
NVME_VS_TER	src/nvme/types.h	286;"	d
NVME_VS_TER_MASK	src/nvme/types.h	/^	NVME_VS_TER_MASK		= 0xff,$/;"	e	enum:nvme_vs
NVME_VS_TER_SHIFT	src/nvme/types.h	/^	NVME_VS_TER_SHIFT		= 0,$/;"	e	enum:nvme_vs
NVME_ZNS_CHANGED_ZONES_MAX	src/nvme/types.h	/^	NVME_ZNS_CHANGED_ZONES_MAX		= 511,$/;"	e	enum:nvme_constants
NVME_ZNS_MGMT_RECV_ZRASF_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRASF_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_RECV_ZRASF_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRASF_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_RECV_ZRAS_FEAT_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRAS_FEAT_MASK			= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_RECV_ZRAS_FEAT_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRAS_FEAT_SHIFT			= 16,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_RECV_ZRA_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRA_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_RECV_ZRA_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_RECV_ZRA_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_SEL_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_SEL_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_SEL_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_SEL_SHIFT				= 8,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_ZSASO_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_ZSASO_MASK				= 0x1,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_ZSASO_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_ZSASO_SHIFT				= 9,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_ZSA_MASK	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_ZSA_MASK				= 0xff,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_MGMT_SEND_ZSA_SHIFT	src/nvme/ioctl.c	/^	NVME_ZNS_MGMT_SEND_ZSA_SHIFT				= 0,$/;"	e	enum:nvme_cmd_dword_fields	file:
NVME_ZNS_ZA_FZR	src/nvme/types.h	/^	NVME_ZNS_ZA_FZR			= 1 << 1,$/;"	e	enum:nvme_zns_za
NVME_ZNS_ZA_RZR	src/nvme/types.h	/^	NVME_ZNS_ZA_RZR			= 1 << 2,$/;"	e	enum:nvme_zns_za
NVME_ZNS_ZA_ZDEV	src/nvme/types.h	/^	NVME_ZNS_ZA_ZDEV		= 1 << 7,$/;"	e	enum:nvme_zns_za
NVME_ZNS_ZA_ZFC	src/nvme/types.h	/^	NVME_ZNS_ZA_ZFC			= 1 << 0,$/;"	e	enum:nvme_zns_za
NVME_ZNS_ZA_ZRWAV	src/nvme/types.h	/^	NVME_ZNS_ZA_ZRWAV		= 1 << 3,$/;"	e	enum:nvme_zns_za
NVME_ZNS_ZRAS_REPORT_ALL	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_ALL		= 0x0,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_CLOSED	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_CLOSED		= 0x4,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_EMPTY	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_EMPTY		= 0x1,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_EXPL_OPENED	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_EXPL_OPENED	= 0x3,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_FULL	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_FULL		= 0x5,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_IMPL_OPENED	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_IMPL_OPENED	= 0x2,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_OFFLINE	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_OFFLINE		= 0x7,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRAS_REPORT_READ_ONLY	src/nvme/types.h	/^	NVME_ZNS_ZRAS_REPORT_READ_ONLY		= 0x6,$/;"	e	enum:nvme_zns_report_options
NVME_ZNS_ZRA_EXTENDED_REPORT_ZONES	src/nvme/types.h	/^	NVME_ZNS_ZRA_EXTENDED_REPORT_ZONES	= 0x1,$/;"	e	enum:nvme_zns_recv_action
NVME_ZNS_ZRA_REPORT_ZONES	src/nvme/types.h	/^	NVME_ZNS_ZRA_REPORT_ZONES		= 0x0,$/;"	e	enum:nvme_zns_recv_action
NVME_ZNS_ZSA_CLOSE	src/nvme/types.h	/^	NVME_ZNS_ZSA_CLOSE		= 0x1,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_FINISH	src/nvme/types.h	/^	NVME_ZNS_ZSA_FINISH		= 0x2,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_OFFLINE	src/nvme/types.h	/^	NVME_ZNS_ZSA_OFFLINE		= 0x5,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_OPEN	src/nvme/types.h	/^	NVME_ZNS_ZSA_OPEN		= 0x3,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_RESET	src/nvme/types.h	/^	NVME_ZNS_ZSA_RESET		= 0x4,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_SET_DESC_EXT	src/nvme/types.h	/^	NVME_ZNS_ZSA_SET_DESC_EXT	= 0x10,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZSA_ZRWA_FLUSH	src/nvme/types.h	/^	NVME_ZNS_ZSA_ZRWA_FLUSH		= 0x11,$/;"	e	enum:nvme_zns_send_action
NVME_ZNS_ZS_CLOSED	src/nvme/types.h	/^	NVME_ZNS_ZS_CLOSED		= 0x4,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_EMPTY	src/nvme/types.h	/^	NVME_ZNS_ZS_EMPTY		= 0x1,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_EXPL_OPEN	src/nvme/types.h	/^	NVME_ZNS_ZS_EXPL_OPEN		= 0x3,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_FULL	src/nvme/types.h	/^	NVME_ZNS_ZS_FULL		= 0xe,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_IMPL_OPEN	src/nvme/types.h	/^	NVME_ZNS_ZS_IMPL_OPEN		= 0x2,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_OFFLINE	src/nvme/types.h	/^	NVME_ZNS_ZS_OFFLINE		= 0xf,$/;"	e	enum:nvme_zns_zs
NVME_ZNS_ZS_READ_ONLY	src/nvme/types.h	/^	NVME_ZNS_ZS_READ_ONLY		= 0xd,$/;"	e	enum:nvme_zns_zs
NVME_ZONE_TYPE_SEQWRITE_REQ	src/nvme/types.h	/^	NVME_ZONE_TYPE_SEQWRITE_REQ	= 0x2,$/;"	e	enum:nvme_zns_zt
NVMF_ADDR_FAMILY_FC	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_FC	= 4,$/;"	e	enum:nvmf_addr_family
NVMF_ADDR_FAMILY_IB	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_IB	= 3,$/;"	e	enum:nvmf_addr_family
NVMF_ADDR_FAMILY_IP4	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_IP4	= 1,$/;"	e	enum:nvmf_addr_family
NVMF_ADDR_FAMILY_IP6	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_IP6	= 2,$/;"	e	enum:nvmf_addr_family
NVMF_ADDR_FAMILY_LOOP	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_LOOP	= 254,$/;"	e	enum:nvmf_addr_family
NVMF_ADDR_FAMILY_PCI	src/nvme/types.h	/^	NVMF_ADDR_FAMILY_PCI	= 0,$/;"	e	enum:nvmf_addr_family
NVMF_DEF_CTRL_LOSS_TMO	src/nvme/fabrics.h	23;"	d
NVMF_DIM_ENTFMT_BASIC	src/nvme/types.h	/^	NVMF_DIM_ENTFMT_BASIC		= 0x01,$/;"	e	enum:nvmf_dim_entfmt
NVMF_DIM_ENTFMT_EXTENDED	src/nvme/types.h	/^	NVMF_DIM_ENTFMT_EXTENDED	= 0x02,$/;"	e	enum:nvmf_dim_entfmt
NVMF_DIM_ETYPE_CDC	src/nvme/types.h	/^	NVMF_DIM_ETYPE_CDC	= 0x03,$/;"	e	enum:nvmf_dim_etype
NVMF_DIM_ETYPE_DDC	src/nvme/types.h	/^	NVMF_DIM_ETYPE_DDC	= 0x02,$/;"	e	enum:nvmf_dim_etype
NVMF_DIM_ETYPE_HOST	src/nvme/types.h	/^	NVMF_DIM_ETYPE_HOST	= 0x01,$/;"	e	enum:nvmf_dim_etype
NVMF_DIM_TAS_DEREGISTER	src/nvme/types.h	/^	NVMF_DIM_TAS_DEREGISTER	= 0x01,$/;"	e	enum:nvmf_dim_tas
NVMF_DIM_TAS_REGISTER	src/nvme/types.h	/^	NVMF_DIM_TAS_REGISTER	= 0x00,$/;"	e	enum:nvmf_dim_tas
NVMF_DIM_TAS_UPDATE	src/nvme/types.h	/^	NVMF_DIM_TAS_UPDATE	= 0x02,$/;"	e	enum:nvmf_dim_tas
NVMF_DISC_EFLAGS_BOTH	src/nvme/types.h	4960;"	d
NVMF_DISC_EFLAGS_DUPRETINFO	src/nvme/types.h	/^	NVMF_DISC_EFLAGS_DUPRETINFO	= 1 << 0,$/;"	e	enum:nvmf_disc_eflags
NVMF_DISC_EFLAGS_EPCSD	src/nvme/types.h	/^	NVMF_DISC_EFLAGS_EPCSD		= 1 << 1,$/;"	e	enum:nvmf_disc_eflags
NVMF_DISC_EFLAGS_NCC	src/nvme/types.h	/^	NVMF_DISC_EFLAGS_NCC		= 1 << 2,$/;"	e	enum:nvmf_disc_eflags
NVMF_DISC_EFLAGS_NONE	src/nvme/types.h	/^	NVMF_DISC_EFLAGS_NONE		= 0,$/;"	e	enum:nvmf_disc_eflags
NVMF_ENAME_LEN	src/nvme/types.h	5217;"	d
NVMF_EVER_LEN	src/nvme/types.h	5218;"	d
NVMF_EXATTYPE_HOSTID	src/nvme/types.h	/^	NVMF_EXATTYPE_HOSTID	= 0x01,$/;"	e	enum:nvmf_exattype
NVMF_EXATTYPE_SYMNAME	src/nvme/types.h	/^	NVMF_EXATTYPE_SYMNAME	= 0x02,$/;"	e	enum:nvmf_exattype
NVMF_HOSTID_FILE	src/nvme/fabrics.c	45;"	d	file:
NVMF_HOSTID_SIZE	src/nvme/fabrics.c	42;"	d	file:
NVMF_HOSTNQN_FILE	src/nvme/fabrics.c	44;"	d	file:
NVMF_LOG_DISC_LID_ALLSUBES	src/nvme/types.h	/^	NVMF_LOG_DISC_LID_ALLSUBES	= (1 << 2),$/;"	e	enum:nvmf_log_discovery_lid_support
NVMF_LOG_DISC_LID_EXTDLPES	src/nvme/types.h	/^	NVMF_LOG_DISC_LID_EXTDLPES	= (1 << 0),$/;"	e	enum:nvmf_log_discovery_lid_support
NVMF_LOG_DISC_LID_NONE	src/nvme/types.h	/^	NVMF_LOG_DISC_LID_NONE		= 0,$/;"	e	enum:nvmf_log_discovery_lid_support
NVMF_LOG_DISC_LID_PLEOS	src/nvme/types.h	/^	NVMF_LOG_DISC_LID_PLEOS		= (1 << 1),$/;"	e	enum:nvmf_log_discovery_lid_support
NVMF_LOG_DISC_LSP_ALLSUBE	src/nvme/types.h	/^	NVMF_LOG_DISC_LSP_ALLSUBE	= (1 << 2),$/;"	e	enum:nvmf_log_discovery_lsp
NVMF_LOG_DISC_LSP_EXTDLPE	src/nvme/types.h	/^	NVMF_LOG_DISC_LSP_EXTDLPE	= (1 << 0),$/;"	e	enum:nvmf_log_discovery_lsp
NVMF_LOG_DISC_LSP_NONE	src/nvme/types.h	/^	NVMF_LOG_DISC_LSP_NONE		= 0,$/;"	e	enum:nvmf_log_discovery_lsp
NVMF_LOG_DISC_LSP_PLEO	src/nvme/types.h	/^	NVMF_LOG_DISC_LSP_PLEO		= (1 << 1),$/;"	e	enum:nvmf_log_discovery_lsp
NVMF_NQN_SIZE	src/nvme/types.h	4926;"	d
NVMF_RDMA_CMS_RDMA_CM	src/nvme/types.h	/^	NVMF_RDMA_CMS_RDMA_CM	= 1,$/;"	e	enum:nvmf_rdma_cms
NVMF_RDMA_PRTYPE_IB	src/nvme/types.h	/^	NVMF_RDMA_PRTYPE_IB		= 2,$/;"	e	enum:nvmf_rdma_prtype
NVMF_RDMA_PRTYPE_IWARP	src/nvme/types.h	/^	NVMF_RDMA_PRTYPE_IWARP		= 5,$/;"	e	enum:nvmf_rdma_prtype
NVMF_RDMA_PRTYPE_NOT_SPECIFIED	src/nvme/types.h	/^	NVMF_RDMA_PRTYPE_NOT_SPECIFIED	= 1,$/;"	e	enum:nvmf_rdma_prtype
NVMF_RDMA_PRTYPE_ROCE	src/nvme/types.h	/^	NVMF_RDMA_PRTYPE_ROCE		= 3,$/;"	e	enum:nvmf_rdma_prtype
NVMF_RDMA_PRTYPE_ROCEV2	src/nvme/types.h	/^	NVMF_RDMA_PRTYPE_ROCEV2		= 4,$/;"	e	enum:nvmf_rdma_prtype
NVMF_RDMA_QPTYPE_CONNECTED	src/nvme/types.h	/^	NVMF_RDMA_QPTYPE_CONNECTED	= 1,$/;"	e	enum:nvmf_rdma_qptype
NVMF_RDMA_QPTYPE_DATAGRAM	src/nvme/types.h	/^	NVMF_RDMA_QPTYPE_DATAGRAM	= 2,$/;"	e	enum:nvmf_rdma_qptype
NVMF_TCP_SECTYPE_NONE	src/nvme/types.h	/^	NVMF_TCP_SECTYPE_NONE	= 0,$/;"	e	enum:nvmf_tcp_sectype
NVMF_TCP_SECTYPE_TLS	src/nvme/types.h	/^	NVMF_TCP_SECTYPE_TLS	= 1,$/;"	e	enum:nvmf_tcp_sectype
NVMF_TCP_SECTYPE_TLS13	src/nvme/types.h	/^	NVMF_TCP_SECTYPE_TLS13	= 2,$/;"	e	enum:nvmf_tcp_sectype
NVMF_TRADDR_SIZE	src/nvme/types.h	/^	NVMF_TRADDR_SIZE			= 256,$/;"	e	enum:nvme_constants
NVMF_TREQ_DISABLE_SQFLOW	src/nvme/types.h	/^	NVMF_TREQ_DISABLE_SQFLOW	= 4,$/;"	e	enum:nvmf_treq
NVMF_TREQ_NOT_REQUIRED	src/nvme/types.h	/^	NVMF_TREQ_NOT_REQUIRED		= 2,$/;"	e	enum:nvmf_treq
NVMF_TREQ_NOT_SPECIFIED	src/nvme/types.h	/^	NVMF_TREQ_NOT_SPECIFIED		= 0,$/;"	e	enum:nvmf_treq
NVMF_TREQ_REQUIRED	src/nvme/types.h	/^	NVMF_TREQ_REQUIRED		= 1,$/;"	e	enum:nvmf_treq
NVMF_TRSVCID_SIZE	src/nvme/types.h	4927;"	d
NVMF_TRTYPE_FC	src/nvme/types.h	/^	NVMF_TRTYPE_FC		= 2,$/;"	e	enum:nvmf_trtype
NVMF_TRTYPE_LOOP	src/nvme/types.h	/^	NVMF_TRTYPE_LOOP	= 254,$/;"	e	enum:nvmf_trtype
NVMF_TRTYPE_MAX	src/nvme/types.h	/^	NVMF_TRTYPE_MAX,$/;"	e	enum:nvmf_trtype
NVMF_TRTYPE_RDMA	src/nvme/types.h	/^	NVMF_TRTYPE_RDMA	= 1,$/;"	e	enum:nvmf_trtype
NVMF_TRTYPE_TCP	src/nvme/types.h	/^	NVMF_TRTYPE_TCP		= 3,$/;"	e	enum:nvmf_trtype
NVMF_TRTYPE_UNSPECIFIED	src/nvme/types.h	/^	NVMF_TRTYPE_UNSPECIFIED	= 0,$/;"	e	enum:nvmf_trtype
NVMF_TSAS_SIZE	src/nvme/types.h	/^	NVMF_TSAS_SIZE				= 256,$/;"	e	enum:nvme_constants
PATH_DMI_ENTRIES	src/nvme/fabrics.c	1278;"	d	file:
PATH_DMI_PROD_UUID	src/nvme/fabrics.c	1363;"	d	file:
PATH_UUID_IBM	src/nvme/fabrics.c	1258;"	d	file:
RUN_TEST	test/ioctl/discovery.c	405;"	d	file:
STR_MAX_CHARS	ccan/ccan/str/str.h	90;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	96;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	99;"	d
TEST_FD	test/ioctl/discovery.c	15;"	d	file:
Testclass	libnvme/tests/test-nbft.py	/^class Testclass(unittest.TestCase):$/;"	c
UPDATE_CFG_OPTION	src/nvme/fabrics.c	269;"	d	file:
Usage	scripts/kernel-doc	/^Usage: $0 [OPTION ...] FILE ...$/;"	l
_LIBNVME_API_TYPES_H	src/nvme/api-types.h	14;"	d
_LIBNVME_FABRICS_H	src/nvme/fabrics.h	10;"	d
_LIBNVME_FILTERS_H	src/nvme/filters.h	10;"	d
_LIBNVME_H	src/libnvme.h	11;"	d
_LIBNVME_IOCTL_H	src/nvme/ioctl.h	11;"	d
_LIBNVME_LINUX_H	src/nvme/linux.h	10;"	d
_LIBNVME_MI_H	src/libnvme-mi.h	10;"	d
_LIBNVME_MI_MI_H	src/nvme/mi.h	85;"	d
_LIBNVME_PRIVATE_H	src/nvme/private.h	10;"	d
_LIBNVME_TEST_IOCTL_MOCK_H	test/ioctl/mock.h	4;"	d
_LIBNVME_TEST_IOCTL_UTIL_H	test/ioctl/util.h	4;"	d
_LIBNVME_TREE_H	src/nvme/tree.h	11;"	d
_LIBNVME_TYPES_H	src/nvme/types.h	11;"	d
_LIBNVME_UTIL_H	src/nvme/util.h	10;"	d
_LINUX_NVME_IOCTL_H	src/nvme/ioctl.h	26;"	d
_LOG_H	src/nvme/log.h	6;"	d
_NBFT_H	src/nvme/nbft.h	10;"	d
_TEST_UTILS_H	test/utils.h	11;"	d
_UAPI_LINUX_NVME_IOCTL_H	src/nvme/ioctl.h	23;"	d
__BIG_ENDIAN	ccan/ccan/endian/endian.h	108;"	d
__BYTE_ORDER	ccan/ccan/endian/endian.h	117;"	d
__BYTE_ORDER	ccan/ccan/endian/endian.h	123;"	d
__CLEANUP_H	src/nvme/cleanup.h	3;"	d
__LITTLE_ENDIAN	ccan/ccan/endian/endian.h	107;"	d
__SANE_USERSPACE_TYPES__	examples/discover-loop.c	15;"	d	file:
__SANE_USERSPACE_TYPES__	test/register.c	14;"	d	file:
__add_argument	src/nvme/fabrics.c	/^static int __add_argument(char **argstr, const char *tok, const char *arg)$/;"	f	file:
__add_bool_argument	src/nvme/fabrics.c	/^static int __add_bool_argument(char **argstr, char *tok, bool arg)$/;"	f	file:
__add_int_argument	src/nvme/fabrics.c	/^static int __add_int_argument(char **argstr, char *tok, int arg, bool allow_zero)$/;"	f	file:
__add_int_or_minus_one_argument	src/nvme/fabrics.c	/^static int __add_int_or_minus_one_argument(char **argstr, char *tok, int arg)$/;"	f	file:
__cleanup__	src/nvme/cleanup.h	5;"	d
__copy_id_str	examples/mi-mctp.c	/^static const char *__copy_id_str(const void *field, size_t size,$/;"	f	file:
__get_heap_obj	src/nvme/nbft.c	/^static int __get_heap_obj(struct nbft_header *header, const char *filename,$/;"	f	file:
__git_version__	libnvme/__init__.py	/^__git_version__ = @GIT_VERSION@$/;"	v
__mi_mctp_socket_ops	src/nvme/private.h	/^struct __mi_mctp_socket_ops {$/;"	s
__nvme_free_ctrl	src/nvme/tree.c	/^static void __nvme_free_ctrl(nvme_ctrl_t c)$/;"	f	file:
__nvme_free_host	src/nvme/tree.c	/^static void __nvme_free_host(struct nvme_host *h)$/;"	f	file:
__nvme_free_ns	src/nvme/tree.c	/^static void __nvme_free_ns(struct nvme_ns *n)$/;"	f	file:
__nvme_free_subsystem	src/nvme/tree.c	/^static void __nvme_free_subsystem(struct nvme_subsystem *s)$/;"	f	file:
__nvme_get_attr	src/nvme/linux.c	/^static char *__nvme_get_attr(const char *path)$/;"	f	file:
__nvme_get_features	src/nvme/ioctl.c	/^static int __nvme_get_features(int fd, enum nvme_features_id fid,$/;"	f	file:
__nvme_log_func	src/nvme/private.h	186;"	d
__nvme_log_func	src/nvme/private.h	188;"	d
__nvme_lookup_ctrl	src/nvme/tree.c	/^nvme_ctrl_t __nvme_lookup_ctrl(nvme_subsystem_t s, const char *transport,$/;"	f
__nvme_mi_admin_get_log	src/nvme/mi.c	/^static int __nvme_mi_admin_get_log(nvme_mi_ctrl_t ctrl,$/;"	f	file:
__nvme_mi_format_mn	src/nvme/mi.c	/^static void __nvme_mi_format_mn(struct nvme_id_ctrl *id,$/;"	f	file:
__nvme_mi_mctp_set_ops	src/nvme/mi-mctp.c	/^void __nvme_mi_mctp_set_ops(const struct __mi_mctp_socket_ops *newops)$/;"	f
__nvme_msg	src/nvme/log.c	/^__nvme_msg(nvme_root_t r, int lvl,$/;"	f
__nvme_open	src/nvme/linux.c	/^static int __nvme_open(const char *name)$/;"	f	file:
__nvme_scan_namespace	src/nvme/tree.c	/^static struct nvme_ns *__nvme_scan_namespace(const char *sysfs_dir, const char *name)$/;"	f	file:
__nvme_scan_subsystem	src/nvme/tree.c	/^static bool __nvme_scan_subsystem(struct nvme_root *r, nvme_subsystem_t s,$/;"	f	file:
__nvme_set_attr	src/nvme/linux.c	/^static int __nvme_set_attr(const char *path, const char *value)$/;"	f	file:
__nvme_set_features	src/nvme/ioctl.c	/^static int __nvme_set_features(int fd, __u8 fid, __u32 cdw11, bool save,$/;"	f	file:
__nvmf_add_ctrl	src/nvme/fabrics.c	/^static int __nvmf_add_ctrl(nvme_root_t r, const char *argstr)$/;"	f	file:
__nvmf_supported_options	src/nvme/fabrics.c	/^static  int __nvmf_supported_options(nvme_root_t r)$/;"	f	file:
__round_mask	src/nvme/util.h	525;"	d
__smctp_pad0	src/nvme/mi-mctp.c	/^	__u16			__smctp_pad0;$/;"	m	struct:sockaddr_mctp	file:
__smctp_pad1	src/nvme/mi-mctp.c	/^	__u8			__smctp_pad1;$/;"	m	struct:sockaddr_mctp	file:
__version__	libnvme/__init__.py	/^__version__ = @PROJECT_VERSION@$/;"	v
__wrap_poll	test/mi-mctp.c	/^int __wrap_poll(struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
__wrap_recvmsg	test/mi-mctp.c	/^ssize_t __wrap_recvmsg(int sd, struct msghdr *hdr, int flags)$/;"	f
__wrap_sendmsg	test/mi-mctp.c	/^ssize_t __wrap_sendmsg(int sd, const struct msghdr *hdr, int flags)$/;"	f
__wrap_socket	test/mi-mctp.c	/^int __wrap_socket(int family, int type, int protocol)$/;"	f
_array_size_chk	ccan/ccan/array_size/array_size.h	20;"	d
_array_size_chk	ccan/ccan/array_size/array_size.h	24;"	d
acl	src/nvme/types.h	/^	__u8			acl;$/;"	m	struct:nvme_id_ctrl
acre	src/nvme/types.h	/^	__u8 acre;$/;"	m	struct:nvme_feat_host_behavior
acs	src/nvme/types.h	/^	__le32 acs[256];$/;"	m	struct:nvme_cmd_effects_log
act	src/nvme/api-types.h	/^	enum nvme_virt_mgmt_act act;$/;"	m	struct:nvme_virtual_mgmt_args	typeref:enum:nvme_virtual_mgmt_args::nvme_virt_mgmt_act
action	examples/mi-mctp.c	/^enum action {$/;"	g	file:
action	src/nvme/api-types.h	/^	enum nvme_fw_commit_ca action;$/;"	m	struct:nvme_fw_commit_args	typeref:enum:nvme_fw_commit_args::nvme_fw_commit_ca
action	test/mi.c	/^	__u8 action;$/;"	m	struct:fw_commit_info	file:
actp	src/nvme/types.h	/^	__le16			actp;$/;"	m	struct:nvme_id_psd
acwu	src/nvme/types.h	/^	__le16			acwu;$/;"	m	struct:nvme_id_ctrl
add_argument	src/nvme/fabrics.c	409;"	d	file:
add_bool_argument	src/nvme/fabrics.c	360;"	d	file:
add_hw_err_info	src/nvme/types.h	/^	__u8	*add_hw_err_info;$/;"	m	struct:nvme_nss_hw_err_event
add_int_argument	src/nvme/fabrics.c	376;"	d	file:
add_int_or_minus_one_argument	src/nvme/fabrics.c	393;"	d	file:
addr	src/nvme/ioctl.h	/^	__u64	addr;$/;"	m	struct:nvme_passthru_cmd
addr	src/nvme/ioctl.h	/^	__u64	addr;$/;"	m	struct:nvme_uring_cmd
addr	src/nvme/ioctl.h	/^	__u64   addr;$/;"	m	struct:nvme_passthru_cmd64
address	src/nvme/private.h	/^	char *address;$/;"	m	struct:nvme_ctrl
admin_quirk	test/mi-mctp.c	/^	bool admin_quirk;$/;"	m	struct:mpr_tx_info	file:
adrfam	src/nvme/types.h	/^	__u8			adrfam;$/;"	m	struct:nvmf_ext_die
adrfam	src/nvme/types.h	/^	__u8		adrfam;$/;"	m	struct:nvmf_disc_log_entry
adrfams	src/nvme/fabrics.c	/^static const char * const adrfams[] = {$/;"	v	file:
aerl	src/nvme/types.h	/^	__u8			aerl;$/;"	m	struct:nvme_id_ctrl
afi	src/nvme/types.h	/^	__u8	afi;$/;"	m	struct:nvme_firmware_slot
al	src/nvme/api-types.h	/^	__u32 al;$/;"	m	struct:nvme_security_receive_args
ana_grp_id	src/nvme/types.h	/^	__le32	ana_grp_id;$/;"	m	struct:nvme_change_ns_event
ana_state	src/nvme/private.h	/^	char *ana_state;$/;"	m	struct:nvme_path
anacap	src/nvme/types.h	/^	__u8			anacap;$/;"	m	struct:nvme_id_ctrl
anagrpid	src/nvme/types.h	/^	__le32			anagrpid;$/;"	m	struct:nvme_id_ns
anagrpid	src/nvme/types.h	/^	__le32			anagrpid;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
anagrpid	src/nvme/types.h	/^	__le32	anagrpid;$/;"	m	struct:nvme_id_independent_id_ns
anagrpmax	src/nvme/types.h	/^	__le32			anagrpmax;$/;"	m	struct:nvme_id_ctrl
anatt	src/nvme/types.h	/^	__u8			anatt;$/;"	m	struct:nvme_id_ctrl
application	src/nvme/private.h	/^	char *application;$/;"	m	struct:nvme_root
application	src/nvme/private.h	/^	char *application;$/;"	m	struct:nvme_subsystem
appmask	src/nvme/api-types.h	/^	__u16 appmask;$/;"	m	struct:nvme_io_args
apptag	src/nvme/api-types.h	/^	__u16 apptag;$/;"	m	struct:nvme_io_args
apst_entry	src/nvme/types.h	/^	__le64	apst_entry[32];$/;"	m	struct:nvme_feat_auto_pst
apsta	src/nvme/types.h	/^	__u8			apsta;$/;"	m	struct:nvme_id_ctrl
apws	src/nvme/types.h	/^	__u8			apws;$/;"	m	struct:nvme_id_psd
arbitrary	test/ioctl/util.c	/^void arbitrary(void *buf_, size_t len)$/;"	f
arg_str	src/nvme/fabrics.c	/^const char *arg_str(const char * const *strings,$/;"	f
arg_str	src/nvme/util.c	/^static const char *arg_str(const char * const *strings,$/;"	f	file:
args	libnvme/tests/test-nbft.py	/^    args = parser.parse_args()$/;"	v	class:Testclass
args_size	src/nvme/api-types.h	/^	int	args_size;$/;"	m	struct:nvme_dim_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_capacity_mgmt_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_copy_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_dev_self_test_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_directive_recv_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_directive_send_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_dsm_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_format_nvm_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_fw_commit_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_fw_download_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_get_features_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_get_lba_status_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_get_log_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_get_property_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_identify_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_io_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_io_mgmt_recv_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_io_mgmt_send_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_lockdown_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_ns_attach_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_ns_mgmt_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_resv_acquire_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_resv_register_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_resv_release_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_resv_report_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_sanitize_nvm_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_security_receive_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_security_send_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_set_features_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_set_property_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_virtual_mgmt_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_zns_append_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_zns_mgmt_recv_args
args_size	src/nvme/api-types.h	/^	int args_size;$/;"	m	struct:nvme_zns_mgmt_send_args
args_size	src/nvme/fabrics.h	/^	int args_size;$/;"	m	struct:nvme_get_discovery_args
asqsz	src/nvme/nbft.h	/^	__le16 asqsz;$/;"	m	struct:nbft_ssns_ext_info
asqsz	src/nvme/nbft.h	/^	int asqsz;$/;"	m	struct:nbft_info_subsystem_ns
asqsz	src/nvme/types.h	/^	__le16			asqsz;$/;"	m	struct:nvmf_ext_die
asqsz	src/nvme/types.h	/^	__le16		asqsz;$/;"	m	struct:nvmf_disc_log_entry
attach_op	test/mi.c	/^struct attach_op {$/;"	s	file:
attr	src/nvme/types.h	/^	__u8 attr;$/;"	m	struct:nvme_timestamp
attributes	src/nvme/types.h	/^	__le32			attributes;$/;"	m	struct:nvme_id_ns_granularity_list
attributes	src/nvme/types.h	/^	__u8	attributes;$/;"	m	struct:nvme_lba_range_type_entry
attrs	src/nvme/api-types.h	/^	__u32 attrs;$/;"	m	struct:nvme_dsm_args
atype	src/nvme/api-types.h	/^	enum nvme_lba_status_atype atype;$/;"	m	struct:nvme_get_lba_status_args	typeref:enum:nvme_get_lba_status_args::nvme_lba_status_atype
ause	src/nvme/api-types.h	/^	bool ause;$/;"	m	struct:nvme_sanitize_nvm_args
auth_proto_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj auth_proto_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
author	doc/conf.py	/^author = 'Keith Busch <kbusch@kernel.org>'$/;"	v
avail_spare	src/nvme/types.h	/^	__u8			avail_spare;$/;"	m	struct:nvme_smart_log
avl_spare	src/nvme/types.h	/^	__u8	avl_spare;$/;"	m	struct:nvme_endurance_group_log
avl_spare	src/nvme/types.h	/^	__u8	avl_spare;$/;"	m	struct:nvme_media_unit_stat_desc
avl_spare_threshold	src/nvme/types.h	/^	__u8	avl_spare_threshold;$/;"	m	struct:nvme_endurance_group_log
avscc	src/nvme/types.h	/^	__u8			avscc;$/;"	m	struct:nvme_id_ctrl
awun	src/nvme/types.h	/^	__le16			awun;$/;"	m	struct:nvme_id_ctrl
awupf	src/nvme/types.h	/^	__le16			awupf;$/;"	m	struct:nvme_id_ctrl
basic	src/nvme/types.h	/^	struct nvmf_disc_log_entry	basic[0];$/;"	m	union:nvmf_die	typeref:struct:nvmf_die::nvmf_disc_log_entry
be16	ccan/ccan/endian/endian.h	/^typedef beint16_t be16;$/;"	t
be16	ccan/ccan/short_types/short_types.h	/^typedef beint16_t be16;$/;"	t
be16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t be16_to_cpu(beint16_t be_val)$/;"	f
be32	ccan/ccan/endian/endian.h	/^typedef beint32_t be32;$/;"	t
be32	ccan/ccan/short_types/short_types.h	/^typedef beint32_t be32;$/;"	t
be32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t be32_to_cpu(beint32_t be_val)$/;"	f
be64	ccan/ccan/endian/endian.h	/^typedef beint64_t be64;$/;"	t
be64	ccan/ccan/short_types/short_types.h	/^typedef beint64_t be64;$/;"	t
be64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t be64_to_cpu(beint64_t be_val)$/;"	f
beint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE beint16_t;$/;"	t
beint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE beint32_t;$/;"	t
beint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE beint64_t;$/;"	t
biaoff	src/nvme/types.h	/^	__u8	biaoff;$/;"	m	struct:nvme_mi_vpd_hdr
boot_partition_data	src/nvme/types.h	/^	__u8	boot_partition_data[];$/;"	m	struct:nvme_boot_partition
bpid	src/nvme/api-types.h	/^	bool bpid;$/;"	m	struct:nvme_fw_commit_args
bpid	test/mi.c	/^	__u8 bpid;$/;"	m	struct:fw_commit_info	file:
bpinfo	src/nvme/types.h	/^	__le32	bpinfo;$/;"	m	struct:nvme_boot_partition
bswap_16	ccan/ccan/endian/endian.h	/^static inline uint16_t bswap_16(uint16_t val)$/;"	f
bswap_32	ccan/ccan/endian/endian.h	/^static inline uint32_t bswap_32(uint32_t val)$/;"	f
bswap_64	ccan/ccan/endian/endian.h	/^static inline uint64_t bswap_64(uint64_t val)$/;"	f
build_meson	scripts/build.sh	/^build_meson() {$/;"	f
build_muon	scripts/build.sh	/^build_muon() {$/;"	f
build_options	src/nvme/fabrics.c	/^static int build_options(nvme_host_t h, nvme_ctrl_t c, char **argstr)$/;"	f	file:
c	examples/discover-loop.py	/^c = None$/;"	v
c	examples/discover-loop.py	/^c = nvme.ctrl(r, nvme.NVME_DISC_SUBSYS_NAME, 'loop')$/;"	v
c	examples/telemetry-listen.c	/^	nvme_ctrl_t c;$/;"	m	struct:events	file:
c	src/nvme/fabrics.h	/^	nvme_ctrl_t c;$/;"	m	struct:nvme_get_discovery_args
c	src/nvme/private.h	/^	struct nvme_ctrl *c;$/;"	m	struct:nvme_ns	typeref:struct:nvme_ns::nvme_ctrl
c	src/nvme/private.h	/^	struct nvme_ctrl *c;$/;"	m	struct:nvme_path	typeref:struct:nvme_path::nvme_ctrl
c	test/tree.c	/^	nvme_ctrl_t c;$/;"	m	struct:test_data	file:
cap_adj_factor	src/nvme/types.h	/^	__le16	cap_adj_factor;$/;"	m	struct:nvme_end_grp_config_desc
cap_adj_fctr	src/nvme/types.h	/^	__le16	cap_adj_fctr;$/;"	m	struct:nvme_media_unit_stat_desc
cap_config_desc	src/nvme/types.h	/^	struct nvme_capacity_config_desc cap_config_desc[];$/;"	m	struct:nvme_supported_cap_config_list_log	typeref:struct:nvme_supported_cap_config_list_log::nvme_capacity_config_desc
cap_config_id	src/nvme/types.h	/^	__le16	cap_config_id;$/;"	m	struct:nvme_capacity_config_desc
cattr	src/nvme/types.h	/^	__le32	cattr;$/;"	m	struct:nvme_dsm_range
cchans	src/nvme/types.h	/^	__le16	cchans;$/;"	m	struct:nvme_media_unit_stat_log
ccs	src/nvme/types.h	/^	__le16	ccs;$/;"	m	struct:nvme_mi_nvm_ss_health_status
cctemp	src/nvme/types.h	/^	__le16			cctemp;$/;"	m	struct:nvme_id_ctrl
cdw0	src/nvme/mi.h	/^	__le32	cdw0, cdw1, cdw3;$/;"	m	struct:nvme_mi_admin_resp_hdr
cdw0	src/nvme/mi.h	/^	__le32	cdw0, cdw1;$/;"	m	struct:nvme_mi_mi_req_hdr
cdw1	src/nvme/mi.h	/^	__le32	cdw0, cdw1, cdw3;$/;"	m	struct:nvme_mi_admin_resp_hdr
cdw1	src/nvme/mi.h	/^	__le32	cdw0, cdw1;$/;"	m	struct:nvme_mi_mi_req_hdr
cdw1	src/nvme/mi.h	/^	__le32	cdw1, cdw2, cdw3, cdw4, cdw5;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw10	src/nvme/ioctl.h	/^	__u32	cdw10;$/;"	m	struct:nvme_passthru_cmd
cdw10	src/nvme/ioctl.h	/^	__u32	cdw10;$/;"	m	struct:nvme_uring_cmd
cdw10	src/nvme/ioctl.h	/^	__u32   cdw10;$/;"	m	struct:nvme_passthru_cmd64
cdw10	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw10	test/ioctl/mock.h	/^	uint32_t cdw10;$/;"	m	struct:mock_cmd
cdw11	src/nvme/api-types.h	/^	__u32 cdw11;$/;"	m	struct:nvme_capacity_mgmt_args
cdw11	src/nvme/api-types.h	/^	__u32 cdw11;$/;"	m	struct:nvme_get_features_args
cdw11	src/nvme/api-types.h	/^	__u32 cdw11;$/;"	m	struct:nvme_set_features_args
cdw11	src/nvme/ioctl.h	/^	__u32	cdw11;$/;"	m	struct:nvme_passthru_cmd
cdw11	src/nvme/ioctl.h	/^	__u32	cdw11;$/;"	m	struct:nvme_uring_cmd
cdw11	src/nvme/ioctl.h	/^	__u32   cdw11;$/;"	m	struct:nvme_passthru_cmd64
cdw11	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw11	test/ioctl/mock.h	/^	uint32_t cdw11;$/;"	m	struct:mock_cmd
cdw12	src/nvme/api-types.h	/^	__u32 cdw12;$/;"	m	struct:nvme_capacity_mgmt_args
cdw12	src/nvme/api-types.h	/^	__u32 cdw12;$/;"	m	struct:nvme_directive_recv_args
cdw12	src/nvme/api-types.h	/^	__u32 cdw12;$/;"	m	struct:nvme_directive_send_args
cdw12	src/nvme/api-types.h	/^	__u32 cdw12;$/;"	m	struct:nvme_set_features_args
cdw12	src/nvme/ioctl.h	/^	__u32	cdw12;$/;"	m	struct:nvme_passthru_cmd
cdw12	src/nvme/ioctl.h	/^	__u32	cdw12;$/;"	m	struct:nvme_uring_cmd
cdw12	src/nvme/ioctl.h	/^	__u32   cdw12;$/;"	m	struct:nvme_passthru_cmd64
cdw12	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw12	test/ioctl/mock.h	/^	uint32_t cdw12;$/;"	m	struct:mock_cmd
cdw13	src/nvme/api-types.h	/^	__u32 cdw13;$/;"	m	struct:nvme_set_features_args
cdw13	src/nvme/ioctl.h	/^	__u32	cdw13;$/;"	m	struct:nvme_passthru_cmd
cdw13	src/nvme/ioctl.h	/^	__u32	cdw13;$/;"	m	struct:nvme_uring_cmd
cdw13	src/nvme/ioctl.h	/^	__u32   cdw13;$/;"	m	struct:nvme_passthru_cmd64
cdw13	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw13	test/ioctl/mock.h	/^	uint32_t cdw13;$/;"	m	struct:mock_cmd
cdw14	src/nvme/ioctl.h	/^	__u32	cdw14;$/;"	m	struct:nvme_passthru_cmd
cdw14	src/nvme/ioctl.h	/^	__u32	cdw14;$/;"	m	struct:nvme_uring_cmd
cdw14	src/nvme/ioctl.h	/^	__u32   cdw14;$/;"	m	struct:nvme_passthru_cmd64
cdw14	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw14	test/ioctl/mock.h	/^	uint32_t cdw14;$/;"	m	struct:mock_cmd
cdw15	src/nvme/api-types.h	/^	__u32 cdw15;$/;"	m	struct:nvme_set_features_args
cdw15	src/nvme/ioctl.h	/^	__u32	cdw15;$/;"	m	struct:nvme_passthru_cmd
cdw15	src/nvme/ioctl.h	/^	__u32	cdw15;$/;"	m	struct:nvme_uring_cmd
cdw15	src/nvme/ioctl.h	/^	__u32   cdw15;$/;"	m	struct:nvme_passthru_cmd64
cdw15	src/nvme/mi.h	/^	__le32	cdw10, cdw11, cdw12, cdw13, cdw14, cdw15;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw15	test/ioctl/mock.h	/^	uint32_t cdw15;$/;"	m	struct:mock_cmd
cdw2	src/nvme/ioctl.h	/^	__u32	cdw2;$/;"	m	struct:nvme_passthru_cmd
cdw2	src/nvme/ioctl.h	/^	__u32	cdw2;$/;"	m	struct:nvme_uring_cmd
cdw2	src/nvme/ioctl.h	/^	__u32   cdw2;$/;"	m	struct:nvme_passthru_cmd64
cdw2	src/nvme/mi.h	/^	__le32	cdw1, cdw2, cdw3, cdw4, cdw5;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw2	test/ioctl/mock.h	/^	uint32_t cdw2;$/;"	m	struct:mock_cmd
cdw3	src/nvme/ioctl.h	/^	__u32	cdw3;$/;"	m	struct:nvme_passthru_cmd
cdw3	src/nvme/ioctl.h	/^	__u32	cdw3;$/;"	m	struct:nvme_uring_cmd
cdw3	src/nvme/ioctl.h	/^	__u32   cdw3;$/;"	m	struct:nvme_passthru_cmd64
cdw3	src/nvme/mi.h	/^	__le32	cdw0, cdw1, cdw3;$/;"	m	struct:nvme_mi_admin_resp_hdr
cdw3	src/nvme/mi.h	/^	__le32	cdw1, cdw2, cdw3, cdw4, cdw5;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw3	test/ioctl/mock.h	/^	uint32_t cdw3;$/;"	m	struct:mock_cmd
cdw4	src/nvme/mi.h	/^	__le32	cdw1, cdw2, cdw3, cdw4, cdw5;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw5	src/nvme/mi.h	/^	__le32	cdw1, cdw2, cdw3, cdw4, cdw5;$/;"	m	struct:nvme_mi_admin_req_hdr
cdw_mem	src/nvme/types.h	/^	__le32	cdw_mem[0];$/;"	m	struct:nvme_set_feature_event
cfg	src/nvme/private.h	/^	struct nvme_fabrics_config cfg;$/;"	m	struct:nvme_ctrl	typeref:struct:nvme_ctrl::nvme_fabrics_config
chan_config_desc	src/nvme/types.h	/^	struct nvme_channel_config_desc chan_config_desc[];$/;"	m	struct:nvme_end_grp_chan_desc	typeref:struct:nvme_end_grp_chan_desc::nvme_channel_config_desc
chanid	src/nvme/types.h	/^	__le16	chanid;$/;"	m	struct:nvme_channel_config_desc
chchk	src/nvme/types.h	/^	__u8	chchk;$/;"	m	struct:nvme_mi_vpd_hdr
check	test/ioctl/util.h	11;"	d
check_return_section	scripts/kernel-doc	/^sub check_return_section {$/;"	s
check_sections	scripts/kernel-doc	/^sub check_sections($$$$$) {$/;"	s
check_str	test/uuid.c	/^static void check_str(const char *exp, const char *res)$/;"	f	file:
check_telemetry	examples/telemetry-listen.c	/^static void check_telemetry(nvme_ctrl_t c, int ufd)$/;"	f	file:
check_timeout	src/nvme/private.h	/^	int (*check_timeout)(struct nvme_mi_ep *ep, unsigned int timeout);$/;"	m	struct:nvme_mi_transport
check_type	ccan/ccan/check_type/check_type.h	49;"	d
check_type	ccan/ccan/check_type/check_type.h	57;"	d
check_types_match	ccan/ccan/check_type/check_type.h	52;"	d
check_types_match	ccan/ccan/check_type/check_type.h	60;"	d
check_uuid	test/uuid.c	/^static void check_uuid(unsigned char exp[NVME_UUID_LEN],$/;"	f	file:
checksum	src/nvme/nbft.h	/^	__u8 checksum;$/;"	m	struct:nbft_header
chgcnt	src/nvme/types.h	/^	__le64	chgcnt;$/;"	m	struct:nvme_ana_group_desc
chgcnt	src/nvme/types.h	/^	__le64	chgcnt;$/;"	m	struct:nvme_ana_log
chmus	src/nvme/types.h	/^	__le16	chmus;$/;"	m	struct:nvme_channel_config_desc
ciaoff	src/nvme/types.h	/^	__u8	ciaoff;$/;"	m	struct:nvme_mi_vpd_hdr
cid	src/nvme/types.h	/^	__le16	 cid;$/;"	m	struct:nvme_power_on_reset_info_list
cio	src/nvme/types.h	/^	__u8	cio;$/;"	m	struct:nvme_media_unit_stat_desc
cipher_suite_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj cipher_suite_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
cisalnum	ccan/ccan/str/str.h	/^static inline bool cisalnum(char c)$/;"	f
cisalpha	ccan/ccan/str/str.h	/^static inline bool cisalpha(char c)$/;"	f
cisascii	ccan/ccan/str/str.h	/^static inline bool cisascii(char c)$/;"	f
cisblank	ccan/ccan/str/str.h	/^static inline bool cisblank(char c)$/;"	f
ciscntrl	ccan/ccan/str/str.h	/^static inline bool ciscntrl(char c)$/;"	f
cisdigit	ccan/ccan/str/str.h	/^static inline bool cisdigit(char c)$/;"	f
cisgraph	ccan/ccan/str/str.h	/^static inline bool cisgraph(char c)$/;"	f
cislower	ccan/ccan/str/str.h	/^static inline bool cislower(char c)$/;"	f
cisprint	ccan/ccan/str/str.h	/^static inline bool cisprint(char c)$/;"	f
cispunct	ccan/ccan/str/str.h	/^static inline bool cispunct(char c)$/;"	f
cisspace	ccan/ccan/str/str.h	/^static inline bool cisspace(char c)$/;"	f
cisupper	ccan/ccan/str/str.h	/^static inline bool cisupper(char c)$/;"	f
cisxdigit	ccan/ccan/str/str.h	/^static inline bool cisxdigit(char c)$/;"	f
clamp	ccan/ccan/minmax/minmax.h	41;"	d
clamp_t	ccan/ccan/minmax/minmax.h	57;"	d
close	src/nvme/private.h	/^	void (*close)(struct nvme_mi_ep *ep);$/;"	m	struct:nvme_mi_transport
cls	src/nvme/types.h	/^	__u8	cls;$/;"	m	struct:nvme_mi_port_pcie
cmd_spec_status	src/nvme/util.c	/^static const char * const cmd_spec_status[] = {$/;"	v	file:
cmdid	src/nvme/types.h	/^	__le16	cmdid;$/;"	m	struct:nvme_error_log_page
cmds	src/nvme/types.h	/^	struct nvme_mi_osc cmds[];$/;"	m	struct:nvme_mi_read_sc_list	typeref:struct:nvme_mi_read_sc_list::nvme_mi_osc
cmds	test/ioctl/mock.c	/^	const struct mock_cmd *cmds;$/;"	m	struct:mock_cmds	typeref:struct:mock_cmds::mock_cmd	file:
cmic	src/nvme/types.h	/^	__u8			cmic;$/;"	m	struct:nvme_id_ctrl
cmp	test/ioctl/util.c	/^void cmp(const void *actual, const void *expected, size_t len, const char *msg)$/;"	f
cmpc	src/nvme/types.h	/^	__u8	cmpc;$/;"	m	struct:nvme_lba_status
cmpln_info	src/nvme/types.h	/^	__le16	cmpln_info;$/;"	m	struct:nvme_sanitize_compln_event
cms	src/nvme/fabrics.c	/^static const char * const cms[] = {$/;"	v	file:
cms	src/nvme/types.h	/^		__u8	cms;$/;"	m	struct:nvmf_tsas::rdma
cns	src/nvme/api-types.h	/^	enum nvme_identify_cns cns;$/;"	m	struct:nvme_identify_args	typeref:enum:nvme_identify_args::nvme_identify_cns
cns_specific_id	src/nvme/api-types.h	/^	__u16 cns_specific_id;$/;"	m	struct:nvme_identify_args
cntid	src/nvme/api-types.h	/^	__u16 cntid;$/;"	m	struct:nvme_identify_args
cntlid	src/nvme/api-types.h	/^	__u16 cntlid;$/;"	m	struct:nvme_virtual_mgmt_args
cntlid	src/nvme/nbft.h	/^	__le16 cntlid;$/;"	m	struct:nbft_ssns_ext_info
cntlid	src/nvme/private.h	/^	bool cntlid;$/;"	m	struct:nvme_fabric_options
cntlid	src/nvme/types.h	/^	__le16			cntlid;$/;"	m	struct:nvme_id_ctrl
cntlid	src/nvme/types.h	/^	__le16			cntlid;$/;"	m	struct:nvmf_ext_die
cntlid	src/nvme/types.h	/^	__le16		cntlid;$/;"	m	struct:nvmf_connect_data
cntlid	src/nvme/types.h	/^	__le16		cntlid;$/;"	m	struct:nvmf_disc_log_entry
cntlid	src/nvme/types.h	/^	__le16	cntlid;$/;"	m	struct:nvme_persistent_event_entry
cntlid	src/nvme/types.h	/^	__le16	cntlid;$/;"	m	struct:nvme_primary_ctrl_cap
cntlid	src/nvme/types.h	/^	__le16	cntlid;$/;"	m	struct:nvme_registered_ctrl
cntlid	src/nvme/types.h	/^	__le16	cntlid;$/;"	m	struct:nvme_registered_ctrl_ext
cntrltype	src/nvme/private.h	/^	char *cntrltype;$/;"	m	struct:nvme_ctrl
cntrltype	src/nvme/types.h	/^	__u8			cntrltype;$/;"	m	struct:nvme_id_ctrl
cntrltype_str	src/nvme/fabrics.c	/^static const char *cntrltype_str[] = {$/;"	v	file:
common	src/nvme/types.h	/^	char		common[NVMF_TSAS_SIZE];$/;"	m	union:nvmf_tsas
completion	src/nvme/types.h	/^	__u8			completion;$/;"	m	struct:nvme_self_test_log
compln_info	src/nvme/types.h	/^	__le16	compln_info;$/;"	m	struct:nvme_format_nvm_compln_event
config_file	src/nvme/private.h	/^	char *config_file;$/;"	m	struct:nvme_root
config_meson_cross	scripts/build.sh	/^config_meson_cross() {$/;"	f
config_meson_default	scripts/build.sh	/^config_meson_default() {$/;"	f
config_meson_fallback	scripts/build.sh	/^config_meson_fallback() {$/;"	f
config_meson_libdbus	scripts/build.sh	/^config_meson_libdbus() {$/;"	f
config_muon_default	scripts/build.sh	/^config_muon_default() {$/;"	f
configs	src/nvme/types.h	/^	struct nvme_fdp_config_desc configs[];$/;"	m	struct:nvme_fdp_config_log	typeref:struct:nvme_fdp_config_log::nvme_fdp_config_desc
container_of	ccan/ccan/container_of/container_of.h	33;"	d
container_of_or_null	ccan/ccan/container_of/container_of.h	69;"	d
container_of_or_null_	ccan/ccan/container_of/container_of.h	/^static inline char *container_of_or_null_(void *member_ptr, size_t offset)$/;"	f
container_of_var	ccan/ccan/container_of/container_of.h	119;"	d
container_of_var	ccan/ccan/container_of/container_of.h	122;"	d
container_off	ccan/ccan/container_of/container_of.h	99;"	d
container_off_var	ccan/ccan/container_of/container_of.h	138;"	d
container_off_var	ccan/ccan/container_of/container_of.h	141;"	d
control	src/nvme/api-types.h	/^	__u16 control;$/;"	m	struct:nvme_io_args
control	src/nvme/api-types.h	/^	__u16 control;$/;"	m	struct:nvme_zns_append_args
controller_id	src/nvme/nbft.h	/^	int controller_id;$/;"	m	struct:nbft_info_subsystem_ns
controllers	src/nvme/private.h	/^	struct list_head controllers;$/;"	m	struct:nvme_mi_ep	typeref:struct:nvme_mi_ep::list_head
controllers_scanned	src/nvme/private.h	/^	bool controllers_scanned;$/;"	m	struct:nvme_mi_ep
copy	src/nvme/api-types.h	/^	struct nvme_copy_range *copy;$/;"	m	struct:nvme_copy_args	typeref:struct:nvme_copy_args::nvme_copy_range
copy_id_str	examples/mi-mctp.c	177;"	d	file:
copy_value	src/nvme/util.c	/^static size_t copy_value(char *buf, size_t buflen, const char *value)$/;"	f	file:
copyright	doc/conf.py	/^copyright = '2020, Keith Busch'$/;"	v
corrupt	ccan/ccan/list/list.c	/^static void *corrupt(const char *abortstr,$/;"	f	file:
count_entries	test/tree.c	/^static unsigned int count_entries(nvme_root_t r)$/;"	f	file:
count_ep_controllers	test/mi.c	/^unsigned int count_ep_controllers(nvme_mi_ep_t ep)$/;"	f
count_root_eps	test/mi.c	/^unsigned int count_root_eps(nvme_root_t root)$/;"	f
cptpl	src/nvme/api-types.h	/^	enum nvme_resv_cptpl cptpl;$/;"	m	struct:nvme_resv_register_args	typeref:enum:nvme_resv_register_args::nvme_resv_cptpl
cpu_to_be16	ccan/ccan/endian/endian.h	/^static inline beint16_t cpu_to_be16(uint16_t native)$/;"	f
cpu_to_be32	ccan/ccan/endian/endian.h	/^static inline beint32_t cpu_to_be32(uint32_t native)$/;"	f
cpu_to_be64	ccan/ccan/endian/endian.h	/^static inline beint64_t cpu_to_be64(uint64_t native)$/;"	f
cpu_to_le16	ccan/ccan/endian/endian.h	/^static inline leint16_t cpu_to_le16(uint16_t native)$/;"	f
cpu_to_le32	ccan/ccan/endian/endian.h	/^static inline leint32_t cpu_to_le32(uint32_t native)$/;"	f
cpu_to_le64	ccan/ccan/endian/endian.h	/^static inline leint64_t cpu_to_le64(uint64_t native)$/;"	f
cqes	src/nvme/types.h	/^	__u8			cqes;$/;"	m	struct:nvme_id_ctrl
crdt1	src/nvme/types.h	/^	__le16			crdt1;$/;"	m	struct:nvme_id_ctrl
crdt2	src/nvme/types.h	/^	__le16			crdt2;$/;"	m	struct:nvme_id_ctrl
crdt3	src/nvme/types.h	/^	__le16			crdt3;$/;"	m	struct:nvme_id_ctrl
create_parameterlist	scripts/kernel-doc	/^sub create_parameterlist($$$$) {$/;"	s
create_tree	test/tree.c	/^static nvme_root_t create_tree()$/;"	f	file:
creator_id	src/nvme/nbft.h	/^	__le32 creator_id;$/;"	m	struct:nbft_header
creator_revision	src/nvme/nbft.h	/^	__le32 creator_revision;$/;"	m	struct:nbft_header
critical_comp_time	src/nvme/types.h	/^	__le32			critical_comp_time;$/;"	m	struct:nvme_smart_log
critical_warning	src/nvme/types.h	/^	__u8			critical_warning;$/;"	m	struct:nvme_smart_log
critical_warning	src/nvme/types.h	/^	__u8	critical_warning;$/;"	m	struct:nvme_endurance_group_log
crkey	src/nvme/api-types.h	/^	__u64 crkey;$/;"	m	struct:nvme_resv_acquire_args
crkey	src/nvme/api-types.h	/^	__u64 crkey;$/;"	m	struct:nvme_resv_register_args
crkey	src/nvme/api-types.h	/^	__u64 crkey;$/;"	m	struct:nvme_resv_release_args
crt	src/nvme/types.h	/^	__u8	crt;$/;"	m	struct:nvme_primary_ctrl_cap
cs	src/nvme/types.h	/^	__le64	cs;$/;"	m	struct:nvme_error_log_page
csi	src/nvme/api-types.h	/^	__u8 csi;$/;"	m	struct:nvme_ns_mgmt_args
csi	src/nvme/api-types.h	/^	enum nvme_csi csi;$/;"	m	struct:nvme_get_log_args	typeref:enum:nvme_get_log_args::nvme_csi
csi	src/nvme/api-types.h	/^	enum nvme_csi csi;$/;"	m	struct:nvme_identify_args	typeref:enum:nvme_identify_args::nvme_csi
csi	src/nvme/private.h	/^	enum nvme_csi csi;$/;"	m	struct:nvme_ns	typeref:enum:nvme_ns::nvme_csi
csi	src/nvme/types.h	/^	__u8	csi;$/;"	m	struct:nvme_error_log_page
csl	src/nvme/nbft.h	/^	__le16 csl;$/;"	m	struct:nbft_control
csts	src/nvme/types.h	/^	__le16	csts;$/;"	m	struct:nvme_mi_ctrl_health_status
csum	src/nvme/nbft.c	/^static __u8 csum(const __u8 *buffer, ssize_t length)$/;"	f	file:
ctemp	src/nvme/types.h	/^	__le16	ctemp;$/;"	m	struct:nvme_mi_ctrl_health_status
ctemp	src/nvme/types.h	/^	__u8	ctemp;$/;"	m	struct:nvme_mi_nvm_ss_health_status
ctlid	src/nvme/types.h	/^	__le16	ctlid;$/;"	m	struct:nvme_mi_ctrl_health_status
ctratt	src/nvme/types.h	/^	__le32			ctratt;$/;"	m	struct:nvme_id_ctrl
ctrl	libnvme/tests/create-ctrl-obj.py	/^ctrl = nvme.ctrl(root, subsysnqn=subsysnqn, transport=transport, traddr=traddr, trsvcid=trsvcid)$/;"	v
ctrl	libnvme/tests/gc.py	/^    ctrl = nvme.ctrl($/;"	v
ctrl_busy_time	src/nvme/types.h	/^	__u8			ctrl_busy_time[16];$/;"	m	struct:nvme_smart_log
ctrl_id	src/nvme/mi.h	/^	__le16	ctrl_id;$/;"	m	struct:nvme_mi_admin_req_hdr
ctrl_id	test/tree.c	/^	int ctrl_id;$/;"	m	struct:test_data	file:
ctrl_lookups	test/tree.c	/^static void ctrl_lookups(nvme_root_t r)$/;"	f	file:
ctrl_loss_tmo	src/nvme/fabrics.h	/^	int ctrl_loss_tmo;$/;"	m	struct:nvme_fabrics_config
ctrl_loss_tmo	src/nvme/private.h	/^	bool ctrl_loss_tmo;$/;"	m	struct:nvme_fabric_options
ctrl_power_cycle	src/nvme/types.h	/^	__le32	 ctrl_power_cycle;$/;"	m	struct:nvme_power_on_reset_info_list
ctrl_time_stamp	src/nvme/types.h	/^	__le64	 ctrl_time_stamp;$/;"	m	struct:nvme_power_on_reset_info_list
ctrlavail	src/nvme/types.h	/^	__u8	ctrlavail;$/;"	m	struct:nvme_telemetry_log
ctrldgn	src/nvme/types.h	/^	__u8	ctrldgn;$/;"	m	struct:nvme_telemetry_log
ctrlist	src/nvme/api-types.h	/^	struct nvme_ctrl_list *ctrlist;$/;"	m	struct:nvme_ns_attach_args	typeref:struct:nvme_ns_attach_args::nvme_ctrl_list
ctrls	libnvme/tests/gc.py	/^ctrls = None$/;"	v
ctrls	libnvme/tests/gc.py	/^ctrls = []$/;"	v
ctrls	src/nvme/private.h	/^	struct list_head ctrls;$/;"	m	struct:nvme_subsystem	typeref:struct:nvme_subsystem::list_head
current_operation	src/nvme/types.h	/^	__u8			current_operation;$/;"	m	struct:nvme_self_test_log
cwarn	src/nvme/types.h	/^	__u8	cwarn;$/;"	m	struct:nvme_mi_ctrl_health_status
d	examples/discover-loop.py	/^    d = c.discover(lsp=lsp)$/;"	v
dalb1	src/nvme/types.h	/^	__le16	dalb1;$/;"	m	struct:nvme_telemetry_log
dalb2	src/nvme/types.h	/^	__le16	dalb2;$/;"	m	struct:nvme_telemetry_log
dalb3	src/nvme/types.h	/^	__le16	dalb3;$/;"	m	struct:nvme_telemetry_log
dalb4	src/nvme/types.h	/^	__le32	dalb4;$/;"	m	struct:nvme_telemetry_log
dash	examples/display-columnar.c	/^static const char dash[101] = {[0 ... 99] = '-'};$/;"	v	file:
data	src/nvme/api-types.h	/^	struct nvme_ns_mgmt_host_sw_specified *data;$/;"	m	struct:nvme_ns_mgmt_args	typeref:struct:nvme_ns_mgmt_args::nvme_ns_mgmt_host_sw_specified
data	src/nvme/api-types.h	/^	void	*data;$/;"	m	struct:nvme_dim_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_directive_recv_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_directive_send_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_fw_download_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_get_features_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_identify_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_io_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_io_mgmt_recv_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_io_mgmt_send_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_security_receive_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_security_send_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_set_features_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_zns_append_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_zns_mgmt_recv_args
data	src/nvme/api-types.h	/^	void *data;$/;"	m	struct:nvme_zns_mgmt_send_args
data	src/nvme/private.h	/^	void *data;$/;"	m	struct:nvme_mi_req
data	src/nvme/private.h	/^	void *data;$/;"	m	struct:nvme_mi_resp
data	src/nvme/types.h	/^	__u8	data[0];$/;"	m	struct:nvme_mi_vpd_telem
data	test/mi.c	/^	void *data;$/;"	m	struct:fw_download_info	file:
data_area	src/nvme/types.h	/^	__u8	data_area[];$/;"	m	struct:nvme_telemetry_log
data_digest	src/nvme/fabrics.h	/^	bool data_digest;$/;"	m	struct:nvme_fabrics_config
data_digest	src/nvme/private.h	/^	bool data_digest;$/;"	m	struct:nvme_fabric_options
data_digest_required	src/nvme/nbft.h	/^	bool data_digest_required;$/;"	m	struct:nbft_info_subsystem_ns
data_len	src/nvme/api-types.h	/^	__u32	data_len;$/;"	m	struct:nvme_dim_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_directive_recv_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_directive_send_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_fw_download_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_get_features_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_io_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_io_mgmt_recv_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_io_mgmt_send_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_security_receive_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_security_send_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_set_features_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_zns_append_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_zns_mgmt_recv_args
data_len	src/nvme/api-types.h	/^	__u32 data_len;$/;"	m	struct:nvme_zns_mgmt_send_args
data_len	src/nvme/ioctl.h	/^	__u32	data_len;$/;"	m	struct:nvme_passthru_cmd
data_len	src/nvme/ioctl.h	/^	__u32	data_len;$/;"	m	struct:nvme_uring_cmd
data_len	src/nvme/ioctl.h	/^	__u32   data_len;$/;"	m	struct:nvme_passthru_cmd64
data_len	src/nvme/private.h	/^	size_t data_len;$/;"	m	struct:nvme_mi_req
data_len	src/nvme/private.h	/^	size_t data_len;$/;"	m	struct:nvme_mi_resp
data_len	test/ioctl/mock.h	/^	uint32_t data_len;$/;"	m	struct:mock_cmd
data_units_read	src/nvme/types.h	/^	__u8			data_units_read[16];$/;"	m	struct:nvme_smart_log
data_units_read	src/nvme/types.h	/^	__u8	data_units_read[16];$/;"	m	struct:nvme_endurance_group_log
data_units_written	src/nvme/types.h	/^	__u8			data_units_written[16];$/;"	m	struct:nvme_smart_log
data_units_written	src/nvme/types.h	/^	__u8	data_units_written[16];$/;"	m	struct:nvme_endurance_group_log
dbus_object_is_dict	src/nvme/mi-mctp.c	/^static bool dbus_object_is_dict(DBusMessageIter *obj)$/;"	f	file:
dbus_object_is_type	src/nvme/mi-mctp.c	/^static bool dbus_object_is_type(DBusMessageIter *obj, int type)$/;"	f	file:
dctype	src/nvme/private.h	/^	char *dctype;$/;"	m	struct:nvme_ctrl
dctype	src/nvme/types.h	/^	__u8			dctype;$/;"	m	struct:nvme_id_ctrl
dctype_str	src/nvme/fabrics.c	/^static const char *dctype_str[] = {$/;"	v	file:
default_host	src/nvme/tree.c	/^static struct nvme_host *default_host;$/;"	v	typeref:struct:nvme_host	file:
default_supported_options	src/nvme/fabrics.c	/^static const struct nvme_fabric_options default_supported_options = {$/;"	v	typeref:struct:nvme_fabric_options	file:
default_timeout	src/nvme/mi.c	/^static const int default_timeout = 1000; \/* milliseconds; endpoints may$/;"	v	file:
derive_nvme_keys	src/nvme/linux.c	/^static int derive_nvme_keys(const char *hostnqn, const char *identity,$/;"	f	file:
derive_retained_key	src/nvme/linux.c	/^static int derive_retained_key(const EVP_MD *md, const char *hostnqn,$/;"	f	file:
derive_tls_key	src/nvme/linux.c	/^static int derive_tls_key(const EVP_MD *md, const char *identity,$/;"	f	file:
desc_ep	src/nvme/private.h	/^	int (*desc_ep)(struct nvme_mi_ep *ep, char *buf, size_t len);$/;"	m	struct:nvme_mi_transport
descs	src/nvme/types.h	/^		struct nvme_metadata_element_desc descs[0];$/;"	m	union:nvme_host_metadata::__anon1	typeref:struct:nvme_host_metadata::__anon1::nvme_metadata_element_desc
descs	src/nvme/types.h	/^	struct nvme_ana_group_desc descs[];$/;"	m	struct:nvme_ana_log	typeref:struct:nvme_ana_log::nvme_ana_group_desc
descs	src/nvme/types.h	/^	struct nvme_lba_status_desc descs[];$/;"	m	struct:nvme_lba_status	typeref:struct:nvme_lba_status::nvme_lba_status_desc
descs_buf	src/nvme/types.h	/^		__u8 descs_buf[4094];$/;"	m	union:nvme_host_metadata::__anon1
dh_grp_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj dh_grp_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
dhchap_ctrl_key	src/nvme/private.h	/^	char *dhchap_ctrl_key;$/;"	m	struct:nvme_ctrl
dhchap_ctrl_secret	src/nvme/private.h	/^	bool dhchap_ctrl_secret;$/;"	m	struct:nvme_fabric_options
dhchap_key	src/nvme/private.h	/^	char *dhchap_key;$/;"	m	struct:nvme_ctrl
dhchap_key	src/nvme/private.h	/^	char *dhchap_key;$/;"	m	struct:nvme_host
dhchap_secret	src/nvme/private.h	/^	bool dhchap_secret;$/;"	m	struct:nvme_fabric_options
dhcp_override	src/nvme/nbft.h	/^	bool dhcp_override;$/;"	m	struct:nbft_info_hfi_info_tcp
dhcp_root_path_str_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj dhcp_root_path_str_obj;$/;"	m	struct:nbft_ssns_ext_info	typeref:struct:nbft_ssns_ext_info::nbft_heap_obj
dhcp_root_path_string	src/nvme/nbft.h	/^	char *dhcp_root_path_string;$/;"	m	struct:nbft_info_subsystem_ns
dhcp_server	src/nvme/nbft.h	/^	__u8 dhcp_server[16];$/;"	m	struct:nbft_hfi_info_tcp
dhcp_server_ipaddr	src/nvme/nbft.h	/^	char dhcp_server_ipaddr[40];$/;"	m	struct:nbft_info_hfi_info_tcp
did	src/nvme/types.h	/^	__le16	did;$/;"	m	struct:nvme_mi_read_ctrl_info
die	src/nvme/types.h	/^	union nvmf_die	die[];$/;"	m	struct:nvmf_dim_data	typeref:union:nvmf_dim_data::nvmf_die
disable_sqflow	src/nvme/fabrics.h	/^	bool disable_sqflow;$/;"	m	struct:nvme_fabrics_config
disable_sqflow	src/nvme/private.h	/^	bool disable_sqflow;$/;"	m	struct:nvme_fabric_options
disc_supp_str	examples/discover-loop.py	/^def disc_supp_str(dlp_supp_opts):$/;"	f
discl	src/nvme/nbft.h	/^	__le16 discl;$/;"	m	struct:nbft_control
disco	src/nvme/nbft.h	/^	__le32 disco;$/;"	m	struct:nbft_control
discovered	src/nvme/private.h	/^	bool discovered;$/;"	m	struct:nvme_ctrl
discovery	src/nvme/nbft.h	/^	struct nbft_info_discovery *discovery;$/;"	m	struct:nbft_info_subsystem_ns	typeref:struct:nbft_info_subsystem_ns::nbft_info_discovery
discovery	src/nvme/private.h	/^	bool discovery;$/;"	m	struct:nvme_fabric_options
discovery_ctrl	src/nvme/private.h	/^	bool discovery_ctrl;$/;"	m	struct:nvme_ctrl
discovery_ctrl_addr_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj discovery_ctrl_addr_obj;$/;"	m	struct:nbft_discovery	typeref:struct:nbft_discovery::nbft_heap_obj
discovery_ctrl_nqn_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj discovery_ctrl_nqn_obj;$/;"	m	struct:nbft_discovery	typeref:struct:nbft_discovery::nbft_heap_obj
discovery_from_index	src/nvme/nbft.c	/^static struct nbft_info_discovery *discovery_from_index(struct nbft_info *nbft, int i)$/;"	f	file:
discovery_list	src/nvme/nbft.h	/^	struct nbft_info_discovery **discovery_list;$/;"	m	struct:nbft_info	typeref:struct:nbft_info::nbft_info_discovery
discv	src/nvme/nbft.h	/^	__u8 discv;$/;"	m	struct:nbft_control
dlen	src/nvme/mi.h	/^	__le32	dlen;$/;"	m	struct:nvme_mi_admin_req_hdr
dlfeat	src/nvme/types.h	/^	__u8			dlfeat;$/;"	m	struct:nvme_id_ns
dlp_supp_opts	examples/discover-loop.py	/^    dlp_supp_opts = 0$/;"	v
dlp_supp_opts	examples/discover-loop.py	/^    dlp_supp_opts = slp[nvme.NVME_LOG_LID_DISCOVER] >> 16$/;"	v
dmrl	src/nvme/types.h	/^	__u8     dmrl;$/;"	m	struct:nvme_id_ctrl_nvm
dmrsl	src/nvme/types.h	/^	__le32   dmrsl;$/;"	m	struct:nvme_id_ctrl_nvm
dmsl	src/nvme/types.h	/^	__le64   dmsl;$/;"	m	struct:nvme_id_ctrl_nvm
do_action_endpoint	examples/mi-mctp.c	/^static int do_action_endpoint(enum action action, nvme_mi_ep_t ep, int argc, char** argv)$/;"	f	file:
do_admin_raw	examples/mi-mctp.c	/^int do_admin_raw(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
do_config_get	examples/mi-mctp.c	/^int do_config_get(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
do_config_set	examples/mi-mctp.c	/^int do_config_set(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
do_controllers	examples/mi-mctp.c	/^static int do_controllers(nvme_mi_ep_t ep)$/;"	f	file:
do_get_log_page	examples/mi-mctp.c	/^int do_get_log_page(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
do_identify	examples/mi-mctp.c	/^int do_identify(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
do_info	examples/mi-mctp.c	/^int do_info(nvme_mi_ep_t ep)$/;"	f
do_security_info	examples/mi-mctp.c	/^int do_security_info(nvme_mi_ep_t ep, int argc, char **argv)$/;"	f
doff	src/nvme/mi.h	/^	__le32	doff;$/;"	m	struct:nvme_mi_admin_req_hdr
dom_cap	src/nvme/types.h	/^	__u8	dom_cap[16];$/;"	m	struct:nvme_id_domain_attr
dom_id	src/nvme/types.h	/^	__le16	dom_id;$/;"	m	struct:nvme_id_domain_attr
domain_attr	src/nvme/types.h	/^	struct nvme_id_domain_attr domain_attr[NVME_ID_DOMAIN_LIST_MAX];$/;"	m	struct:nvme_id_domain_list	typeref:struct:nvme_id_domain_list::nvme_id_domain_attr
domainid	src/nvme/types.h	/^	__le16			domainid;$/;"	m	struct:nvme_id_ctrl
domainid	src/nvme/types.h	/^	__le16	domainid;$/;"	m	struct:nvme_capacity_config_desc
domainid	src/nvme/types.h	/^	__le16	domainid;$/;"	m	struct:nvme_media_unit_stat_desc
doper	src/nvme/api-types.h	/^	enum nvme_directive_receive_doper doper;$/;"	m	struct:nvme_directive_recv_args	typeref:enum:nvme_directive_recv_args::nvme_directive_receive_doper
doper	src/nvme/api-types.h	/^	enum nvme_directive_send_doper doper;$/;"	m	struct:nvme_directive_send_args	typeref:enum:nvme_directive_send_args::nvme_directive_send_doper
dpc	src/nvme/types.h	/^	__u8			dpc;$/;"	m	struct:nvme_id_ns
dps	src/nvme/types.h	/^	__u8			dps;$/;"	m	struct:nvme_id_ns
dps	src/nvme/types.h	/^	__u8			dps;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
dps	src/nvme/types.h	/^	__u8	dps;$/;"	m	struct:nvme_change_ns_event
driver_dev_path_sig	src/nvme/nbft.h	/^	struct nbft_heap_obj driver_dev_path_sig;$/;"	m	struct:nbft_header	typeref:struct:nbft_header::nbft_heap_obj
ds	src/nvme/types.h	/^	__u8			ds;$/;"	m	struct:nvme_lbaf
dslba	src/nvme/types.h	/^	__le64	dslba;$/;"	m	struct:nvme_lba_status_desc
dsm	src/nvme/api-types.h	/^	__u8 dsm;$/;"	m	struct:nvme_io_args
dsm	src/nvme/api-types.h	/^	struct nvme_dsm_range *dsm;$/;"	m	struct:nvme_dsm_args	typeref:struct:nvme_dsm_args::nvme_dsm_range
dspec	src/nvme/api-types.h	/^	__u16 dspec;$/;"	m	struct:nvme_copy_args
dspec	src/nvme/api-types.h	/^	__u16 dspec;$/;"	m	struct:nvme_directive_recv_args
dspec	src/nvme/api-types.h	/^	__u16 dspec;$/;"	m	struct:nvme_directive_send_args
dspec	src/nvme/api-types.h	/^	__u16 dspec;$/;"	m	struct:nvme_io_args
dsto	src/nvme/types.h	/^	__u8			dsto;$/;"	m	struct:nvme_id_ctrl
dsts	src/nvme/types.h	/^	__u8			dsts;$/;"	m	struct:nvme_st_result
dtwin_re	src/nvme/types.h	/^	__le64	dtwin_re;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwin_rt	src/nvme/types.h	/^	__le64	dtwin_rt;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwin_te	src/nvme/types.h	/^	__le64	dtwin_te;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwin_tmax	src/nvme/types.h	/^	__le64	dtwin_tmax;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwin_we	src/nvme/types.h	/^	__le64	dtwin_we;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwin_wt	src/nvme/types.h	/^	__le64	dtwin_wt;$/;"	m	struct:nvme_nvmset_predictable_lat_log
dtwinrt	src/nvme/types.h	/^	__le64	dtwinrt;$/;"	m	struct:nvme_plm_config
dtwintt	src/nvme/types.h	/^	__le64	dtwintt;$/;"	m	struct:nvme_plm_config
dtwinwt	src/nvme/types.h	/^	__le64	dtwinwt;$/;"	m	struct:nvme_plm_config
dtype	src/nvme/api-types.h	/^	__u8 dtype;$/;"	m	struct:nvme_copy_args
dtype	src/nvme/api-types.h	/^	enum nvme_directive_dtype dtype;$/;"	m	struct:nvme_directive_recv_args	typeref:enum:nvme_directive_recv_args::nvme_directive_dtype
dtype	src/nvme/api-types.h	/^	enum nvme_directive_dtype dtype;$/;"	m	struct:nvme_directive_send_args	typeref:enum:nvme_directive_send_args::nvme_directive_dtype
dump_declaration	scripts/kernel-doc	/^sub dump_declaration($$) {$/;"	s
dump_doc_section	scripts/kernel-doc	/^sub dump_doc_section {$/;"	s
dump_enum	scripts/kernel-doc	/^sub dump_enum($$) {$/;"	s
dump_function	scripts/kernel-doc	/^sub dump_function($$) {$/;"	s
dump_section	scripts/kernel-doc	/^sub dump_section {$/;"	s
dump_struct	scripts/kernel-doc	/^sub dump_struct($$) {$/;"	s
dump_typedef	scripts/kernel-doc	/^sub dump_typedef($$) {$/;"	s
dump_union	scripts/kernel-doc	/^sub dump_union($$) {$/;"	s
duplicate_connect	src/nvme/fabrics.h	/^	bool duplicate_connect;$/;"	m	struct:nvme_fabrics_config
duplicate_connect	src/nvme/private.h	/^	bool duplicate_connect;$/;"	m	struct:nvme_fabric_options
earutr	src/nvme/types.h	/^	__le32 earutr;$/;"	m	struct:nvme_fdp_ruh_status_desc
ec	src/nvme/types.h	/^	__u8	ec;$/;"	m	struct:nvme_mi_vpd_tra
eds	src/nvme/api-types.h	/^	bool eds;$/;"	m	struct:nvme_resv_report_args
edstt	src/nvme/types.h	/^	__le16			edstt;$/;"	m	struct:nvme_id_ctrl
ee	src/nvme/types.h	/^	__le16	ee;$/;"	m	struct:nvme_plm_config
eflags	src/nvme/types.h	/^	__le16		eflags;$/;"	m	struct:nvmf_disc_log_entry
eflags_strings	src/nvme/fabrics.c	/^static const char * const eflags_strings[] = {$/;"	v	file:
egcd	src/nvme/types.h	/^	struct nvme_end_grp_config_desc egcd[];$/;"	m	struct:nvme_capacity_config_desc	typeref:struct:nvme_capacity_config_desc::nvme_end_grp_config_desc
egchans	src/nvme/types.h	/^	__le16	egchans;$/;"	m	struct:nvme_end_grp_chan_desc
egcn	src/nvme/types.h	/^	__le16	egcn;$/;"	m	struct:nvme_capacity_config_desc
egids	src/nvme/types.h	/^	__le16	egids[];$/;"	m	struct:nvme_eg_event_aggregate_log
egsets	src/nvme/types.h	/^	__le16	egsets;$/;"	m	struct:nvme_end_grp_config_desc
ehai	src/nvme/types.h	/^	__u8	ehai;$/;"	m	struct:nvme_persistent_event_entry
ehl	src/nvme/types.h	/^	__u8	ehl;$/;"	m	struct:nvme_persistent_event_entry
eid	src/nvme/mi-mctp.c	/^	__u8	eid;$/;"	m	struct:nvme_mi_transport_mctp	file:
eid	src/nvme/types.h	/^	char		eid[NVME_NQN_LENGTH];$/;"	m	struct:nvmf_dim_data
eilbrt	src/nvme/types.h	/^	__le32			eilbrt;$/;"	m	struct:nvme_copy_range
ektype	src/nvme/types.h	/^	__le16		ektype;$/;"	m	struct:nvmf_dim_data
el	src/nvme/types.h	/^	__le16	el;$/;"	m	struct:nvme_persistent_event_entry
elbaf	src/nvme/types.h	/^	__le32	elbaf[64];$/;"	m	struct:nvme_nvm_id_ns
elbat	src/nvme/types.h	/^	__le16			elbat;$/;"	m	struct:nvme_copy_range
elbat	src/nvme/types.h	/^	__le16			elbat;$/;"	m	struct:nvme_copy_range_f1
elbatm	src/nvme/types.h	/^	__le16			elbatm;$/;"	m	struct:nvme_copy_range
elbatm	src/nvme/types.h	/^	__le16			elbatm;$/;"	m	struct:nvme_copy_range_f1
elbt	src/nvme/types.h	/^	__u8			elbt[10];$/;"	m	struct:nvme_copy_range_f1
element_id	src/nvme/api-types.h	/^	__u16 element_id;$/;"	m	struct:nvme_capacity_mgmt_args
elements	src/nvme/types.h	/^	struct nvme_lbas_ns_element elements[];$/;"	m	struct:nvme_lba_status_log	typeref:struct:nvme_lba_status_log::nvme_lbas_ns_element
elems	src/nvme/types.h	/^	struct nvme_mi_vpd_telem elems[0];$/;"	m	struct:nvme_mi_vpd_tra	typeref:struct:nvme_mi_vpd_tra::nvme_mi_vpd_telem
elpe	src/nvme/types.h	/^	__u8			elpe;$/;"	m	struct:nvme_id_ctrl
enabled	src/nvme/types.h	/^	__u8	enabled[32];$/;"	m	struct:nvme_id_directives
ename	src/nvme/types.h	/^	char		ename[NVMF_ENAME_LEN];$/;"	m	struct:nvmf_dim_data
end_est	src/nvme/types.h	/^	__u8	end_est[16];$/;"	m	struct:nvme_end_grp_config_desc
end_mock_cmds	test/ioctl/mock.c	/^void end_mock_cmds(void)$/;"	f
endgid	src/nvme/types.h	/^	__le16			endgid;$/;"	m	struct:nvme_id_ns
endgid	src/nvme/types.h	/^	__le16			endgid;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
endgid	src/nvme/types.h	/^	__le16			endgid;$/;"	m	struct:nvme_nvmset_attr
endgid	src/nvme/types.h	/^	__le16	endgid;$/;"	m	struct:nvme_end_grp_config_desc
endgid	src/nvme/types.h	/^	__le16	endgid;$/;"	m	struct:nvme_id_independent_id_ns
endgid	src/nvme/types.h	/^	__le16	endgid;$/;"	m	struct:nvme_media_unit_stat_desc
endgidmax	src/nvme/types.h	/^	__le16			endgidmax;$/;"	m	struct:nvme_id_ctrl
endpoints	src/nvme/private.h	/^	struct list_head endpoints; \/* MI endpoints *\/$/;"	m	struct:nvme_root	typeref:struct:nvme_root::list_head
endu_grp_crit_warn_sumry	src/nvme/types.h	/^	__u8			endu_grp_crit_warn_sumry;$/;"	m	struct:nvme_smart_log
endurance_estimate	src/nvme/types.h	/^	__u8	endurance_estimate[16];$/;"	m	struct:nvme_endurance_group_log
enlat	src/nvme/types.h	/^	__le32			enlat;$/;"	m	struct:nvme_id_psd
ent	src/nvme/types.h	/^	struct nvme_nvmset_attr	ent[NVME_ID_NVMSET_LIST_MAX];$/;"	m	struct:nvme_id_nvmset_list	typeref:struct:nvme_id_nvmset_list::nvme_nvmset_attr
entfmt	src/nvme/types.h	/^	__le16		entfmt;$/;"	m	struct:nvmf_dim_data
entries	src/nvme/types.h	/^	__le16	entries[];$/;"	m	struct:nvme_aggregate_endurance_group_event
entries	src/nvme/types.h	/^	__le16	entries[];$/;"	m	struct:nvme_aggregate_predictable_lat_event
entries	src/nvme/types.h	/^	struct nvme_zns_desc	entries[];$/;"	m	struct:nvme_zone_report	typeref:struct:nvme_zone_report::nvme_zns_desc
entries	src/nvme/types.h	/^	struct nvmf_disc_log_entry entries[];$/;"	m	struct:nvmf_discovery_log	typeref:struct:nvmf_discovery_log::nvmf_disc_log_entry
entry	src/nvme/private.h	/^	struct list_node entry;$/;"	m	struct:nvme_ctrl	typeref:struct:nvme_ctrl::list_node
entry	src/nvme/private.h	/^	struct list_node entry;$/;"	m	struct:nvme_host	typeref:struct:nvme_host::list_node
entry	src/nvme/private.h	/^	struct list_node entry;$/;"	m	struct:nvme_ns	typeref:struct:nvme_ns::list_node
entry	src/nvme/private.h	/^	struct list_node entry;$/;"	m	struct:nvme_path	typeref:struct:nvme_path::list_node
entry	src/nvme/private.h	/^	struct list_node entry;$/;"	m	struct:nvme_subsystem	typeref:struct:nvme_subsystem::list_node
entry	src/nvme/types.h	/^	struct nvme_id_ns_granularity_desc entry[NVME_ID_ND_DESCRIPTOR_MAX];$/;"	m	struct:nvme_id_ns_granularity_list	typeref:struct:nvme_id_ns_granularity_list::nvme_id_ns_granularity_desc
entry	src/nvme/types.h	/^	struct nvme_id_uuid_list_entry entry[NVME_ID_UUID_LIST_MAX];$/;"	m	struct:nvme_id_uuid_list	typeref:struct:nvme_id_uuid_list::nvme_id_uuid_list_entry
entry	src/nvme/types.h	/^	struct nvme_lba_range_type_entry entry[NVME_FEAT_LBA_RANGE_MAX];$/;"	m	struct:nvme_lba_range_type	typeref:struct:nvme_lba_range_type::nvme_lba_range_type_entry
ep	src/nvme/private.h	/^	struct nvme_mi_ep	*ep;$/;"	m	struct:nvme_mi_ctrl	typeref:struct:nvme_mi_ctrl::nvme_mi_ep
ep_entry	src/nvme/private.h	/^	struct list_node	ep_entry;$/;"	m	struct:nvme_mi_ctrl	typeref:struct:nvme_mi_ctrl::list_node
err	test/ioctl/mock.h	/^	int err;$/;"	m	struct:mock_cmd
error_count	src/nvme/types.h	/^	__le64	error_count;$/;"	m	struct:nvme_error_log_page
erutl	src/nvme/types.h	/^	__le32 erutl;$/;"	m	struct:nvme_fdp_config_desc
estulb	src/nvme/types.h	/^	__le32	estulb;$/;"	m	struct:nvme_lba_status_log
etbe	src/nvme/types.h	/^	__le32	etbe;$/;"	m	struct:nvme_sanitize_log_page
etbend	src/nvme/types.h	/^	__le32	etbend;$/;"	m	struct:nvme_sanitize_log_page
etce	src/nvme/types.h	/^	__le32	etce;$/;"	m	struct:nvme_sanitize_log_page
etcend	src/nvme/types.h	/^	__le32	etcend;$/;"	m	struct:nvme_sanitize_log_page
eto	src/nvme/types.h	/^	__le32	eto;$/;"	m	struct:nvme_sanitize_log_page
etond	src/nvme/types.h	/^	__le32	etond;$/;"	m	struct:nvme_sanitize_log_page
ets	src/nvme/types.h	/^	__le64	ets;$/;"	m	struct:nvme_persistent_event_entry
etype	src/nvme/types.h	/^	__le16		etype;$/;"	m	struct:nvmf_dim_data
etype	src/nvme/types.h	/^	__u8	etype;$/;"	m	struct:nvme_persistent_event_entry
etype_rev	src/nvme/types.h	/^	__u8	etype_rev;$/;"	m	struct:nvme_persistent_event_entry
eui64	src/nvme/private.h	/^	uint8_t eui64[8];$/;"	m	struct:nvme_ns
eui64	src/nvme/types.h	/^	__u8			eui64[8];$/;"	m	struct:nvme_id_ns
event_type	src/nvme/types.h	/^	__le16	event_type;$/;"	m	struct:nvme_nvmset_predictable_lat_log
events	examples/telemetry-listen.c	/^struct events {$/;"	s	file:
events	src/nvme/types.h	/^	struct nvme_fdp_event events[63];$/;"	m	struct:nvme_fdp_events_log	typeref:struct:nvme_fdp_events_log::nvme_fdp_event
ever	src/nvme/types.h	/^	char		ever[NVMF_EVER_LEN];$/;"	m	struct:nvmf_dim_data
evt	src/nvme/types.h	/^	__u8 evt;$/;"	m	struct:nvme_fdp_supported_event_desc
evta	src/nvme/types.h	/^	__u8 evta;$/;"	m	struct:nvme_fdp_supported_event_desc
exat	src/nvme/types.h	/^	struct nvmf_ext_attr	exat[];$/;"	m	struct:nvmf_ext_die	typeref:struct:nvmf_ext_die::nvmf_ext_attr
exatlen	src/nvme/types.h	/^	__le16	exatlen;$/;"	m	struct:nvmf_ext_attr
exattype	src/nvme/types.h	/^	__le16	exattype;$/;"	m	struct:nvmf_ext_attr
exatval	src/nvme/types.h	/^	__u8	exatval[];$/;"	m	struct:nvmf_ext_attr
exclude_patterns	doc/conf.py	/^exclude_patterns = ['html', 'man', 'Thumbs.db', '.DS_Store']$/;"	v
execute_ioctl	test/ioctl/mock.c	59;"	d	file:
exlat	src/nvme/types.h	/^	__le32			exlat;$/;"	m	struct:nvme_id_psd
extended	src/nvme/types.h	/^	struct nvmf_ext_die		extended;$/;"	m	union:nvmf_die	typeref:struct:nvmf_die::nvmf_ext_die
extensions	doc/conf.py	/^extensions = [$/;"	v
fail	test/ioctl/util.c	/^void fail(const char *fmt, ...)$/;"	f
fast_io_fail_tmo	src/nvme/fabrics.h	/^	int fast_io_fail_tmo;$/;"	m	struct:nvme_fabrics_config
fast_io_fail_tmo	src/nvme/private.h	/^	bool fast_io_fail_tmo;$/;"	m	struct:nvme_fabric_options
fcatt	src/nvme/types.h	/^	__u8			fcatt;$/;"	m	struct:nvme_id_ctrl
fd	src/nvme/api-types.h	/^	int	fd;$/;"	m	struct:nvme_dim_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_capacity_mgmt_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_copy_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_dev_self_test_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_directive_recv_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_directive_send_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_dsm_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_format_nvm_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_fw_commit_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_fw_download_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_get_features_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_get_lba_status_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_get_log_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_get_property_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_identify_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_io_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_io_mgmt_recv_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_io_mgmt_send_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_lockdown_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_ns_attach_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_ns_mgmt_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_resv_acquire_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_resv_register_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_resv_release_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_resv_report_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_sanitize_nvm_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_security_receive_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_security_send_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_set_features_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_set_property_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_virtual_mgmt_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_zns_append_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_zns_mgmt_recv_args
fd	src/nvme/api-types.h	/^	int fd;$/;"	m	struct:nvme_zns_mgmt_send_args
fd	src/nvme/private.h	/^	int fd;$/;"	m	struct:nvme_ctrl
fd	src/nvme/private.h	/^	int fd;$/;"	m	struct:nvme_ns
fdpa	src/nvme/types.h	/^	__u8  fdpa;$/;"	m	struct:nvme_fdp_config_desc
features	src/nvme/ioctl.c	/^enum features {$/;"	g	file:
ff	src/nvme/types.h	/^	__u8	ff;$/;"	m	struct:nvme_mi_vpd_mra
fguid	src/nvme/types.h	/^	__u8			fguid[16];$/;"	m	struct:nvme_id_ctrl
fhexdump	examples/mi-mctp.c	/^void fhexdump(FILE *fp, const unsigned char *buf, int len)$/;"	f
fid	src/nvme/api-types.h	/^	__u8 fid;$/;"	m	struct:nvme_get_features_args
fid	src/nvme/api-types.h	/^	__u8 fid;$/;"	m	struct:nvme_set_features_args
fid_support	src/nvme/types.h	/^	__le32	fid_support[NVME_LOG_FID_SUPPORTED_EFFECTS_MAX];$/;"	m	struct:nvme_fid_supported_effects_log
filename	src/nvme/nbft.h	/^	char *filename;$/;"	m	struct:nbft_info
final_len	test/mi-mctp.c	/^	size_t final_len;$/;"	m	struct:mpr_tx_info	file:
find_port	examples/mi-conf.c	/^int find_port(nvme_mi_ep_t ep, uint8_t *portp, uint16_t *mtup)$/;"	f
find_test_data	test/tree.c	/^static struct test_data *find_test_data(nvme_ctrl_t c)$/;"	f	file:
findprog	scripts/kernel-doc	/^sub findprog($)$/;"	s
firmware	src/nvme/private.h	/^	char *firmware;$/;"	m	struct:nvme_ctrl
firmware	src/nvme/private.h	/^	char *firmware;$/;"	m	struct:nvme_subsystem
flags	src/nvme/ioctl.h	/^	__u8	flags;$/;"	m	struct:nvme_passthru_cmd
flags	src/nvme/ioctl.h	/^	__u8	flags;$/;"	m	struct:nvme_uring_cmd
flags	src/nvme/ioctl.h	/^	__u8    flags;$/;"	m	struct:nvme_passthru_cmd64
flags	src/nvme/mi.h	/^	__u8	flags;$/;"	m	struct:nvme_mi_admin_req_hdr
flags	src/nvme/nbft.h	/^	__le16 flags;$/;"	m	struct:nbft_security
flags	src/nvme/nbft.h	/^	__le16 flags;$/;"	m	struct:nbft_ssns
flags	src/nvme/nbft.h	/^	__le32 flags;$/;"	m	struct:nbft_ssns_ext_info
flags	src/nvme/nbft.h	/^	__u8 flags;$/;"	m	struct:nbft_control
flags	src/nvme/nbft.h	/^	__u8 flags;$/;"	m	struct:nbft_discovery
flags	src/nvme/nbft.h	/^	__u8 flags;$/;"	m	struct:nbft_hfi
flags	src/nvme/nbft.h	/^	__u8 flags;$/;"	m	struct:nbft_hfi_info_tcp
flags	src/nvme/nbft.h	/^	__u8 flags;$/;"	m	struct:nbft_host
flags	src/nvme/types.h	/^	__u8			flags;$/;"	m	struct:nvme_id_psd
flags	src/nvme/types.h	/^	__u8  flags;$/;"	m	struct:nvme_fdp_event
flags	src/nvme/types.h	/^	__u8  flags;$/;"	m	struct:nvme_fdp_event_realloc
flags	test/ioctl/mock.h	/^	uint8_t flags;$/;"	m	struct:mock_cmd
flba	src/nvme/types.h	/^	__le64			flba;$/;"	m	struct:nvme_st_result
flbas	src/nvme/types.h	/^	__u8			flbas;$/;"	m	struct:nvme_id_ns
flbas	src/nvme/types.h	/^	__u8			flbas;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
flbas	src/nvme/types.h	/^	__u8	flbas;$/;"	m	struct:nvme_change_ns_event
fn	examples/mi-mctp.c	/^	void (*fn)(struct nvme_mi_read_port_info *);$/;"	m	struct:__anon9	file:
fn	test/mi-mctp.c	/^	void (*fn)(nvme_mi_ep_t, struct test_peer *);$/;"	m	struct:test	file:
fn	test/mi.c	/^	void (*fn)(nvme_mi_ep_t);$/;"	m	struct:test	file:
fna	src/nvme/types.h	/^	__u8			fna;$/;"	m	struct:nvme_id_ctrl
fna	src/nvme/types.h	/^	__u8	fna;$/;"	m	struct:nvme_format_nvm_start_event
format	src/nvme/api-types.h	/^	__u8 format;$/;"	m	struct:nvme_copy_args
format_data	test/mi.c	/^struct format_data {$/;"	s	file:
format_ip_addr	src/nvme/nbft.c	/^static void format_ip_addr(char *buf, size_t buflen, __u8 *addr)$/;"	f	file:
format_nvm_cdw10	src/nvme/types.h	/^	__le32	format_nvm_cdw10;$/;"	m	struct:nvme_format_nvm_start_event
format_nvm_status	src/nvme/types.h	/^	__u8	format_nvm_status;$/;"	m	struct:nvme_format_nvm_compln_event
fp	src/nvme/private.h	/^	FILE *fp;$/;"	m	struct:nvme_root
fpi	src/nvme/types.h	/^	__u8			fpi;$/;"	m	struct:nvme_id_ns
fpi	src/nvme/types.h	/^	__u8	fpi;$/;"	m	struct:nvme_id_independent_id_ns
fr	src/nvme/types.h	/^	char			fr[8];$/;"	m	struct:nvme_id_ctrl
frl	src/nvme/types.h	/^	__le32			frl;$/;"	m	struct:nvme_zns_id_ns
frl1	src/nvme/types.h	/^	__le32			frl1;$/;"	m	struct:nvme_zns_id_ns
frl2	src/nvme/types.h	/^	__le32			frl2;$/;"	m	struct:nvme_zns_id_ns
frl3	src/nvme/types.h	/^	__le32			frl3;$/;"	m	struct:nvme_zns_id_ns
frmw	src/nvme/types.h	/^	__u8			frmw;$/;"	m	struct:nvme_id_ctrl
fromstr_test	test/uuid.c	/^static void fromstr_test(struct test_data *test)$/;"	f	file:
frs	src/nvme/types.h	/^	char	frs[7][8];$/;"	m	struct:nvme_firmware_slot
fua	src/nvme/api-types.h	/^	int fua;$/;"	m	struct:nvme_copy_args
fuses	src/nvme/types.h	/^	__le16			fuses;$/;"	m	struct:nvme_id_ctrl
fw_act	src/nvme/types.h	/^	__u8	 fw_act;$/;"	m	struct:nvme_power_on_reset_info_list
fw_commit_action	src/nvme/types.h	/^	__u8	fw_commit_action;$/;"	m	struct:nvme_fw_commit_event
fw_commit_info	test/mi.c	/^struct fw_commit_info {$/;"	s	file:
fw_download_info	test/mi.c	/^struct fw_download_info {$/;"	s	file:
fw_slot	src/nvme/types.h	/^	__u8	fw_slot;$/;"	m	struct:nvme_fw_commit_event
fwug	src/nvme/types.h	/^	__u8			fwug;$/;"	m	struct:nvme_id_ctrl
gateway_ipaddr	src/nvme/nbft.h	/^	char gateway_ipaddr[40];$/;"	m	struct:nbft_info_hfi_info_tcp
gen	src/nvme/types.h	/^	__le32	gen;$/;"	m	struct:nvme_resv_status
gen_number	src/nvme/types.h	/^	__le16	gen_number;$/;"	m	struct:nvme_persistent_event_log
genctr	src/nvme/types.h	/^	__le64		genctr;$/;"	m	struct:nvmf_discovery_log
generic_name	src/nvme/private.h	/^	char *generic_name;$/;"	m	struct:nvme_ns
generic_status	src/nvme/util.c	/^static const char * const generic_status[] = {$/;"	v	file:
get_entity_name	src/nvme/util.c	/^size_t get_entity_name(char *buffer, size_t bufsz)$/;"	f
get_entity_version	src/nvme/util.c	/^size_t get_entity_version(char *buffer, size_t bufsz)$/;"	f
get_heap_obj	src/nvme/nbft.c	123;"	d	file:
get_kernel_version	scripts/kernel-doc	/^sub get_kernel_version() {$/;"	s
get_sphinx_version	scripts/kernel-doc	/^sub get_sphinx_version()$/;"	s
grpid	src/nvme/private.h	/^	int grpid;$/;"	m	struct:nvme_path
grpid	src/nvme/types.h	/^	__le32	grpid;$/;"	m	struct:nvme_ana_group_desc
guid	src/nvme/types.h	/^	__u8	guid[16];$/;"	m	struct:nvme_lba_range_type_entry
h	examples/discover-loop.py	/^h = None$/;"	v
h	examples/discover-loop.py	/^h = nvme.host(r)$/;"	v
h	src/nvme/private.h	/^	struct nvme_host *h;$/;"	m	struct:nvme_subsystem	typeref:struct:nvme_subsystem::nvme_host
handle_mctp_endpoint	src/nvme/mi-mctp.c	/^static int handle_mctp_endpoint(nvme_root_t root, const char* objpath,$/;"	f	file:
handle_mctp_obj	src/nvme/mi-mctp.c	/^static int handle_mctp_obj(nvme_root_t root, DBusMessageIter *obj)$/;"	f	file:
has_message_type	src/nvme/mi-mctp.c	/^static bool has_message_type(DBusMessageIter *prop, uint8_t type)$/;"	f	file:
hbmw	src/nvme/types.h	/^	__u8 hbmw[16];$/;"	m	struct:nvme_fdp_stats_log
hchksum	src/nvme/types.h	/^	__u8	hchksum;$/;"	m	struct:nvme_mi_vpd_mr_common
hctma	src/nvme/types.h	/^	__le16			hctma;$/;"	m	struct:nvme_id_ctrl
hdesc	src/nvme/nbft.h	/^	struct nbft_heap_obj hdesc;$/;"	m	struct:nbft_control	typeref:struct:nbft_control::nbft_heap_obj
hdr	src/nvme/mi-mctp.c	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_msg_resp_mpr	typeref:struct:nvme_mi_msg_resp_mpr::nvme_mi_msg_hdr	file:
hdr	src/nvme/mi.h	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_admin_req_hdr	typeref:struct:nvme_mi_admin_req_hdr::nvme_mi_msg_hdr
hdr	src/nvme/mi.h	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_admin_resp_hdr	typeref:struct:nvme_mi_admin_resp_hdr::nvme_mi_msg_hdr
hdr	src/nvme/mi.h	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_mi_req_hdr	typeref:struct:nvme_mi_mi_req_hdr::nvme_mi_msg_hdr
hdr	src/nvme/mi.h	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_mi_resp_hdr	typeref:struct:nvme_mi_mi_resp_hdr::nvme_mi_msg_hdr
hdr	src/nvme/mi.h	/^	struct nvme_mi_msg_hdr hdr;$/;"	m	struct:nvme_mi_msg_resp	typeref:struct:nvme_mi_msg_resp::nvme_mi_msg_hdr
hdr	src/nvme/private.h	/^	struct nvme_mi_msg_hdr *hdr;$/;"	m	struct:nvme_mi_req	typeref:struct:nvme_mi_req::nvme_mi_msg_hdr
hdr	src/nvme/private.h	/^	struct nvme_mi_msg_hdr *hdr;$/;"	m	struct:nvme_mi_resp	typeref:struct:nvme_mi_resp::nvme_mi_msg_hdr
hdr_digest	src/nvme/fabrics.h	/^	bool hdr_digest;$/;"	m	struct:nvme_fabrics_config
hdr_digest	src/nvme/private.h	/^	bool hdr_digest;$/;"	m	struct:nvme_fabric_options
hdr_len	src/nvme/private.h	/^	size_t hdr_len;$/;"	m	struct:nvme_mi_req
hdr_len	src/nvme/private.h	/^	size_t hdr_len;$/;"	m	struct:nvme_mi_resp
header	src/nvme/types.h	/^	__u8			header;$/;"	m	struct:nvme_id_uuid_list_entry
heap_length	src/nvme/nbft.h	/^	__le32 heap_length;$/;"	m	struct:nbft_header
heap_offset	src/nvme/nbft.h	/^	__le32 heap_offset;$/;"	m	struct:nbft_header
hexdump	examples/mi-mctp.c	/^void hexdump(const unsigned char *buf, int len)$/;"	f
hexdump	test/ioctl/util.c	/^static void hexdump(const uint8_t *buf, size_t len)$/;"	f	file:
hfi	src/nvme/nbft.h	/^	struct nbft_info_hfi *hfi;$/;"	m	struct:nbft_info_discovery	typeref:struct:nbft_info_discovery::nbft_info_hfi
hfi_from_index	src/nvme/nbft.c	/^static struct nbft_info_hfi *hfi_from_index(struct nbft_info *nbft, int i)$/;"	f	file:
hfi_index	src/nvme/nbft.h	/^	__le16 hfi_index;$/;"	m	struct:nbft_hfi_info_tcp
hfi_index	src/nvme/nbft.h	/^	__u8 hfi_index;$/;"	m	struct:nbft_discovery
hfi_list	src/nvme/nbft.h	/^	struct nbft_info_hfi **hfi_list;$/;"	m	struct:nbft_info	typeref:struct:nbft_info::nbft_info_hfi
hfil	src/nvme/nbft.h	/^	__le16 hfil;$/;"	m	struct:nbft_control
hfio	src/nvme/nbft.h	/^	__le32 hfio;$/;"	m	struct:nbft_control
hfis	src/nvme/nbft.h	/^	struct nbft_info_hfi **hfis;$/;"	m	struct:nbft_info_subsystem_ns	typeref:struct:nbft_info_subsystem_ns::nbft_info_hfi
hfiv	src/nvme/nbft.h	/^	__u8 hfiv;$/;"	m	struct:nbft_control
highlight_block	scripts/kernel-doc	/^sub highlight_block($) {$/;"	s
hmdlal	src/nvme/types.h	/^	__le32	hmdlal;$/;"	m	struct:nvme_host_mem_buf_attrs
hmdlau	src/nvme/types.h	/^	__le32	hmdlau;$/;"	m	struct:nvme_host_mem_buf_attrs
hmdlec	src/nvme/types.h	/^	__le32	hmdlec;$/;"	m	struct:nvme_host_mem_buf_attrs
hmmaxd	src/nvme/types.h	/^	__le16			hmmaxd;$/;"	m	struct:nvme_id_ctrl
hmmin	src/nvme/types.h	/^	__le32			hmmin;$/;"	m	struct:nvme_id_ctrl
hmminds	src/nvme/types.h	/^	__le32			hmminds;$/;"	m	struct:nvme_id_ctrl
hmpre	src/nvme/types.h	/^	__le32			hmpre;$/;"	m	struct:nvme_id_ctrl
host	libnvme/tests/create-ctrl-obj.py	/^host = nvme.host(root)  $/;"	v
host	libnvme/tests/gc.py	/^host = None$/;"	v
host	libnvme/tests/gc.py	/^host = nvme.host(root)$/;"	v
host	src/nvme/nbft.h	/^	struct nbft_info_host host;$/;"	m	struct:nbft_info	typeref:struct:nbft_info::nbft_info_host
host_id	src/nvme/nbft.h	/^	__u8 host_id[16];$/;"	m	struct:nbft_host
host_id_configured	src/nvme/nbft.h	/^	bool host_id_configured;$/;"	m	struct:nbft_info_host
host_iface	src/nvme/fabrics.h	/^	char *host_iface;$/;"	m	struct:nvme_fabrics_config
host_iface	src/nvme/private.h	/^	bool host_iface;$/;"	m	struct:nvme_fabric_options
host_iface	test/tree.c	/^	const char *host_iface;$/;"	m	struct:test_data	file:
host_name	src/nvme/nbft.h	/^	char *host_name;$/;"	m	struct:nbft_info_hfi_info_tcp
host_name_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj host_name_obj;$/;"	m	struct:nbft_hfi_info_tcp	typeref:struct:nbft_hfi_info_tcp::nbft_heap_obj
host_nqn_configured	src/nvme/nbft.h	/^	bool host_nqn_configured;$/;"	m	struct:nbft_info_host
host_nqn_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj host_nqn_obj;$/;"	m	struct:nbft_host	typeref:struct:nbft_host::nbft_heap_obj
host_read_cmds	src/nvme/types.h	/^	__u8	host_read_cmds[16];$/;"	m	struct:nvme_endurance_group_log
host_reads	src/nvme/types.h	/^	__u8			host_reads[16];$/;"	m	struct:nvme_smart_log
host_traddr	src/nvme/fabrics.h	/^	char *host_traddr;$/;"	m	struct:nvme_fabrics_config
host_traddr	src/nvme/private.h	/^	bool host_traddr;$/;"	m	struct:nvme_fabric_options
host_traddr	test/tree.c	/^	const char *host_traddr;$/;"	m	struct:test_data	file:
host_write_cmds	src/nvme/types.h	/^	__u8	host_write_cmds[16];$/;"	m	struct:nvme_endurance_group_log
host_writes	src/nvme/types.h	/^	__u8			host_writes[16];$/;"	m	struct:nvme_smart_log
hostdgn	src/nvme/types.h	/^	__u8	hostdgn;$/;"	m	struct:nvme_telemetry_log
hostid	src/nvme/private.h	/^	bool hostid;$/;"	m	struct:nvme_fabric_options
hostid	src/nvme/private.h	/^	char *hostid;$/;"	m	struct:nvme_host
hostid	src/nvme/types.h	/^	__le64	hostid;$/;"	m	struct:nvme_registered_ctrl
hostid	src/nvme/types.h	/^	__u8		hostid[16];$/;"	m	struct:nvmf_connect_data
hostid	src/nvme/types.h	/^	__u8	hostid[16];$/;"	m	struct:nvme_registered_ctrl_ext
hostname2traddr	src/nvme/util.c	/^char *hostname2traddr(struct nvme_root *r, const char *traddr)$/;"	f
hostnqn	src/nvme/private.h	/^	bool hostnqn;$/;"	m	struct:nvme_fabric_options
hostnqn	src/nvme/private.h	/^	char *hostnqn;$/;"	m	struct:nvme_host
hostnqn	src/nvme/types.h	/^	char		hostnqn[NVME_NQN_LENGTH];$/;"	m	struct:nvmf_connect_data
hosts	src/nvme/private.h	/^	struct list_head hosts;$/;"	m	struct:nvme_root	typeref:struct:nvme_root::list_head
hostsymname	src/nvme/private.h	/^	char *hostsymname;$/;"	m	struct:nvme_host
hsize	src/nvme/types.h	/^	__le32	hsize;$/;"	m	struct:nvme_host_mem_buf_attrs
hsv	src/nvme/nbft.h	/^	__u8 hsv;$/;"	m	struct:nbft_control
i12vapsr	src/nvme/types.h	/^	__u8	i12vapsr;$/;"	m	struct:nvme_mi_vpd_mra
i18vpwr	src/nvme/types.h	/^	__u8	i18vpwr;$/;"	m	struct:nvme_mi_vpd_mra
i33vpwr	src/nvme/types.h	/^	__u8	i33vpwr;$/;"	m	struct:nvme_mi_vpd_mra
i5vapsr	src/nvme/types.h	/^	__u8	i5vapsr;$/;"	m	struct:nvme_mi_vpd_mra
icdoff	src/nvme/types.h	/^	__le16			icdoff;$/;"	m	struct:nvme_id_ctrl
icsvscc	src/nvme/types.h	/^	__u8			icsvscc;$/;"	m	struct:nvme_id_ctrl
id	examples/mi-mctp.c	/^	enum nvme_mi_config_smbus_freq id;$/;"	m	struct:__anon11	typeref:enum:__anon11::nvme_mi_config_smbus_freq	file:
id	examples/mi-mctp.c	/^	uint8_t id;$/;"	m	struct:__anon10	file:
id	src/nvme/nbft.h	/^	unsigned char *id;$/;"	m	struct:nbft_info_host
id	src/nvme/private.h	/^	__u16			id;$/;"	m	struct:nvme_mi_ctrl
identifier	src/nvme/types.h	/^	__le16	identifier[NVME_ID_ENDURANCE_GROUP_LIST_MAX];$/;"	m	struct:nvme_id_endurance_group_list
identifier	src/nvme/types.h	/^	__le16 identifier[NVME_ID_CTRL_LIST_MAX];$/;"	m	struct:nvme_ctrl_list
idlp	src/nvme/types.h	/^	__le16			idlp;$/;"	m	struct:nvme_id_psd
ieee	src/nvme/types.h	/^	__u8			ieee[3];$/;"	m	struct:nvme_id_ctrl
ieee	src/nvme/types.h	/^	__u8	ieee[3];$/;"	m	struct:nvme_telemetry_log
iekey	src/nvme/api-types.h	/^	bool iekey;$/;"	m	struct:nvme_resv_acquire_args
iekey	src/nvme/api-types.h	/^	bool iekey;$/;"	m	struct:nvme_resv_register_args
iekey	src/nvme/api-types.h	/^	bool iekey;$/;"	m	struct:nvme_resv_release_args
ifc	src/nvme/api-types.h	/^	__u8 ifc;$/;"	m	struct:nvme_lockdown_args
ilbrt	src/nvme/api-types.h	/^	__u32 ilbrt;$/;"	m	struct:nvme_copy_args
ilbrt	src/nvme/api-types.h	/^	__u32 ilbrt;$/;"	m	struct:nvme_zns_append_args
ilbrt_u64	src/nvme/api-types.h	/^	__u64 ilbrt_u64;$/;"	m	struct:nvme_copy_args
ilbrt_u64	src/nvme/api-types.h	/^	__u64 ilbrt_u64;$/;"	m	struct:nvme_zns_append_args
in_data	test/ioctl/mock.h	/^	const void *in_data;$/;"	m	struct:mock_cmd
in_heap	src/nvme/nbft.c	/^static bool in_heap(struct nbft_header *header, struct nbft_heap_obj obj)$/;"	f	file:
index	src/nvme/nbft.h	/^	__le16 index;$/;"	m	struct:nbft_ssns
index	src/nvme/nbft.h	/^	__u8 index;$/;"	m	struct:nbft_discovery
index	src/nvme/nbft.h	/^	__u8 index;$/;"	m	struct:nbft_hfi
index	src/nvme/nbft.h	/^	__u8 index;$/;"	m	struct:nbft_security
index	src/nvme/nbft.h	/^	int index;$/;"	m	struct:nbft_info_discovery
index	src/nvme/nbft.h	/^	int index;$/;"	m	struct:nbft_info_hfi
index	src/nvme/nbft.h	/^	int index;$/;"	m	struct:nbft_info_security
index	src/nvme/nbft.h	/^	int index;$/;"	m	struct:nbft_info_subsystem_ns
inet4_pton	src/nvme/fabrics.c	/^static int inet4_pton(const char *src, uint16_t port,$/;"	f	file:
inet6_pton	src/nvme/fabrics.c	/^static int inet6_pton(nvme_root_t r, const char *src, uint16_t port,$/;"	f	file:
inet_pton_with_scope	src/nvme/fabrics.c	/^static int inet_pton_with_scope(nvme_root_t r, int af,$/;"	f	file:
instance	src/nvme/private.h	/^	bool instance;$/;"	m	struct:nvme_fabric_options
inter_command_us	src/nvme/private.h	/^	unsigned int inter_command_us;$/;"	m	struct:nvme_mi_ep
ioccsz	src/nvme/types.h	/^	__le32			ioccsz;$/;"	m	struct:nvme_id_ctrl
iocs	src/nvme/types.h	/^	__le32 iocs[256];$/;"	m	struct:nvme_cmd_effects_log
iocsc	src/nvme/types.h	/^	__le64 iocsc[512];$/;"	m	struct:nvme_id_iocs
ioctl	test/ioctl/mock.c	/^int ioctl(int fd, unsigned long request, ...)$/;"	f
ioctl_tag	src/nvme/mi-mctp.c	/^static int ioctl_tag(int sd, unsigned long req, struct mctp_ioc_tag_ctl *ctl)$/;"	f	file:
ioctl_tag	src/nvme/private.h	/^	int (*ioctl_tag)(int, unsigned long, struct mctp_ioc_tag_ctl *);$/;"	m	struct:__mi_mctp_socket_ops
iopolicy	src/nvme/private.h	/^	char *iopolicy;$/;"	m	struct:nvme_subsystem
iorcsz	src/nvme/types.h	/^	__le32			iorcsz;$/;"	m	struct:nvme_id_ctrl
ip_address	src/nvme/nbft.h	/^	__u8 ip_address[16];$/;"	m	struct:nbft_hfi_info_tcp
ip_gateway	src/nvme/nbft.h	/^	__u8 ip_gateway[16];$/;"	m	struct:nbft_hfi_info_tcp
ip_origin	src/nvme/nbft.h	/^	__u8 ip_origin;$/;"	m	struct:nbft_hfi_info_tcp
ip_origin	src/nvme/nbft.h	/^	__u8 ip_origin;$/;"	m	struct:nbft_info_hfi_info_tcp
ipaddr	src/nvme/nbft.h	/^	char ipaddr[40];$/;"	m	struct:nbft_info_hfi_info_tcp
ipmiver	src/nvme/types.h	/^	__u8	ipmiver;$/;"	m	struct:nvme_mi_vpd_hdr
ips	src/nvme/types.h	/^	__u8			ips;$/;"	m	struct:nvme_id_psd
is_dmi_uuid_valid	src/nvme/fabrics.c	/^static bool is_dmi_uuid_valid(const char *buf, size_t len)$/;"	f	file:
isalnum	ccan/ccan/str/str.h	172;"	d
isalnum	ccan/ccan/str/str.h	196;"	d
isalpha	ccan/ccan/str/str.h	173;"	d
isalpha	ccan/ccan/str/str.h	197;"	d
isascii	ccan/ccan/str/str.h	174;"	d
isascii	ccan/ccan/str/str.h	198;"	d
isblank	ccan/ccan/str/str.h	175;"	d
isblank	ccan/ccan/str/str.h	200;"	d
iscntrl	ccan/ccan/str/str.h	176;"	d
iscntrl	ccan/ccan/str/str.h	202;"	d
isdigit	ccan/ccan/str/str.h	177;"	d
isdigit	ccan/ccan/str/str.h	203;"	d
isgraph	ccan/ccan/str/str.h	178;"	d
isgraph	ccan/ccan/str/str.h	204;"	d
islower	ccan/ccan/str/str.h	179;"	d
islower	ccan/ccan/str/str.h	205;"	d
isprint	ccan/ccan/str/str.h	180;"	d
isprint	ccan/ccan/str/str.h	206;"	d
ispunct	ccan/ccan/str/str.h	181;"	d
ispunct	ccan/ccan/str/str.h	207;"	d
isspace	ccan/ccan/str/str.h	182;"	d
isspace	ccan/ccan/str/str.h	208;"	d
isupper	ccan/ccan/str/str.h	183;"	d
isupper	ccan/ccan/str/str.h	209;"	d
isxdigit	ccan/ccan/str/str.h	184;"	d
isxdigit	ccan/ccan/str/str.h	210;"	d
iuaoff	src/nvme/types.h	/^	__u8	iuaoff;$/;"	m	struct:nvme_mi_vpd_hdr
json_dump_ctrl	src/nvme/json.c	/^static void json_dump_ctrl(struct json_object *ctrl_array, nvme_ctrl_t c)$/;"	f	file:
json_dump_subsys	src/nvme/json.c	/^static void json_dump_subsys(struct json_object *subsys_array,$/;"	f	file:
json_dump_tree	src/nvme/json.c	/^int json_dump_tree(nvme_root_t r)$/;"	f
json_dump_tree	src/nvme/no-json.c	/^int json_dump_tree(nvme_root_t r)$/;"	f
json_parse_host	src/nvme/json.c	/^static void json_parse_host(nvme_root_t r, struct json_object *host_obj)$/;"	f	file:
json_parse_port	src/nvme/json.c	/^static void json_parse_port(nvme_subsystem_t s, struct json_object *port_obj)$/;"	f	file:
json_parse_subsys	src/nvme/json.c	/^static void json_parse_subsys(nvme_host_t h, struct json_object *subsys_obj)$/;"	f	file:
json_read_config	src/nvme/json.c	/^int json_read_config(nvme_root_t r, const char *config_file)$/;"	f
json_read_config	src/nvme/no-json.c	/^int json_read_config(nvme_root_t r, const char *config_file)$/;"	f
json_update_attributes	src/nvme/json.c	/^static void json_update_attributes(nvme_ctrl_t c,$/;"	f	file:
json_update_config	src/nvme/json.c	/^int json_update_config(nvme_root_t r, const char *config_file)$/;"	f
json_update_config	src/nvme/no-json.c	/^int json_update_config(nvme_root_t r, const char *config_file)$/;"	f
json_update_port	src/nvme/json.c	/^static void json_update_port(struct json_object *ctrl_array, nvme_ctrl_t c)$/;"	f	file:
json_update_subsys	src/nvme/json.c	/^static void json_update_subsys(struct json_object *subsys_array,$/;"	f	file:
kas	src/nvme/types.h	/^	__le16			kas;$/;"	m	struct:nvme_id_ctrl
keep_alive_tmo	src/nvme/fabrics.h	/^	int keep_alive_tmo;$/;"	m	struct:nvme_fabrics_config
keep_alive_tmo	src/nvme/private.h	/^	bool keep_alive_tmo;$/;"	m	struct:nvme_fabric_options
keyring	src/nvme/fabrics.h	/^	int keyring;$/;"	m	struct:nvme_fabrics_config
keyring	src/nvme/private.h	/^	bool keyring;$/;"	m	struct:nvme_fabric_options
kv_keymatch	src/nvme/util.c	/^char *kv_keymatch(const char *kv, const char *key)$/;"	f
kv_strip	src/nvme/util.c	/^char *kv_strip(char *kv)$/;"	f
last_resp_time	src/nvme/private.h	/^	struct timespec last_resp_time;$/;"	m	struct:nvme_mi_ep	typeref:struct:nvme_mi_ep::timespec
last_resp_time_valid	src/nvme/private.h	/^	bool last_resp_time_valid;$/;"	m	struct:nvme_mi_ep
layout	src/nvme/types.h	/^	__le32	layout;$/;"	m	struct:nvme_set_feature_event
lba	src/nvme/types.h	/^	__le64	lba;$/;"	m	struct:nvme_error_log_page
lba	src/nvme/types.h	/^	__le64 lba;$/;"	m	struct:nvme_fdp_event_realloc
lba_count	src/nvme/private.h	/^	uint64_t lba_count;$/;"	m	struct:nvme_ns
lba_rd	src/nvme/types.h	/^	struct	nvme_lba_rd lba_rd[];$/;"	m	struct:nvme_lbas_ns_element	typeref:struct:nvme_lbas_ns_element::nvme_lba_rd
lba_shift	src/nvme/private.h	/^	int lba_shift;$/;"	m	struct:nvme_ns
lba_size	src/nvme/private.h	/^	int lba_size;$/;"	m	struct:nvme_ns
lba_util	src/nvme/private.h	/^	uint64_t lba_util;$/;"	m	struct:nvme_ns
lbaf	src/nvme/api-types.h	/^	__u8 lbaf;$/;"	m	struct:nvme_format_nvm_args
lbaf	src/nvme/types.h	/^	struct nvme_lbaf	lbaf[64];$/;"	m	struct:nvme_id_ns	typeref:struct:nvme_id_ns::nvme_lbaf
lbafe	src/nvme/types.h	/^	struct nvme_zns_lbafe	lbafe[64];$/;"	m	struct:nvme_zns_id_ns	typeref:struct:nvme_zns_id_ns::nvme_zns_lbafe
lbafl	test/mi.c	/^	__u8 lbafl;$/;"	m	struct:format_data	file:
lbafu	src/nvme/api-types.h	/^	__u8 lbafu;$/;"	m	struct:nvme_format_nvm_args
lbafu	test/mi.c	/^	__u8 lbafu;$/;"	m	struct:format_data	file:
lbas	src/nvme/api-types.h	/^	struct nvme_lba_status *lbas;$/;"	m	struct:nvme_get_lba_status_args	typeref:struct:nvme_get_lba_status_args::nvme_lba_status
lbat	src/nvme/api-types.h	/^	__u16 lbat;$/;"	m	struct:nvme_copy_args
lbat	src/nvme/api-types.h	/^	__u16 lbat;$/;"	m	struct:nvme_zns_append_args
lbatm	src/nvme/api-types.h	/^	__u16 lbatm;$/;"	m	struct:nvme_copy_args
lbatm	src/nvme/api-types.h	/^	__u16 lbatm;$/;"	m	struct:nvme_zns_append_args
lbstm	src/nvme/types.h	/^	__le64			lbstm;$/;"	m	struct:nvme_id_ns
lbstm	src/nvme/types.h	/^	__le64			lbstm;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
lbstm	src/nvme/types.h	/^	__le64	lbstm;$/;"	m	struct:nvme_nvm_id_ns
le16	ccan/ccan/endian/endian.h	/^typedef leint16_t le16;$/;"	t
le16	ccan/ccan/short_types/short_types.h	/^typedef leint16_t le16;$/;"	t
le16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t le16_to_cpu(leint16_t le_val)$/;"	f
le32	ccan/ccan/endian/endian.h	/^typedef leint32_t le32;$/;"	t
le32	ccan/ccan/short_types/short_types.h	/^typedef leint32_t le32;$/;"	t
le32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t le32_to_cpu(leint32_t le_val)$/;"	f
le64	ccan/ccan/endian/endian.h	/^typedef leint64_t le64;$/;"	t
le64	ccan/ccan/short_types/short_types.h	/^typedef leint64_t le64;$/;"	t
le64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t le64_to_cpu(leint64_t le_val)$/;"	f
leint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE leint16_t;$/;"	t
leint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE leint32_t;$/;"	t
leint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE leint64_t;$/;"	t
len	src/nvme/api-types.h	/^	__u32 len;$/;"	m	struct:nvme_get_log_args
len	src/nvme/api-types.h	/^	__u32 len;$/;"	m	struct:nvme_resv_report_args
len	src/nvme/types.h	/^	__le16	len;$/;"	m	struct:nvme_metadata_element_desc
len	src/nvme/types.h	/^	__u8	len;$/;"	m	struct:nvme_mi_vpd_telem
len	test/mi.c	/^	uint32_t len;$/;"	m	struct:fw_download_info	file:
length	src/nvme/nbft.h	/^	__le16 length;$/;"	m	struct:nbft_heap_obj
length	src/nvme/nbft.h	/^	__le32 length;$/;"	m	struct:nbft_header
lhl	src/nvme/types.h	/^	__le16	lhl;$/;"	m	struct:nvme_persistent_event_log
libnvme_status	src/nvme/util.c	/^static const char * const libnvme_status[] = {$/;"	v	file:
lid	src/nvme/api-types.h	/^	enum nvme_cmd_get_log_lid lid;$/;"	m	struct:nvme_get_log_args	typeref:enum:nvme_get_log_args::nvme_cmd_get_log_lid
lid	src/nvme/types.h	/^	__u8	lid;$/;"	m	struct:nvme_boot_partition
lid	src/nvme/types.h	/^	__u8	lid;$/;"	m	struct:nvme_persistent_event_log
lid_support	src/nvme/types.h	/^	__le32	lid_support[NVME_LOG_SUPPORTED_LOG_PAGES_MAX];$/;"	m	struct:nvme_supported_log_pages
list	test/mi.c	/^	struct nvme_ctrl_list *list;$/;"	m	struct:attach_op	typeref:struct:attach_op::nvme_ctrl_list	file:
list_add	ccan/ccan/list/list.h	203;"	d
list_add_	ccan/ccan/list/list.h	/^static inline void list_add_(struct list_head *h,$/;"	f
list_add_after	ccan/ccan/list/list.h	177;"	d
list_add_after_	ccan/ccan/list/list.h	/^static inline void list_add_after_(struct list_head *h,$/;"	f
list_add_before	ccan/ccan/list/list.h	226;"	d
list_add_before_	ccan/ccan/list/list.h	/^static inline void list_add_before_(struct list_head *h,$/;"	f
list_add_off	ccan/ccan/list/list.h	799;"	d
list_add_tail	ccan/ccan/list/list.h	249;"	d
list_add_tail_	ccan/ccan/list/list.h	/^static inline void list_add_tail_(struct list_head *h,$/;"	f
list_append_list	ccan/ccan/list/list.h	638;"	d
list_append_list_	ccan/ccan/list/list.h	/^static inline void list_append_list_(struct list_head *to,$/;"	f
list_check	ccan/ccan/list/list.c	/^struct list_head *list_check(const struct list_head *h, const char *abortstr)$/;"	f
list_check_node	ccan/ccan/list/list.c	/^struct list_node *list_check_node(const struct list_node *node,$/;"	f
list_debug	ccan/ccan/list/list.h	95;"	d
list_debug	ccan/ccan/list/list.h	98;"	d
list_debug_node	ccan/ccan/list/list.h	96;"	d
list_debug_node	ccan/ccan/list/list.h	99;"	d
list_del	ccan/ccan/list/list.h	323;"	d
list_del_	ccan/ccan/list/list.h	/^static inline void list_del_(struct list_node *n, const char* abortstr)$/;"	f
list_del_from	ccan/ccan/list/list.h	/^static inline void list_del_from(struct list_head *h, struct list_node *n)$/;"	f
list_del_from_off	ccan/ccan/list/list.h	805;"	d
list_del_init	ccan/ccan/list/list.h	349;"	d
list_del_init_	ccan/ccan/list/list.h	/^static inline void list_del_init_(struct list_node *n, const char *abortstr)$/;"	f
list_del_off	ccan/ccan/list/list.h	802;"	d
list_empty	ccan/ccan/list/list.h	266;"	d
list_empty_	ccan/ccan/list/list.h	/^static inline bool list_empty_(const struct list_head *h, const char* abortstr)$/;"	f
list_empty_nocheck	ccan/ccan/list/list.h	/^static inline bool list_empty_nocheck(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	/^static inline bool list_empty_nodebug(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	286;"	d
list_entry	ccan/ccan/list/list.h	432;"	d
list_entry_off	ccan/ccan/list/list.h	790;"	d
list_entry_or_null	ccan/ccan/list/list.h	/^static inline void *list_entry_or_null(const struct list_head *h,$/;"	f
list_for_each	ccan/ccan/list/list.h	523;"	d
list_for_each_off	ccan/ccan/list/list.h	737;"	d
list_for_each_off_dir_	ccan/ccan/list/list.h	691;"	d
list_for_each_rev	ccan/ccan/list/list.h	539;"	d
list_for_each_rev_off	ccan/ccan/list/list.h	748;"	d
list_for_each_rev_safe	ccan/ccan/list/list.h	561;"	d
list_for_each_rev_safe_off	ccan/ccan/list/list.h	786;"	d
list_for_each_safe	ccan/ccan/list/list.h	581;"	d
list_for_each_safe_off	ccan/ccan/list/list.h	767;"	d
list_for_each_safe_off_dir_	ccan/ccan/list/list.h	698;"	d
list_head	ccan/ccan/list/list.h	/^struct list_head$/;"	s
list_head_init	ccan/ccan/list/list.h	/^static inline void list_head_init(struct list_head *h)$/;"	f
list_head_off	ccan/ccan/list/list.h	793;"	d
list_next	ccan/ccan/list/list.h	598;"	d
list_node	ccan/ccan/list/list.h	/^struct list_node$/;"	s
list_node_from_off_	ccan/ccan/list/list.h	/^static inline struct list_node *list_node_from_off_(void *ptr, size_t off)$/;"	f
list_node_init	ccan/ccan/list/list.h	/^static inline void list_node_init(struct list_node *n)$/;"	f
list_node_to_off_	ccan/ccan/list/list.h	/^static inline void *list_node_to_off_(struct list_node *node, size_t off)$/;"	f
list_off_	ccan/ccan/list/list.h	819;"	d
list_off_var_	ccan/ccan/list/list.h	823;"	d
list_pop	ccan/ccan/list/list.h	472;"	d
list_pop_	ccan/ccan/list/list.h	/^static inline const void *list_pop_(const struct list_head *h, size_t off)$/;"	f
list_prepend_list	ccan/ccan/list/list.h	671;"	d
list_prepend_list_	ccan/ccan/list/list.h	/^static inline void list_prepend_list_(struct list_head *to,$/;"	f
list_prev	ccan/ccan/list/list.h	617;"	d
list_swap	ccan/ccan/list/list.h	404;"	d
list_swap_	ccan/ccan/list/list.h	/^static inline void list_swap_(struct list_node *o,$/;"	f
list_tail	ccan/ccan/list/list.h	500;"	d
list_tail_	ccan/ccan/list/list.h	/^static inline const void *list_tail_(const struct list_head *h, size_t off)$/;"	f
list_tail_off	ccan/ccan/list/list.h	796;"	d
list_top	ccan/ccan/list/list.h	448;"	d
list_top_	ccan/ccan/list/list.h	/^static inline const void *list_top_(const struct list_head *h, size_t off)$/;"	f
list_typeof	ccan/ccan/list/list.h	828;"	d
list_typeof	ccan/ccan/list/list.h	830;"	d
log	src/nvme/api-types.h	/^	void *log;$/;"	m	struct:nvme_get_log_args
log_data	test/mi.c	/^struct log_data {$/;"	s	file:
log_level	src/nvme/private.h	/^	int log_level;$/;"	m	struct:nvme_root
log_page_version	src/nvme/types.h	/^	__u8	log_page_version;$/;"	m	struct:nvme_error_log_page
log_pid	src/nvme/private.h	/^	bool log_pid;$/;"	m	struct:nvme_root
log_timestamp	src/nvme/private.h	/^	bool log_timestamp;$/;"	m	struct:nvme_root
lookup_context	src/nvme/fabrics.c	/^static const char *lookup_context(nvme_root_t r, nvme_ctrl_t c)$/;"	f	file:
lpa	src/nvme/types.h	/^	__u8			lpa;$/;"	m	struct:nvme_id_ctrl
lpc	src/nvme/types.h	/^	__le64	lpc;$/;"	m	struct:nvme_resv_notification_log
lpi	src/nvme/types.h	/^	__u8	lpi;$/;"	m	struct:nvme_telemetry_log
lpo	src/nvme/api-types.h	/^	__u64 lpo;$/;"	m	struct:nvme_get_log_args
lr	src/nvme/api-types.h	/^	int lr;$/;"	m	struct:nvme_copy_args
ls	src/nvme/types.h	/^	__u8	ls;$/;"	m	struct:nvme_mi_vpd_ppmra
lsgc	src/nvme/types.h	/^	__le16	lsgc;$/;"	m	struct:nvme_lba_status_log
lsi	src/nvme/api-types.h	/^	__u16 lsi;$/;"	m	struct:nvme_get_log_args
lslplen	src/nvme/types.h	/^	__le32	lslplen;$/;"	m	struct:nvme_lba_status_log
lsp	examples/discover-loop.py	/^    lsp = nvme.NVMF_LOG_DISC_LSP_PLEO if dlp_supp_opts & nvme.NVMF_LOG_DISC_LID_PLEOS else 0$/;"	v
lsp	src/nvme/api-types.h	/^	__u8 lsp;$/;"	m	struct:nvme_get_log_args
lsp	src/nvme/fabrics.h	/^	__u8 lsp;$/;"	m	struct:nvme_get_discovery_args
m12vapsr	src/nvme/types.h	/^	__u8	m12vapsr;$/;"	m	struct:nvme_mi_vpd_mra
m18vpwr	src/nvme/types.h	/^	__u8	m18vpwr;$/;"	m	struct:nvme_mi_vpd_mra
m33vapsr	src/nvme/types.h	/^	__u8	m33vapsr;$/;"	m	struct:nvme_mi_vpd_mra
m33vpwr	src/nvme/types.h	/^	__u8	m33vpwr;$/;"	m	struct:nvme_mi_vpd_mra
m5vapsr	src/nvme/types.h	/^	__u8	m5vapsr;$/;"	m	struct:nvme_mi_vpd_mra
mac_addr	src/nvme/nbft.h	/^	__u8 mac_addr[6];$/;"	m	struct:nbft_hfi_info_tcp
mac_addr	src/nvme/nbft.h	/^	__u8 mac_addr[6];$/;"	m	struct:nbft_info_hfi_info_tcp
magic	test/mi.c	/^	unsigned int	magic;$/;"	m	struct:test_transport_data	file:
main	examples/discover-loop.c	/^int main()$/;"	f
main	examples/display-columnar.c	/^int main()$/;"	f
main	examples/display-tree.c	/^int main()$/;"	f
main	examples/mi-conf.c	/^int main(int argc, char **argv)$/;"	f
main	examples/mi-mctp.c	/^int main(int argc, char **argv)$/;"	f
main	examples/telemetry-listen.c	/^int main()$/;"	f
main	test/cpp.cc	/^int main()$/;"	f
main	test/ioctl/discovery.c	/^int main(void)$/;"	f
main	test/mi-mctp.c	/^int main(void)$/;"	f
main	test/mi.c	/^int main(void)$/;"	f
main	test/nbft/nbft-dump.c	/^int main(int argc, char **argv)$/;"	f
main	test/register.c	/^int main(int argc, char **argv)$/;"	f
main	test/test-util.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/test.c	/^int main(int argc, char **argv)$/;"	f
main	test/tree.c	/^int main(int argc, char *argv[])$/;"	f
main	test/uuid.c	/^int main(void)$/;"	f
main	test/zns.c	/^int main()$/;"	f
major_revision	src/nvme/nbft.h	/^	__u8 major_revision;$/;"	m	struct:nbft_control
major_revision	src/nvme/nbft.h	/^	__u8 major_revision;$/;"	m	struct:nbft_header
map_filename	scripts/kernel-doc	/^sub map_filename($) {$/;"	s
mar	src/nvme/types.h	/^	__le32			mar;$/;"	m	struct:nvme_zns_id_ns
master_doc	doc/conf.py	/^master_doc = 'index'$/;"	v
max	ccan/ccan/minmax/minmax.h	33;"	d
max_egrp_dom_cap	src/nvme/types.h	/^	__u8	max_egrp_dom_cap[16];$/;"	m	struct:nvme_id_domain_attr
max_retries	src/nvme/fabrics.h	/^	int max_retries;$/;"	m	struct:nvme_get_discovery_args
max_t	ccan/ccan/minmax/minmax.h	50;"	d
maxcmd	src/nvme/types.h	/^	__le16			maxcmd;$/;"	m	struct:nvme_id_ctrl
maxcna	src/nvme/types.h	/^	__le32			maxcna;$/;"	m	struct:nvme_id_ctrl
maxdna	src/nvme/types.h	/^	__u8			maxdna[16];$/;"	m	struct:nvme_id_ctrl
maxpids	src/nvme/types.h	/^	__le16 maxpids;$/;"	m	struct:nvme_fdp_config_desc
mbe	src/nvme/types.h	/^	__u8 mbe[16];$/;"	m	struct:nvme_fdp_stats_log
mbmw	src/nvme/types.h	/^	__u8 mbmw[16];$/;"	m	struct:nvme_fdp_stats_log
mc	src/nvme/types.h	/^	__u8			mc;$/;"	m	struct:nvme_id_ns
mcl	src/nvme/types.h	/^	__le32			mcl;$/;"	m	struct:nvme_id_ns
mctp	src/nvme/types.h	/^	__u8	mctp;$/;"	m	struct:nvme_mi_vpd_ppmra
mctp_addr	src/nvme/mi-mctp.c	/^struct mctp_addr {$/;"	s	file:
mctp_eid_t	src/nvme/mi-mctp.c	/^typedef __u8			mctp_eid_t;$/;"	t	file:
mdts	src/nvme/types.h	/^	__u8			mdts;$/;"	m	struct:nvme_id_ctrl
meb	src/nvme/mi.h	/^	__u8	meb;$/;"	m	struct:nvme_mi_msg_hdr
meb	src/nvme/types.h	/^	__le32	meb;$/;"	m	struct:nvme_mi_read_port_info
mec	src/nvme/types.h	/^	__u8			mec;$/;"	m	struct:nvme_id_ctrl
media_data_integrity_err	src/nvme/types.h	/^	__u8	media_data_integrity_err[16];$/;"	m	struct:nvme_endurance_group_log
media_errors	src/nvme/types.h	/^	__u8			media_errors[16];$/;"	m	struct:nvme_smart_log
media_status	src/nvme/util.c	/^static const char * const media_status[] = {$/;"	v	file:
media_units_written	src/nvme/types.h	/^	__u8	media_units_written[16];$/;"	m	struct:nvme_endurance_group_log
megcap	src/nvme/types.h	/^	__u8			megcap[16];$/;"	m	struct:nvme_id_ctrl
merge_config	src/nvme/fabrics.c	/^static struct nvme_fabrics_config *merge_config(nvme_ctrl_t c,$/;"	f	file:
meta_size	src/nvme/private.h	/^	int meta_size;$/;"	m	struct:nvme_ns
metadata	src/nvme/api-types.h	/^	void *metadata;$/;"	m	struct:nvme_io_args
metadata	src/nvme/api-types.h	/^	void *metadata;$/;"	m	struct:nvme_zns_append_args
metadata	src/nvme/ioctl.h	/^	__u64	metadata;$/;"	m	struct:nvme_passthru_cmd
metadata	src/nvme/ioctl.h	/^	__u64	metadata;$/;"	m	struct:nvme_uring_cmd
metadata	src/nvme/ioctl.h	/^	__u64   metadata;$/;"	m	struct:nvme_passthru_cmd64
metadata	test/ioctl/mock.h	/^	const void *metadata;$/;"	m	struct:mock_cmd
metadata_len	src/nvme/api-types.h	/^	__u32 metadata_len;$/;"	m	struct:nvme_io_args
metadata_len	src/nvme/api-types.h	/^	__u32 metadata_len;$/;"	m	struct:nvme_zns_append_args
metadata_len	src/nvme/ioctl.h	/^	__u32	metadata_len;$/;"	m	struct:nvme_passthru_cmd
metadata_len	src/nvme/ioctl.h	/^	__u32	metadata_len;$/;"	m	struct:nvme_uring_cmd
metadata_len	src/nvme/ioctl.h	/^	__u32   metadata_len;$/;"	m	struct:nvme_passthru_cmd64
metadata_len	test/ioctl/mock.h	/^	uint32_t metadata_len;$/;"	m	struct:mock_cmd
mi_cmd_support	src/nvme/types.h	/^	__le32	mi_cmd_support[NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_MAX];$/;"	m	struct:nvme_mi_cmd_supported_effects_log
mi_probe_enabled	src/nvme/private.h	/^	bool mi_probe_enabled;$/;"	m	struct:nvme_root
mi_status	src/nvme/mi.c	/^static const char *const mi_status[] = {$/;"	v	file:
mic	src/nvme/private.h	/^	__u32 mic;$/;"	m	struct:nvme_mi_req
mic	src/nvme/private.h	/^	__u32 mic;$/;"	m	struct:nvme_mi_resp
mic_enabled	src/nvme/private.h	/^	bool mic_enabled;$/;"	m	struct:nvme_mi_transport
min	ccan/ccan/minmax/minmax.h	25;"	d
min_t	ccan/ccan/minmax/minmax.h	44;"	d
minor_revision	src/nvme/nbft.h	/^	__u8 minor_revision;$/;"	m	struct:nbft_control
minor_revision	src/nvme/nbft.h	/^	__u8 minor_revision;$/;"	m	struct:nbft_header
mjr	src/nvme/types.h	/^	__u8	mjr;$/;"	m	struct:nvme_mi_read_nvm_ss_info
ml_secs_since_reset	src/nvme/types.h	/^	__le64	ml_secs_since_reset;$/;"	m	struct:nvme_time_stamp_change_event
mlw	src/nvme/types.h	/^	__u8	mlw;$/;"	m	struct:nvme_mi_port_pcie
mlw	src/nvme/types.h	/^	__u8	mlw;$/;"	m	struct:nvme_mi_vpd_ppmra
mmctptus	src/nvme/types.h	/^	__le16	mmctptus;$/;"	m	struct:nvme_mi_read_port_info
mme_addr	src/nvme/types.h	/^	__u8	mme_addr;$/;"	m	struct:nvme_mi_port_smb
mme_freq	src/nvme/types.h	/^	__u8	mme_freq;$/;"	m	struct:nvme_mi_port_smb
mn	src/nvme/types.h	/^	char			mn[40];$/;"	m	struct:nvme_id_ctrl
mn	src/nvme/types.h	/^	char	mn[40];$/;"	m	struct:nvme_persistent_event_log
mnan	src/nvme/types.h	/^	__le32			mnan;$/;"	m	struct:nvme_id_ctrl
mndw	src/nvme/api-types.h	/^	__u32 mndw;$/;"	m	struct:nvme_get_lba_status_args
mnr	src/nvme/types.h	/^	__u8	mnr;$/;"	m	struct:nvme_mi_read_nvm_ss_info
mntmt	src/nvme/types.h	/^	__le16			mntmt;$/;"	m	struct:nvme_id_ctrl
mo	src/nvme/api-types.h	/^	__u8 mo;$/;"	m	struct:nvme_io_mgmt_recv_args
mo	src/nvme/api-types.h	/^	__u8 mo;$/;"	m	struct:nvme_io_mgmt_send_args
mock_admin_cmds	test/ioctl/mock.c	/^static struct mock_cmds mock_admin_cmds = {.name = "admin"};$/;"	v	typeref:struct:mock_cmds	file:
mock_cmd	test/ioctl/mock.h	/^struct mock_cmd {$/;"	s
mock_cmds	test/ioctl/mock.c	/^struct mock_cmds {$/;"	s	file:
mock_cmds_done	test/ioctl/mock.c	/^static void mock_cmds_done(const struct mock_cmds *mock_cmds)$/;"	f	file:
mock_fd	test/ioctl/mock.c	/^static int mock_fd = -1;$/;"	v	file:
mock_io_cmds	test/ioctl/mock.c	/^static struct mock_cmds mock_io_cmds = {.name = "IO"};$/;"	v	typeref:struct:mock_cmds	file:
model	src/nvme/private.h	/^	char *model;$/;"	m	struct:nvme_ctrl
model	src/nvme/private.h	/^	char *model;$/;"	m	struct:nvme_subsystem
modified	src/nvme/private.h	/^	bool modified;$/;"	m	struct:nvme_root
mor	src/nvme/types.h	/^	__le32			mor;$/;"	m	struct:nvme_zns_id_ns
mos	src/nvme/api-types.h	/^	__u16 mos;$/;"	m	struct:nvme_io_mgmt_recv_args
mos	src/nvme/api-types.h	/^	__u16 mos;$/;"	m	struct:nvme_io_mgmt_send_args
mp	src/nvme/types.h	/^	__le16			mp;$/;"	m	struct:nvme_id_psd
mpr_poll_info	test/mi-mctp.c	/^struct mpr_poll_info {$/;"	s	file:
mpr_tx_info	test/mi-mctp.c	/^struct mpr_tx_info {$/;"	s	file:
mprt	src/nvme/mi-mctp.c	/^	__u16	mprt;$/;"	m	struct:nvme_mi_msg_resp_mpr	file:
mprt	test/mi-mctp.c	/^	uint16_t mprt;$/;"	m	struct:mpr_poll_info	file:
mprt_max	src/nvme/private.h	/^	unsigned int mprt_max;$/;"	m	struct:nvme_mi_ep
mps	src/nvme/types.h	/^	__u8	mps;$/;"	m	struct:nvme_mi_port_pcie
mrioff	src/nvme/types.h	/^	__u8	mrioff;$/;"	m	struct:nvme_mi_vpd_hdr
ms	src/nvme/types.h	/^	__le16			ms;$/;"	m	struct:nvme_lbaf
msdbd	src/nvme/types.h	/^	__u8			msdbd;$/;"	m	struct:nvme_id_ctrl
mset	src/nvme/api-types.h	/^	enum nvme_cmd_format_mset mset;$/;"	m	struct:nvme_format_nvm_args	typeref:enum:nvme_format_nvm_args::nvme_cmd_format_mset
mset	test/mi.c	/^	__u8 mset;$/;"	m	struct:format_data	file:
msg_no	test/mi-mctp.c	/^	int msg_no;$/;"	m	struct:mpr_tx_info	file:
msl	src/nvme/types.h	/^	__le16	msl;$/;"	m	struct:nvme_streams_directive_params
msrc	src/nvme/types.h	/^	__u8			msrc;$/;"	m	struct:nvme_id_ns
mssrl	src/nvme/types.h	/^	__le16			mssrl;$/;"	m	struct:nvme_id_ns
mtfa	src/nvme/types.h	/^	__le16			mtfa;$/;"	m	struct:nvme_id_ctrl
mtl	src/nvme/types.h	/^	__u8	mtl;$/;"	m	struct:nvme_mi_vpd_mra
mu_config_desc	src/nvme/types.h	/^	struct nvme_media_unit_config_desc mu_config_desc[];$/;"	m	struct:nvme_channel_config_desc	typeref:struct:nvme_channel_config_desc::nvme_media_unit_config_desc
mucs	src/nvme/types.h	/^	__u8	mucs;$/;"	m	struct:nvme_media_unit_stat_desc
mudl	src/nvme/types.h	/^	__le16	mudl;$/;"	m	struct:nvme_media_unit_config_desc
muid	src/nvme/types.h	/^	__le16	muid;$/;"	m	struct:nvme_media_unit_config_desc
muid	src/nvme/types.h	/^	__le16	muid;$/;"	m	struct:nvme_media_unit_stat_desc
mus_desc	src/nvme/types.h	/^	struct nvme_media_unit_stat_desc mus_desc[];$/;"	m	struct:nvme_media_unit_stat_log	typeref:struct:nvme_media_unit_stat_log::nvme_media_unit_stat_desc
mvpd_freq	src/nvme/types.h	/^	__u8	mvpd_freq;$/;"	m	struct:nvme_mi_port_smb
mxtmt	src/nvme/types.h	/^	__le16			mxtmt;$/;"	m	struct:nvme_id_ctrl
n	ccan/ccan/list/list.h	/^	struct list_node n;$/;"	m	struct:list_head	typeref:struct:list_head::list_node
n	src/nvme/private.h	/^	struct nvme_ns *n;$/;"	m	struct:nvme_path	typeref:struct:nvme_path::nvme_ns
n	src/nvme/types.h	/^	__le16 n;$/;"	m	struct:nvme_fdp_config_log
n	src/nvme/types.h	/^	__le32 n;$/;"	m	struct:nvme_fdp_events_log
n	test/mi.c	/^	int n;$/;"	m	struct:log_data	file:
nabo	src/nvme/types.h	/^	__le16			nabo;$/;"	m	struct:nvme_id_ns
nabsn	src/nvme/types.h	/^	__le16			nabsn;$/;"	m	struct:nvme_id_ns
nabspf	src/nvme/types.h	/^	__le16			nabspf;$/;"	m	struct:nvme_id_ns
nacwu	src/nvme/types.h	/^	__le16			nacwu;$/;"	m	struct:nvme_id_ns
nalp	src/nvme/types.h	/^	__u8	nalp;$/;"	m	struct:nvme_resv_notification_log
name	examples/mi-mctp.c	/^	const char *name;$/;"	m	struct:__anon10	file:
name	examples/mi-mctp.c	/^	const char *name;$/;"	m	struct:__anon9	file:
name	src/nvme/private.h	/^	char *name;$/;"	m	struct:nvme_ctrl
name	src/nvme/private.h	/^	char *name;$/;"	m	struct:nvme_ns
name	src/nvme/private.h	/^	char *name;$/;"	m	struct:nvme_path
name	src/nvme/private.h	/^	char *name;$/;"	m	struct:nvme_subsystem
name	src/nvme/private.h	/^	const char *name;$/;"	m	struct:nvme_mi_transport
name	test/ioctl/mock.c	/^	const char *name;$/;"	m	struct:mock_cmds	file:
name	test/mi-mctp.c	/^	const char *name;$/;"	m	struct:test	file:
name	test/mi.c	/^	const char *name;$/;"	m	struct:test	file:
named	test/mi.c	/^	bool		named;$/;"	m	struct:test_transport_data	file:
namespaces	src/nvme/private.h	/^	struct list_head namespaces;$/;"	m	struct:nvme_ctrl	typeref:struct:nvme_ctrl::list_head
namespaces	src/nvme/private.h	/^	struct list_head namespaces;$/;"	m	struct:nvme_subsystem	typeref:struct:nvme_subsystem::list_head
nanagrpid	src/nvme/types.h	/^	__le32			nanagrpid;$/;"	m	struct:nvme_id_ctrl
nawun	src/nvme/types.h	/^	__le16			nawun;$/;"	m	struct:nvme_id_ns
nawupf	src/nvme/types.h	/^	__le16			nawupf;$/;"	m	struct:nvme_id_ns
nbft_control	src/nvme/nbft.h	/^struct nbft_control {$/;"	s
nbft_control_flags	src/nvme/nbft.h	/^enum nbft_control_flags {$/;"	g
nbft_desc_type	src/nvme/nbft.h	/^enum nbft_desc_type {$/;"	g
nbft_discovery	src/nvme/nbft.h	/^struct nbft_discovery {$/;"	s
nbft_discovery_flags	src/nvme/nbft.h	/^enum nbft_discovery_flags {$/;"	g
nbft_header	src/nvme/nbft.h	/^struct nbft_header {$/;"	s
nbft_heap_obj	src/nvme/nbft.h	/^struct nbft_heap_obj {$/;"	s
nbft_hfi	src/nvme/nbft.h	/^struct nbft_hfi {$/;"	s
nbft_hfi_flags	src/nvme/nbft.h	/^enum nbft_hfi_flags {$/;"	g
nbft_hfi_info_tcp	src/nvme/nbft.h	/^struct nbft_hfi_info_tcp {$/;"	s
nbft_hfi_info_tcp_flags	src/nvme/nbft.h	/^enum nbft_hfi_info_tcp_flags {$/;"	g
nbft_host	src/nvme/nbft.h	/^struct nbft_host {$/;"	s
nbft_host_flags	src/nvme/nbft.h	/^enum nbft_host_flags {$/;"	g
nbft_info	src/nvme/nbft.h	/^struct nbft_info {$/;"	s
nbft_info_discovery	src/nvme/nbft.h	/^struct nbft_info_discovery {$/;"	s
nbft_info_hfi	src/nvme/nbft.h	/^struct nbft_info_hfi {$/;"	s
nbft_info_hfi_info_tcp	src/nvme/nbft.h	/^struct nbft_info_hfi_info_tcp {$/;"	s
nbft_info_host	src/nvme/nbft.h	/^struct nbft_info_host {$/;"	s
nbft_info_nid_type	src/nvme/nbft.h	/^enum nbft_info_nid_type {$/;"	g
nbft_info_primary_admin_host_flag	src/nvme/nbft.h	/^enum nbft_info_primary_admin_host_flag {$/;"	g
nbft_info_security	src/nvme/nbft.h	/^struct nbft_info_security {$/;"	s
nbft_info_subsystem_ns	src/nvme/nbft.h	/^struct nbft_info_subsystem_ns {$/;"	s
nbft_security	src/nvme/nbft.h	/^struct nbft_security {$/;"	s
nbft_security_flags	src/nvme/nbft.h	/^enum nbft_security_flags {$/;"	g
nbft_security_secret_type	src/nvme/nbft.h	/^enum nbft_security_secret_type {$/;"	g
nbft_ssns	src/nvme/nbft.h	/^struct nbft_ssns {$/;"	s
nbft_ssns_ext_info	src/nvme/nbft.h	/^struct nbft_ssns_ext_info {$/;"	s
nbft_ssns_ext_info_flags	src/nvme/nbft.h	/^enum nbft_ssns_ext_info_flags {$/;"	g
nbft_ssns_flags	src/nvme/nbft.h	/^enum nbft_ssns_flags {$/;"	g
nbft_ssns_trflags	src/nvme/nbft.h	/^enum nbft_ssns_trflags {$/;"	g
nbft_trtype	src/nvme/nbft.h	/^enum nbft_trtype {$/;"	g
ncap	src/nvme/types.h	/^	__le64			ncap;$/;"	m	struct:nvme_id_ns
ncap	src/nvme/types.h	/^	__le64			ncap;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
ncapgran	src/nvme/types.h	/^	__le64			ncapgran;$/;"	m	struct:nvme_id_ns_granularity_desc
ndesc	src/nvme/types.h	/^	__u8	ndesc;$/;"	m	struct:nvme_host_metadata
ndwin_tmin_hi	src/nvme/types.h	/^	__le64	ndwin_tmin_hi;$/;"	m	struct:nvme_nvmset_predictable_lat_log
ndwin_tmin_lo	src/nvme/types.h	/^	__le64	ndwin_tmin_lo;$/;"	m	struct:nvme_nvmset_predictable_lat_log
neid	src/nvme/types.h	/^	__le32	neid;$/;"	m	struct:nvme_lbas_ns_element
nentry	src/nvme/private.h	/^	struct list_node nentry;$/;"	m	struct:nvme_path	typeref:struct:nvme_path::list_node
net	src/nvme/mi-mctp.c	/^	int	net;$/;"	m	struct:nvme_mi_transport_mctp	file:
new_fw_rev	src/nvme/types.h	/^	__le64	new_fw_rev;$/;"	m	struct:nvme_fw_commit_event
next	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::list_node
ngrps	src/nvme/types.h	/^	__le16	ngrps;$/;"	m	struct:nvme_ana_log
nguid	src/nvme/private.h	/^	uint8_t nguid[16];$/;"	m	struct:nvme_ns
nguid	src/nvme/types.h	/^	__u8			nguid[16];$/;"	m	struct:nvme_id_ns
nid	src/nvme/nbft.h	/^	__u8 *nid;$/;"	m	struct:nbft_info_subsystem_ns
nid	src/nvme/nbft.h	/^	__u8 nid[16];$/;"	m	struct:nbft_ssns
nid	src/nvme/types.h	/^	__u8			nid;$/;"	m	struct:nvme_id_nvmset_list
nid	src/nvme/types.h	/^	__u8	nid[];$/;"	m	struct:nvme_ns_id_desc
nid_type	src/nvme/nbft.h	/^	enum nbft_info_nid_type nid_type;$/;"	m	struct:nbft_info_subsystem_ns	typeref:enum:nbft_info_subsystem_ns::nbft_info_nid_type
nidl	src/nvme/types.h	/^	__u8	nidl;$/;"	m	struct:nvme_ns_id_desc
nidt	src/nvme/nbft.h	/^	__u8 nidt;$/;"	m	struct:nbft_ssns
nidt	src/nvme/types.h	/^	__u8	nidt;$/;"	m	struct:nvme_ns_id_desc
nlb	src/nvme/api-types.h	/^	__u16 nlb;$/;"	m	struct:nvme_io_args
nlb	src/nvme/api-types.h	/^	__u16 nlb;$/;"	m	struct:nvme_zns_append_args
nlb	src/nvme/types.h	/^	__le16			nlb;$/;"	m	struct:nvme_copy_range
nlb	src/nvme/types.h	/^	__le16			nlb;$/;"	m	struct:nvme_copy_range_f1
nlb	src/nvme/types.h	/^	__le32	nlb;$/;"	m	struct:nvme_dsm_range
nlb	src/nvme/types.h	/^	__le32	nlb;$/;"	m	struct:nvme_lba_status_desc
nlb	src/nvme/types.h	/^	__le64	nlb;$/;"	m	struct:nvme_lba_range_type_entry
nlbaf	src/nvme/types.h	/^	__u8			nlbaf;$/;"	m	struct:nvme_id_ns
nlbam	src/nvme/types.h	/^	__le16 nlbam;$/;"	m	struct:nvme_fdp_event_realloc
nlrd	src/nvme/types.h	/^	__le32	nlrd;$/;"	m	struct:nvme_lbas_ns_element
nlsd	src/nvme/types.h	/^	__le32	nlsd;$/;"	m	struct:nvme_lba_status
nlslne	src/nvme/types.h	/^	__le32	nlslne;$/;"	m	struct:nvme_lba_status_log
nlw	src/nvme/types.h	/^	__u8	nlw;$/;"	m	struct:nvme_mi_port_pcie
nmic	src/nvme/types.h	/^	__u8			nmic;$/;"	m	struct:nvme_id_ns
nmic	src/nvme/types.h	/^	__u8			nmic;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
nmic	src/nvme/types.h	/^	__u8	nmic;$/;"	m	struct:nvme_change_ns_event
nmic	src/nvme/types.h	/^	__u8	nmic;$/;"	m	struct:nvme_id_independent_id_ns
nmp	src/nvme/mi.h	/^	__u8	nmp;$/;"	m	struct:nvme_mi_msg_hdr
nmra	src/nvme/types.h	/^		struct nvme_mi_vpd_mra nmra;$/;"	m	union:nvme_mi_vpd_mr_common::__anon5	typeref:struct:nvme_mi_vpd_mr_common::__anon5::nvme_mi_vpd_mra
nmravn	src/nvme/types.h	/^	__u8	nmravn;$/;"	m	struct:nvme_mi_vpd_mra
nmresp	src/nvme/mi.h	/^	__u8	nmresp[3];$/;"	m	struct:nvme_mi_mi_resp_hdr
nmu	src/nvme/types.h	/^	__le16	nmu;$/;"	m	struct:nvme_media_unit_stat_log
nn	src/nvme/types.h	/^	__le32			nn;$/;"	m	struct:nvme_id_ctrl
nnsids	src/nvme/types.h	/^	__le32	nnsids;$/;"	m	struct:nvme_ana_group_desc
nnss	src/nvme/types.h	/^	__le32 nnss;$/;"	m	struct:nvme_fdp_config_desc
nodas	src/nvme/api-types.h	/^	bool nodas;$/;"	m	struct:nvme_sanitize_nvm_args
noet	src/nvme/types.h	/^	__u8  noet;$/;"	m	struct:nvme_feat_fdp_events_cdw11
noiob	src/nvme/types.h	/^	__le16			noiob;$/;"	m	struct:nvme_id_ns
nows	src/nvme/types.h	/^	__le16			nows;$/;"	m	struct:nvme_id_ns
npda	src/nvme/types.h	/^	__le16			npda;$/;"	m	struct:nvme_id_ns
npdg	src/nvme/types.h	/^	__le16			npdg;$/;"	m	struct:nvme_id_ns
nphndls	src/nvme/types.h	/^	__le16			nphndls;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
nppmravn	src/nvme/types.h	/^	__u8	nppmravn;$/;"	m	struct:nvme_mi_vpd_ppmra
npss	src/nvme/types.h	/^	__u8			npss;$/;"	m	struct:nvme_id_ctrl
npwa	src/nvme/types.h	/^	__le16			npwa;$/;"	m	struct:nvme_id_ns
npwg	src/nvme/types.h	/^	__le16			npwg;$/;"	m	struct:nvme_id_ns
nqn	src/nvme/nbft.h	/^	char *nqn;$/;"	m	struct:nbft_info_discovery
nqn	src/nvme/nbft.h	/^	char *nqn;$/;"	m	struct:nbft_info_host
nqn	src/nvme/private.h	/^	bool nqn;$/;"	m	struct:nvme_fabric_options
nqn	src/nvme/types.h	/^	char			nqn[NVME_NQN_LENGTH];$/;"	m	struct:nvmf_ext_die
nr	src/nvme/api-types.h	/^	__u16 nr;$/;"	m	struct:nvme_copy_args
nr	src/nvme/api-types.h	/^	__u16 nr;$/;"	m	struct:nvme_virtual_mgmt_args
nr_entries	src/nvme/types.h	/^	__le64	nr_entries;$/;"	m	struct:nvme_eg_event_aggregate_log
nr_io_queues	src/nvme/fabrics.h	/^	int nr_io_queues;$/;"	m	struct:nvme_fabrics_config
nr_io_queues	src/nvme/private.h	/^	bool nr_io_queues;$/;"	m	struct:nvme_fabric_options
nr_poll_queues	src/nvme/fabrics.h	/^	int nr_poll_queues;$/;"	m	struct:nvme_fabrics_config
nr_poll_queues	src/nvme/private.h	/^	bool nr_poll_queues;$/;"	m	struct:nvme_fabric_options
nr_ranges	src/nvme/api-types.h	/^	__u16 nr_ranges;$/;"	m	struct:nvme_dsm_args
nr_write_queues	src/nvme/fabrics.h	/^	int nr_write_queues;$/;"	m	struct:nvme_fabrics_config
nr_write_queues	src/nvme/private.h	/^	bool nr_write_queues;$/;"	m	struct:nvme_fabric_options
nr_zones	src/nvme/types.h	/^	__le64			nr_zones;$/;"	m	struct:nvme_zone_report
nrg	src/nvme/types.h	/^	__le32 nrg;$/;"	m	struct:nvme_fdp_config_desc
nrkey	src/nvme/api-types.h	/^	__u64 nrkey;$/;"	m	struct:nvme_resv_acquire_args
nrkey	src/nvme/api-types.h	/^	__u64 nrkey;$/;"	m	struct:nvme_resv_register_args
nruh	src/nvme/types.h	/^	__le16 nruh;$/;"	m	struct:nvme_fdp_config_desc
nruh	src/nvme/types.h	/^	__le16 nruh;$/;"	m	struct:nvme_fdp_ruhu_log
nruhsd	src/nvme/types.h	/^	__le16 nruhsd;$/;"	m	struct:nvme_fdp_ruh_status
nrzid	src/nvme/types.h	/^	__le16		nrzid;$/;"	m	struct:nvme_zns_changed_zone_log
ns	libnvme/tests/gc.py	/^ns = None$/;"	v
ns	libnvme/tests/gc.py	/^ns = subsystem.namespaces() if subsystem is not None else None$/;"	v
ns	src/nvme/api-types.h	/^	struct nvme_id_ns *ns;$/;"	m	struct:nvme_ns_mgmt_args	typeref:struct:nvme_ns_mgmt_args::nvme_id_ns
ns	src/nvme/types.h	/^	__le32 ns[NVME_ID_NS_LIST_MAX];$/;"	m	struct:nvme_ns_list
ns_type	test/mi.c	/^enum ns_type {$/;"	g	file:
nsa	src/nvme/types.h	/^	__le16	nsa;$/;"	m	struct:nvme_streams_directive_params
nsattr	src/nvme/types.h	/^	__u8			nsattr;$/;"	m	struct:nvme_id_ns
nsattr	src/nvme/types.h	/^	__u8	nsattr;$/;"	m	struct:nvme_id_independent_id_ns
nscap	src/nvme/types.h	/^	__le64	nscap;$/;"	m	struct:nvme_change_ns_event
nsec_per_sec	src/nvme/mi.c	/^static const int nsec_per_sec = 1000 * 1000 * 1000;$/;"	v	file:
nsetidmax	src/nvme/types.h	/^	__le16			nsetidmax;$/;"	m	struct:nvme_id_ctrl
nsfeat	src/nvme/types.h	/^	__u8			nsfeat;$/;"	m	struct:nvme_id_ns
nsfeat	src/nvme/types.h	/^	__u8	nsfeat;$/;"	m	struct:nvme_id_independent_id_ns
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_copy_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_dev_self_test_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_directive_recv_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_directive_send_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_dsm_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_format_nvm_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_get_features_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_get_lba_status_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_get_log_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_identify_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_io_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_io_mgmt_recv_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_io_mgmt_send_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_ns_attach_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_ns_mgmt_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_resv_acquire_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_resv_register_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_resv_release_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_resv_report_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_security_receive_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_security_send_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_set_features_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_zns_append_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_zns_mgmt_recv_args
nsid	src/nvme/api-types.h	/^	__u32 nsid;$/;"	m	struct:nvme_zns_mgmt_send_args
nsid	src/nvme/ioctl.h	/^	__u32	nsid;$/;"	m	struct:nvme_passthru_cmd
nsid	src/nvme/ioctl.h	/^	__u32	nsid;$/;"	m	struct:nvme_uring_cmd
nsid	src/nvme/ioctl.h	/^	__u32   nsid;$/;"	m	struct:nvme_passthru_cmd64
nsid	src/nvme/nbft.h	/^	__le32 nsid;$/;"	m	struct:nbft_ssns
nsid	src/nvme/nbft.h	/^	__u32 nsid;$/;"	m	struct:nbft_info_subsystem_ns
nsid	src/nvme/private.h	/^	__u32 nsid;$/;"	m	struct:nvme_ns
nsid	src/nvme/types.h	/^	__le32			nsid;$/;"	m	struct:nvme_st_result
nsid	src/nvme/types.h	/^	__le32	nsid;$/;"	m	struct:nvme_change_ns_event
nsid	src/nvme/types.h	/^	__le32	nsid;$/;"	m	struct:nvme_error_log_page
nsid	src/nvme/types.h	/^	__le32	nsid;$/;"	m	struct:nvme_format_nvm_compln_event
nsid	src/nvme/types.h	/^	__le32	nsid;$/;"	m	struct:nvme_format_nvm_start_event
nsid	src/nvme/types.h	/^	__le32	nsid;$/;"	m	struct:nvme_resv_notification_log
nsid	src/nvme/types.h	/^	__le32 nsid;$/;"	m	struct:nvme_fdp_event
nsid	test/ioctl/mock.h	/^	uint32_t nsid;$/;"	m	struct:mock_cmd
nsid	test/mi.c	/^	__u32 nsid;$/;"	m	struct:format_data	file:
nsids	src/nvme/types.h	/^	__le32	nsids[];$/;"	m	struct:nvme_ana_group_desc
nsmgt_cdw10	src/nvme/types.h	/^	__le32	nsmgt_cdw10;$/;"	m	struct:nvme_change_ns_event
nso	src/nvme/types.h	/^	__le16	nso;$/;"	m	struct:nvme_streams_directive_params
nss	src/nvme/types.h	/^	__u8	nss;$/;"	m	struct:nvme_mi_nvm_ss_health_status
nss_hw_err_event_code	src/nvme/types.h	/^	__le16	nss_hw_err_event_code;$/;"	m	struct:nvme_nss_hw_err_event
nssa	src/nvme/types.h	/^	__le16	nssa;$/;"	m	struct:nvme_streams_directive_params
nssc	src/nvme/types.h	/^	__u8	nssc;$/;"	m	struct:nvme_streams_directive_params
nssf	src/nvme/api-types.h	/^	__u8 nssf;$/;"	m	struct:nvme_security_receive_args
nssf	src/nvme/api-types.h	/^	__u8 nssf;$/;"	m	struct:nvme_security_send_args
nsso	src/nvme/types.h	/^	__le16	nsso;$/;"	m	struct:nvme_streams_directive_params
nstat	src/nvme/types.h	/^	__u8	nstat;$/;"	m	struct:nvme_id_independent_id_ns
nsze	src/nvme/types.h	/^	__le64			nsze;$/;"	m	struct:nvme_id_ns
nsze	src/nvme/types.h	/^	__le64			nsze;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
nsze	src/nvme/types.h	/^	__le64	nsze;$/;"	m	struct:nvme_change_ns_event
nszegran	src/nvme/types.h	/^	__le64			nszegran;$/;"	m	struct:nvme_id_ns_granularity_desc
nulbaf	src/nvme/types.h	/^	__u8			nulbaf;$/;"	m	struct:nvme_id_ns
num	src/nvme/types.h	/^	__le16	num;$/;"	m	struct:nvme_id_endurance_group_list
num	src/nvme/types.h	/^	__le16 num;$/;"	m	struct:nvme_ctrl_list
num	src/nvme/types.h	/^	__u8	num;$/;"	m	struct:nvme_id_domain_list
num	src/nvme/types.h	/^	__u8   num;$/;"	m	struct:nvme_secondary_ctrl_list
num_descriptors	src/nvme/types.h	/^	__u8			num_descriptors;$/;"	m	struct:nvme_id_ns_granularity_list
num_disc	src/nvme/nbft.h	/^	__u8 num_disc;$/;"	m	struct:nbft_control
num_entries	src/nvme/types.h	/^	__le64	num_entries;$/;"	m	struct:nvme_aggregate_endurance_group_event
num_entries	src/nvme/types.h	/^	__le64	num_entries;$/;"	m	struct:nvme_aggregate_predictable_lat_event
num_err_info_log_entries	src/nvme/types.h	/^	__u8	num_err_info_log_entries[16];$/;"	m	struct:nvme_endurance_group_log
num_err_log_entries	src/nvme/types.h	/^	__u8			num_err_log_entries[16];$/;"	m	struct:nvme_smart_log
num_hfi	src/nvme/nbft.h	/^	__u8 num_hfi;$/;"	m	struct:nbft_control
num_hfis	src/nvme/nbft.h	/^	int num_hfis;$/;"	m	struct:nbft_info_subsystem_ns
num_sec	src/nvme/nbft.h	/^	__u8 num_sec;$/;"	m	struct:nbft_control
num_ssns	src/nvme/nbft.h	/^	__u8 num_ssns;$/;"	m	struct:nbft_control
numa_node	src/nvme/private.h	/^	char *numa_node;$/;"	m	struct:nvme_ctrl
numcmd	src/nvme/types.h	/^	__le16	numcmd;$/;"	m	struct:nvme_mi_read_sc_list
nument	src/nvme/types.h	/^	__le64		nument;$/;"	m	struct:nvmf_dim_data
numexat	src/nvme/types.h	/^	__le16			numexat;$/;"	m	struct:nvmf_ext_die
nump	src/nvme/types.h	/^	__u8	nump;$/;"	m	struct:nvme_mi_read_nvm_ss_info
numrec	src/nvme/types.h	/^	__le64		numrec;$/;"	m	struct:nvmf_discovery_log
numzrwa	src/nvme/types.h	/^	__le32			numzrwa;$/;"	m	struct:nvme_zns_id_ns
nuse	src/nvme/types.h	/^	__le64			nuse;$/;"	m	struct:nvme_id_ns
nvi	src/nvme/types.h	/^	__le16 nvi;$/;"	m	struct:nvme_secondary_ctrl
nvm_status	src/nvme/util.c	/^static const char * const nvm_status[] = {$/;"	v	file:
nvmcap	src/nvme/types.h	/^	__u8			nvmcap[16];$/;"	m	struct:nvme_id_ns
nvme_admin_abort_cmd	src/nvme/types.h	/^	nvme_admin_abort_cmd		= 0x08,$/;"	e	enum:nvme_admin_opcode
nvme_admin_async_event	src/nvme/types.h	/^	nvme_admin_async_event		= 0x0c,$/;"	e	enum:nvme_admin_opcode
nvme_admin_capacity_mgmt	src/nvme/types.h	/^	nvme_admin_capacity_mgmt	= 0x20,$/;"	e	enum:nvme_admin_opcode
nvme_admin_create_cq	src/nvme/types.h	/^	nvme_admin_create_cq		= 0x05,$/;"	e	enum:nvme_admin_opcode
nvme_admin_create_sq	src/nvme/types.h	/^	nvme_admin_create_sq		= 0x01,$/;"	e	enum:nvme_admin_opcode
nvme_admin_dbbuf	src/nvme/types.h	/^	nvme_admin_dbbuf		= 0x7c,$/;"	e	enum:nvme_admin_opcode
nvme_admin_delete_cq	src/nvme/types.h	/^	nvme_admin_delete_cq		= 0x04,$/;"	e	enum:nvme_admin_opcode
nvme_admin_delete_sq	src/nvme/types.h	/^	nvme_admin_delete_sq		= 0x00,$/;"	e	enum:nvme_admin_opcode
nvme_admin_dev_self_test	src/nvme/types.h	/^	nvme_admin_dev_self_test	= 0x14,$/;"	e	enum:nvme_admin_opcode
nvme_admin_directive_recv	src/nvme/types.h	/^	nvme_admin_directive_recv	= 0x1a,$/;"	e	enum:nvme_admin_opcode
nvme_admin_directive_send	src/nvme/types.h	/^	nvme_admin_directive_send	= 0x19,$/;"	e	enum:nvme_admin_opcode
nvme_admin_discovery_info_mgmt	src/nvme/types.h	/^	nvme_admin_discovery_info_mgmt	= 0x21,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fabric_zoning_lookup	src/nvme/types.h	/^	nvme_admin_fabric_zoning_lookup	= 0x25,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fabric_zoning_recv	src/nvme/types.h	/^	nvme_admin_fabric_zoning_recv	= 0x22,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fabric_zoning_send	src/nvme/types.h	/^	nvme_admin_fabric_zoning_send	= 0x29,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fabrics	src/nvme/types.h	/^	nvme_admin_fabrics		= 0x7f,$/;"	e	enum:nvme_admin_opcode
nvme_admin_format_nvm	src/nvme/types.h	/^	nvme_admin_format_nvm		= 0x80,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fw_activate	src/nvme/types.h	/^	nvme_admin_fw_activate		= nvme_admin_fw_commit,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fw_commit	src/nvme/types.h	/^	nvme_admin_fw_commit		= 0x10,$/;"	e	enum:nvme_admin_opcode
nvme_admin_fw_download	src/nvme/types.h	/^	nvme_admin_fw_download		= 0x11,$/;"	e	enum:nvme_admin_opcode
nvme_admin_get_features	src/nvme/types.h	/^	nvme_admin_get_features		= 0x0a,$/;"	e	enum:nvme_admin_opcode
nvme_admin_get_lba_status	src/nvme/types.h	/^	nvme_admin_get_lba_status	= 0x86,$/;"	e	enum:nvme_admin_opcode
nvme_admin_get_log_page	src/nvme/types.h	/^	nvme_admin_get_log_page		= 0x02,$/;"	e	enum:nvme_admin_opcode
nvme_admin_identify	src/nvme/types.h	/^	nvme_admin_identify		= 0x06,$/;"	e	enum:nvme_admin_opcode
nvme_admin_keep_alive	src/nvme/types.h	/^	nvme_admin_keep_alive		= 0x18,$/;"	e	enum:nvme_admin_opcode
nvme_admin_lockdown	src/nvme/types.h	/^	nvme_admin_lockdown		= 0x24,$/;"	e	enum:nvme_admin_opcode
nvme_admin_ns_attach	src/nvme/types.h	/^	nvme_admin_ns_attach		= 0x15,$/;"	e	enum:nvme_admin_opcode
nvme_admin_ns_mgmt	src/nvme/types.h	/^	nvme_admin_ns_mgmt		= 0x0d,$/;"	e	enum:nvme_admin_opcode
nvme_admin_nvme_mi_recv	src/nvme/types.h	/^	nvme_admin_nvme_mi_recv		= 0x1e,$/;"	e	enum:nvme_admin_opcode
nvme_admin_nvme_mi_send	src/nvme/types.h	/^	nvme_admin_nvme_mi_send		= 0x1d,$/;"	e	enum:nvme_admin_opcode
nvme_admin_opcode	src/nvme/types.h	/^enum nvme_admin_opcode {$/;"	g
nvme_admin_passthru	src/nvme/ioctl.c	/^int nvme_admin_passthru(int fd, __u8 opcode, __u8 flags, __u16 rsvd,$/;"	f
nvme_admin_passthru64	src/nvme/ioctl.c	/^int nvme_admin_passthru64(int fd, __u8 opcode, __u8 flags, __u16 rsvd,$/;"	f
nvme_admin_sanitize_nvm	src/nvme/types.h	/^	nvme_admin_sanitize_nvm		= 0x84,$/;"	e	enum:nvme_admin_opcode
nvme_admin_security_recv	src/nvme/types.h	/^	nvme_admin_security_recv	= 0x82,$/;"	e	enum:nvme_admin_opcode
nvme_admin_security_send	src/nvme/types.h	/^	nvme_admin_security_send	= 0x81,$/;"	e	enum:nvme_admin_opcode
nvme_admin_set_features	src/nvme/types.h	/^	nvme_admin_set_features		= 0x09,$/;"	e	enum:nvme_admin_opcode
nvme_admin_virtual_mgmt	src/nvme/types.h	/^	nvme_admin_virtual_mgmt		= 0x1c,$/;"	e	enum:nvme_admin_opcode
nvme_ae_info_css_nvm	src/nvme/types.h	/^enum nvme_ae_info_css_nvm {$/;"	g
nvme_ae_info_error	src/nvme/types.h	/^enum nvme_ae_info_error {$/;"	g
nvme_ae_info_notice	src/nvme/types.h	/^enum nvme_ae_info_notice {$/;"	g
nvme_ae_info_smart	src/nvme/types.h	/^enum nvme_ae_info_smart {$/;"	g
nvme_ae_type	src/nvme/types.h	/^enum nvme_ae_type {$/;"	g
nvme_aggregate_endurance_group_event	src/nvme/types.h	/^struct nvme_aggregate_endurance_group_event {$/;"	s
nvme_aggregate_predictable_lat_event	src/nvme/types.h	/^struct nvme_aggregate_predictable_lat_event {$/;"	s
nvme_alloc_subsystem	src/nvme/tree.c	/^struct nvme_subsystem *nvme_alloc_subsystem(struct nvme_host *h,$/;"	f
nvme_ana_group_desc	src/nvme/types.h	/^struct nvme_ana_group_desc {$/;"	s
nvme_ana_log	src/nvme/types.h	/^struct nvme_ana_log {$/;"	s
nvme_ana_state	src/nvme/types.h	/^enum nvme_ana_state {$/;"	g
nvme_apst_entry	src/nvme/types.h	/^enum nvme_apst_entry {$/;"	g
nvme_aqa	src/nvme/types.h	/^enum nvme_aqa {$/;"	g
nvme_boot_partition	src/nvme/types.h	/^struct nvme_boot_partition {$/;"	s
nvme_bpinfo	src/nvme/types.h	/^enum nvme_bpinfo {$/;"	g
nvme_bprsel	src/nvme/types.h	/^enum nvme_bprsel {$/;"	g
nvme_bytes_to_lba	src/nvme/tree.c	/^static int nvme_bytes_to_lba(nvme_ns_t n, off_t offset, size_t count,$/;"	f	file:
nvme_cap	src/nvme/types.h	/^enum nvme_cap {$/;"	g
nvme_capacity_config_desc	src/nvme/types.h	/^struct nvme_capacity_config_desc {$/;"	s
nvme_capacity_mgmt	src/nvme/ioctl.c	/^int nvme_capacity_mgmt(struct nvme_capacity_mgmt_args *args)$/;"	f
nvme_capacity_mgmt_args	src/nvme/api-types.h	/^struct nvme_capacity_mgmt_args {$/;"	s
nvme_cc	src/nvme/types.h	/^enum nvme_cc {$/;"	g
nvme_change_ns_event	src/nvme/types.h	/^struct nvme_change_ns_event {$/;"	s
nvme_channel_config_desc	src/nvme/types.h	/^struct nvme_channel_config_desc {$/;"	s
nvme_cmb_size	src/nvme/types.h	/^static inline __u64 nvme_cmb_size(__u32 cmbsz)$/;"	f
nvme_cmbloc	src/nvme/types.h	/^enum nvme_cmbloc {$/;"	g
nvme_cmbmsc	src/nvme/types.h	/^enum nvme_cmbmsc {$/;"	g
nvme_cmbsts	src/nvme/types.h	/^enum nvme_cmbsts {$/;"	g
nvme_cmbsz	src/nvme/types.h	/^enum nvme_cmbsz {$/;"	g
nvme_cmd_compare	src/nvme/types.h	/^	nvme_cmd_compare	= 0x05,$/;"	e	enum:nvme_io_opcode
nvme_cmd_copy	src/nvme/types.h	/^	nvme_cmd_copy		= 0x19,$/;"	e	enum:nvme_io_opcode
nvme_cmd_dsm	src/nvme/types.h	/^	nvme_cmd_dsm		= 0x09,$/;"	e	enum:nvme_io_opcode
nvme_cmd_dword_fields	src/nvme/ioctl.c	/^enum nvme_cmd_dword_fields {$/;"	g	file:
nvme_cmd_effects	src/nvme/types.h	/^enum nvme_cmd_effects {$/;"	g
nvme_cmd_effects_log	src/nvme/types.h	/^struct nvme_cmd_effects_log {$/;"	s
nvme_cmd_flush	src/nvme/types.h	/^	nvme_cmd_flush		= 0x00,$/;"	e	enum:nvme_io_opcode
nvme_cmd_format_mset	src/nvme/types.h	/^enum nvme_cmd_format_mset {$/;"	g
nvme_cmd_format_pi	src/nvme/types.h	/^enum nvme_cmd_format_pi {$/;"	g
nvme_cmd_format_pil	src/nvme/types.h	/^enum nvme_cmd_format_pil {$/;"	g
nvme_cmd_format_ses	src/nvme/types.h	/^enum nvme_cmd_format_ses {$/;"	g
nvme_cmd_get_log_lid	src/nvme/types.h	/^enum nvme_cmd_get_log_lid {$/;"	g
nvme_cmd_get_log_telemetry_host_lsp	src/nvme/types.h	/^enum nvme_cmd_get_log_telemetry_host_lsp {$/;"	g
nvme_cmd_io_mgmt_recv	src/nvme/types.h	/^	nvme_cmd_io_mgmt_recv	= 0x12,$/;"	e	enum:nvme_io_opcode
nvme_cmd_io_mgmt_send	src/nvme/types.h	/^	nvme_cmd_io_mgmt_send	= 0x1d,$/;"	e	enum:nvme_io_opcode
nvme_cmd_read	src/nvme/types.h	/^	nvme_cmd_read		= 0x02,$/;"	e	enum:nvme_io_opcode
nvme_cmd_resv_acquire	src/nvme/types.h	/^	nvme_cmd_resv_acquire	= 0x11,$/;"	e	enum:nvme_io_opcode
nvme_cmd_resv_register	src/nvme/types.h	/^	nvme_cmd_resv_register	= 0x0d,$/;"	e	enum:nvme_io_opcode
nvme_cmd_resv_release	src/nvme/types.h	/^	nvme_cmd_resv_release	= 0x15,$/;"	e	enum:nvme_io_opcode
nvme_cmd_resv_report	src/nvme/types.h	/^	nvme_cmd_resv_report	= 0x0e,$/;"	e	enum:nvme_io_opcode
nvme_cmd_specific_status_to_errno	src/nvme/util.c	/^static inline __u8 nvme_cmd_specific_status_to_errno(__u16 status)$/;"	f	file:
nvme_cmd_verify	src/nvme/types.h	/^	nvme_cmd_verify		= 0x0c,$/;"	e	enum:nvme_io_opcode
nvme_cmd_write	src/nvme/types.h	/^	nvme_cmd_write		= 0x01,$/;"	e	enum:nvme_io_opcode
nvme_cmd_write_uncor	src/nvme/types.h	/^	nvme_cmd_write_uncor	= 0x04,$/;"	e	enum:nvme_io_opcode
nvme_cmd_write_zeroes	src/nvme/types.h	/^	nvme_cmd_write_zeroes	= 0x08,$/;"	e	enum:nvme_io_opcode
nvme_compare	src/nvme/ioctl.h	/^static inline int nvme_compare(struct nvme_io_args *args)$/;"	f
nvme_configure_ctrl	src/nvme/tree.c	/^static int nvme_configure_ctrl(nvme_root_t r, nvme_ctrl_t c, const char *path,$/;"	f	file:
nvme_connect_err	src/nvme/util.h	/^enum nvme_connect_err {$/;"	g
nvme_constants	src/nvme/types.h	/^enum nvme_constants {$/;"	g
nvme_copy	src/nvme/ioctl.c	/^int nvme_copy(struct nvme_copy_args *args)$/;"	f
nvme_copy_args	src/nvme/api-types.h	/^struct nvme_copy_args {$/;"	s
nvme_copy_range	src/nvme/types.h	/^struct nvme_copy_range {$/;"	s
nvme_copy_range_f1	src/nvme/types.h	/^struct nvme_copy_range_f1 {$/;"	s
nvme_create_ctrl	src/nvme/tree.c	/^struct nvme_ctrl *nvme_create_ctrl(nvme_root_t r,$/;"	f
nvme_create_root	src/nvme/tree.c	/^nvme_root_t nvme_create_root(FILE *fp, int log_level)$/;"	f
nvme_crto	src/nvme/types.h	/^enum nvme_crto {$/;"	g
nvme_csi	src/nvme/types.h	/^enum nvme_csi {$/;"	g
nvme_csts	src/nvme/types.h	/^enum nvme_csts {$/;"	g
nvme_ctrl	src/nvme/private.h	/^struct nvme_ctrl {$/;"	s
nvme_ctrl_alloc	src/nvme/tree.c	/^static nvme_ctrl_t nvme_ctrl_alloc(nvme_root_t r, nvme_subsystem_t s,$/;"	f	file:
nvme_ctrl_first_ns	src/nvme/tree.c	/^nvme_ns_t nvme_ctrl_first_ns(nvme_ctrl_t c)$/;"	f
nvme_ctrl_first_path	src/nvme/tree.c	/^nvme_path_t nvme_ctrl_first_path(nvme_ctrl_t c)$/;"	f
nvme_ctrl_for_each_ns	src/nvme/tree.h	427;"	d
nvme_ctrl_for_each_ns_safe	src/nvme/tree.h	416;"	d
nvme_ctrl_for_each_path	src/nvme/tree.h	448;"	d
nvme_ctrl_for_each_path_safe	src/nvme/tree.h	437;"	d
nvme_ctrl_get_address	src/nvme/tree.c	/^const char *nvme_ctrl_get_address(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_config	src/nvme/tree.c	/^struct nvme_fabrics_config *nvme_ctrl_get_config(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_dhchap_host_key	src/nvme/tree.c	/^const char *nvme_ctrl_get_dhchap_host_key(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_dhchap_key	src/nvme/tree.c	/^const char *nvme_ctrl_get_dhchap_key(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_fd	src/nvme/tree.c	/^int nvme_ctrl_get_fd(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_firmware	src/nvme/tree.c	/^const char *nvme_ctrl_get_firmware(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_host_iface	src/nvme/tree.c	/^const char *nvme_ctrl_get_host_iface(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_host_traddr	src/nvme/tree.c	/^const char *nvme_ctrl_get_host_traddr(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_model	src/nvme/tree.c	/^const char *nvme_ctrl_get_model(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_name	src/nvme/tree.c	/^const char *nvme_ctrl_get_name(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_numa_node	src/nvme/tree.c	/^const char *nvme_ctrl_get_numa_node(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_phy_slot	src/nvme/tree.c	/^const char *nvme_ctrl_get_phy_slot(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_queue_count	src/nvme/tree.c	/^const char *nvme_ctrl_get_queue_count(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_serial	src/nvme/tree.c	/^const char *nvme_ctrl_get_serial(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_sqsize	src/nvme/tree.c	/^const char *nvme_ctrl_get_sqsize(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_state	src/nvme/tree.c	/^const char *nvme_ctrl_get_state(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_subsysnqn	src/nvme/tree.c	/^const char *nvme_ctrl_get_subsysnqn(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_subsystem	src/nvme/tree.c	/^nvme_subsystem_t nvme_ctrl_get_subsystem(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_sysfs_dir	src/nvme/tree.c	/^const char *nvme_ctrl_get_sysfs_dir(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_traddr	src/nvme/tree.c	/^const char *nvme_ctrl_get_traddr(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_transport	src/nvme/tree.c	/^const char *nvme_ctrl_get_transport(nvme_ctrl_t c)$/;"	f
nvme_ctrl_get_trsvcid	src/nvme/tree.c	/^const char *nvme_ctrl_get_trsvcid(nvme_ctrl_t c)$/;"	f
nvme_ctrl_identify	src/nvme/tree.c	/^int nvme_ctrl_identify(nvme_ctrl_t c, struct nvme_id_ctrl *id)$/;"	f
nvme_ctrl_is_discovered	src/nvme/tree.c	/^bool nvme_ctrl_is_discovered(nvme_ctrl_t c)$/;"	f
nvme_ctrl_is_discovery_ctrl	src/nvme/tree.c	/^bool nvme_ctrl_is_discovery_ctrl(nvme_ctrl_t c)$/;"	f
nvme_ctrl_is_persistent	src/nvme/tree.c	/^bool nvme_ctrl_is_persistent(nvme_ctrl_t c)$/;"	f
nvme_ctrl_is_unique_discovery_ctrl	src/nvme/tree.c	/^bool nvme_ctrl_is_unique_discovery_ctrl(nvme_ctrl_t c)$/;"	f
nvme_ctrl_list	src/nvme/types.h	/^struct nvme_ctrl_list {$/;"	s
nvme_ctrl_lookup_phy_slot	src/nvme/tree.c	/^static char *nvme_ctrl_lookup_phy_slot(nvme_root_t r, const char *address)$/;"	f	file:
nvme_ctrl_lookup_subsystem_name	src/nvme/tree.c	/^static char *nvme_ctrl_lookup_subsystem_name(nvme_root_t r,$/;"	f	file:
nvme_ctrl_metadata_type	src/nvme/types.h	/^enum nvme_ctrl_metadata_type {$/;"	g
nvme_ctrl_next_ns	src/nvme/tree.c	/^nvme_ns_t nvme_ctrl_next_ns(nvme_ctrl_t c, nvme_ns_t n)$/;"	f
nvme_ctrl_next_path	src/nvme/tree.c	/^nvme_path_t nvme_ctrl_next_path(nvme_ctrl_t c, nvme_path_t p)$/;"	f
nvme_ctrl_release_fd	src/nvme/tree.c	/^void nvme_ctrl_release_fd(nvme_ctrl_t c)$/;"	f
nvme_ctrl_reset	src/nvme/ioctl.c	/^int nvme_ctrl_reset(int fd)$/;"	f
nvme_ctrl_scan_namespace	src/nvme/tree.c	/^static int nvme_ctrl_scan_namespace(nvme_root_t r, struct nvme_ctrl *c,$/;"	f	file:
nvme_ctrl_scan_namespaces	src/nvme/tree.c	/^static int nvme_ctrl_scan_namespaces(nvme_root_t r, struct nvme_ctrl *c)$/;"	f	file:
nvme_ctrl_scan_path	src/nvme/tree.c	/^static int nvme_ctrl_scan_path(nvme_root_t r, struct nvme_ctrl *c, char *name)$/;"	f	file:
nvme_ctrl_scan_paths	src/nvme/tree.c	/^static int nvme_ctrl_scan_paths(nvme_root_t r, struct nvme_ctrl *c)$/;"	f	file:
nvme_ctrl_set_dhchap_host_key	src/nvme/tree.c	/^void nvme_ctrl_set_dhchap_host_key(nvme_ctrl_t c, const char *key)$/;"	f
nvme_ctrl_set_dhchap_key	src/nvme/tree.c	/^void nvme_ctrl_set_dhchap_key(nvme_ctrl_t c, const char *key)$/;"	f
nvme_ctrl_set_discovered	src/nvme/tree.c	/^void nvme_ctrl_set_discovered(nvme_ctrl_t c, bool discovered)$/;"	f
nvme_ctrl_set_discovery_ctrl	src/nvme/tree.c	/^void nvme_ctrl_set_discovery_ctrl(nvme_ctrl_t c, bool discovery)$/;"	f
nvme_ctrl_set_persistent	src/nvme/tree.c	/^void nvme_ctrl_set_persistent(nvme_ctrl_t c, bool persistent)$/;"	f
nvme_ctrl_set_unique_discovery_ctrl	src/nvme/tree.c	/^void nvme_ctrl_set_unique_discovery_ctrl(nvme_ctrl_t c, bool unique)$/;"	f
nvme_ctrl_sysfs_dir	src/nvme/filters.c	/^const char *nvme_ctrl_sysfs_dir = "\/sys\/class\/nvme";$/;"	v
nvme_ctrl_t	src/nvme/tree.h	/^typedef struct nvme_ctrl *nvme_ctrl_t;$/;"	t	typeref:struct:nvme_ctrl
nvme_ctrls_filter	src/nvme/filters.c	/^int nvme_ctrls_filter(const struct dirent *d)$/;"	f
nvme_data_tfr	src/nvme/types.h	/^enum nvme_data_tfr {$/;"	g
nvme_deconfigure_ctrl	src/nvme/tree.c	/^void nvme_deconfigure_ctrl(nvme_ctrl_t c)$/;"	f
nvme_default_host	src/nvme/tree.c	/^nvme_host_t nvme_default_host(nvme_root_t r)$/;"	f
nvme_describe_key_serial	src/nvme/linux.c	/^char *nvme_describe_key_serial(long key_id)$/;"	f
nvme_dev_self_test	src/nvme/ioctl.c	/^int nvme_dev_self_test(struct nvme_dev_self_test_args *args)$/;"	f
nvme_dev_self_test_args	src/nvme/api-types.h	/^struct nvme_dev_self_test_args {$/;"	s
nvme_dim_args	src/nvme/api-types.h	/^struct nvme_dim_args {$/;"	s
nvme_dim_send	src/nvme/ioctl.c	/^int nvme_dim_send(struct nvme_dim_args *args)$/;"	f
nvme_directive_dtype	src/nvme/types.h	/^enum nvme_directive_dtype {$/;"	g
nvme_directive_receive_doper	src/nvme/types.h	/^enum nvme_directive_receive_doper {$/;"	g
nvme_directive_recv	src/nvme/ioctl.c	/^int nvme_directive_recv(struct nvme_directive_recv_args *args)$/;"	f
nvme_directive_recv_args	src/nvme/api-types.h	/^struct nvme_directive_recv_args {$/;"	s
nvme_directive_recv_identify_parameters	src/nvme/ioctl.h	/^static inline int nvme_directive_recv_identify_parameters(int fd, __u32 nsid,$/;"	f
nvme_directive_recv_stream_allocate	src/nvme/ioctl.h	/^static inline int nvme_directive_recv_stream_allocate(int fd, __u32 nsid,$/;"	f
nvme_directive_recv_stream_parameters	src/nvme/ioctl.h	/^static inline int nvme_directive_recv_stream_parameters(int fd, __u32 nsid,$/;"	f
nvme_directive_recv_stream_status	src/nvme/ioctl.h	/^static inline int nvme_directive_recv_stream_status(int fd, __u32 nsid,$/;"	f
nvme_directive_send	src/nvme/ioctl.c	/^int nvme_directive_send(struct nvme_directive_send_args *args)$/;"	f
nvme_directive_send_args	src/nvme/api-types.h	/^struct nvme_directive_send_args {$/;"	s
nvme_directive_send_doper	src/nvme/types.h	/^enum nvme_directive_send_doper {$/;"	g
nvme_directive_send_id_endir	src/nvme/ioctl.c	/^int nvme_directive_send_id_endir(int fd, __u32 nsid, bool endir,$/;"	f
nvme_directive_send_identify_endir	src/nvme/types.h	/^enum nvme_directive_send_identify_endir {$/;"	g
nvme_directive_send_stream_release_identifier	src/nvme/ioctl.h	/^static inline int nvme_directive_send_stream_release_identifier(int fd,$/;"	f
nvme_directive_send_stream_release_resource	src/nvme/ioctl.h	/^static inline int nvme_directive_send_stream_release_resource(int fd, __u32 nsid)$/;"	f
nvme_directive_types	src/nvme/types.h	/^enum nvme_directive_types {$/;"	g
nvme_disconnect_ctrl	src/nvme/tree.c	/^int nvme_disconnect_ctrl(nvme_ctrl_t c)$/;"	f
nvme_discovery_log	src/nvme/fabrics.c	/^static struct nvmf_discovery_log *nvme_discovery_log(nvme_ctrl_t c,$/;"	f	file:
nvme_dsm	src/nvme/ioctl.c	/^int nvme_dsm(struct nvme_dsm_args *args)$/;"	f
nvme_dsm_args	src/nvme/api-types.h	/^struct nvme_dsm_args {$/;"	s
nvme_dsm_attributes	src/nvme/types.h	/^enum nvme_dsm_attributes {$/;"	g
nvme_dsm_range	src/nvme/types.h	/^struct nvme_dsm_range {$/;"	s
nvme_dst_stc	src/nvme/types.h	/^enum nvme_dst_stc {$/;"	g
nvme_dump_config	src/nvme/tree.c	/^int nvme_dump_config(nvme_root_t r)$/;"	f
nvme_dump_tree	src/nvme/tree.c	/^int nvme_dump_tree(nvme_root_t r)$/;"	f
nvme_eg_critical_warning_flags	src/nvme/types.h	/^enum nvme_eg_critical_warning_flags {$/;"	g
nvme_eg_event_aggregate_log	src/nvme/types.h	/^struct nvme_eg_event_aggregate_log {$/;"	s
nvme_end_grp_chan_desc	src/nvme/types.h	/^struct nvme_end_grp_chan_desc {$/;"	s
nvme_end_grp_config_desc	src/nvme/types.h	/^struct nvme_end_grp_config_desc {$/;"	s
nvme_endurance_group_log	src/nvme/types.h	/^struct nvme_endurance_group_log {$/;"	s
nvme_err_pel	src/nvme/types.h	/^enum nvme_err_pel {$/;"	g
nvme_errno_to_string	src/nvme/util.c	/^const char *nvme_errno_to_string(int status)$/;"	f
nvme_error_log_page	src/nvme/types.h	/^struct nvme_error_log_page {$/;"	s
nvme_fabric_options	src/nvme/private.h	/^struct nvme_fabric_options {$/;"	s
nvme_fabrics_config	src/nvme/fabrics.h	/^struct nvme_fabrics_config {$/;"	s
nvme_fabrics_status_to_errno	src/nvme/util.c	/^static inline __u8 nvme_fabrics_status_to_errno(__u16 status)$/;"	f	file:
nvme_fabrics_type_auth_receive	src/nvme/types.h	/^	nvme_fabrics_type_auth_receive		= 0x06,$/;"	e	enum:nvme_fctype
nvme_fabrics_type_auth_send	src/nvme/types.h	/^	nvme_fabrics_type_auth_send		= 0x05,$/;"	e	enum:nvme_fctype
nvme_fabrics_type_connect	src/nvme/types.h	/^	nvme_fabrics_type_connect		= 0x01,$/;"	e	enum:nvme_fctype
nvme_fabrics_type_disconnect	src/nvme/types.h	/^	nvme_fabrics_type_disconnect		= 0x08,$/;"	e	enum:nvme_fctype
nvme_fabrics_type_property_get	src/nvme/types.h	/^	nvme_fabrics_type_property_get		= 0x04,$/;"	e	enum:nvme_fctype
nvme_fabrics_type_property_set	src/nvme/types.h	/^	nvme_fabrics_type_property_set		= 0x00,$/;"	e	enum:nvme_fctype
nvme_fctype	src/nvme/types.h	/^enum nvme_fctype {$/;"	g
nvme_fdp_config_desc	src/nvme/types.h	/^struct nvme_fdp_config_desc {$/;"	s
nvme_fdp_config_fdpa	src/nvme/types.h	/^enum nvme_fdp_config_fdpa {$/;"	g
nvme_fdp_config_log	src/nvme/types.h	/^struct nvme_fdp_config_log {$/;"	s
nvme_fdp_event	src/nvme/types.h	/^struct nvme_fdp_event {$/;"	s
nvme_fdp_event_flags	src/nvme/types.h	/^enum nvme_fdp_event_flags {$/;"	g
nvme_fdp_event_realloc	src/nvme/types.h	/^struct nvme_fdp_event_realloc {$/;"	s
nvme_fdp_event_realloc_flags	src/nvme/types.h	/^enum nvme_fdp_event_realloc_flags {$/;"	g
nvme_fdp_event_type	src/nvme/types.h	/^enum nvme_fdp_event_type {$/;"	g
nvme_fdp_events_log	src/nvme/types.h	/^struct nvme_fdp_events_log {$/;"	s
nvme_fdp_reclaim_unit_handle_status	src/nvme/ioctl.h	/^static inline int nvme_fdp_reclaim_unit_handle_status(int fd, __u32 nsid,$/;"	f
nvme_fdp_reclaim_unit_handle_update	src/nvme/ioctl.h	/^static inline int nvme_fdp_reclaim_unit_handle_update(int fd, __u32 nsid,$/;"	f
nvme_fdp_ruh_desc	src/nvme/types.h	/^struct nvme_fdp_ruh_desc {$/;"	s
nvme_fdp_ruh_status	src/nvme/types.h	/^struct nvme_fdp_ruh_status {$/;"	s
nvme_fdp_ruh_status_desc	src/nvme/types.h	/^struct nvme_fdp_ruh_status_desc {$/;"	s
nvme_fdp_ruh_type	src/nvme/types.h	/^enum nvme_fdp_ruh_type {$/;"	g
nvme_fdp_ruha	src/nvme/types.h	/^enum nvme_fdp_ruha {$/;"	g
nvme_fdp_ruhu_desc	src/nvme/types.h	/^struct nvme_fdp_ruhu_desc {$/;"	s
nvme_fdp_ruhu_log	src/nvme/types.h	/^struct nvme_fdp_ruhu_log {$/;"	s
nvme_fdp_stats_log	src/nvme/types.h	/^struct nvme_fdp_stats_log {$/;"	s
nvme_fdp_supported_event_attributes	src/nvme/types.h	/^enum nvme_fdp_supported_event_attributes {$/;"	g
nvme_fdp_supported_event_desc	src/nvme/types.h	/^struct nvme_fdp_supported_event_desc {$/;"	s
nvme_feat	src/nvme/types.h	/^enum nvme_feat {$/;"	g
nvme_feat_auto_pst	src/nvme/types.h	/^struct nvme_feat_auto_pst {$/;"	s
nvme_feat_fdp_events_cdw11	src/nvme/types.h	/^struct nvme_feat_fdp_events_cdw11 {$/;"	s
nvme_feat_host_behavior	src/nvme/types.h	/^struct nvme_feat_host_behavior {$/;"	s
nvme_feat_nswpcfg_state	src/nvme/types.h	/^enum nvme_feat_nswpcfg_state {$/;"	g
nvme_feat_plm_window_select	src/nvme/types.h	/^enum nvme_feat_plm_window_select {$/;"	g
nvme_feat_resv_notify_flags	src/nvme/types.h	/^enum nvme_feat_resv_notify_flags {$/;"	g
nvme_feat_tmpthresh_thsel	src/nvme/types.h	/^enum nvme_feat_tmpthresh_thsel {$/;"	g
nvme_feature_decode_arbitration	src/nvme/util.h	/^static inline void nvme_feature_decode_arbitration(__u32 value, __u8 *ab,$/;"	f
nvme_feature_decode_async_event_config	src/nvme/util.h	/^static inline void nvme_feature_decode_async_event_config(__u32 value,$/;"	f
nvme_feature_decode_auto_power_state	src/nvme/util.h	/^static inline void nvme_feature_decode_auto_power_state(__u32 value,$/;"	f
nvme_feature_decode_endurance_group_event_config	src/nvme/util.h	/^static inline void nvme_feature_decode_endurance_group_event_config(__u32 value,$/;"	f
nvme_feature_decode_error_recovery	src/nvme/util.h	/^static inline void nvme_feature_decode_error_recovery(__u32 value, __u16 *tler,$/;"	f
nvme_feature_decode_host_identifier	src/nvme/util.h	/^static inline void nvme_feature_decode_host_identifier(__u32 value, bool *exhid)$/;"	f
nvme_feature_decode_host_memory_buffer	src/nvme/util.h	/^static inline void nvme_feature_decode_host_memory_buffer(__u32 value, bool *ehm)$/;"	f
nvme_feature_decode_host_thermal_mgmt	src/nvme/util.h	/^static inline void nvme_feature_decode_host_thermal_mgmt(__u32 value,$/;"	f
nvme_feature_decode_interrupt_coalescing	src/nvme/util.h	/^static inline void nvme_feature_decode_interrupt_coalescing(__u32 value,$/;"	f
nvme_feature_decode_interrupt_config	src/nvme/util.h	/^static inline void nvme_feature_decode_interrupt_config(__u32 value, __u16 *iv,$/;"	f
nvme_feature_decode_lba_range	src/nvme/util.h	/^static inline void nvme_feature_decode_lba_range(__u32 value, __u8 *num)$/;"	f
nvme_feature_decode_lba_status_attributes	src/nvme/util.h	/^static inline void nvme_feature_decode_lba_status_attributes(__u32 value,$/;"	f
nvme_feature_decode_namespace_write_protect	src/nvme/util.h	/^static inline void nvme_feature_decode_namespace_write_protect(__u32 value,$/;"	f
nvme_feature_decode_non_op_power_config	src/nvme/util.h	/^static inline void nvme_feature_decode_non_op_power_config(__u32 value,$/;"	f
nvme_feature_decode_number_of_queues	src/nvme/util.h	/^static inline void nvme_feature_decode_number_of_queues(__u32 value,$/;"	f
nvme_feature_decode_power_mgmt	src/nvme/util.h	/^static inline void nvme_feature_decode_power_mgmt(__u32 value, __u8 *ps,$/;"	f
nvme_feature_decode_predictable_latency_mode_config	src/nvme/util.h	/^static inline void nvme_feature_decode_predictable_latency_mode_config(__u32 value,$/;"	f
nvme_feature_decode_predictable_latency_mode_window	src/nvme/util.h	/^static inline void nvme_feature_decode_predictable_latency_mode_window(__u32 value,$/;"	f
nvme_feature_decode_read_recovery_level_config	src/nvme/util.h	/^static inline void nvme_feature_decode_read_recovery_level_config(__u32 value,$/;"	f
nvme_feature_decode_reservation_notification	src/nvme/util.h	/^static inline void nvme_feature_decode_reservation_notification(__u32 value,$/;"	f
nvme_feature_decode_reservation_persistance	src/nvme/util.h	/^static inline void nvme_feature_decode_reservation_persistance(__u32 value,$/;"	f
nvme_feature_decode_sanitize_config	src/nvme/util.h	/^static inline void nvme_feature_decode_sanitize_config(__u32 value, bool *nodrm)$/;"	f
nvme_feature_decode_software_progress_marker	src/nvme/util.h	/^static inline void nvme_feature_decode_software_progress_marker(__u32 value,$/;"	f
nvme_feature_decode_temp_threshold	src/nvme/util.h	/^static inline void nvme_feature_decode_temp_threshold(__u32 value, __u16 *tmpth,$/;"	f
nvme_feature_decode_volatile_write_cache	src/nvme/util.h	/^static inline void nvme_feature_decode_volatile_write_cache(__u32 value,$/;"	f
nvme_feature_decode_write_atomicity	src/nvme/util.h	/^static inline void nvme_feature_decode_write_atomicity(__u32 value, bool *dn)$/;"	f
nvme_features_async_event_config_flags	src/nvme/types.h	/^enum nvme_features_async_event_config_flags {$/;"	g
nvme_features_id	src/nvme/types.h	/^enum nvme_features_id {$/;"	g
nvme_fetch_cntrltype_dctype_from_id	src/nvme/fabrics.c	/^static int nvme_fetch_cntrltype_dctype_from_id(nvme_ctrl_t c)$/;"	f	file:
nvme_fid_supported_effects	src/nvme/types.h	/^enum nvme_fid_supported_effects {$/;"	g
nvme_fid_supported_effects_log	src/nvme/types.h	/^struct nvme_fid_supported_effects_log {$/;"	s
nvme_firmware_slot	src/nvme/types.h	/^struct nvme_firmware_slot {$/;"	s
nvme_first_host	src/nvme/tree.c	/^nvme_host_t nvme_first_host(nvme_root_t r)$/;"	f
nvme_first_subsystem	src/nvme/tree.c	/^nvme_subsystem_t nvme_first_subsystem(nvme_host_t h)$/;"	f
nvme_flush	src/nvme/ioctl.h	/^static inline int nvme_flush(int fd, __u32 nsid)$/;"	f
nvme_for_each_host	src/nvme/tree.h	364;"	d
nvme_for_each_host_safe	src/nvme/tree.h	353;"	d
nvme_for_each_subsystem	src/nvme/tree.h	385;"	d
nvme_for_each_subsystem_safe	src/nvme/tree.h	374;"	d
nvme_format_nvm	src/nvme/ioctl.c	/^int nvme_format_nvm(struct nvme_format_nvm_args *args)$/;"	f
nvme_format_nvm_args	src/nvme/api-types.h	/^struct nvme_format_nvm_args {$/;"	s
nvme_format_nvm_compln_event	src/nvme/types.h	/^struct nvme_format_nvm_compln_event {$/;"	s
nvme_format_nvm_start_event	src/nvme/types.h	/^struct nvme_format_nvm_start_event {$/;"	s
nvme_free_ctrl	src/nvme/tree.c	/^void nvme_free_ctrl(nvme_ctrl_t c)$/;"	f
nvme_free_dirents	src/nvme/tree.c	/^static inline void nvme_free_dirents(struct dirent **d, int i)$/;"	f	file:
nvme_free_host	src/nvme/tree.c	/^void nvme_free_host(struct nvme_host *h)$/;"	f
nvme_free_ns	src/nvme/tree.c	/^void nvme_free_ns(struct nvme_ns *n)$/;"	f
nvme_free_path	src/nvme/tree.c	/^void nvme_free_path(struct nvme_path *p)$/;"	f
nvme_free_subsystem	src/nvme/tree.c	/^void nvme_free_subsystem(nvme_subsystem_t s)$/;"	f
nvme_free_tree	src/nvme/tree.c	/^void nvme_free_tree(nvme_root_t r)$/;"	f
nvme_fw_commit	src/nvme/ioctl.c	/^int nvme_fw_commit(struct nvme_fw_commit_args *args)$/;"	f
nvme_fw_commit_args	src/nvme/api-types.h	/^struct nvme_fw_commit_args {$/;"	s
nvme_fw_commit_ca	src/nvme/types.h	/^enum nvme_fw_commit_ca {$/;"	g
nvme_fw_commit_event	src/nvme/types.h	/^struct nvme_fw_commit_event {$/;"	s
nvme_fw_download	src/nvme/ioctl.c	/^int nvme_fw_download(struct nvme_fw_download_args *args)$/;"	f
nvme_fw_download_args	src/nvme/api-types.h	/^struct nvme_fw_download_args {$/;"	s
nvme_fw_download_seq	src/nvme/linux.c	/^int nvme_fw_download_seq(int fd, __u32 size, __u32 xfer, __u32 offset,$/;"	f
nvme_gen_dhchap_key	src/nvme/linux.c	/^int nvme_gen_dhchap_key(char *hostnqn, enum nvme_hmac_alg hmac,$/;"	f
nvme_generic_status_to_errno	src/nvme/util.c	/^static inline __u8 nvme_generic_status_to_errno(__u16 status)$/;"	f	file:
nvme_get_adrfam	src/nvme/fabrics.c	/^static __u8 nvme_get_adrfam(nvme_ctrl_t c)$/;"	f	file:
nvme_get_ana_log_len	src/nvme/linux.c	/^int nvme_get_ana_log_len(int fd, size_t *analen)$/;"	f
nvme_get_attr	src/nvme/linux.c	/^char *nvme_get_attr(const char *dir, const char *attr)$/;"	f
nvme_get_ctrl_attr	src/nvme/linux.c	/^char *nvme_get_ctrl_attr(nvme_ctrl_t c, const char *attr)$/;"	f
nvme_get_ctrl_telemetry	src/nvme/linux.c	/^int nvme_get_ctrl_telemetry(int fd, bool rae, struct nvme_telemetry_log **log,$/;"	f
nvme_get_directive_receive_length	src/nvme/util.c	/^int nvme_get_directive_receive_length(enum nvme_directive_dtype dtype,$/;"	f
nvme_get_discovery_args	src/nvme/fabrics.h	/^struct nvme_get_discovery_args {$/;"	s
nvme_get_feature_length	src/nvme/util.c	/^int nvme_get_feature_length(int fid, __u32 cdw11, __u32 *len)$/;"	f
nvme_get_feature_length2	src/nvme/util.c	/^int nvme_get_feature_length2(int fid, __u32 cdw11, enum nvme_data_tfr dir,$/;"	f
nvme_get_features	src/nvme/ioctl.c	/^int nvme_get_features(struct nvme_get_features_args *args)$/;"	f
nvme_get_features_arbitration	src/nvme/ioctl.c	/^int nvme_get_features_arbitration(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_args	src/nvme/api-types.h	/^struct nvme_get_features_args {$/;"	s
nvme_get_features_async_event	src/nvme/ioctl.c	/^int nvme_get_features_async_event(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_auto_pst	src/nvme/ioctl.c	/^int nvme_get_features_auto_pst(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_data	src/nvme/ioctl.h	/^static inline int nvme_get_features_data(int fd, enum nvme_features_id fid,$/;"	f
nvme_get_features_endurance_event_cfg	src/nvme/ioctl.c	/^int nvme_get_features_endurance_event_cfg(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_err_recovery	src/nvme/ioctl.c	/^int nvme_get_features_err_recovery(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_hctm	src/nvme/ioctl.c	/^int nvme_get_features_hctm(int fd, enum nvme_get_features_sel sel, __u32 *result)$/;"	f
nvme_get_features_host_behavior	src/nvme/ioctl.c	/^int nvme_get_features_host_behavior(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_host_id	src/nvme/ioctl.c	/^int nvme_get_features_host_id(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_host_mem_buf	src/nvme/ioctl.c	/^int nvme_get_features_host_mem_buf(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_iocs_profile	src/nvme/ioctl.c	/^int nvme_get_features_iocs_profile(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_irq_coalesce	src/nvme/ioctl.c	/^int nvme_get_features_irq_coalesce(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_irq_config	src/nvme/ioctl.c	/^int nvme_get_features_irq_config(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_kato	src/nvme/ioctl.c	/^int nvme_get_features_kato(int fd, enum nvme_get_features_sel sel, __u32 *result)$/;"	f
nvme_get_features_lba_range	src/nvme/ioctl.c	/^int nvme_get_features_lba_range(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_lba_sts_interval	src/nvme/ioctl.c	/^int nvme_get_features_lba_sts_interval(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_nopsc	src/nvme/ioctl.c	/^int nvme_get_features_nopsc(int fd, enum nvme_get_features_sel sel, __u32 *result)$/;"	f
nvme_get_features_num_queues	src/nvme/ioctl.c	/^int nvme_get_features_num_queues(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_plm_config	src/nvme/ioctl.c	/^int nvme_get_features_plm_config(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_plm_window	src/nvme/ioctl.c	/^int nvme_get_features_plm_window(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_power_mgmt	src/nvme/ioctl.c	/^int nvme_get_features_power_mgmt(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_resv_mask	src/nvme/ioctl.c	/^int nvme_get_features_resv_mask(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_resv_persist	src/nvme/ioctl.c	/^int nvme_get_features_resv_persist(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_rrl	src/nvme/ioctl.c	/^int nvme_get_features_rrl(int fd, enum nvme_get_features_sel sel, __u32 *result)$/;"	f
nvme_get_features_sanitize	src/nvme/ioctl.c	/^int nvme_get_features_sanitize(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_sel	src/nvme/types.h	/^enum nvme_get_features_sel {$/;"	g
nvme_get_features_simple	src/nvme/ioctl.h	/^static inline int nvme_get_features_simple(int fd, enum nvme_features_id fid,$/;"	f
nvme_get_features_sw_progress	src/nvme/ioctl.c	/^int nvme_get_features_sw_progress(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_temp_thresh	src/nvme/ioctl.c	/^int nvme_get_features_temp_thresh(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_timestamp	src/nvme/ioctl.c	/^int nvme_get_features_timestamp(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_volatile_wc	src/nvme/ioctl.c	/^int nvme_get_features_volatile_wc(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_write_atomic	src/nvme/ioctl.c	/^int nvme_get_features_write_atomic(int fd, enum nvme_get_features_sel sel,$/;"	f
nvme_get_features_write_protect	src/nvme/ioctl.c	/^int nvme_get_features_write_protect(int fd, __u32 nsid,$/;"	f
nvme_get_host_telemetry	src/nvme/linux.c	/^int nvme_get_host_telemetry(int fd, struct nvme_telemetry_log **log,$/;"	f
nvme_get_lba_status	src/nvme/ioctl.c	/^int nvme_get_lba_status(struct nvme_get_lba_status_args *args)$/;"	f
nvme_get_lba_status_args	src/nvme/api-types.h	/^struct nvme_get_lba_status_args {$/;"	s
nvme_get_lba_status_log	src/nvme/linux.c	/^int nvme_get_lba_status_log(int fd, bool rae, struct nvme_lba_status_log **log)$/;"	f
nvme_get_log	src/nvme/ioctl.c	/^int nvme_get_log(struct nvme_get_log_args *args)$/;"	f
nvme_get_log_ana	src/nvme/ioctl.h	/^static inline int nvme_get_log_ana(int fd, enum nvme_log_ana_lsp lsp, bool rae,$/;"	f
nvme_get_log_ana_groups	src/nvme/ioctl.h	/^static inline int nvme_get_log_ana_groups(int fd, bool rae, __u32 len,$/;"	f
nvme_get_log_args	src/nvme/api-types.h	/^struct nvme_get_log_args {$/;"	s
nvme_get_log_boot_partition	src/nvme/ioctl.h	/^static inline int nvme_get_log_boot_partition(int fd, bool rae,$/;"	f
nvme_get_log_changed_ns_list	src/nvme/ioctl.h	/^static inline int nvme_get_log_changed_ns_list(int fd, bool rae,$/;"	f
nvme_get_log_cmd_effects	src/nvme/ioctl.h	/^static inline int nvme_get_log_cmd_effects(int fd, enum nvme_csi csi,$/;"	f
nvme_get_log_create_telemetry_host	src/nvme/ioctl.h	/^static inline int nvme_get_log_create_telemetry_host(int fd,$/;"	f
nvme_get_log_device_self_test	src/nvme/ioctl.h	/^static inline int nvme_get_log_device_self_test(int fd,$/;"	f
nvme_get_log_discovery	src/nvme/ioctl.h	/^static inline int nvme_get_log_discovery(int fd, bool rae,$/;"	f
nvme_get_log_endurance_group	src/nvme/ioctl.h	/^static inline int nvme_get_log_endurance_group(int fd, __u16 endgid,$/;"	f
nvme_get_log_endurance_grp_evt	src/nvme/ioctl.h	/^static inline int nvme_get_log_endurance_grp_evt(int fd, bool rae,$/;"	f
nvme_get_log_error	src/nvme/ioctl.h	/^static inline int nvme_get_log_error(int fd, unsigned int nr_entries, bool rae,$/;"	f
nvme_get_log_fdp_configurations	src/nvme/ioctl.h	/^static inline int nvme_get_log_fdp_configurations(int fd, __u16 egid,$/;"	f
nvme_get_log_fdp_events	src/nvme/ioctl.h	/^static inline int nvme_get_log_fdp_events(int fd, __u16 egid, bool host_events, __u32 offset,$/;"	f
nvme_get_log_fdp_stats	src/nvme/ioctl.h	/^static inline int nvme_get_log_fdp_stats(int fd, __u16 egid, __u32 offset, __u32 len, void *log)$/;"	f
nvme_get_log_fid_supported_effects	src/nvme/ioctl.h	/^static inline int nvme_get_log_fid_supported_effects(int fd, bool rae,$/;"	f
nvme_get_log_fw_slot	src/nvme/ioctl.h	/^static inline int nvme_get_log_fw_slot(int fd, bool rae,$/;"	f
nvme_get_log_lba_status	src/nvme/ioctl.h	/^static inline int nvme_get_log_lba_status(int fd, bool rae,$/;"	f
nvme_get_log_media_unit_stat	src/nvme/ioctl.h	/^static inline int nvme_get_log_media_unit_stat(int fd, __u16 domid,$/;"	f
nvme_get_log_mi_cmd_supported_effects	src/nvme/ioctl.h	/^static inline int nvme_get_log_mi_cmd_supported_effects(int fd, bool rae,$/;"	f
nvme_get_log_page	src/nvme/ioctl.c	/^int nvme_get_log_page(int fd, __u32 xfer_len, struct nvme_get_log_args *args)$/;"	f
nvme_get_log_persistent_event	src/nvme/ioctl.h	/^static inline int nvme_get_log_persistent_event(int fd,$/;"	f
nvme_get_log_predictable_lat_event	src/nvme/ioctl.h	/^static inline int nvme_get_log_predictable_lat_event(int fd, bool rae,$/;"	f
nvme_get_log_predictable_lat_nvmset	src/nvme/ioctl.h	/^static inline int nvme_get_log_predictable_lat_nvmset(int fd, __u16 nvmsetid,$/;"	f
nvme_get_log_reclaim_unit_handle_usage	src/nvme/ioctl.h	/^static inline int nvme_get_log_reclaim_unit_handle_usage(int fd, __u16 egid,$/;"	f
nvme_get_log_reservation	src/nvme/ioctl.h	/^static inline int nvme_get_log_reservation(int fd, bool rae,$/;"	f
nvme_get_log_sanitize	src/nvme/ioctl.h	/^static inline int nvme_get_log_sanitize(int fd, bool rae,$/;"	f
nvme_get_log_simple	src/nvme/ioctl.h	/^static inline int nvme_get_log_simple(int fd, enum nvme_cmd_get_log_lid lid,$/;"	f
nvme_get_log_smart	src/nvme/ioctl.h	/^static inline int nvme_get_log_smart(int fd, __u32 nsid, bool rae,$/;"	f
nvme_get_log_support_cap_config_list	src/nvme/ioctl.h	/^static inline int nvme_get_log_support_cap_config_list(int fd, __u16 domid,$/;"	f
nvme_get_log_supported_log_pages	src/nvme/ioctl.h	/^static inline int nvme_get_log_supported_log_pages(int fd, bool rae,$/;"	f
nvme_get_log_telemetry_ctrl	src/nvme/ioctl.h	/^static inline int nvme_get_log_telemetry_ctrl(int fd, bool rae,$/;"	f
nvme_get_log_telemetry_host	src/nvme/ioctl.h	/^static inline int nvme_get_log_telemetry_host(int fd, __u64 offset,$/;"	f
nvme_get_log_zns_changed_zones	src/nvme/ioctl.h	/^static inline int nvme_get_log_zns_changed_zones(int fd, __u32 nsid, bool rae,$/;"	f
nvme_get_logical_block_size	src/nvme/linux.c	/^int nvme_get_logical_block_size(int fd, __u32 nsid, int *blksize)$/;"	f
nvme_get_new_host_telemetry	src/nvme/linux.c	/^int nvme_get_new_host_telemetry(int fd, struct nvme_telemetry_log **log,$/;"	f
nvme_get_ns_attr	src/nvme/linux.c	/^char *nvme_get_ns_attr(nvme_ns_t n, const char *attr)$/;"	f
nvme_get_nsid	src/nvme/ioctl.c	/^int nvme_get_nsid(int fd, __u32 *nsid)$/;"	f
nvme_get_nsid_log	src/nvme/ioctl.h	/^static inline int nvme_get_nsid_log(int fd, bool rae,$/;"	f
nvme_get_path_attr	src/nvme/linux.c	/^char *nvme_get_path_attr(nvme_path_t p, const char *attr)$/;"	f
nvme_get_property	src/nvme/ioctl.c	/^int nvme_get_property(struct nvme_get_property_args *args)$/;"	f
nvme_get_property_args	src/nvme/api-types.h	/^struct nvme_get_property_args {$/;"	s
nvme_get_subsys_attr	src/nvme/linux.c	/^char *nvme_get_subsys_attr(nvme_subsystem_t s, const char *attr)$/;"	f
nvme_get_telemetry_log	src/nvme/linux.c	/^static int nvme_get_telemetry_log(int fd, bool create, bool ctrl, bool rae,$/;"	f	file:
nvme_get_version	src/nvme/util.c	/^const char *nvme_get_version(enum nvme_version type)$/;"	f
nvme_hmac_alg	src/nvme/linux.h	/^enum nvme_hmac_alg {$/;"	g
nvme_host	src/nvme/private.h	/^struct nvme_host {$/;"	s
nvme_host_behavior_support	src/nvme/types.h	/^enum nvme_host_behavior_support {$/;"	g
nvme_host_get_dhchap_key	src/nvme/tree.c	/^const char *nvme_host_get_dhchap_key(nvme_host_t h)$/;"	f
nvme_host_get_hostid	src/nvme/tree.c	/^const char *nvme_host_get_hostid(nvme_host_t h)$/;"	f
nvme_host_get_hostnqn	src/nvme/tree.c	/^const char *nvme_host_get_hostnqn(nvme_host_t h)$/;"	f
nvme_host_get_hostsymname	src/nvme/tree.c	/^const char *nvme_host_get_hostsymname(nvme_host_t h)$/;"	f
nvme_host_get_root	src/nvme/tree.c	/^nvme_root_t nvme_host_get_root(nvme_host_t h)$/;"	f
nvme_host_is_pdc_enabled	src/nvme/tree.c	/^bool nvme_host_is_pdc_enabled(nvme_host_t h, bool fallback)$/;"	f
nvme_host_mem_buf_attrs	src/nvme/types.h	/^struct nvme_host_mem_buf_attrs {$/;"	s
nvme_host_metadata	src/nvme/types.h	/^struct nvme_host_metadata {$/;"	s
nvme_host_release_fds	src/nvme/tree.c	/^void nvme_host_release_fds(struct nvme_host *h)$/;"	f
nvme_host_set_dhchap_key	src/nvme/tree.c	/^void nvme_host_set_dhchap_key(nvme_host_t h, const char *key)$/;"	f
nvme_host_set_hostsymname	src/nvme/tree.c	/^void nvme_host_set_hostsymname(nvme_host_t h, const char *hostsymname)$/;"	f
nvme_host_set_pdc_enabled	src/nvme/tree.c	/^void nvme_host_set_pdc_enabled(nvme_host_t h, bool enabled)$/;"	f
nvme_host_t	src/nvme/tree.h	/^typedef struct nvme_host *nvme_host_t;$/;"	t	typeref:struct:nvme_host
nvme_id_ctrl	src/nvme/types.h	/^struct nvme_id_ctrl {$/;"	s
nvme_id_ctrl_anacap	src/nvme/types.h	/^enum nvme_id_ctrl_anacap {$/;"	g
nvme_id_ctrl_apsta	src/nvme/types.h	/^enum nvme_id_ctrl_apsta {$/;"	g
nvme_id_ctrl_avscc	src/nvme/types.h	/^enum nvme_id_ctrl_avscc {$/;"	g
nvme_id_ctrl_cmic	src/nvme/types.h	/^enum nvme_id_ctrl_cmic {$/;"	g
nvme_id_ctrl_cntrltype	src/nvme/types.h	/^enum nvme_id_ctrl_cntrltype {$/;"	g
nvme_id_ctrl_cqes	src/nvme/types.h	/^enum nvme_id_ctrl_cqes {$/;"	g
nvme_id_ctrl_ctratt	src/nvme/types.h	/^enum nvme_id_ctrl_ctratt {$/;"	g
nvme_id_ctrl_dctype	src/nvme/types.h	/^enum nvme_id_ctrl_dctype {$/;"	g
nvme_id_ctrl_dsto	src/nvme/types.h	/^enum nvme_id_ctrl_dsto {$/;"	g
nvme_id_ctrl_fcatt	src/nvme/types.h	/^enum nvme_id_ctrl_fcatt {$/;"	g
nvme_id_ctrl_fna	src/nvme/types.h	/^enum nvme_id_ctrl_fna {$/;"	g
nvme_id_ctrl_frmw	src/nvme/types.h	/^enum nvme_id_ctrl_frmw {$/;"	g
nvme_id_ctrl_fuses	src/nvme/types.h	/^enum nvme_id_ctrl_fuses {$/;"	g
nvme_id_ctrl_hctm	src/nvme/types.h	/^enum nvme_id_ctrl_hctm {$/;"	g
nvme_id_ctrl_lpa	src/nvme/types.h	/^enum nvme_id_ctrl_lpa {$/;"	g
nvme_id_ctrl_mec	src/nvme/types.h	/^enum nvme_id_ctrl_mec {$/;"	g
nvme_id_ctrl_nvm	src/nvme/types.h	/^struct nvme_id_ctrl_nvm {$/;"	s
nvme_id_ctrl_nvmsr	src/nvme/types.h	/^enum nvme_id_ctrl_nvmsr {$/;"	g
nvme_id_ctrl_nvscc	src/nvme/types.h	/^enum nvme_id_ctrl_nvscc {$/;"	g
nvme_id_ctrl_nwpc	src/nvme/types.h	/^enum nvme_id_ctrl_nwpc {$/;"	g
nvme_id_ctrl_oacs	src/nvme/types.h	/^enum nvme_id_ctrl_oacs {$/;"	g
nvme_id_ctrl_oaes	src/nvme/types.h	/^enum nvme_id_ctrl_oaes {$/;"	g
nvme_id_ctrl_ofcs	src/nvme/types.h	/^enum nvme_id_ctrl_ofcs {$/;"	g
nvme_id_ctrl_oncs	src/nvme/types.h	/^enum nvme_id_ctrl_oncs {$/;"	g
nvme_id_ctrl_rpmbs	src/nvme/types.h	/^enum nvme_id_ctrl_rpmbs {$/;"	g
nvme_id_ctrl_sanicap	src/nvme/types.h	/^enum nvme_id_ctrl_sanicap {$/;"	g
nvme_id_ctrl_sgls	src/nvme/types.h	/^enum nvme_id_ctrl_sgls {$/;"	g
nvme_id_ctrl_sqes	src/nvme/types.h	/^enum nvme_id_ctrl_sqes {$/;"	g
nvme_id_ctrl_vwc	src/nvme/types.h	/^enum nvme_id_ctrl_vwc {$/;"	g
nvme_id_ctrl_vwci	src/nvme/types.h	/^enum nvme_id_ctrl_vwci {$/;"	g
nvme_id_directives	src/nvme/types.h	/^struct nvme_id_directives {$/;"	s
nvme_id_domain_attr	src/nvme/types.h	/^struct nvme_id_domain_attr {$/;"	s
nvme_id_domain_list	src/nvme/types.h	/^struct nvme_id_domain_list {$/;"	s
nvme_id_endurance_group_list	src/nvme/types.h	/^struct nvme_id_endurance_group_list {$/;"	s
nvme_id_independent_id_ns	src/nvme/types.h	/^struct nvme_id_independent_id_ns {$/;"	s
nvme_id_iocs	src/nvme/types.h	/^struct nvme_id_iocs {$/;"	s
nvme_id_ns	src/nvme/types.h	/^struct nvme_id_ns {$/;"	s
nvme_id_ns_attr	src/nvme/types.h	/^enum nvme_id_ns_attr {$/;"	g
nvme_id_ns_dlfeat	src/nvme/types.h	/^enum nvme_id_ns_dlfeat {$/;"	g
nvme_id_ns_dpc	src/nvme/types.h	/^enum nvme_id_ns_dpc {$/;"	g
nvme_id_ns_dps	src/nvme/types.h	/^enum nvme_id_ns_dps {$/;"	g
nvme_id_ns_flbas	src/nvme/types.h	/^enum nvme_id_ns_flbas {$/;"	g
nvme_id_ns_flbas_to_lbaf_inuse	src/nvme/util.h	/^static inline void nvme_id_ns_flbas_to_lbaf_inuse(__u8 flbas, __u8 *lbaf_inuse)$/;"	f
nvme_id_ns_granularity_desc	src/nvme/types.h	/^struct nvme_id_ns_granularity_desc {$/;"	s
nvme_id_ns_granularity_list	src/nvme/types.h	/^struct nvme_id_ns_granularity_list {$/;"	s
nvme_id_ns_mc	src/nvme/types.h	/^enum nvme_id_ns_mc {$/;"	g
nvme_id_ns_nmic	src/nvme/types.h	/^enum nvme_id_ns_nmic {$/;"	g
nvme_id_ns_rescap	src/nvme/types.h	/^enum nvme_id_ns_rescap {$/;"	g
nvme_id_nsfeat	src/nvme/types.h	/^enum nvme_id_nsfeat {$/;"	g
nvme_id_nvmset_list	src/nvme/types.h	/^struct nvme_id_nvmset_list {$/;"	s
nvme_id_psd	src/nvme/types.h	/^struct nvme_id_psd {$/;"	s
nvme_id_uuid	src/nvme/types.h	/^enum nvme_id_uuid {$/;"	g
nvme_id_uuid_list	src/nvme/types.h	/^struct nvme_id_uuid_list {$/;"	s
nvme_id_uuid_list_entry	src/nvme/types.h	/^struct nvme_id_uuid_list_entry {$/;"	s
nvme_identify	src/nvme/ioctl.c	/^int nvme_identify(struct nvme_identify_args *args)$/;"	f
nvme_identify_active_ns_list	src/nvme/ioctl.h	/^static inline int nvme_identify_active_ns_list(int fd, __u32 nsid,$/;"	f
nvme_identify_active_ns_list_csi	src/nvme/ioctl.h	/^static inline int nvme_identify_active_ns_list_csi(int fd, __u32 nsid,$/;"	f
nvme_identify_allocated_ns	src/nvme/ioctl.h	/^static inline int nvme_identify_allocated_ns(int fd, __u32 nsid,$/;"	f
nvme_identify_allocated_ns_list	src/nvme/ioctl.h	/^static inline int nvme_identify_allocated_ns_list(int fd, __u32 nsid,$/;"	f
nvme_identify_allocated_ns_list_csi	src/nvme/ioctl.h	/^static inline int nvme_identify_allocated_ns_list_csi(int fd, __u32 nsid,$/;"	f
nvme_identify_args	src/nvme/api-types.h	/^struct nvme_identify_args {$/;"	s
nvme_identify_cns	src/nvme/types.h	/^enum nvme_identify_cns {$/;"	g
nvme_identify_cns_nsid	src/nvme/ioctl.h	/^static inline int nvme_identify_cns_nsid(int fd, enum nvme_identify_cns cns,$/;"	f
nvme_identify_ctrl	src/nvme/ioctl.h	/^static inline int nvme_identify_ctrl(int fd, struct nvme_id_ctrl *id)$/;"	f
nvme_identify_ctrl_csi	src/nvme/ioctl.h	/^static inline int nvme_identify_ctrl_csi(int fd, enum nvme_csi csi, void *data)$/;"	f
nvme_identify_ctrl_list	src/nvme/ioctl.h	/^static inline int nvme_identify_ctrl_list(int fd, __u16 cntid,$/;"	f
nvme_identify_domain_list	src/nvme/ioctl.h	/^static inline int nvme_identify_domain_list(int fd, __u16 domid,$/;"	f
nvme_identify_endurance_group_list	src/nvme/ioctl.h	/^static inline int nvme_identify_endurance_group_list(int fd, __u16 endgrp_id,$/;"	f
nvme_identify_independent_identify_ns	src/nvme/ioctl.h	/^static inline int nvme_identify_independent_identify_ns(int fd, __u32 nsid,$/;"	f
nvme_identify_iocs	src/nvme/ioctl.h	/^static inline int nvme_identify_iocs(int fd, __u16 cntlid,$/;"	f
nvme_identify_iocs_ns_csi_user_data_format	src/nvme/ioctl.h	/^static inline int nvme_identify_iocs_ns_csi_user_data_format(int fd,$/;"	f
nvme_identify_ns	src/nvme/ioctl.h	/^static inline int nvme_identify_ns(int fd, __u32 nsid, struct nvme_id_ns *ns)$/;"	f
nvme_identify_ns_csi	src/nvme/ioctl.h	/^static inline int nvme_identify_ns_csi(int fd, __u32 nsid, __u8 uuidx,$/;"	f
nvme_identify_ns_csi_user_data_format	src/nvme/ioctl.h	/^static inline int nvme_identify_ns_csi_user_data_format(int fd,$/;"	f
nvme_identify_ns_descs	src/nvme/ioctl.h	/^static inline int nvme_identify_ns_descs(int fd, __u32 nsid,$/;"	f
nvme_identify_ns_granularity	src/nvme/ioctl.h	/^static inline int nvme_identify_ns_granularity(int fd,$/;"	f
nvme_identify_nsid_ctrl_list	src/nvme/ioctl.h	/^static inline int nvme_identify_nsid_ctrl_list(int fd, __u32 nsid, __u16 cntid,$/;"	f
nvme_identify_nvmset_list	src/nvme/ioctl.h	/^static inline int nvme_identify_nvmset_list(int fd, __u16 nvmsetid,$/;"	f
nvme_identify_primary_ctrl	src/nvme/ioctl.h	/^static inline int nvme_identify_primary_ctrl(int fd, __u16 cntid,$/;"	f
nvme_identify_secondary_ctrl_list	src/nvme/ioctl.h	/^static inline int nvme_identify_secondary_ctrl_list(int fd, __u32 nsid,$/;"	f
nvme_identify_uuid	src/nvme/ioctl.h	/^static inline int nvme_identify_uuid(int fd, struct nvme_id_uuid_list *uuid_list)$/;"	f
nvme_init_copy_range	src/nvme/util.c	/^void nvme_init_copy_range(struct nvme_copy_range *copy, __u16 *nlbs,$/;"	f
nvme_init_copy_range_f1	src/nvme/util.c	/^void nvme_init_copy_range_f1(struct nvme_copy_range_f1 *copy, __u16 *nlbs,$/;"	f
nvme_init_ctrl	src/nvme/tree.c	/^int nvme_init_ctrl(nvme_host_t h, nvme_ctrl_t c, int instance)$/;"	f
nvme_init_ctrl_list	src/nvme/util.c	/^void nvme_init_ctrl_list(struct nvme_ctrl_list *cntlist, __u16 num_ctrls,$/;"	f
nvme_init_dsm_range	src/nvme/util.c	/^void nvme_init_dsm_range(struct nvme_dsm_range *dsm, __u32 *ctx_attrs,$/;"	f
nvme_init_logging	src/nvme/log.c	/^void nvme_init_logging(nvme_root_t r, int lvl, bool log_pid, bool log_tstamp)$/;"	f
nvme_init_subsystem	src/nvme/tree.c	/^static int nvme_init_subsystem(nvme_subsystem_t s, const char *name)$/;"	f	file:
nvme_insert_tls_key	src/nvme/linux.c	/^long nvme_insert_tls_key(const char *keyring, const char *key_type,$/;"	f
nvme_io	src/nvme/ioctl.c	/^int nvme_io(struct nvme_io_args *args, __u8 opcode)$/;"	f
nvme_io_args	src/nvme/api-types.h	/^struct nvme_io_args {$/;"	s
nvme_io_control_flags	src/nvme/types.h	/^enum nvme_io_control_flags {$/;"	g
nvme_io_dsm_flags	src/nvme/types.h	/^enum nvme_io_dsm_flags {$/;"	g
nvme_io_mgmt_recv	src/nvme/ioctl.c	/^int nvme_io_mgmt_recv(struct nvme_io_mgmt_recv_args *args)$/;"	f
nvme_io_mgmt_recv_args	src/nvme/api-types.h	/^struct nvme_io_mgmt_recv_args {$/;"	s
nvme_io_mgmt_recv_mo	src/nvme/types.h	/^enum nvme_io_mgmt_recv_mo {$/;"	g
nvme_io_mgmt_send	src/nvme/ioctl.c	/^int nvme_io_mgmt_send(struct nvme_io_mgmt_send_args *args)$/;"	f
nvme_io_mgmt_send_args	src/nvme/api-types.h	/^struct nvme_io_mgmt_send_args {$/;"	s
nvme_io_mgmt_send_mo	src/nvme/types.h	/^enum nvme_io_mgmt_send_mo {$/;"	g
nvme_io_opcode	src/nvme/types.h	/^enum nvme_io_opcode {$/;"	g
nvme_io_passthru	src/nvme/ioctl.c	/^int nvme_io_passthru(int fd, __u8 opcode, __u8 flags, __u16 rsvd,$/;"	f
nvme_io_passthru64	src/nvme/ioctl.c	/^int nvme_io_passthru64(int fd, __u8 opcode, __u8 flags, __u16 rsvd,$/;"	f
nvme_ipaddrs_eq	src/nvme/util.c	/^bool nvme_ipaddrs_eq(const char *addr1, const char *addr2)$/;"	f
nvme_is_64bit_reg	src/nvme/types.h	/^static inline bool nvme_is_64bit_reg(__u32 offset)$/;"	f
nvme_lba_range_type	src/nvme/types.h	/^struct nvme_lba_range_type {$/;"	s
nvme_lba_range_type_entry	src/nvme/types.h	/^struct nvme_lba_range_type_entry {$/;"	s
nvme_lba_rd	src/nvme/types.h	/^struct nvme_lba_rd {$/;"	s
nvme_lba_status	src/nvme/types.h	/^struct nvme_lba_status {$/;"	s
nvme_lba_status_atype	src/nvme/types.h	/^enum nvme_lba_status_atype {$/;"	g
nvme_lba_status_desc	src/nvme/types.h	/^struct nvme_lba_status_desc {$/;"	s
nvme_lba_status_log	src/nvme/types.h	/^struct nvme_lba_status_log {$/;"	s
nvme_lbaf	src/nvme/types.h	/^struct nvme_lbaf {$/;"	s
nvme_lbaf_rp	src/nvme/types.h	/^enum nvme_lbaf_rp {$/;"	g
nvme_lbart	src/nvme/types.h	/^enum nvme_lbart {$/;"	g
nvme_lbas_ns_element	src/nvme/types.h	/^struct nvme_lbas_ns_element {$/;"	s
nvme_lockdown	src/nvme/ioctl.c	/^int nvme_lockdown(struct nvme_lockdown_args *args)$/;"	f
nvme_lockdown_args	src/nvme/api-types.h	/^struct nvme_lockdown_args {$/;"	s
nvme_log_ana_lsp	src/nvme/types.h	/^enum nvme_log_ana_lsp {$/;"	g
nvme_lookup_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_lookup_ctrl(nvme_subsystem_t s, const char *transport,$/;"	f
nvme_lookup_host	src/nvme/tree.c	/^struct nvme_host *nvme_lookup_host(nvme_root_t r, const char *hostnqn,$/;"	f
nvme_lookup_key	src/nvme/linux.c	/^long nvme_lookup_key(const char *type, const char *identity)$/;"	f
nvme_lookup_keyring	src/nvme/linux.c	/^long nvme_lookup_keyring(const char *keyring)$/;"	f
nvme_lookup_subsystem	src/nvme/tree.c	/^struct nvme_subsystem *nvme_lookup_subsystem(struct nvme_host *h,$/;"	f
nvme_match_subsysnqn_filter	test/test.c	/^static bool nvme_match_subsysnqn_filter(nvme_subsystem_t s,$/;"	f	file:
nvme_media_unit_config_desc	src/nvme/types.h	/^struct nvme_media_unit_config_desc {$/;"	s
nvme_media_unit_stat_desc	src/nvme/types.h	/^struct nvme_media_unit_stat_desc {$/;"	s
nvme_media_unit_stat_log	src/nvme/types.h	/^struct nvme_media_unit_stat_log {$/;"	s
nvme_metadata_element_desc	src/nvme/types.h	/^struct nvme_metadata_element_desc {$/;"	s
nvme_mi_admin_admin_passthru	src/nvme/mi.c	/^int nvme_mi_admin_admin_passthru(nvme_mi_ctrl_t ctrl, __u8 opcode, __u8 flags,$/;"	f
nvme_mi_admin_format_nvm	src/nvme/mi.c	/^int nvme_mi_admin_format_nvm(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_fw_commit	src/nvme/mi.c	/^int nvme_mi_admin_fw_commit(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_fw_download	src/nvme/mi.c	/^int nvme_mi_admin_fw_download(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_features	src/nvme/mi.c	/^int nvme_mi_admin_get_features(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_features_data	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_features_data(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_features_simple	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_features_simple(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log	src/nvme/mi.c	/^int nvme_mi_admin_get_log(nvme_mi_ctrl_t ctrl, struct nvme_get_log_args *args)$/;"	f
nvme_mi_admin_get_log_ana	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_ana(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_ana_groups	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_ana_groups(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_boot_partition	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_boot_partition(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_changed_ns_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_changed_ns_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_cmd_effects	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_cmd_effects(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_create_telemetry_host	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_create_telemetry_host(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_device_self_test	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_device_self_test(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_discovery	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_discovery(nvme_mi_ctrl_t ctrl, bool rae,$/;"	f
nvme_mi_admin_get_log_endurance_group	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_endurance_group(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_endurance_grp_evt	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_endurance_grp_evt(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_error	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_error(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_fid_supported_effects	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_fid_supported_effects(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_fw_slot	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_fw_slot(nvme_mi_ctrl_t ctrl, bool rae,$/;"	f
nvme_mi_admin_get_log_lba_status	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_lba_status(nvme_mi_ctrl_t ctrl, bool rae,$/;"	f
nvme_mi_admin_get_log_media_unit_stat	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_media_unit_stat(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_mi_cmd_supported_effects	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_mi_cmd_supported_effects(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_page	src/nvme/mi.c	/^int nvme_mi_admin_get_log_page(nvme_mi_ctrl_t ctrl, __u32 xfer_size,$/;"	f
nvme_mi_admin_get_log_persistent_event	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_persistent_event(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_predictable_lat_event	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_predictable_lat_event(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_predictable_lat_nvmset	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_predictable_lat_nvmset(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_reservation	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_reservation(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_sanitize	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_sanitize(nvme_mi_ctrl_t ctrl, bool rae,$/;"	f
nvme_mi_admin_get_log_simple	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_simple(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_smart	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_smart(nvme_mi_ctrl_t ctrl, __u32 nsid,$/;"	f
nvme_mi_admin_get_log_support_cap_config_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_support_cap_config_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_supported_log_pages	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_supported_log_pages(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_telemetry_ctrl	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_telemetry_ctrl(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_telemetry_host	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_telemetry_host(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_log_zns_changed_zones	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_log_zns_changed_zones(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_get_nsid_log	src/nvme/mi.h	/^static inline int nvme_mi_admin_get_nsid_log(nvme_mi_ctrl_t ctrl, bool rae,$/;"	f
nvme_mi_admin_identify	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_active_ns_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_active_ns_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_allocated_ns	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_allocated_ns(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_allocated_ns_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_allocated_ns_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_cns_nsid	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_cns_nsid(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_ctrl	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_ctrl(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_ctrl_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_ctrl_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_ns	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_ns(nvme_mi_ctrl_t ctrl, __u32 nsid,$/;"	f
nvme_mi_admin_identify_ns_descs	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_ns_descs(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_nsid_ctrl_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_nsid_ctrl_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_partial	src/nvme/mi.c	/^int nvme_mi_admin_identify_partial(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_primary_ctrl	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_primary_ctrl(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_identify_secondary_ctrl_list	src/nvme/mi.h	/^static inline int nvme_mi_admin_identify_secondary_ctrl_list(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_init_req	src/nvme/mi.c	/^static void nvme_mi_admin_init_req(struct nvme_mi_req *req,$/;"	f	file:
nvme_mi_admin_init_resp	src/nvme/mi.c	/^static void nvme_mi_admin_init_resp(struct nvme_mi_resp *resp,$/;"	f	file:
nvme_mi_admin_ns_attach	src/nvme/mi.c	/^int nvme_mi_admin_ns_attach(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_ns_attach_ctrls	src/nvme/mi.h	/^static inline int nvme_mi_admin_ns_attach_ctrls(nvme_mi_ctrl_t ctrl, __u32 nsid,$/;"	f
nvme_mi_admin_ns_detach_ctrls	src/nvme/mi.h	/^static inline int nvme_mi_admin_ns_detach_ctrls(nvme_mi_ctrl_t ctrl, __u32 nsid,$/;"	f
nvme_mi_admin_ns_mgmt	src/nvme/mi.c	/^int nvme_mi_admin_ns_mgmt(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_ns_mgmt_create	src/nvme/mi.h	/^static inline int nvme_mi_admin_ns_mgmt_create(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_ns_mgmt_delete	src/nvme/mi.h	/^static inline int nvme_mi_admin_ns_mgmt_delete(nvme_mi_ctrl_t ctrl, __u32 nsid)$/;"	f
nvme_mi_admin_parse_status	src/nvme/mi.c	/^static int nvme_mi_admin_parse_status(struct nvme_mi_resp *resp, __u32 *result)$/;"	f	file:
nvme_mi_admin_req_hdr	src/nvme/mi.h	/^struct nvme_mi_admin_req_hdr {$/;"	s
nvme_mi_admin_resp_hdr	src/nvme/mi.h	/^struct nvme_mi_admin_resp_hdr {$/;"	s
nvme_mi_admin_sanitize_nvm	src/nvme/mi.c	/^int nvme_mi_admin_sanitize_nvm(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_security_recv	src/nvme/mi.c	/^int nvme_mi_admin_security_recv(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_security_send	src/nvme/mi.c	/^int nvme_mi_admin_security_send(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_set_features	src/nvme/mi.c	/^int nvme_mi_admin_set_features(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_admin_xfer	src/nvme/mi.c	/^int nvme_mi_admin_xfer(nvme_mi_ctrl_t ctrl,$/;"	f
nvme_mi_calc_req_mic	src/nvme/mi.c	/^static void nvme_mi_calc_req_mic(struct nvme_mi_req *req)$/;"	f	file:
nvme_mi_ccs	src/nvme/types.h	/^enum nvme_mi_ccs {$/;"	g
nvme_mi_close	src/nvme/mi.c	/^void nvme_mi_close(nvme_mi_ep_t ep)$/;"	f
nvme_mi_close_ctrl	src/nvme/mi.c	/^void nvme_mi_close_ctrl(nvme_mi_ctrl_t ctrl)$/;"	f
nvme_mi_cmd_supported_effects	src/nvme/types.h	/^enum nvme_mi_cmd_supported_effects {$/;"	g
nvme_mi_cmd_supported_effects_log	src/nvme/types.h	/^struct nvme_mi_cmd_supported_effects_log {$/;"	s
nvme_mi_compare_vid_mn	src/nvme/mi.c	/^static bool nvme_mi_compare_vid_mn(struct nvme_mi_ep *ep,$/;"	f	file:
nvme_mi_config_id	src/nvme/mi.h	/^enum nvme_mi_config_id {$/;"	g
nvme_mi_config_smbus_freq	src/nvme/mi.h	/^enum nvme_mi_config_smbus_freq {$/;"	g
nvme_mi_crc32_update	src/nvme/mi.c	/^__u32 nvme_mi_crc32_update(__u32 crc, void *data, size_t len)$/;"	f
nvme_mi_create_root	src/nvme/mi.c	/^nvme_root_t nvme_mi_create_root(FILE *fp, int log_level)$/;"	f
nvme_mi_css	src/nvme/types.h	5556;"	d
nvme_mi_csts	src/nvme/types.h	/^enum nvme_mi_csts {$/;"	g
nvme_mi_ctrl	src/nvme/private.h	/^struct nvme_mi_ctrl {$/;"	s
nvme_mi_ctrl_health_status	src/nvme/types.h	/^struct nvme_mi_ctrl_health_status {$/;"	s
nvme_mi_ctrl_id	src/nvme/mi.c	/^__u16 nvme_mi_ctrl_id(nvme_mi_ctrl_t ctrl)$/;"	f
nvme_mi_ctrl_t	src/nvme/mi.h	/^typedef struct nvme_mi_ctrl * nvme_mi_ctrl_t;$/;"	t	typeref:struct:nvme_mi_ctrl
nvme_mi_cwarn	src/nvme/types.h	/^enum nvme_mi_cwarn {$/;"	g
nvme_mi_dtyp	src/nvme/mi.h	/^enum nvme_mi_dtyp {$/;"	g
nvme_mi_dtyp_ctrl_info	src/nvme/mi.h	/^	nvme_mi_dtyp_ctrl_info = 0x03,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_dtyp_ctrl_list	src/nvme/mi.h	/^	nvme_mi_dtyp_ctrl_list = 0x02,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_dtyp_meb_support	src/nvme/mi.h	/^	nvme_mi_dtyp_meb_support = 0x05,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_dtyp_opt_cmd_support	src/nvme/mi.h	/^	nvme_mi_dtyp_opt_cmd_support = 0x04,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_dtyp_port_info	src/nvme/mi.h	/^	nvme_mi_dtyp_port_info = 0x01,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_dtyp_subsys_info	src/nvme/mi.h	/^	nvme_mi_dtyp_subsys_info = 0x00,$/;"	e	enum:nvme_mi_dtyp
nvme_mi_elem	src/nvme/types.h	/^enum nvme_mi_elem {$/;"	g
nvme_mi_endpoint_desc	src/nvme/mi.c	/^char *nvme_mi_endpoint_desc(nvme_mi_ep_t ep)$/;"	f
nvme_mi_ep	src/nvme/private.h	/^struct nvme_mi_ep {$/;"	s
nvme_mi_ep_get_timeout	src/nvme/mi.c	/^unsigned int nvme_mi_ep_get_timeout(nvme_mi_ep_t ep)$/;"	f
nvme_mi_ep_has_quirk	src/nvme/mi.c	/^static bool nvme_mi_ep_has_quirk(nvme_mi_ep_t ep, unsigned long quirk)$/;"	f	file:
nvme_mi_ep_probe	src/nvme/mi.c	/^void nvme_mi_ep_probe(struct nvme_mi_ep *ep)$/;"	f
nvme_mi_ep_set_mprt_max	src/nvme/mi.c	/^void nvme_mi_ep_set_mprt_max(nvme_mi_ep_t ep, unsigned int mprt_max_ms)$/;"	f
nvme_mi_ep_set_timeout	src/nvme/mi.c	/^int nvme_mi_ep_set_timeout(nvme_mi_ep_t ep, unsigned int timeout_ms)$/;"	f
nvme_mi_ep_t	src/nvme/mi.h	/^typedef struct nvme_mi_ep * nvme_mi_ep_t;$/;"	t	typeref:struct:nvme_mi_ep
nvme_mi_first_ctrl	src/nvme/mi.c	/^nvme_mi_ctrl_t nvme_mi_first_ctrl(nvme_mi_ep_t ep)$/;"	f
nvme_mi_first_endpoint	src/nvme/mi.c	/^nvme_mi_ep_t nvme_mi_first_endpoint(nvme_root_t m)$/;"	f
nvme_mi_for_each_ctrl	src/nvme/mi.h	555;"	d
nvme_mi_for_each_ctrl_safe	src/nvme/mi.h	573;"	d
nvme_mi_for_each_endpoint	src/nvme/mi.h	463;"	d
nvme_mi_for_each_endpoint_safe	src/nvme/mi.h	474;"	d
nvme_mi_format_mn	src/nvme/mi.c	122;"	d	file:
nvme_mi_free_root	src/nvme/mi.c	/^void nvme_mi_free_root(nvme_root_t root)$/;"	f
nvme_mi_init_ctrl	src/nvme/mi.c	/^struct nvme_mi_ctrl *nvme_mi_init_ctrl(nvme_mi_ep_t ep, __u16 ctrl_id)$/;"	f
nvme_mi_init_ep	src/nvme/mi.c	/^struct nvme_mi_ep *nvme_mi_init_ep(nvme_root_t root)$/;"	f
nvme_mi_insert_delay	src/nvme/mi.c	/^static void nvme_mi_insert_delay(struct nvme_mi_ep *ep)$/;"	f	file:
nvme_mi_mctp_add	src/nvme/mi-mctp.c	/^static int nvme_mi_mctp_add(nvme_root_t root, unsigned int netid, __u8 eid)$/;"	f	file:
nvme_mi_mctp_close	src/nvme/mi-mctp.c	/^static void nvme_mi_mctp_close(struct nvme_mi_ep *ep)$/;"	f	file:
nvme_mi_mctp_desc_ep	src/nvme/mi-mctp.c	/^static int nvme_mi_mctp_desc_ep(struct nvme_mi_ep *ep, char *buf, size_t len)$/;"	f	file:
nvme_mi_mctp_resp_is_mpr	src/nvme/mi-mctp.c	/^static bool nvme_mi_mctp_resp_is_mpr(void *buf, size_t len,$/;"	f	file:
nvme_mi_mctp_submit	src/nvme/mi-mctp.c	/^static int nvme_mi_mctp_submit(struct nvme_mi_ep *ep,$/;"	f	file:
nvme_mi_mctp_tag_alloc	src/nvme/mi-mctp.c	/^static __u8 nvme_mi_mctp_tag_alloc(struct nvme_mi_ep *ep)$/;"	f	file:
nvme_mi_mctp_tag_drop	src/nvme/mi-mctp.c	/^static void nvme_mi_mctp_tag_drop(struct nvme_mi_ep *ep, __u8 tag)$/;"	f	file:
nvme_mi_message_type	src/nvme/mi.h	/^enum nvme_mi_message_type {$/;"	g
nvme_mi_mi_config_get	src/nvme/mi.c	/^int nvme_mi_mi_config_get(nvme_mi_ep_t ep, __u32 dw0, __u32 dw1,$/;"	f
nvme_mi_mi_config_get_mctp_mtu	src/nvme/mi.h	/^static inline int nvme_mi_mi_config_get_mctp_mtu(nvme_mi_ep_t ep, __u8 port,$/;"	f
nvme_mi_mi_config_get_smbus_freq	src/nvme/mi.h	/^static inline int nvme_mi_mi_config_get_smbus_freq(nvme_mi_ep_t ep, __u8 port,$/;"	f
nvme_mi_mi_config_set	src/nvme/mi.c	/^int nvme_mi_mi_config_set(nvme_mi_ep_t ep, __u32 dw0, __u32 dw1)$/;"	f
nvme_mi_mi_config_set_health_status_change	src/nvme/mi.h	/^static inline int nvme_mi_mi_config_set_health_status_change(nvme_mi_ep_t ep,$/;"	f
nvme_mi_mi_config_set_mctp_mtu	src/nvme/mi.h	/^static inline int nvme_mi_mi_config_set_mctp_mtu(nvme_mi_ep_t ep, __u8 port,$/;"	f
nvme_mi_mi_config_set_smbus_freq	src/nvme/mi.h	/^static inline int nvme_mi_mi_config_set_smbus_freq(nvme_mi_ep_t ep, __u8 port,$/;"	f
nvme_mi_mi_opcode	src/nvme/mi.h	/^enum nvme_mi_mi_opcode {$/;"	g
nvme_mi_mi_opcode_configuration_get	src/nvme/mi.h	/^	nvme_mi_mi_opcode_configuration_get = 0x04,$/;"	e	enum:nvme_mi_mi_opcode
nvme_mi_mi_opcode_configuration_set	src/nvme/mi.h	/^	nvme_mi_mi_opcode_configuration_set = 0x03,$/;"	e	enum:nvme_mi_mi_opcode
nvme_mi_mi_opcode_mi_data_read	src/nvme/mi.h	/^	nvme_mi_mi_opcode_mi_data_read = 0x00,$/;"	e	enum:nvme_mi_mi_opcode
nvme_mi_mi_opcode_subsys_health_status_poll	src/nvme/mi.h	/^	nvme_mi_mi_opcode_subsys_health_status_poll = 0x01,$/;"	e	enum:nvme_mi_mi_opcode
nvme_mi_mi_read_mi_data_ctrl	src/nvme/mi.c	/^int nvme_mi_mi_read_mi_data_ctrl(nvme_mi_ep_t ep, __u16 ctrl_id,$/;"	f
nvme_mi_mi_read_mi_data_ctrl_list	src/nvme/mi.c	/^int nvme_mi_mi_read_mi_data_ctrl_list(nvme_mi_ep_t ep, __u8 start_ctrlid,$/;"	f
nvme_mi_mi_read_mi_data_port	src/nvme/mi.c	/^int nvme_mi_mi_read_mi_data_port(nvme_mi_ep_t ep, __u8 portid,$/;"	f
nvme_mi_mi_read_mi_data_subsys	src/nvme/mi.c	/^int nvme_mi_mi_read_mi_data_subsys(nvme_mi_ep_t ep,$/;"	f
nvme_mi_mi_req_hdr	src/nvme/mi.h	/^struct nvme_mi_mi_req_hdr {$/;"	s
nvme_mi_mi_resp_hdr	src/nvme/mi.h	/^struct nvme_mi_mi_resp_hdr {$/;"	s
nvme_mi_mi_subsystem_health_status_poll	src/nvme/mi.c	/^int nvme_mi_mi_subsystem_health_status_poll(nvme_mi_ep_t ep, bool clear,$/;"	f
nvme_mi_msg_hdr	src/nvme/mi.h	/^struct nvme_mi_msg_hdr {$/;"	s
nvme_mi_msg_resp	src/nvme/mi.h	/^struct nvme_mi_msg_resp {$/;"	s
nvme_mi_msg_resp_mpr	src/nvme/mi-mctp.c	/^struct nvme_mi_msg_resp_mpr {$/;"	s	file:
nvme_mi_next_ctrl	src/nvme/mi.c	/^nvme_mi_ctrl_t nvme_mi_next_ctrl(nvme_mi_ep_t ep, nvme_mi_ctrl_t c)$/;"	f
nvme_mi_next_endpoint	src/nvme/mi.c	/^nvme_mi_ep_t nvme_mi_next_endpoint(nvme_root_t m, nvme_mi_ep_t ep)$/;"	f
nvme_mi_nvm_ss_health_status	src/nvme/types.h	/^struct nvme_mi_nvm_ss_health_status {$/;"	s
nvme_mi_open_mctp	src/nvme/mi-mctp.c	/^nvme_mi_ep_t nvme_mi_open_mctp(nvme_root_t root, unsigned int netid, __u8 eid)$/;"	f
nvme_mi_open_test	test/mi.c	/^nvme_mi_ep_t nvme_mi_open_test(nvme_root_t root)$/;"	f
nvme_mi_osc	src/nvme/types.h	/^struct nvme_mi_osc {$/;"	s
nvme_mi_port_pcie	src/nvme/types.h	/^struct nvme_mi_port_pcie {$/;"	s
nvme_mi_port_smb	src/nvme/types.h	/^struct nvme_mi_port_smb {$/;"	s
nvme_mi_probe_enabled_default	src/nvme/mi.c	/^static bool nvme_mi_probe_enabled_default(void)$/;"	f	file:
nvme_mi_read_ctrl_info	src/nvme/types.h	/^struct nvme_mi_read_ctrl_info {$/;"	s
nvme_mi_read_data	src/nvme/mi.c	/^static int nvme_mi_read_data(nvme_mi_ep_t ep, __u32 cdw0,$/;"	f	file:
nvme_mi_read_nvm_ss_info	src/nvme/types.h	/^struct nvme_mi_read_nvm_ss_info {$/;"	s
nvme_mi_read_port_info	src/nvme/types.h	/^struct nvme_mi_read_port_info {$/;"	s
nvme_mi_read_sc_list	src/nvme/types.h	/^struct nvme_mi_read_sc_list {$/;"	s
nvme_mi_record_resp_time	src/nvme/mi.c	/^static void nvme_mi_record_resp_time(struct nvme_mi_ep *ep)$/;"	f	file:
nvme_mi_req	src/nvme/private.h	/^struct nvme_mi_req {$/;"	s
nvme_mi_resp	src/nvme/private.h	/^struct nvme_mi_resp {$/;"	s
nvme_mi_resp_status	src/nvme/mi.h	/^enum nvme_mi_resp_status {$/;"	g
nvme_mi_ror	src/nvme/mi.h	/^enum nvme_mi_ror {$/;"	g
nvme_mi_scan_ep	src/nvme/mi.c	/^int nvme_mi_scan_ep(nvme_mi_ep_t ep, bool force_rescan)$/;"	f
nvme_mi_scan_mctp	src/nvme/mi-mctp.c	/^nvme_root_t nvme_mi_scan_mctp(void)$/;"	f
nvme_mi_set_probe_enabled	src/nvme/mi.c	/^void nvme_mi_set_probe_enabled(nvme_root_t root, bool enabled)$/;"	f
nvme_mi_status_to_string	src/nvme/mi.c	/^const char *nvme_mi_status_to_string(int status)$/;"	f
nvme_mi_submit	src/nvme/mi.c	/^int nvme_mi_submit(nvme_mi_ep_t ep, struct nvme_mi_req *req,$/;"	f
nvme_mi_transport	src/nvme/private.h	/^struct nvme_mi_transport {$/;"	s
nvme_mi_transport_mctp	src/nvme/mi-mctp.c	/^static const struct nvme_mi_transport nvme_mi_transport_mctp = {$/;"	v	typeref:struct:nvme_mi_transport	file:
nvme_mi_transport_mctp	src/nvme/mi-mctp.c	/^static const struct nvme_mi_transport nvme_mi_transport_mctp;$/;"	v	typeref:struct:nvme_mi_transport	file:
nvme_mi_transport_mctp	src/nvme/mi-mctp.c	/^struct nvme_mi_transport_mctp {$/;"	s	file:
nvme_mi_verify_resp_mic	src/nvme/mi.c	/^static int nvme_mi_verify_resp_mic(struct nvme_mi_resp *resp)$/;"	f	file:
nvme_mi_vpd_hdr	src/nvme/types.h	/^struct nvme_mi_vpd_hdr {$/;"	s
nvme_mi_vpd_mr_common	src/nvme/types.h	/^struct nvme_mi_vpd_mr_common {$/;"	s
nvme_mi_vpd_mra	src/nvme/types.h	/^struct nvme_mi_vpd_mra {$/;"	s
nvme_mi_vpd_ppmra	src/nvme/types.h	/^struct nvme_mi_vpd_ppmra {$/;"	s
nvme_mi_vpd_telem	src/nvme/types.h	/^struct nvme_mi_vpd_telem {$/;"	s
nvme_mi_vpd_tra	src/nvme/types.h	/^struct nvme_mi_vpd_tra {$/;"	s
nvme_mmio_read32	test/register.c	/^static inline uint32_t nvme_mmio_read32(volatile void *addr)$/;"	f	file:
nvme_mmio_read64	test/register.c	/^static inline uint64_t nvme_mmio_read64(volatile void *addr)$/;"	f	file:
nvme_msg	src/nvme/private.h	194;"	d
nvme_namespace_attach_ctrls	src/nvme/linux.c	/^int nvme_namespace_attach_ctrls(int fd, __u32 nsid, __u16 num_ctrls,$/;"	f
nvme_namespace_detach_ctrls	src/nvme/linux.c	/^int nvme_namespace_detach_ctrls(int fd, __u32 nsid, __u16 num_ctrls,$/;"	f
nvme_namespace_filter	src/nvme/filters.c	/^int nvme_namespace_filter(const struct dirent *d)$/;"	f
nvme_namespace_first_path	src/nvme/tree.c	/^nvme_path_t nvme_namespace_first_path(nvme_ns_t ns)$/;"	f
nvme_namespace_for_each_path	src/nvme/tree.h	490;"	d
nvme_namespace_for_each_path_safe	src/nvme/tree.h	479;"	d
nvme_namespace_next_path	src/nvme/tree.c	/^nvme_path_t nvme_namespace_next_path(nvme_ns_t ns, nvme_path_t p)$/;"	f
nvme_nbft_free	src/nvme/nbft.c	/^void nvme_nbft_free(struct nbft_info *nbft)$/;"	f
nvme_nbft_read	src/nvme/nbft.c	/^int nvme_nbft_read(struct nbft_info **nbft, const char *filename)$/;"	f
nvme_nd_ns_fpi	src/nvme/types.h	/^enum nvme_nd_ns_fpi {$/;"	g
nvme_next_host	src/nvme/tree.c	/^nvme_host_t nvme_next_host(nvme_root_t r, nvme_host_t h)$/;"	f
nvme_next_subsystem	src/nvme/tree.c	/^nvme_subsystem_t nvme_next_subsystem(nvme_host_t h, nvme_subsystem_t s)$/;"	f
nvme_ns	src/nvme/private.h	/^struct nvme_ns {$/;"	s
nvme_ns_attach	src/nvme/ioctl.c	/^int nvme_ns_attach(struct nvme_ns_attach_args *args)$/;"	f
nvme_ns_attach_args	src/nvme/api-types.h	/^struct nvme_ns_attach_args {$/;"	s
nvme_ns_attach_ctrls	src/nvme/ioctl.h	/^static inline int nvme_ns_attach_ctrls(int fd, __u32 nsid,$/;"	f
nvme_ns_attach_sel	src/nvme/types.h	/^enum nvme_ns_attach_sel {$/;"	g
nvme_ns_attachment	src/nvme/linux.c	/^static int nvme_ns_attachment(int fd, __u32 nsid, __u16 num_ctrls,$/;"	f	file:
nvme_ns_compare	src/nvme/tree.c	/^int nvme_ns_compare(nvme_ns_t n, void *buf, off_t offset, size_t count)$/;"	f
nvme_ns_detach_ctrls	src/nvme/ioctl.h	/^static inline int nvme_ns_detach_ctrls(int fd, __u32 nsid,$/;"	f
nvme_ns_flush	src/nvme/tree.c	/^int nvme_ns_flush(nvme_ns_t n)$/;"	f
nvme_ns_generic_to_blkdev	src/nvme/tree.c	/^static char *nvme_ns_generic_to_blkdev(const char *generic)$/;"	f	file:
nvme_ns_get_csi	src/nvme/tree.c	/^enum nvme_csi nvme_ns_get_csi(nvme_ns_t n)$/;"	f
nvme_ns_get_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_ns_get_ctrl(nvme_ns_t n)$/;"	f
nvme_ns_get_eui64	src/nvme/tree.c	/^const uint8_t *nvme_ns_get_eui64(nvme_ns_t n)$/;"	f
nvme_ns_get_fd	src/nvme/tree.c	/^int nvme_ns_get_fd(nvme_ns_t n)$/;"	f
nvme_ns_get_firmware	src/nvme/tree.c	/^const char *nvme_ns_get_firmware(nvme_ns_t n)$/;"	f
nvme_ns_get_generic_name	src/nvme/tree.c	/^const char *nvme_ns_get_generic_name(nvme_ns_t n)$/;"	f
nvme_ns_get_lba_count	src/nvme/tree.c	/^uint64_t nvme_ns_get_lba_count(nvme_ns_t n)$/;"	f
nvme_ns_get_lba_size	src/nvme/tree.c	/^int nvme_ns_get_lba_size(nvme_ns_t n)$/;"	f
nvme_ns_get_lba_util	src/nvme/tree.c	/^uint64_t nvme_ns_get_lba_util(nvme_ns_t n)$/;"	f
nvme_ns_get_meta_size	src/nvme/tree.c	/^int nvme_ns_get_meta_size(nvme_ns_t n)$/;"	f
nvme_ns_get_model	src/nvme/tree.c	/^const char *nvme_ns_get_model(nvme_ns_t n)$/;"	f
nvme_ns_get_name	src/nvme/tree.c	/^const char *nvme_ns_get_name(nvme_ns_t n)$/;"	f
nvme_ns_get_nguid	src/nvme/tree.c	/^const uint8_t *nvme_ns_get_nguid(nvme_ns_t n)$/;"	f
nvme_ns_get_nsid	src/nvme/tree.c	/^int nvme_ns_get_nsid(nvme_ns_t n)$/;"	f
nvme_ns_get_serial	src/nvme/tree.c	/^const char *nvme_ns_get_serial(nvme_ns_t n)$/;"	f
nvme_ns_get_subsystem	src/nvme/tree.c	/^nvme_subsystem_t nvme_ns_get_subsystem(nvme_ns_t n)$/;"	f
nvme_ns_get_sysfs_dir	src/nvme/tree.c	/^const char *nvme_ns_get_sysfs_dir(nvme_ns_t n)$/;"	f
nvme_ns_get_uuid	src/nvme/tree.c	/^void nvme_ns_get_uuid(nvme_ns_t n, unsigned char out[NVME_UUID_LEN])$/;"	f
nvme_ns_id_desc	src/nvme/types.h	/^struct nvme_ns_id_desc {$/;"	s
nvme_ns_id_desc_nidt	src/nvme/types.h	/^enum nvme_ns_id_desc_nidt {$/;"	g
nvme_ns_id_desc_nidt_lens	src/nvme/types.h	/^enum nvme_ns_id_desc_nidt_lens {$/;"	g
nvme_ns_identify	src/nvme/tree.c	/^int nvme_ns_identify(nvme_ns_t n, struct nvme_id_ns *ns)$/;"	f
nvme_ns_identify_descs	src/nvme/tree.c	/^int nvme_ns_identify_descs(nvme_ns_t n, struct nvme_ns_id_desc *descs)$/;"	f
nvme_ns_init	src/nvme/tree.c	/^static int nvme_ns_init(struct nvme_ns *n)$/;"	f	file:
nvme_ns_is_generic	src/nvme/tree.c	/^static inline bool nvme_ns_is_generic(const char *name)$/;"	f	file:
nvme_ns_list	src/nvme/types.h	/^struct nvme_ns_list {$/;"	s
nvme_ns_metadata_type	src/nvme/types.h	/^enum nvme_ns_metadata_type {$/;"	g
nvme_ns_mgmt	src/nvme/ioctl.c	/^int nvme_ns_mgmt(struct nvme_ns_mgmt_args *args)$/;"	f
nvme_ns_mgmt_args	src/nvme/api-types.h	/^struct nvme_ns_mgmt_args {$/;"	s
nvme_ns_mgmt_create	src/nvme/ioctl.h	/^static inline int nvme_ns_mgmt_create(int fd, struct nvme_id_ns *ns,$/;"	f
nvme_ns_mgmt_delete	src/nvme/ioctl.h	/^static inline int nvme_ns_mgmt_delete(int fd, __u32 nsid)$/;"	f
nvme_ns_mgmt_host_sw_specified	src/nvme/types.h	/^struct nvme_ns_mgmt_host_sw_specified {$/;"	s
nvme_ns_mgmt_sel	src/nvme/types.h	/^enum nvme_ns_mgmt_sel {$/;"	g
nvme_ns_open	src/nvme/tree.c	/^static nvme_ns_t nvme_ns_open(const char *name)$/;"	f	file:
nvme_ns_parse_descriptors	src/nvme/tree.c	/^static void nvme_ns_parse_descriptors(struct nvme_ns *n,$/;"	f	file:
nvme_ns_read	src/nvme/tree.c	/^int nvme_ns_read(nvme_ns_t n, void *buf, off_t offset, size_t count)$/;"	f
nvme_ns_release_fd	src/nvme/tree.c	/^void nvme_ns_release_fd(nvme_ns_t n)$/;"	f
nvme_ns_rescan	src/nvme/ioctl.c	/^int nvme_ns_rescan(int fd)$/;"	f
nvme_ns_set_generic_name	src/nvme/tree.c	/^static void nvme_ns_set_generic_name(struct nvme_ns *n, const char *name)$/;"	f	file:
nvme_ns_sysfs_dir	src/nvme/filters.c	/^const char *nvme_ns_sysfs_dir = "\/sys\/block";$/;"	v
nvme_ns_t	src/nvme/tree.h	/^typedef struct nvme_ns *nvme_ns_t;$/;"	t	typeref:struct:nvme_ns
nvme_ns_verify	src/nvme/tree.c	/^int nvme_ns_verify(nvme_ns_t n, off_t offset, size_t count)$/;"	f
nvme_ns_write	src/nvme/tree.c	/^int nvme_ns_write(nvme_ns_t n, void *buf, off_t offset, size_t count)$/;"	f
nvme_ns_write_protect_cfg	src/nvme/types.h	/^enum nvme_ns_write_protect_cfg {$/;"	g
nvme_ns_write_uncorrectable	src/nvme/tree.c	/^int nvme_ns_write_uncorrectable(nvme_ns_t n, off_t offset, size_t count)$/;"	f
nvme_ns_write_zeros	src/nvme/tree.c	/^int nvme_ns_write_zeros(nvme_ns_t n, off_t offset, size_t count)$/;"	f
nvme_nss_hw_err_event	src/nvme/types.h	/^struct nvme_nss_hw_err_event {$/;"	s
nvme_nvm_id_ns	src/nvme/types.h	/^struct nvme_nvm_id_ns {$/;"	s
nvme_nvm_id_ns_elbaf	src/nvme/types.h	/^enum nvme_nvm_id_ns_elbaf {$/;"	g
nvme_nvm_identify_ctrl	src/nvme/ioctl.h	/^static inline int nvme_nvm_identify_ctrl(int fd, struct nvme_id_ctrl_nvm *id)$/;"	f
nvme_nvmeset_pl_status	src/nvme/types.h	/^enum nvme_nvmeset_pl_status {$/;"	g
nvme_nvmset_attr	src/nvme/types.h	/^struct nvme_nvmset_attr {$/;"	s
nvme_nvmset_pl_events	src/nvme/types.h	/^enum nvme_nvmset_pl_events {$/;"	g
nvme_nvmset_predictable_lat_log	src/nvme/types.h	/^struct nvme_nvmset_predictable_lat_log {$/;"	s
nvme_open	src/nvme/linux.c	/^int nvme_open(const char *name)$/;"	f
nvme_passthru	src/nvme/ioctl.c	/^static int nvme_passthru(int fd, unsigned long ioctl_cmd, __u8 opcode,$/;"	f	file:
nvme_passthru64	src/nvme/ioctl.c	/^static int nvme_passthru64(int fd, unsigned long ioctl_cmd, __u8 opcode,$/;"	f	file:
nvme_passthru_cmd	src/nvme/ioctl.h	/^struct nvme_passthru_cmd {$/;"	s
nvme_passthru_cmd64	src/nvme/ioctl.h	/^struct nvme_passthru_cmd64 {$/;"	s
nvme_path	src/nvme/private.h	/^struct nvme_path {$/;"	s
nvme_path_get_ana_state	src/nvme/tree.c	/^const char *nvme_path_get_ana_state(nvme_path_t p)$/;"	f
nvme_path_get_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_path_get_ctrl(nvme_path_t p)$/;"	f
nvme_path_get_name	src/nvme/tree.c	/^const char *nvme_path_get_name(nvme_path_t p)$/;"	f
nvme_path_get_ns	src/nvme/tree.c	/^nvme_ns_t nvme_path_get_ns(nvme_path_t p)$/;"	f
nvme_path_get_sysfs_dir	src/nvme/tree.c	/^const char *nvme_path_get_sysfs_dir(nvme_path_t p)$/;"	f
nvme_path_t	src/nvme/tree.h	/^typedef struct nvme_path *nvme_path_t;$/;"	t	typeref:struct:nvme_path
nvme_paths_filter	src/nvme/filters.c	/^int nvme_paths_filter(const struct dirent *d)$/;"	f
nvme_persistent_event_entry	src/nvme/types.h	/^struct nvme_persistent_event_entry {$/;"	s
nvme_persistent_event_log	src/nvme/types.h	/^struct nvme_persistent_event_log {$/;"	s
nvme_persistent_event_types	src/nvme/types.h	/^enum nvme_persistent_event_types {$/;"	g
nvme_pevent_log_action	src/nvme/types.h	/^enum nvme_pevent_log_action {$/;"	g
nvme_plm_config	src/nvme/types.h	/^struct nvme_plm_config {$/;"	s
nvme_pmr_size	src/nvme/types.h	/^static inline __u64 nvme_pmr_size(__u32 pmrebs)$/;"	f
nvme_pmr_throughput	src/nvme/types.h	/^static inline __u64 nvme_pmr_throughput(__u32 pmrswtp)$/;"	f
nvme_pmrcap	src/nvme/types.h	/^enum nvme_pmrcap {$/;"	g
nvme_pmrctl	src/nvme/types.h	/^enum nvme_pmrctl {$/;"	g
nvme_pmrebs	src/nvme/types.h	/^enum nvme_pmrebs {$/;"	g
nvme_pmrmsc	src/nvme/types.h	/^enum nvme_pmrmsc {$/;"	g
nvme_pmrsts	src/nvme/types.h	/^enum nvme_pmrsts {$/;"	g
nvme_pmrswtp	src/nvme/types.h	/^enum nvme_pmrswtp {$/;"	g
nvme_power_on_reset_info_list	src/nvme/types.h	/^struct nvme_power_on_reset_info_list {$/;"	s
nvme_primary_ctrl_cap	src/nvme/types.h	/^struct nvme_primary_ctrl_cap {$/;"	s
nvme_print_registers	test/register.c	/^void nvme_print_registers(void *regs)$/;"	f
nvme_psd_flags	src/nvme/types.h	/^enum nvme_psd_flags {$/;"	g
nvme_psd_power_scale	src/nvme/types.h	/^static inline unsigned int nvme_psd_power_scale(__u8 ps)$/;"	f
nvme_psd_ps	src/nvme/types.h	/^enum nvme_psd_ps {$/;"	g
nvme_psd_workload	src/nvme/types.h	/^enum nvme_psd_workload {$/;"	g
nvme_read	src/nvme/ioctl.h	/^static inline int nvme_read(struct nvme_io_args *args)$/;"	f
nvme_read_config	src/nvme/tree.c	/^int nvme_read_config(nvme_root_t r, const char *config_file)$/;"	f
nvme_refresh_topology	src/nvme/tree.c	/^void nvme_refresh_topology(nvme_root_t r)$/;"	f
nvme_register_offsets	src/nvme/types.h	/^enum nvme_register_offsets {$/;"	g
nvme_registered_ctrl	src/nvme/types.h	/^struct nvme_registered_ctrl {$/;"	s
nvme_registered_ctrl_ext	src/nvme/types.h	/^struct nvme_registered_ctrl_ext {$/;"	s
nvme_rescan_ctrl	src/nvme/tree.c	/^void nvme_rescan_ctrl(struct nvme_ctrl *c)$/;"	f
nvme_resv_acquire	src/nvme/ioctl.c	/^int nvme_resv_acquire(struct nvme_resv_acquire_args *args)$/;"	f
nvme_resv_acquire_args	src/nvme/api-types.h	/^struct nvme_resv_acquire_args {$/;"	s
nvme_resv_cptpl	src/nvme/types.h	/^enum nvme_resv_cptpl {$/;"	g
nvme_resv_notification_log	src/nvme/types.h	/^struct nvme_resv_notification_log {$/;"	s
nvme_resv_notify_rnlpt	src/nvme/types.h	/^enum nvme_resv_notify_rnlpt {$/;"	g
nvme_resv_racqa	src/nvme/types.h	/^enum nvme_resv_racqa {$/;"	g
nvme_resv_register	src/nvme/ioctl.c	/^int nvme_resv_register(struct nvme_resv_register_args *args)$/;"	f
nvme_resv_register_args	src/nvme/api-types.h	/^struct nvme_resv_register_args {$/;"	s
nvme_resv_release	src/nvme/ioctl.c	/^int nvme_resv_release(struct nvme_resv_release_args *args)$/;"	f
nvme_resv_release_args	src/nvme/api-types.h	/^struct nvme_resv_release_args {$/;"	s
nvme_resv_report	src/nvme/ioctl.c	/^int nvme_resv_report(struct nvme_resv_report_args *args)$/;"	f
nvme_resv_report_args	src/nvme/api-types.h	/^struct nvme_resv_report_args {$/;"	s
nvme_resv_rrega	src/nvme/types.h	/^enum nvme_resv_rrega {$/;"	g
nvme_resv_rrela	src/nvme/types.h	/^enum nvme_resv_rrela {$/;"	g
nvme_resv_rtype	src/nvme/types.h	/^enum nvme_resv_rtype {$/;"	g
nvme_resv_status	src/nvme/types.h	/^struct nvme_resv_status {$/;"	s
nvme_root	src/nvme/private.h	/^struct nvme_root {$/;"	s
nvme_root_get_application	src/nvme/tree.c	/^const char *nvme_root_get_application(nvme_root_t r)$/;"	f
nvme_root_release_fds	src/nvme/tree.c	/^void nvme_root_release_fds(nvme_root_t r)$/;"	f
nvme_root_set_application	src/nvme/tree.c	/^void nvme_root_set_application(nvme_root_t r, const char *a)$/;"	f
nvme_root_t	src/nvme/tree.h	/^typedef struct nvme_root *nvme_root_t;$/;"	t	typeref:struct:nvme_root
nvme_sanitize_compln_event	src/nvme/types.h	/^struct nvme_sanitize_compln_event {$/;"	s
nvme_sanitize_log_page	src/nvme/types.h	/^struct nvme_sanitize_log_page {$/;"	s
nvme_sanitize_nvm	src/nvme/ioctl.c	/^int nvme_sanitize_nvm(struct nvme_sanitize_nvm_args *args)$/;"	f
nvme_sanitize_nvm_args	src/nvme/api-types.h	/^struct nvme_sanitize_nvm_args {$/;"	s
nvme_sanitize_sanact	src/nvme/types.h	/^enum nvme_sanitize_sanact {$/;"	g
nvme_sanitize_sstat	src/nvme/types.h	/^enum nvme_sanitize_sstat {$/;"	g
nvme_sanitize_start_event	src/nvme/types.h	/^struct nvme_sanitize_start_event {$/;"	s
nvme_scan	src/nvme/tree.c	/^nvme_root_t nvme_scan(const char *config_file)$/;"	f
nvme_scan_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_scan_ctrl(nvme_root_t r, const char *name)$/;"	f
nvme_scan_ctrl_namespace_paths	src/nvme/filters.c	/^int nvme_scan_ctrl_namespace_paths(nvme_ctrl_t c, struct dirent ***paths)$/;"	f
nvme_scan_ctrl_namespaces	src/nvme/filters.c	/^int nvme_scan_ctrl_namespaces(nvme_ctrl_t c, struct dirent ***ns)$/;"	f
nvme_scan_ctrls	src/nvme/filters.c	/^int nvme_scan_ctrls(struct dirent ***ctrls)$/;"	f
nvme_scan_filter_t	src/nvme/tree.h	/^typedef bool (*nvme_scan_filter_t)(nvme_subsystem_t, nvme_ctrl_t,$/;"	t
nvme_scan_namespace	src/nvme/tree.c	/^nvme_ns_t nvme_scan_namespace(const char *name)$/;"	f
nvme_scan_subsystem	src/nvme/tree.c	/^static int nvme_scan_subsystem(struct nvme_root *r, const char *name,$/;"	f	file:
nvme_scan_subsystem_namespaces	src/nvme/filters.c	/^int nvme_scan_subsystem_namespaces(nvme_subsystem_t s, struct dirent ***ns)$/;"	f
nvme_scan_subsystems	src/nvme/filters.c	/^int nvme_scan_subsystems(struct dirent ***subsys)$/;"	f
nvme_scan_topology	src/nvme/tree.c	/^int nvme_scan_topology(struct nvme_root *r, nvme_scan_filter_t f, void *f_args)$/;"	f
nvme_secondary_ctrl	src/nvme/types.h	/^struct nvme_secondary_ctrl {$/;"	s
nvme_secondary_ctrl_list	src/nvme/types.h	/^struct nvme_secondary_ctrl_list {$/;"	s
nvme_security_receive	src/nvme/ioctl.c	/^int nvme_security_receive(struct nvme_security_receive_args *args)$/;"	f
nvme_security_receive_args	src/nvme/api-types.h	/^struct nvme_security_receive_args {$/;"	s
nvme_security_send	src/nvme/ioctl.c	/^int nvme_security_send(struct nvme_security_send_args *args)$/;"	f
nvme_security_send_args	src/nvme/api-types.h	/^struct nvme_security_send_args {$/;"	s
nvme_self_test_log	src/nvme/types.h	/^struct nvme_self_test_log {$/;"	s
nvme_set_attr	src/nvme/linux.c	/^int nvme_set_attr(const char *dir, const char *attr, const char *value)$/;"	f
nvme_set_feature_event	src/nvme/types.h	/^struct nvme_set_feature_event {$/;"	s
nvme_set_features	src/nvme/ioctl.c	/^int nvme_set_features(struct nvme_set_features_args *args)$/;"	f
nvme_set_features_arbitration	src/nvme/ioctl.c	/^int nvme_set_features_arbitration(int fd, __u8 ab, __u8 lpw, __u8 mpw,$/;"	f
nvme_set_features_args	src/nvme/api-types.h	/^struct nvme_set_features_args {$/;"	s
nvme_set_features_async_event	src/nvme/ioctl.c	/^int nvme_set_features_async_event(int fd, __u32 events,$/;"	f
nvme_set_features_auto_pst	src/nvme/ioctl.c	/^int nvme_set_features_auto_pst(int fd, bool apste, bool save,$/;"	f
nvme_set_features_data	src/nvme/ioctl.h	/^static inline int nvme_set_features_data(int fd, __u8 fid, __u32 nsid,$/;"	f
nvme_set_features_endurance_evt_cfg	src/nvme/ioctl.c	/^int nvme_set_features_endurance_evt_cfg(int fd, __u16 endgid, __u8 egwarn,$/;"	f
nvme_set_features_err_recovery	src/nvme/ioctl.c	/^int nvme_set_features_err_recovery(int fd, __u32 nsid, __u16 tler, bool dulbe,$/;"	f
nvme_set_features_hctm	src/nvme/ioctl.c	/^int nvme_set_features_hctm(int fd, __u16 tmt2, __u16 tmt1,$/;"	f
nvme_set_features_host_behavior	src/nvme/ioctl.c	/^int nvme_set_features_host_behavior(int fd, bool save,$/;"	f
nvme_set_features_host_id	src/nvme/ioctl.c	/^int nvme_set_features_host_id(int fd, bool save, bool exhid, __u8 *hostid)$/;"	f
nvme_set_features_iocs_profile	src/nvme/ioctl.c	/^int nvme_set_features_iocs_profile(int fd, __u8 iocsi, bool save)$/;"	f
nvme_set_features_irq_coalesce	src/nvme/ioctl.c	/^int nvme_set_features_irq_coalesce(int fd, __u8 thr, __u8 time, bool save,$/;"	f
nvme_set_features_irq_config	src/nvme/ioctl.c	/^int nvme_set_features_irq_config(int fd, __u16 iv, bool cd, bool save,$/;"	f
nvme_set_features_lba_range	src/nvme/ioctl.c	/^int nvme_set_features_lba_range(int fd, __u32 nsid, __u32 nr_ranges, bool save,$/;"	f
nvme_set_features_lba_sts_interval	src/nvme/ioctl.c	/^int nvme_set_features_lba_sts_interval(int fd, __u16 lsiri, __u16 lsipi,$/;"	f
nvme_set_features_nopsc	src/nvme/ioctl.c	/^int nvme_set_features_nopsc(int fd, bool noppme, bool save, __u32 *result)$/;"	f
nvme_set_features_plm_config	src/nvme/ioctl.c	/^int nvme_set_features_plm_config(int fd, bool plm, __u16 nvmsetid, bool save,$/;"	f
nvme_set_features_plm_window	src/nvme/ioctl.c	/^int nvme_set_features_plm_window(int fd, enum nvme_feat_plm_window_select sel,$/;"	f
nvme_set_features_power_mgmt	src/nvme/ioctl.c	/^int nvme_set_features_power_mgmt(int fd, __u8 ps, __u8 wh, bool save,$/;"	f
nvme_set_features_resv_mask	src/nvme/ioctl.c	/^int nvme_set_features_resv_mask(int fd, __u32 mask, bool save, __u32 *result)$/;"	f
nvme_set_features_resv_persist	src/nvme/ioctl.c	/^int nvme_set_features_resv_persist(int fd, bool ptpl, bool save, __u32 *result)$/;"	f
nvme_set_features_rrl	src/nvme/ioctl.c	/^int nvme_set_features_rrl(int fd, __u8 rrl, __u16 nvmsetid,$/;"	f
nvme_set_features_sanitize	src/nvme/ioctl.c	/^int nvme_set_features_sanitize(int fd, bool nodrm, bool save, __u32 *result)$/;"	f
nvme_set_features_simple	src/nvme/ioctl.h	/^static inline int nvme_set_features_simple(int fd, __u8 fid, __u32 nsid,$/;"	f
nvme_set_features_sw_progress	src/nvme/ioctl.c	/^int nvme_set_features_sw_progress(int fd, __u8 pbslc, bool save,$/;"	f
nvme_set_features_temp_thresh	src/nvme/ioctl.c	/^int nvme_set_features_temp_thresh(int fd, __u16 tmpth, __u8 tmpsel,$/;"	f
nvme_set_features_timestamp	src/nvme/ioctl.c	/^int nvme_set_features_timestamp(int fd, bool save, __u64 timestamp)$/;"	f
nvme_set_features_volatile_wc	src/nvme/ioctl.c	/^int nvme_set_features_volatile_wc(int fd, bool wce, bool save, __u32 *result)$/;"	f
nvme_set_features_write_atomic	src/nvme/ioctl.c	/^int nvme_set_features_write_atomic(int fd, bool dn, bool save, __u32 *result)$/;"	f
nvme_set_features_write_protect	src/nvme/ioctl.c	/^int nvme_set_features_write_protect(int fd, enum nvme_feat_nswpcfg_state state,$/;"	f
nvme_set_keyring	src/nvme/linux.c	/^int nvme_set_keyring(long key_id)$/;"	f
nvme_set_property	src/nvme/ioctl.c	/^int nvme_set_property(struct nvme_set_property_args *args)$/;"	f
nvme_set_property_args	src/nvme/api-types.h	/^struct nvme_set_property_args {$/;"	s
nvme_set_var_size_tags	src/nvme/ioctl.c	/^static int nvme_set_var_size_tags(__u32 *cmd_dw2, __u32 *cmd_dw3, __u32 *cmd_dw14,$/;"	f	file:
nvme_slots_sysfs_dir	src/nvme/tree.c	/^const char *nvme_slots_sysfs_dir = "\/sys\/bus\/pci\/slots";$/;"	v
nvme_smart_crit	src/nvme/types.h	/^enum nvme_smart_crit {$/;"	g
nvme_smart_egcw	src/nvme/types.h	/^enum nvme_smart_egcw {$/;"	g
nvme_smart_log	src/nvme/types.h	/^struct nvme_smart_log {$/;"	s
nvme_st_code	src/nvme/types.h	/^enum nvme_st_code {$/;"	g
nvme_st_curr_op	src/nvme/types.h	/^enum nvme_st_curr_op {$/;"	g
nvme_st_result	src/nvme/types.h	/^struct nvme_st_result {$/;"	s
nvme_st_valid_diag_info	src/nvme/types.h	/^enum nvme_st_valid_diag_info {$/;"	g
nvme_status_code	src/nvme/types.h	/^static inline __u16 nvme_status_code(__u16 status_field)$/;"	f
nvme_status_code_type	src/nvme/types.h	/^static inline __u16 nvme_status_code_type(__u16 status_field)$/;"	f
nvme_status_equals	src/nvme/types.h	/^static inline __u32 nvme_status_equals(int status, enum nvme_status_type type,$/;"	f
nvme_status_field	src/nvme/types.h	/^enum nvme_status_field {$/;"	g
nvme_status_get_type	src/nvme/types.h	/^static inline __u32 nvme_status_get_type(int status)$/;"	f
nvme_status_get_value	src/nvme/types.h	/^static inline __u32 nvme_status_get_value(int status)$/;"	f
nvme_status_result	src/nvme/types.h	/^enum nvme_status_result {$/;"	g
nvme_status_to_errno	src/nvme/util.c	/^__u8 nvme_status_to_errno(int status, bool fabrics)$/;"	f
nvme_status_to_string	src/nvme/util.c	/^const char *nvme_status_to_string(int status, bool fabrics)$/;"	f
nvme_status_type	src/nvme/types.h	/^enum nvme_status_type {$/;"	g
nvme_streams_directive_params	src/nvme/types.h	/^struct nvme_streams_directive_params {$/;"	s
nvme_streams_directive_status	src/nvme/types.h	/^struct nvme_streams_directive_status {$/;"	s
nvme_submit_admin_passthru	src/nvme/ioctl.c	/^int nvme_submit_admin_passthru(int fd, struct nvme_passthru_cmd *cmd, __u32 *result)$/;"	f
nvme_submit_admin_passthru64	src/nvme/ioctl.c	/^int nvme_submit_admin_passthru64(int fd, struct nvme_passthru_cmd64 *cmd,$/;"	f
nvme_submit_io_passthru	src/nvme/ioctl.c	/^int nvme_submit_io_passthru(int fd, struct nvme_passthru_cmd *cmd, __u32 *result)$/;"	f
nvme_submit_io_passthru64	src/nvme/ioctl.c	/^int nvme_submit_io_passthru64(int fd, struct nvme_passthru_cmd64 *cmd,$/;"	f
nvme_submit_passthru	src/nvme/ioctl.c	/^static int nvme_submit_passthru(int fd, unsigned long ioctl_cmd,$/;"	f	file:
nvme_submit_passthru64	src/nvme/ioctl.c	/^static int nvme_submit_passthru64(int fd, unsigned long ioctl_cmd,$/;"	f	file:
nvme_subsys_filter	src/nvme/filters.c	/^int nvme_subsys_filter(const struct dirent *d)$/;"	f
nvme_subsys_sysfs_dir	src/nvme/filters.c	/^const char *nvme_subsys_sysfs_dir = "\/sys\/class\/nvme-subsystem";$/;"	v
nvme_subsys_type	src/nvme/types.h	/^enum nvme_subsys_type {$/;"	g
nvme_subsystem	src/nvme/private.h	/^struct nvme_subsystem {$/;"	s
nvme_subsystem_first_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_subsystem_first_ctrl(nvme_subsystem_t s)$/;"	f
nvme_subsystem_first_ns	src/nvme/tree.c	/^nvme_ns_t nvme_subsystem_first_ns(nvme_subsystem_t s)$/;"	f
nvme_subsystem_for_each_ctrl	src/nvme/tree.h	406;"	d
nvme_subsystem_for_each_ctrl_safe	src/nvme/tree.h	395;"	d
nvme_subsystem_for_each_ns	src/nvme/tree.h	469;"	d
nvme_subsystem_for_each_ns_safe	src/nvme/tree.h	458;"	d
nvme_subsystem_get_application	src/nvme/tree.c	/^const char *nvme_subsystem_get_application(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_host	src/nvme/tree.c	/^nvme_host_t nvme_subsystem_get_host(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_iopolicy	src/nvme/tree.c	/^const char *nvme_subsystem_get_iopolicy(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_name	src/nvme/tree.c	/^const char *nvme_subsystem_get_name(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_nqn	src/nvme/tree.c	/^const char *nvme_subsystem_get_nqn(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_sysfs_dir	src/nvme/tree.c	/^const char *nvme_subsystem_get_sysfs_dir(nvme_subsystem_t s)$/;"	f
nvme_subsystem_get_type	src/nvme/tree.c	/^const char *nvme_subsystem_get_type(nvme_subsystem_t s)$/;"	f
nvme_subsystem_lookup_namespace	src/nvme/tree.c	/^struct nvme_ns *nvme_subsystem_lookup_namespace(struct nvme_subsystem *s,$/;"	f
nvme_subsystem_next_ctrl	src/nvme/tree.c	/^nvme_ctrl_t nvme_subsystem_next_ctrl(nvme_subsystem_t s, nvme_ctrl_t c)$/;"	f
nvme_subsystem_next_ns	src/nvme/tree.c	/^nvme_ns_t nvme_subsystem_next_ns(nvme_subsystem_t s, nvme_ns_t n)$/;"	f
nvme_subsystem_release_fds	src/nvme/tree.c	/^void nvme_subsystem_release_fds(struct nvme_subsystem *s)$/;"	f
nvme_subsystem_reset	src/nvme/ioctl.c	/^int nvme_subsystem_reset(int fd)$/;"	f
nvme_subsystem_scan_namespace	src/nvme/tree.c	/^static int nvme_subsystem_scan_namespace(nvme_root_t r, nvme_subsystem_t s,$/;"	f	file:
nvme_subsystem_scan_namespaces	src/nvme/tree.c	/^static int nvme_subsystem_scan_namespaces(nvme_root_t r, nvme_subsystem_t s,$/;"	f	file:
nvme_subsystem_set_application	src/nvme/tree.c	/^void nvme_subsystem_set_application(nvme_subsystem_t s, const char *a)$/;"	f
nvme_subsystem_set_ns_path	src/nvme/tree.c	/^static void nvme_subsystem_set_ns_path(nvme_subsystem_t s, nvme_ns_t n)$/;"	f	file:
nvme_subsystem_set_path_ns	src/nvme/tree.c	/^static void nvme_subsystem_set_path_ns(nvme_subsystem_t s, nvme_path_t p)$/;"	f	file:
nvme_subsystem_t	src/nvme/tree.h	/^typedef struct nvme_subsystem *nvme_subsystem_t;$/;"	t	typeref:struct:nvme_subsystem
nvme_supported_cap_config_list_log	src/nvme/types.h	/^struct nvme_supported_cap_config_list_log {$/;"	s
nvme_supported_log_pages	src/nvme/types.h	/^struct nvme_supported_log_pages {$/;"	s
nvme_telemetry_da	src/nvme/linux.h	/^enum nvme_telemetry_da {$/;"	g
nvme_telemetry_log	src/nvme/types.h	/^struct nvme_telemetry_log {$/;"	s
nvme_thermal_exc_event	src/nvme/types.h	/^struct nvme_thermal_exc_event {$/;"	s
nvme_time_stamp_change_event	src/nvme/types.h	/^struct nvme_time_stamp_change_event {$/;"	s
nvme_timestamp	src/nvme/types.h	/^struct nvme_timestamp {$/;"	s
nvme_unlink_ctrl	src/nvme/tree.c	/^void nvme_unlink_ctrl(nvme_ctrl_t c)$/;"	f
nvme_update_config	src/nvme/tree.c	/^int nvme_update_config(nvme_root_t r)$/;"	f
nvme_uring_cmd	src/nvme/ioctl.h	/^struct nvme_uring_cmd {$/;"	s
nvme_uuid_from_string	src/nvme/util.c	/^int nvme_uuid_from_string(const char *str, unsigned char uuid[NVME_UUID_LEN])$/;"	f
nvme_uuid_random	src/nvme/util.c	/^int nvme_uuid_random(unsigned char uuid[NVME_UUID_LEN])$/;"	f
nvme_uuid_to_string	src/nvme/util.c	/^int nvme_uuid_to_string(unsigned char uuid[NVME_UUID_LEN], char *str)$/;"	f
nvme_verify	src/nvme/ioctl.h	/^static inline int nvme_verify(struct nvme_io_args *args)$/;"	f
nvme_verify_chr	src/nvme/ioctl.c	/^static int nvme_verify_chr(int fd)$/;"	f	file:
nvme_version	src/nvme/util.h	/^enum nvme_version {$/;"	g
nvme_virt_mgmt_act	src/nvme/types.h	/^enum nvme_virt_mgmt_act {$/;"	g
nvme_virt_mgmt_rt	src/nvme/types.h	/^enum nvme_virt_mgmt_rt {$/;"	g
nvme_virtual_mgmt	src/nvme/ioctl.c	/^int nvme_virtual_mgmt(struct nvme_virtual_mgmt_args *args)$/;"	f
nvme_virtual_mgmt_args	src/nvme/api-types.h	/^struct nvme_virtual_mgmt_args {$/;"	s
nvme_vs	src/nvme/types.h	/^enum nvme_vs {$/;"	g
nvme_write	src/nvme/ioctl.h	/^static inline int nvme_write(struct nvme_io_args *args)$/;"	f
nvme_write_uncorrectable	src/nvme/ioctl.h	/^static inline int nvme_write_uncorrectable(struct nvme_io_args *args)$/;"	f
nvme_write_zeros	src/nvme/ioctl.h	/^static inline int nvme_write_zeros(struct nvme_io_args *args)$/;"	f
nvme_zns_append	src/nvme/ioctl.c	/^int nvme_zns_append(struct nvme_zns_append_args *args)$/;"	f
nvme_zns_append_args	src/nvme/api-types.h	/^struct nvme_zns_append_args {$/;"	s
nvme_zns_changed_zone_log	src/nvme/types.h	/^struct nvme_zns_changed_zone_log {$/;"	s
nvme_zns_cmd_append	src/nvme/types.h	/^	nvme_zns_cmd_append	= 0x7d,$/;"	e	enum:nvme_io_opcode
nvme_zns_cmd_mgmt_recv	src/nvme/types.h	/^	nvme_zns_cmd_mgmt_recv	= 0x7a,$/;"	e	enum:nvme_io_opcode
nvme_zns_cmd_mgmt_send	src/nvme/types.h	/^	nvme_zns_cmd_mgmt_send	= 0x79,$/;"	e	enum:nvme_io_opcode
nvme_zns_desc	src/nvme/types.h	/^struct nvme_zns_desc {$/;"	s
nvme_zns_id_ctrl	src/nvme/types.h	/^struct nvme_zns_id_ctrl {$/;"	s
nvme_zns_id_ns	src/nvme/types.h	/^struct nvme_zns_id_ns {$/;"	s
nvme_zns_identify_ctrl	src/nvme/ioctl.h	/^static inline int nvme_zns_identify_ctrl(int fd, struct nvme_zns_id_ctrl *id)$/;"	f
nvme_zns_identify_ns	src/nvme/ioctl.h	/^static inline int nvme_zns_identify_ns(int fd, __u32 nsid,$/;"	f
nvme_zns_lbafe	src/nvme/types.h	/^struct nvme_zns_lbafe {$/;"	s
nvme_zns_mgmt_recv	src/nvme/ioctl.c	/^int nvme_zns_mgmt_recv(struct nvme_zns_mgmt_recv_args *args)$/;"	f
nvme_zns_mgmt_recv_args	src/nvme/api-types.h	/^struct nvme_zns_mgmt_recv_args {$/;"	s
nvme_zns_mgmt_send	src/nvme/ioctl.c	/^int nvme_zns_mgmt_send(struct nvme_zns_mgmt_send_args *args)$/;"	f
nvme_zns_mgmt_send_args	src/nvme/api-types.h	/^struct nvme_zns_mgmt_send_args {$/;"	s
nvme_zns_recv_action	src/nvme/types.h	/^enum nvme_zns_recv_action {$/;"	g
nvme_zns_report_options	src/nvme/types.h	/^enum nvme_zns_report_options {$/;"	g
nvme_zns_report_zones	src/nvme/ioctl.h	/^static inline int nvme_zns_report_zones(int fd, __u32 nsid, __u64 slba,$/;"	f
nvme_zns_send_action	src/nvme/types.h	/^enum nvme_zns_send_action {$/;"	g
nvme_zns_za	src/nvme/types.h	/^enum nvme_zns_za {$/;"	g
nvme_zns_zs	src/nvme/types.h	/^enum nvme_zns_zs {$/;"	g
nvme_zns_zt	src/nvme/types.h	/^enum nvme_zns_zt {$/;"	g
nvme_zone_report	src/nvme/types.h	/^struct nvme_zone_report {$/;"	s
nvmebm	src/nvme/types.h	/^	__u8	nvmebm;$/;"	m	struct:nvme_mi_port_smb
nvmf_add_ctrl	src/nvme/fabrics.c	/^int nvmf_add_ctrl(nvme_host_t h, nvme_ctrl_t c,$/;"	f
nvmf_addr_family	src/nvme/types.h	/^enum nvmf_addr_family {$/;"	g
nvmf_adrfam_str	src/nvme/fabrics.c	/^const char *nvmf_adrfam_str(__u8 adrfam)$/;"	f
nvmf_cms_str	src/nvme/fabrics.c	/^const char *nvmf_cms_str(__u8 cm)$/;"	f
nvmf_connect_data	src/nvme/types.h	/^struct nvmf_connect_data {$/;"	s
nvmf_connect_disc_entry	src/nvme/fabrics.c	/^nvme_ctrl_t nvmf_connect_disc_entry(nvme_host_t h,$/;"	f
nvmf_default_config	src/nvme/fabrics.c	/^void nvmf_default_config(struct nvme_fabrics_config *cfg)$/;"	f
nvmf_dev	src/nvme/fabrics.c	/^const char *nvmf_dev = "\/dev\/nvme-fabrics";$/;"	v
nvmf_die	src/nvme/types.h	/^union nvmf_die {$/;"	u
nvmf_dim	src/nvme/fabrics.c	/^static int nvmf_dim(nvme_ctrl_t c, enum nvmf_dim_tas tas, __u8 trtype,$/;"	f	file:
nvmf_dim_data	src/nvme/types.h	/^struct nvmf_dim_data {$/;"	s
nvmf_dim_entfmt	src/nvme/types.h	/^enum nvmf_dim_entfmt {$/;"	g
nvmf_dim_etype	src/nvme/types.h	/^enum nvmf_dim_etype {$/;"	g
nvmf_dim_tas	src/nvme/types.h	/^enum nvmf_dim_tas {$/;"	g
nvmf_disc_eflags	src/nvme/types.h	/^enum nvmf_disc_eflags {$/;"	g
nvmf_disc_log_entry	src/nvme/types.h	/^struct nvmf_disc_log_entry {$/;"	s
nvmf_discovery_log	src/nvme/types.h	/^struct nvmf_discovery_log {$/;"	s
nvmf_eflags_str	src/nvme/fabrics.c	/^const char *nvmf_eflags_str(__u16 eflags)$/;"	f
nvmf_exat_len	src/nvme/util.h	/^static inline __u16 nvmf_exat_len(size_t val_len)$/;"	f
nvmf_exat_ptr_next	src/nvme/util.c	/^struct nvmf_ext_attr *nvmf_exat_ptr_next(struct nvmf_ext_attr *p)$/;"	f
nvmf_exat_size	src/nvme/util.h	/^static inline __u16 nvmf_exat_size(size_t val_len)$/;"	f
nvmf_exattype	src/nvme/types.h	/^enum nvmf_exattype {$/;"	g
nvmf_ext_attr	src/nvme/types.h	/^struct nvmf_ext_attr {$/;"	s
nvmf_ext_die	src/nvme/types.h	/^struct nvmf_ext_die {$/;"	s
nvmf_fill_die	src/nvme/fabrics.c	/^static void nvmf_fill_die(struct nvmf_ext_die *die, struct nvme_host *h,$/;"	f	file:
nvmf_get_discovery_log	src/nvme/fabrics.c	/^int nvmf_get_discovery_log(nvme_ctrl_t c, struct nvmf_discovery_log **logp,$/;"	f
nvmf_get_discovery_wargs	src/nvme/fabrics.c	/^struct nvmf_discovery_log *nvmf_get_discovery_wargs(struct nvme_get_discovery_args *args)$/;"	f
nvmf_get_tel	src/nvme/fabrics.c	/^static __u32 nvmf_get_tel(const char *hostsymname)$/;"	f	file:
nvmf_hostid_from_file	src/nvme/fabrics.c	/^char *nvmf_hostid_from_file()$/;"	f
nvmf_hostnqn_from_file	src/nvme/fabrics.c	/^char *nvmf_hostnqn_from_file()$/;"	f
nvmf_hostnqn_generate	src/nvme/fabrics.c	/^char *nvmf_hostnqn_generate()$/;"	f
nvmf_is_registration_supported	src/nvme/fabrics.c	/^bool nvmf_is_registration_supported(nvme_ctrl_t c)$/;"	f
nvmf_log_discovery_lid_support	src/nvme/types.h	/^enum nvmf_log_discovery_lid_support {$/;"	g
nvmf_log_discovery_lsp	src/nvme/types.h	/^enum nvmf_log_discovery_lsp {$/;"	g
nvmf_prtype_str	src/nvme/fabrics.c	/^const char *nvmf_prtype_str(__u8 prtype)$/;"	f
nvmf_qptype_str	src/nvme/fabrics.c	/^const char *nvmf_qptype_str(__u8 qptype)$/;"	f
nvmf_rdma_cms	src/nvme/types.h	/^enum nvmf_rdma_cms {$/;"	g
nvmf_rdma_prtype	src/nvme/types.h	/^enum nvmf_rdma_prtype {$/;"	g
nvmf_rdma_qptype	src/nvme/types.h	/^enum nvmf_rdma_qptype {$/;"	g
nvmf_read_file	src/nvme/fabrics.c	/^static char *nvmf_read_file(const char *f, int len)$/;"	f	file:
nvmf_register_ctrl	src/nvme/fabrics.c	/^int nvmf_register_ctrl(nvme_ctrl_t c, enum nvmf_dim_tas tas, __u32 *result)$/;"	f
nvmf_sectype_str	src/nvme/fabrics.c	/^const char *nvmf_sectype_str(__u8 sectype)$/;"	f
nvmf_status	src/nvme/util.c	/^static const char * const nvmf_status[] = {$/;"	v	file:
nvmf_subtype_str	src/nvme/fabrics.c	/^const char *nvmf_subtype_str(__u8 subtype)$/;"	f
nvmf_tcp_sectype	src/nvme/types.h	/^enum nvmf_tcp_sectype {$/;"	g
nvmf_treq	src/nvme/types.h	/^enum nvmf_treq {$/;"	g
nvmf_treq_str	src/nvme/fabrics.c	/^const char *nvmf_treq_str(__u8 treq)$/;"	f
nvmf_trtype	src/nvme/types.h	/^enum nvmf_trtype {$/;"	g
nvmf_trtype_str	src/nvme/fabrics.c	/^const char *nvmf_trtype_str(__u8 trtype)$/;"	f
nvmf_tsas	src/nvme/types.h	/^union nvmf_tsas {$/;"	u
nvmf_update_config	src/nvme/fabrics.c	/^void nvmf_update_config(nvme_ctrl_t c, const struct nvme_fabrics_config *cfg)$/;"	f
nvmset_id	src/nvme/types.h	/^	__le16	nvmset_id;$/;"	m	struct:nvme_change_ns_event
nvmsetid	src/nvme/types.h	/^	__le16			nvmsetid;$/;"	m	struct:nvme_id_ns
nvmsetid	src/nvme/types.h	/^	__le16			nvmsetid;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
nvmsetid	src/nvme/types.h	/^	__le16			nvmsetid;$/;"	m	struct:nvme_nvmset_attr
nvmsetid	src/nvme/types.h	/^	__le16	nvmsetid;$/;"	m	struct:nvme_id_independent_id_ns
nvmsetid	src/nvme/types.h	/^	__le16	nvmsetid;$/;"	m	struct:nvme_media_unit_stat_desc
nvmsetid	src/nvme/types.h	/^	__le16	nvmsetid[];$/;"	m	struct:nvme_end_grp_config_desc
nvmsr	src/nvme/types.h	/^	__u8			nvmsr;$/;"	m	struct:nvme_id_ctrl
nvq	src/nvme/types.h	/^	__le16 nvq;$/;"	m	struct:nvme_secondary_ctrl
nwpc	src/nvme/types.h	/^	__u8			nwpc;$/;"	m	struct:nvme_id_ctrl
oacs	src/nvme/types.h	/^	__le16			oacs;$/;"	m	struct:nvme_id_ctrl
oaes	src/nvme/types.h	/^	__le32			oaes;$/;"	m	struct:nvme_id_ctrl
ocfs	src/nvme/types.h	/^	__le16			ocfs;$/;"	m	struct:nvme_id_ctrl
oem_id	src/nvme/nbft.h	/^	char oem_id[6];$/;"	m	struct:nbft_header
oem_revision	src/nvme/nbft.h	/^	__le32 oem_revision;$/;"	m	struct:nbft_header
oem_table_id	src/nvme/nbft.h	/^	char oem_table_id[8];$/;"	m	struct:nbft_header
ofcs	src/nvme/types.h	/^	__le16			ofcs;$/;"	m	struct:nvme_id_ctrl
offset	src/nvme/api-types.h	/^	__u32 offset;$/;"	m	struct:nvme_fw_download_args
offset	src/nvme/api-types.h	/^	int offset;$/;"	m	struct:nvme_get_property_args
offset	src/nvme/api-types.h	/^	int offset;$/;"	m	struct:nvme_set_property_args
offset	src/nvme/nbft.h	/^	__le32 offset;$/;"	m	struct:nbft_heap_obj
offset	test/mi.c	/^	uint32_t offset;$/;"	m	struct:fw_download_info	file:
ofi	src/nvme/api-types.h	/^	__u8 ofi;$/;"	m	struct:nvme_lockdown_args
oipbp	src/nvme/api-types.h	/^	bool oipbp;$/;"	m	struct:nvme_sanitize_nvm_args
old_fw_rev	src/nvme/types.h	/^	__le64	old_fw_rev;$/;"	m	struct:nvme_fw_commit_event
oncs	src/nvme/types.h	/^	__le16			oncs;$/;"	m	struct:nvme_id_ctrl
op	src/nvme/api-types.h	/^	__u8 op;$/;"	m	struct:nvme_capacity_mgmt_args
op	test/mi.c	/^	} op;$/;"	m	struct:attach_op	typeref:enum:attach_op::__anon8	file:
op_in_prog	src/nvme/types.h	/^	__u8	 op_in_prog;$/;"	m	struct:nvme_power_on_reset_info_list
opc	src/nvme/types.h	/^	__u8	opc;$/;"	m	struct:nvme_mi_osc
opcode	src/nvme/ioctl.h	/^	__u8	opcode;$/;"	m	struct:nvme_passthru_cmd
opcode	src/nvme/ioctl.h	/^	__u8	opcode;$/;"	m	struct:nvme_uring_cmd
opcode	src/nvme/ioctl.h	/^	__u8    opcode;$/;"	m	struct:nvme_passthru_cmd64
opcode	src/nvme/mi.h	/^	__u8	opcode;$/;"	m	struct:nvme_mi_admin_req_hdr
opcode	src/nvme/mi.h	/^	__u8	opcode;$/;"	m	struct:nvme_mi_mi_req_hdr
opcode	src/nvme/types.h	/^	__u8	opcode;$/;"	m	struct:nvme_error_log_page
opcode	test/ioctl/mock.h	/^	uint8_t opcode;$/;"	m	struct:mock_cmd
open_uevent	examples/telemetry-listen.c	/^static int open_uevent(nvme_ctrl_t c)$/;"	f	file:
ops	src/nvme/mi-mctp.c	/^static struct __mi_mctp_socket_ops ops = {$/;"	v	typeref:struct:__mi_mctp_socket_ops	file:
ops	test/mi-mctp.c	/^static struct __mi_mctp_socket_ops ops = {$/;"	v	typeref:struct:__mi_mctp_socket_ops	file:
options	src/nvme/private.h	/^	struct nvme_fabric_options *options;$/;"	m	struct:nvme_root	typeref:struct:nvme_root::nvme_fabric_options
osc	src/nvme/types.h	/^	__le16	osc;$/;"	m	struct:nvme_streams_directive_status
ot	src/nvme/api-types.h	/^	bool ot;$/;"	m	struct:nvme_get_log_args
out_data	test/ioctl/mock.h	/^	const void *out_data;$/;"	m	struct:mock_cmd
output_blockhead	scripts/kernel-doc	/^sub output_blockhead {$/;"	s
output_blockhead_man	scripts/kernel-doc	/^sub output_blockhead_man(%) {$/;"	s
output_blockhead_none	scripts/kernel-doc	/^sub output_blockhead_none(%) {$/;"	s
output_blockhead_rst	scripts/kernel-doc	/^sub output_blockhead_rst(%) {$/;"	s
output_declaration	scripts/kernel-doc	/^sub output_declaration {$/;"	s
output_enum_man	scripts/kernel-doc	/^sub output_enum_man(%) {$/;"	s
output_enum_none	scripts/kernel-doc	/^sub output_enum_none(%) {$/;"	s
output_enum_rst	scripts/kernel-doc	/^sub output_enum_rst(%) {$/;"	s
output_function_man	scripts/kernel-doc	/^sub output_function_man(%) {$/;"	s
output_function_none	scripts/kernel-doc	/^sub output_function_none(%) {$/;"	s
output_function_rst	scripts/kernel-doc	/^sub output_function_rst(%) {$/;"	s
output_highlight	scripts/kernel-doc	/^sub output_highlight {$/;"	s
output_highlight_rst	scripts/kernel-doc	/^sub output_highlight_rst {$/;"	s
output_section_rst	scripts/kernel-doc	/^sub output_section_rst(%) {$/;"	s
output_struct_man	scripts/kernel-doc	/^sub output_struct_man(%) {$/;"	s
output_struct_none	scripts/kernel-doc	/^sub output_struct_none(%) {$/;"	s
output_struct_rst	scripts/kernel-doc	/^sub output_struct_rst(%) {$/;"	s
output_typedef_man	scripts/kernel-doc	/^sub output_typedef_man(%) {$/;"	s
output_typedef_none	scripts/kernel-doc	/^sub output_typedef_none(%) {$/;"	s
output_typedef_rst	scripts/kernel-doc	/^sub output_typedef_rst(%) {$/;"	s
over_temp	src/nvme/types.h	/^	__u8	over_temp;$/;"	m	struct:nvme_thermal_exc_event
ovrpat	src/nvme/api-types.h	/^	__u32 ovrpat;$/;"	m	struct:nvme_sanitize_nvm_args
owpass	src/nvme/api-types.h	/^	__u8 owpass;$/;"	m	struct:nvme_sanitize_nvm_args
ows	src/nvme/types.h	/^	__le32			ows;$/;"	m	struct:nvme_nvmset_attr
ozcs	src/nvme/types.h	/^	__le16			ozcs;$/;"	m	struct:nvme_zns_id_ns
parm_error_location	src/nvme/types.h	/^	__le16	parm_error_location;$/;"	m	struct:nvme_error_log_page
parse_json	src/nvme/json.c	/^static struct json_object *parse_json(nvme_root_t r, int fd)$/;"	f	file:
parse_mctp	examples/mi-conf.c	/^static int parse_mctp(const char *devstr, unsigned int *net, uint8_t *eid)$/;"	f	file:
parse_option	src/nvme/fabrics.c	649;"	d	file:
parse_raw_nbft	src/nvme/nbft.c	/^static int parse_raw_nbft(struct nbft_info *nbft)$/;"	f	file:
parser	libnvme/tests/test-nbft.py	/^    parser = ArgumentParser(description="Test NBFT")$/;"	v	class:Testclass
path_status	src/nvme/util.c	/^static const char * const path_status[] = {$/;"	v	file:
paths	src/nvme/private.h	/^	struct list_head paths;$/;"	m	struct:nvme_ctrl	typeref:struct:nvme_ctrl::list_head
paths	src/nvme/private.h	/^	struct list_head paths;$/;"	m	struct:nvme_ns	typeref:struct:nvme_ns::list_head
pcc	src/nvme/types.h	/^	__le64	pcc;$/;"	m	struct:nvme_persistent_event_log
pci_sbdf	src/nvme/nbft.h	/^	__le32 pci_sbdf;$/;"	m	struct:nbft_hfi_info_tcp
pci_sbdf	src/nvme/nbft.h	/^	__u32 pci_sbdf;$/;"	m	struct:nbft_info_hfi_info_tcp
pcid	src/nvme/types.h	/^	__le16 pcid;$/;"	m	struct:nvme_secondary_ctrl
pcie	src/nvme/types.h	/^		struct nvme_mi_port_pcie pcie;$/;"	m	union:nvme_mi_read_port_info::__anon4	typeref:struct:nvme_mi_read_port_info::__anon4::nvme_mi_port_pcie
pdc_enabled	src/nvme/private.h	/^	bool pdc_enabled;$/;"	m	struct:nvme_host
pdc_enabled_valid	src/nvme/private.h	/^	bool pdc_enabled_valid; \/* set if pdc_enabled doesn't have an undefined$/;"	m	struct:nvme_host
pdlu	src/nvme/types.h	/^	__u8	pdlu;$/;"	m	struct:nvme_mi_ctrl_health_status
pdlu	src/nvme/types.h	/^	__u8	pdlu;$/;"	m	struct:nvme_mi_nvm_ss_health_status
pdu_header_digest_required	src/nvme/nbft.h	/^	bool pdu_header_digest_required;$/;"	m	struct:nbft_info_subsystem_ns
pelpid	src/nvme/types.h	/^	__le16	pelpid;$/;"	m	struct:nvme_persistent_event_entry
pels	src/nvme/types.h	/^	__le32			pels;$/;"	m	struct:nvme_id_ctrl
percent_used	src/nvme/types.h	/^	__u8			percent_used;$/;"	m	struct:nvme_smart_log
percent_used	src/nvme/types.h	/^	__u8	percent_used;$/;"	m	struct:nvme_endurance_group_log
percent_used	src/nvme/types.h	/^	__u8	percent_used;$/;"	m	struct:nvme_media_unit_stat_desc
persistent	src/nvme/private.h	/^	bool persistent;$/;"	m	struct:nvme_ctrl
phndl	src/nvme/types.h	/^	__le16			phndl[128];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
phndl	src/nvme/types.h	/^	__le16 phndl;$/;"	m	struct:nvme_feat_fdp_events_cdw11
phy_slot	src/nvme/private.h	/^	char *phy_slot;$/;"	m	struct:nvme_ctrl
pi	src/nvme/api-types.h	/^	enum nvme_cmd_format_pi pi;$/;"	m	struct:nvme_format_nvm_args	typeref:enum:nvme_format_nvm_args::nvme_cmd_format_pi
pi	src/nvme/types.h	/^	__u8	pi;$/;"	m	struct:nvme_mi_vpd_ppmra
pi	test/mi.c	/^	__u8 pi;$/;"	m	struct:format_data	file:
piaoff	src/nvme/types.h	/^	__u8	piaoff;$/;"	m	struct:nvme_mi_vpd_hdr
pic	src/nvme/types.h	/^	__u8	pic;$/;"	m	struct:nvme_nvm_id_ns
pid	src/nvme/types.h	/^	__le16 pid;$/;"	m	struct:nvme_fdp_event
pid	src/nvme/types.h	/^	__le16 pid;$/;"	m	struct:nvme_fdp_ruh_status_desc
pif	src/nvme/api-types.h	/^	__u8 pif;$/;"	m	struct:nvme_io_args
pil	src/nvme/api-types.h	/^	enum nvme_cmd_format_pil pil;$/;"	m	struct:nvme_format_nvm_args	typeref:enum:nvme_format_nvm_args::nvme_cmd_format_pil
pil	test/mi.c	/^	__u8 pil;$/;"	m	struct:format_data	file:
pkey	src/nvme/types.h	/^		__le16	pkey;$/;"	m	struct:nvmf_tsas::rdma
pn	src/nvme/types.h	/^	__u8	pn;$/;"	m	struct:nvme_mi_port_pcie
pn	src/nvme/types.h	/^	__u8	pn;$/;"	m	struct:nvme_mi_vpd_ppmra
poh	src/nvme/types.h	/^	__le64			poh;$/;"	m	struct:nvme_st_result
poh	src/nvme/types.h	/^	__u8	poh[16];$/;"	m	struct:nvme_persistent_event_log
poll	src/nvme/private.h	/^	int (*poll)(struct pollfd *, nfds_t, int);$/;"	m	struct:__mi_mctp_socket_ops
poll_data	test/mi-mctp.c	/^	void		*poll_data;$/;"	m	struct:test_peer	file:
poll_fn	test/mi-mctp.c	/^	poll_test_fn	poll_fn;$/;"	m	struct:test_peer	file:
poll_fn_err	test/mi-mctp.c	/^static int poll_fn_err(struct test_peer *peer, struct pollfd *fds,$/;"	f	file:
poll_fn_mpr_poll	test/mi-mctp.c	/^static int poll_fn_mpr_poll(struct test_peer *peer, struct pollfd *fds,$/;"	f	file:
poll_fn_timeout	test/mi-mctp.c	/^static int poll_fn_timeout(struct test_peer *peer, struct pollfd *fds,$/;"	f	file:
poll_fn_timeout_value	test/mi-mctp.c	/^static int poll_fn_timeout_value(struct test_peer *peer, struct pollfd *fds,$/;"	f	file:
poll_no	test/mi-mctp.c	/^	int poll_no;$/;"	m	struct:mpr_poll_info	file:
poll_test_fn	test/mi-mctp.c	/^typedef int (*poll_test_fn)(struct test_peer *peer,$/;"	t	file:
port_types	examples/mi-mctp.c	/^} port_types[] = {$/;"	v	typeref:struct:__anon9	file:
portid	src/nvme/types.h	/^	__le16			portid;$/;"	m	struct:nvmf_ext_die
portid	src/nvme/types.h	/^	__le16		portid;$/;"	m	struct:nvmf_disc_log_entry
portid	src/nvme/types.h	/^	__le16	portid;$/;"	m	struct:nvme_primary_ctrl_cap
portid	src/nvme/types.h	/^	__u8	portid;$/;"	m	struct:nvme_mi_read_ctrl_info
portlcl	src/nvme/types.h	/^	__u8		portlcl;$/;"	m	struct:nvmf_dim_data
portt	src/nvme/types.h	/^	__u8	portt;$/;"	m	struct:nvme_mi_read_port_info
power_cycles	src/nvme/types.h	/^	__u8			power_cycles[16];$/;"	m	struct:nvme_smart_log
power_on_hours	src/nvme/types.h	/^	__u8			power_on_hours[16];$/;"	m	struct:nvme_smart_log
power_on_ml_seconds	src/nvme/types.h	/^	__le64	 power_on_ml_seconds;$/;"	m	struct:nvme_power_on_reset_info_list
ppi	src/nvme/types.h	/^	__u8	ppi;$/;"	m	struct:nvme_mi_vpd_ppmra
ppmra	src/nvme/types.h	/^		struct nvme_mi_vpd_ppmra ppmra;$/;"	m	union:nvme_mi_vpd_mr_common::__anon5	typeref:struct:nvme_mi_vpd_mr_common::__anon5::nvme_mi_vpd_ppmra
prev	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::
previous_timestamp	src/nvme/types.h	/^	__le64	previous_timestamp;$/;"	m	struct:nvme_time_stamp_change_event
prhbt	src/nvme/api-types.h	/^	__u8 prhbt;$/;"	m	struct:nvme_lockdown_args
pri	src/nvme/types.h	/^	__le16	pri;$/;"	m	struct:nvme_mi_read_ctrl_info
prii	src/nvme/types.h	/^	__u8	prii;$/;"	m	struct:nvme_mi_read_ctrl_info
primary	src/nvme/nbft.h	/^	enum nbft_info_primary_admin_host_flag primary;$/;"	m	struct:nbft_info_host	typeref:enum:nbft_info_host::nbft_info_primary_admin_host_flag
primary_discovery_ctrl_index	src/nvme/nbft.h	/^	__u8 primary_discovery_ctrl_index;$/;"	m	struct:nbft_ssns
primary_dns	src/nvme/nbft.h	/^	__u8 primary_dns[16];$/;"	m	struct:nbft_hfi_info_tcp
primary_dns_ipaddr	src/nvme/nbft.h	/^	char primary_dns_ipaddr[40];$/;"	m	struct:nbft_info_hfi_info_tcp
primary_hfi_desc_index	src/nvme/nbft.h	/^	__u8 primary_hfi_desc_index;$/;"	m	struct:nbft_ssns
prinfor	src/nvme/api-types.h	/^	__u8 prinfor;$/;"	m	struct:nvme_copy_args
prinfow	src/nvme/api-types.h	/^	__u8 prinfow;$/;"	m	struct:nvme_copy_args
print_discover_log	examples/discover-loop.c	/^static void print_discover_log(struct nvmf_discovery_log *log)$/;"	f	file:
print_hex	test/nbft/nbft-dump.c	/^static void print_hex(unsigned char *buf, int len)$/;"	f	file:
print_hex	test/test.c	/^static void print_hex(const uint8_t *x, int len)$/;"	f	file:
print_lineno	scripts/kernel-doc	/^sub print_lineno {$/;"	s
print_nbft	test/nbft/nbft-dump.c	/^static void print_nbft(struct nbft_info *table)$/;"	f	file:
print_uuid_hex	test/uuid.c	/^static void print_uuid_hex(const unsigned char uuid[NVME_UUID_LEN])$/;"	f	file:
process_body	scripts/kernel-doc	/^sub process_body($$) {$/;"	s
process_docblock	scripts/kernel-doc	/^sub process_docblock($$) {$/;"	s
process_export_file	scripts/kernel-doc	/^sub process_export_file($) {$/;"	s
process_file	scripts/kernel-doc	/^sub process_file($) {$/;"	s
process_inline	scripts/kernel-doc	/^sub process_inline($$) {$/;"	s
process_name	scripts/kernel-doc	/^sub process_name($$) {$/;"	s
process_normal	scripts/kernel-doc	/^sub process_normal() {$/;"	s
process_proto	scripts/kernel-doc	/^sub process_proto($$) {$/;"	s
process_proto_function	scripts/kernel-doc	/^sub process_proto_function($$) {$/;"	s
process_proto_type	scripts/kernel-doc	/^sub process_proto_type($$) {$/;"	s
project	doc/conf.py	/^project = 'libnvme'$/;"	v
prtype	src/nvme/types.h	/^		__u8	prtype;$/;"	m	struct:nvmf_tsas::rdma
prtypes	src/nvme/fabrics.c	/^static const char * const prtypes[] = {$/;"	v	file:
psd	src/nvme/types.h	/^	struct nvme_id_psd	psd[32];$/;"	m	struct:nvme_id_ctrl	typeref:struct:nvme_id_ctrl::nvme_id_psd
ptpls	src/nvme/types.h	/^	__u8	ptpls;$/;"	m	struct:nvme_resv_status
push_parameter	scripts/kernel-doc	/^sub push_parameter($$$$$) {$/;"	s
qptype	src/nvme/types.h	/^		__u8	qptype;$/;"	m	struct:nvmf_tsas::rdma
qptypes	src/nvme/fabrics.c	/^static const char * const qptypes[] = {$/;"	v	file:
queue_count	src/nvme/private.h	/^	char *queue_count;$/;"	m	struct:nvme_ctrl
queue_size	src/nvme/fabrics.h	/^	int queue_size;$/;"	m	struct:nvme_fabrics_config
queue_size	src/nvme/private.h	/^	bool queue_size;$/;"	m	struct:nvme_fabric_options
quirks	src/nvme/private.h	/^	unsigned long quirks;$/;"	m	struct:nvme_mi_ep
r	examples/discover-loop.py	/^r = None$/;"	v
r	examples/discover-loop.py	/^r = nvme.root()$/;"	v
r	src/nvme/private.h	/^	struct nvme_root *r;$/;"	m	struct:nvme_host	typeref:struct:nvme_host::nvme_root
r	test/tree.py	/^r = libnvme.nvme_root()$/;"	v
rab	src/nvme/types.h	/^	__u8			rab;$/;"	m	struct:nvme_id_ctrl
racqa	src/nvme/api-types.h	/^	enum nvme_resv_racqa racqa;$/;"	m	struct:nvme_resv_acquire_args	typeref:enum:nvme_resv_acquire_args::nvme_resv_racqa
rae	src/nvme/api-types.h	/^	bool rae;$/;"	m	struct:nvme_get_log_args
random_uuid_test	test/uuid.c	/^static void random_uuid_test(void)$/;"	f	file:
rar	src/nvme/types.h	/^			__le32	rar;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified::__anon6::__anon7
ratype	src/nvme/types.h	/^	__u8	ratype;$/;"	m	struct:nvme_lbas_ns_element
raw_nbft	src/nvme/nbft.h	/^	__u8 *raw_nbft;$/;"	m	struct:nbft_info
raw_nbft_size	src/nvme/nbft.h	/^	ssize_t raw_nbft_size;$/;"	m	struct:nbft_info
rchksum	src/nvme/types.h	/^	__u8	rchksum;$/;"	m	struct:nvme_mi_vpd_mr_common
rci	src/nvme/types.h	/^	__le32	rci;$/;"	m	struct:nvme_persistent_event_log
rcsts	src/nvme/types.h	/^	__u8	rcsts;$/;"	m	struct:nvme_registered_ctrl
rcsts	src/nvme/types.h	/^	__u8	rcsts;$/;"	m	struct:nvme_registered_ctrl_ext
rdma	src/nvme/types.h	/^	struct rdma {$/;"	s	union:nvmf_tsas
rdma	src/nvme/types.h	/^	} rdma;$/;"	m	union:nvmf_tsas	typeref:struct:nvmf_tsas::rdma
read_discovery	src/nvme/nbft.c	/^static int read_discovery(struct nbft_info *nbft,$/;"	f	file:
read_discovery_descriptors	src/nvme/nbft.c	/^static void read_discovery_descriptors(struct nbft_info *nbft, int num_disc,$/;"	f	file:
read_file	src/nvme/util.c	/^static size_t read_file(const char * fname, char *buffer, size_t *bufsz)$/;"	f	file:
read_hfi	src/nvme/nbft.c	/^static int read_hfi(struct nbft_info *nbft,$/;"	f	file:
read_hfi_descriptors	src/nvme/nbft.c	/^static void read_hfi_descriptors(struct nbft_info *nbft, int num_hfi,$/;"	f	file:
read_hfi_info_tcp	src/nvme/nbft.c	/^static int read_hfi_info_tcp(struct nbft_info *nbft,$/;"	f	file:
read_security	src/nvme/nbft.c	/^static int read_security(struct nbft_info *nbft,$/;"	f	file:
read_security_descriptors	src/nvme/nbft.c	/^static void read_security_descriptors(struct nbft_info *nbft, int num_sec,$/;"	f	file:
read_ssns	src/nvme/nbft.c	/^static int read_ssns(struct nbft_info *nbft,$/;"	f	file:
read_ssns_descriptors	src/nvme/nbft.c	/^static void read_ssns_descriptors(struct nbft_info *nbft, int num_ssns,$/;"	f	file:
read_ssns_exended_info	src/nvme/nbft.c	/^static int read_ssns_exended_info(struct nbft_info *nbft,$/;"	f	file:
read_variant_basic	src/nvme/mi-mctp.c	/^static int read_variant_basic(DBusMessageIter *var, int type, void *val)$/;"	f	file:
recfmt	src/nvme/types.h	/^	__le16		recfmt;$/;"	m	struct:nvmf_discovery_log
reconnect_delay	src/nvme/fabrics.h	/^	int reconnect_delay;$/;"	m	struct:nvme_fabrics_config
reconnect_delay	src/nvme/private.h	/^	bool reconnect_delay;$/;"	m	struct:nvme_fabric_options
recvmsg	src/nvme/private.h	/^	ssize_t (*recvmsg)(int, struct msghdr *, int);$/;"	m	struct:__mi_mctp_socket_ops
refccap	src/nvme/types.h	/^	__u8	refccap;$/;"	m	struct:nvme_mi_vpd_ppmra
reftag	src/nvme/api-types.h	/^	__u32 reftag;$/;"	m	struct:nvme_io_args
reftag_u64	src/nvme/api-types.h	/^	__u64 reftag_u64;$/;"	m	struct:nvme_io_args
regctl	src/nvme/types.h	/^	__u8	regctl[2];$/;"	m	struct:nvme_resv_status
regctl_ds	src/nvme/types.h	/^		struct nvme_registered_ctrl regctl_ds[0];$/;"	m	union:nvme_resv_status::__anon2	typeref:struct:nvme_resv_status::__anon2::nvme_registered_ctrl
regctl_eds	src/nvme/types.h	/^			struct nvme_registered_ctrl_ext regctl_eds[0];$/;"	m	struct:nvme_resv_status::__anon2::__anon3	typeref:struct:nvme_resv_status::__anon2::__anon3::nvme_registered_ctrl_ext
release	doc/conf.py	/^release = '1.5'$/;"	v
remaining_cmds	test/ioctl/mock.c	/^	size_t remaining_cmds;$/;"	m	struct:mock_cmds	file:
report	src/nvme/api-types.h	/^	struct nvme_resv_status *report;$/;"	m	struct:nvme_resv_report_args	typeref:struct:nvme_resv_report_args::nvme_resv_status
rescap	src/nvme/types.h	/^	__u8			rescap;$/;"	m	struct:nvme_id_ns
rescap	src/nvme/types.h	/^	__u8	rescap;$/;"	m	struct:nvme_id_independent_id_ns
reserved	src/nvme/nbft.h	/^	__u8 reserved[13];$/;"	m	struct:nbft_header
reserved	src/nvme/nbft.h	/^	__u8 reserved[8];$/;"	m	struct:nbft_host
reserved1	src/nvme/nbft.h	/^	__u8 reserved1;$/;"	m	struct:nbft_control
reserved1	src/nvme/nbft.h	/^	__u8 reserved1;$/;"	m	struct:nbft_discovery
reserved1	src/nvme/nbft.h	/^	__u8 reserved1;$/;"	m	struct:nbft_hfi_info_tcp
reserved1	src/nvme/nbft.h	/^	__u8 reserved1;$/;"	m	struct:nbft_security
reserved1	src/nvme/nbft.h	/^	__u8 reserved1;$/;"	m	struct:nbft_ssns
reserved1	src/nvme/nbft.h	/^	__u8 reserved1[12];$/;"	m	struct:nbft_hfi
reserved1	src/nvme/types.h	/^	__le32	reserved1[NVME_LOG_MI_CMD_SUPPORTED_EFFECTS_RESERVED];$/;"	m	struct:nvme_mi_cmd_supported_effects_log
reserved2	src/nvme/nbft.h	/^	__u8 reserved2;$/;"	m	struct:nbft_control
reserved2	src/nvme/nbft.h	/^	__u8 reserved2;$/;"	m	struct:nbft_ssns
reserved2	src/nvme/nbft.h	/^	__u8 reserved2[10];$/;"	m	struct:nbft_hfi
reserved2	src/nvme/nbft.h	/^	__u8 reserved2[14];$/;"	m	struct:nbft_discovery
reserved2	src/nvme/nbft.h	/^	__u8 reserved2[18];$/;"	m	struct:nbft_hfi_info_tcp
reserved2	src/nvme/nbft.h	/^	__u8 reserved2[22];$/;"	m	struct:nbft_security
reserved3	src/nvme/nbft.h	/^	__u8 reserved3;$/;"	m	struct:nbft_control
reserved3	src/nvme/nbft.h	/^	__u8 reserved3[62];$/;"	m	struct:nbft_ssns
reserved4	src/nvme/nbft.h	/^	__u8 reserved4[16];$/;"	m	struct:nbft_control
reset_state	scripts/kernel-doc	/^sub reset_state {$/;"	s
reset_test_peer	test/mi-mctp.c	/^void reset_test_peer(void)$/;"	f
resp_buf	src/nvme/mi-mctp.c	/^	void	*resp_buf;$/;"	m	struct:nvme_mi_transport_mctp	file:
resp_buf_size	src/nvme/mi-mctp.c	/^	size_t	resp_buf_size;$/;"	m	struct:nvme_mi_transport_mctp	file:
result	src/nvme/api-types.h	/^	__u32	*result;$/;"	m	struct:nvme_dim_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_capacity_mgmt_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_copy_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_dev_self_test_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_directive_recv_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_directive_send_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_dsm_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_format_nvm_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_fw_commit_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_fw_download_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_get_features_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_get_lba_status_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_get_log_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_identify_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_io_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_lockdown_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_ns_attach_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_ns_mgmt_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_resv_acquire_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_resv_register_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_resv_release_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_resv_report_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_sanitize_nvm_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_security_receive_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_security_send_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_set_features_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_set_property_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_virtual_mgmt_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_zns_mgmt_recv_args
result	src/nvme/api-types.h	/^	__u32 *result;$/;"	m	struct:nvme_zns_mgmt_send_args
result	src/nvme/api-types.h	/^	__u64 *result;$/;"	m	struct:nvme_zns_append_args
result	src/nvme/fabrics.h	/^	__u32 *result;$/;"	m	struct:nvme_get_discovery_args
result	src/nvme/ioctl.h	/^	__u32	result;$/;"	m	struct:nvme_passthru_cmd
result	src/nvme/ioctl.h	/^	__u64   result;$/;"	m	struct:nvme_passthru_cmd64
result	src/nvme/types.h	/^	struct nvme_st_result	result[NVME_LOG_ST_MAX_RESULTS];$/;"	m	struct:nvme_self_test_log	typeref:struct:nvme_self_test_log::nvme_st_result
result	test/ioctl/mock.h	/^	uint64_t result;$/;"	m	struct:mock_cmd
resv1030	src/nvme/types.h	/^	__u8			resv1030[2];$/;"	m	struct:nvmf_ext_die
resv64	src/nvme/types.h	/^	__u8			resv64[192];$/;"	m	struct:nvmf_ext_die
rev	src/nvme/types.h	/^	__u8	rev;$/;"	m	struct:nvme_metadata_element_desc
rev	src/nvme/types.h	/^	__u8	rev;$/;"	m	struct:nvme_mi_vpd_telem
rf	src/nvme/types.h	/^	__u8	rf;$/;"	m	struct:nvme_mi_vpd_mr_common
rgid	src/nvme/types.h	/^	__le16 rgid;$/;"	m	struct:nvme_fdp_event
rkey	src/nvme/types.h	/^	__le64	rkey;$/;"	m	struct:nvme_registered_ctrl
rkey	src/nvme/types.h	/^	__le64	rkey;$/;"	m	struct:nvme_registered_ctrl_ext
rl	src/nvme/api-types.h	/^	__u16 rl;$/;"	m	struct:nvme_get_lba_status_args
rlen	src/nvme/types.h	/^	__u8	rlen;$/;"	m	struct:nvme_mi_vpd_mr_common
rnlb	src/nvme/types.h	/^	__le32	rnlb;$/;"	m	struct:nvme_lba_rd
rnlpt	src/nvme/types.h	/^	__u8	rnlpt;$/;"	m	struct:nvme_resv_notification_log
rnumzrwa	src/nvme/types.h	/^			__le32	rnumzrwa;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified::__anon6::__anon7
root	libnvme/tests/create-ctrl-obj.py	/^root = nvme.root()      $/;"	v
root	libnvme/tests/gc.py	/^root = None$/;"	v
root	libnvme/tests/gc.py	/^root = nvme.root()$/;"	v
root	src/nvme/private.h	/^	struct nvme_root *root;$/;"	m	struct:nvme_mi_ep	typeref:struct:nvme_mi_ep::nvme_root
root_entry	src/nvme/private.h	/^	struct list_node root_entry;$/;"	m	struct:nvme_mi_ep	typeref:struct:nvme_mi_ep::list_node
root_from_ctrl	src/nvme/private.h	201;"	d
root_from_ns	src/nvme/private.h	202;"	d
ror	src/nvme/types.h	/^			__le32	ror;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified::__anon6::__anon7
round_up	src/nvme/util.h	534;"	d
route_metric	src/nvme/nbft.h	/^	__le16 route_metric;$/;"	m	struct:nbft_hfi_info_tcp
route_metric	src/nvme/nbft.h	/^	__u16 route_metric;$/;"	m	struct:nbft_info_hfi_info_tcp
rp	src/nvme/types.h	/^	__u8			rp;$/;"	m	struct:nvme_lbaf
rpmbs	src/nvme/types.h	/^	__le32			rpmbs;$/;"	m	struct:nvme_id_ctrl
rr4kt	src/nvme/types.h	/^	__le32			rr4kt;$/;"	m	struct:nvme_nvmset_attr
rrega	src/nvme/api-types.h	/^	enum nvme_resv_rrega rrega;$/;"	m	struct:nvme_resv_register_args	typeref:enum:nvme_resv_register_args::nvme_resv_rrega
rrela	src/nvme/api-types.h	/^	enum nvme_resv_rrela rrela;$/;"	m	struct:nvme_resv_release_args	typeref:enum:nvme_resv_release_args::nvme_resv_rrela
rrl	src/nvme/types.h	/^	__le32			rrl;$/;"	m	struct:nvme_zns_id_ns
rrl	src/nvme/types.h	/^	__u8			rrl;$/;"	m	struct:nvme_id_psd
rrl1	src/nvme/types.h	/^	__le32			rrl1;$/;"	m	struct:nvme_zns_id_ns
rrl2	src/nvme/types.h	/^	__le32			rrl2;$/;"	m	struct:nvme_zns_id_ns
rrl3	src/nvme/types.h	/^	__le32			rrl3;$/;"	m	struct:nvme_zns_id_ns
rrls	src/nvme/types.h	/^	__le16			rrls;$/;"	m	struct:nvme_id_ctrl
rrt	src/nvme/types.h	/^	__u8			rrt;$/;"	m	struct:nvme_id_psd
rslba	src/nvme/types.h	/^	__le64	rslba;$/;"	m	struct:nvme_lba_rd
rsnident	src/nvme/types.h	/^	__u8	rsnident[128];$/;"	m	struct:nvme_telemetry_log
rsvd	src/nvme/types.h	/^	__le16	rsvd;$/;"	m	struct:nvme_ns_id_desc
rsvd	src/nvme/types.h	/^	__u8			rsvd;$/;"	m	struct:nvme_st_result
rsvd	src/nvme/types.h	/^	__u8			rsvd[2];$/;"	m	struct:nvme_self_test_log
rsvd	src/nvme/types.h	/^	__u8	rsvd[127];$/;"	m	struct:nvme_id_domain_list
rsvd	src/nvme/types.h	/^	__u8	rsvd[21];$/;"	m	struct:nvme_error_log_page
rsvd	src/nvme/types.h	/^	__u8	rsvd[9];$/;"	m	struct:nvme_streams_directive_params
rsvd	src/nvme/types.h	/^	__u8   rsvd[2048];$/;"	m	struct:nvme_cmd_effects_log
rsvd	src/nvme/types.h	/^	__u8   rsvd[31];$/;"	m	struct:nvme_secondary_ctrl_list
rsvd	src/nvme/types.h	/^	__u8 rsvd;$/;"	m	struct:nvme_timestamp
rsvd0	src/nvme/mi-mctp.c	/^	__u8	rsvd0;$/;"	m	struct:nvme_mi_msg_resp_mpr	file:
rsvd0	src/nvme/mi.h	/^	__le32	rsvd0, rsvd1;$/;"	m	struct:nvme_mi_admin_req_hdr
rsvd0	src/nvme/mi.h	/^	__u8	rsvd0;$/;"	m	struct:nvme_mi_msg_hdr
rsvd0	src/nvme/mi.h	/^	__u8	rsvd0[3];$/;"	m	struct:nvme_mi_admin_resp_hdr
rsvd0	src/nvme/mi.h	/^	__u8	rsvd0[3];$/;"	m	struct:nvme_mi_mi_req_hdr
rsvd0	src/nvme/mi.h	/^	__u8	rsvd0[3];$/;"	m	struct:nvme_mi_msg_resp
rsvd0	src/nvme/types.h	/^	__u8			rsvd0[8];$/;"	m	struct:nvme_copy_range
rsvd0	src/nvme/types.h	/^	__u8			rsvd0[8];$/;"	m	struct:nvme_copy_range_f1
rsvd0	src/nvme/types.h	/^	__u8	rsvd0[32];$/;"	m	struct:nvme_id_uuid_list
rsvd0	src/nvme/types.h	/^	__u8  rsvd0[14];$/;"	m	struct:nvme_fdp_ruh_status
rsvd1	src/nvme/api-types.h	/^	__u8  rsvd1[4];$/;"	m	struct:nvme_zns_append_args
rsvd1	src/nvme/api-types.h	/^	__u8 rsvd1[1];$/;"	m	struct:nvme_io_args
rsvd1	src/nvme/api-types.h	/^	__u8 rsvd1[3];$/;"	m	struct:nvme_ns_mgmt_args
rsvd1	src/nvme/api-types.h	/^	__u8 rsvd1[7];$/;"	m	struct:nvme_format_nvm_args
rsvd1	src/nvme/ioctl.h	/^	__u16	rsvd1;$/;"	m	struct:nvme_passthru_cmd
rsvd1	src/nvme/ioctl.h	/^	__u16	rsvd1;$/;"	m	struct:nvme_uring_cmd
rsvd1	src/nvme/ioctl.h	/^	__u16   rsvd1;$/;"	m	struct:nvme_passthru_cmd64
rsvd1	src/nvme/mi.h	/^	__le32	rsvd0, rsvd1;$/;"	m	struct:nvme_mi_admin_req_hdr
rsvd1	src/nvme/types.h	/^	__u8			rsvd1[127];$/;"	m	struct:nvme_id_nvmset_list
rsvd1	src/nvme/types.h	/^	__u8			rsvd1[15];$/;"	m	struct:nvme_id_uuid_list_entry
rsvd1	src/nvme/types.h	/^	__u8	rsvd1;$/;"	m	struct:nvme_host_metadata
rsvd1	src/nvme/types.h	/^	__u8	rsvd1;$/;"	m	struct:nvme_mi_read_port_info
rsvd1	src/nvme/types.h	/^	__u8	rsvd1;$/;"	m	struct:nvme_nvmset_predictable_lat_log
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[15];$/;"	m	struct:nvme_supported_cap_config_list_log
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[2];$/;"	m	struct:nvme_endurance_group_log
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[3];$/;"	m	struct:nvme_boot_partition
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[3];$/;"	m	struct:nvme_persistent_event_log
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[4095];$/;"	m	struct:nvme_zns_id_ctrl
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[4];$/;"	m	struct:nvme_mi_read_ctrl_info
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[4];$/;"	m	struct:nvme_telemetry_log
rsvd1	src/nvme/types.h	/^	__u8	rsvd1[7];$/;"	m	struct:nvme_firmware_slot
rsvd1	src/nvme/types.h	/^	__u8  rsvd1;$/;"	m	struct:nvme_fdp_event_realloc
rsvd1	src/nvme/types.h	/^	__u8 rsvd1[3];$/;"	m	struct:nvme_fdp_ruh_desc
rsvd1	src/nvme/types.h	/^	__u8 rsvd1[511];$/;"	m	struct:nvme_feat_host_behavior
rsvd1	src/nvme/types.h	/^	__u8 rsvd1[7];$/;"	m	struct:nvme_fdp_ruhu_desc
rsvd10	src/nvme/types.h	/^		__u8	rsvd10[246];$/;"	m	struct:nvmf_tsas::rdma
rsvd10	src/nvme/types.h	/^	__u8			rsvd10[22];$/;"	m	struct:nvmf_ext_die
rsvd10	src/nvme/types.h	/^	__u8	rsvd10[14];$/;"	m	struct:nvme_resv_status
rsvd10	src/nvme/types.h	/^	__u8	rsvd10[6];$/;"	m	struct:nvme_ana_log
rsvd102	src/nvme/types.h	/^	__u8			rsvd102[9];$/;"	m	struct:nvme_id_ctrl
rsvd1024	src/nvme/types.h	/^	__u8			rsvd1024[768];$/;"	m	struct:nvme_id_ctrl
rsvd104	src/nvme/types.h	/^	__u8			rsvd104[280];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd12	src/nvme/types.h	/^	__u8		rsvd12[20];$/;"	m	struct:nvmf_disc_log_entry
rsvd12	src/nvme/types.h	/^	__u8	rsvd12;$/;"	m	struct:nvme_lba_status_desc
rsvd12	src/nvme/types.h	/^	__u8	rsvd12[2];$/;"	m	struct:nvme_lba_status_log
rsvd12	src/nvme/types.h	/^	__u8	rsvd12[4];$/;"	m	struct:nvme_lba_rd
rsvd12	src/nvme/types.h	/^	__u8  rsvd12[4];$/;"	m	struct:nvme_fdp_event_realloc
rsvd13	src/nvme/types.h	/^	__u8	rsvd13[19];$/;"	m	struct:nvme_mi_port_smb
rsvd13	src/nvme/types.h	/^	__u8	rsvd13[3];$/;"	m	struct:nvme_mi_vpd_ppmra
rsvd134	src/nvme/types.h	/^	__u8			rsvd134[119];$/;"	m	struct:nvme_id_ctrl
rsvd14	src/nvme/types.h	/^	__u8		rsvd14[1006];$/;"	m	struct:nvmf_discovery_log
rsvd14	src/nvme/types.h	/^	__u8	rsvd14[18];$/;"	m	struct:nvme_mi_port_pcie
rsvd14	src/nvme/types.h	/^	__u8	rsvd14[2];$/;"	m	struct:nvme_lba_status_desc
rsvd14	src/nvme/types.h	/^	__u8	rsvd14[2];$/;"	m	struct:nvme_telemetry_log
rsvd14	src/nvme/types.h	/^	__u8   rsvd14[18];$/;"	m	struct:nvme_secondary_ctrl
rsvd15	src/nvme/types.h	/^	__u8	rsvd15[4081];$/;"	m	struct:nvme_id_independent_id_ns
rsvd152	src/nvme/types.h	/^	__u8	rsvd152[360];$/;"	m	struct:nvme_nvmset_predictable_lat_log
rsvd16	src/nvme/types.h	/^	__u8			rsvd16[10];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd16	src/nvme/types.h	/^	__u8	rsvd16[16];$/;"	m	struct:nvme_mi_read_ctrl_info
rsvd16	src/nvme/types.h	/^	__u8	rsvd16[4080];$/;"	m	struct:nvme_host_mem_buf_attrs
rsvd16	src/nvme/types.h	/^	__u8	rsvd16[48];$/;"	m	struct:nvme_resv_notification_log
rsvd16	src/nvme/types.h	/^	__u8	rsvd16[4];$/;"	m	struct:nvme_persistent_event_entry
rsvd16	src/nvme/types.h	/^	__u8	rsvd16[8];$/;"	m	struct:nvme_change_ns_event
rsvd16	src/nvme/types.h	/^	__u8     rsvd16[4080];$/;"	m	struct:nvme_id_ctrl_nvm
rsvd16	src/nvme/types.h	/^	__u8  rsvd16[16];$/;"	m	struct:nvme_fdp_ruh_status_desc
rsvd160	src/nvme/types.h	/^	__u8	rsvd160[352];$/;"	m	struct:nvme_endurance_group_log
rsvd17	src/nvme/types.h	/^	__u8	rsvd17;$/;"	m	struct:nvme_mi_vpd_mra
rsvd17	src/nvme/types.h	/^	__u8	rsvd17;$/;"	m	struct:nvme_persistent_event_log
rsvd17	src/nvme/types.h	/^	__u8	rsvd17[15];$/;"	m	struct:nvme_ana_group_desc
rsvd18	src/nvme/types.h	/^	__u8			rsvd18[6];$/;"	m	struct:nvme_copy_range
rsvd18	src/nvme/types.h	/^	__u8			rsvd18[8];$/;"	m	struct:nvme_copy_range_f1
rsvd1807	src/nvme/types.h	/^	__u8			rsvd1807[241];$/;"	m	struct:nvme_id_ctrl
rsvd19	src/nvme/types.h	/^	__u8			rsvd19;$/;"	m	struct:nvme_id_psd
rsvd2	src/nvme/api-types.h	/^	void *rsvd2;$/;"	m	struct:nvme_ns_mgmt_args
rsvd2	src/nvme/ioctl.h	/^	__u32   rsvd2;$/;"	m	struct:nvme_passthru_cmd64
rsvd2	src/nvme/ioctl.h	/^	__u32   rsvd2;$/;"	m	struct:nvme_uring_cmd
rsvd2	src/nvme/types.h	/^	__u8			rsvd2;$/;"	m	struct:nvme_id_psd
rsvd2	src/nvme/types.h	/^	__u8		rsvd2[6];$/;"	m	struct:nvme_zns_changed_zone_log
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[14];$/;"	m	struct:nvme_id_domain_attr
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[14];$/;"	m	struct:nvme_lba_range_type_entry
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[2];$/;"	m	struct:nvme_nss_hw_err_event
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[30];$/;"	m	struct:nvme_plm_config
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[448];$/;"	m	struct:nvme_firmware_slot
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[4];$/;"	m	struct:nvme_media_unit_config_desc
rsvd2	src/nvme/types.h	/^	__u8	rsvd2[6];$/;"	m	struct:nvme_streams_directive_params
rsvd2	src/nvme/types.h	/^	__u8  rsvd2[6];$/;"	m	struct:nvme_fdp_ruhu_log
rsvd20	src/nvme/types.h	/^	__u8	rsvd20[361];$/;"	m	struct:nvme_telemetry_log
rsvd21	src/nvme/types.h	/^	__u8		rsvd21;$/;"	m	struct:nvmf_dim_data
rsvd23	src/nvme/types.h	/^	__u8			rsvd23[9];$/;"	m	struct:nvme_id_psd
rsvd232	src/nvme/types.h	/^	__u8			rsvd232[280];$/;"	m	struct:nvme_smart_log
rsvd24	src/nvme/types.h	/^			__u8	rsvd24[40];$/;"	m	struct:nvme_resv_status::__anon2::__anon3
rsvd24	src/nvme/types.h	/^	__u8  rsvd24;$/;"	m	struct:nvme_feat_fdp_events_cdw11
rsvd268	src/nvme/types.h	/^	__u8	rsvd268[3828];$/;"	m	struct:nvme_nvm_id_ns
rsvd27	src/nvme/types.h	/^	__u8			rsvd27[2];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd28	src/nvme/types.h	/^	__u8  rsvd28[36];$/;"	m	struct:nvme_fdp_config_desc
rsvd288	src/nvme/types.h	/^	__u8			rsvd288[3808];$/;"	m	struct:nvme_id_ns_granularity_list
rsvd3	src/nvme/types.h	/^		__u8	rsvd3[5];$/;"	m	struct:nvmf_tsas::rdma
rsvd3	src/nvme/types.h	/^	__u8	rsvd3[29];$/;"	m	struct:nvme_mi_read_nvm_ss_info
rsvd3	src/nvme/types.h	/^	__u8	rsvd3[5];$/;"	m	struct:nvme_registered_ctrl
rsvd3	src/nvme/types.h	/^	__u8	rsvd3[5];$/;"	m	struct:nvme_registered_ctrl_ext
rsvd3	src/nvme/types.h	/^	__u8  rsvd3;$/;"	m	struct:nvme_fdp_config_log
rsvd31	src/nvme/types.h	/^	__u8			rsvd31[61];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd32	src/nvme/types.h	/^	__u8	rsvd32[32];$/;"	m	struct:nvme_registered_ctrl_ext
rsvd32	src/nvme/types.h	/^	__u8	rsvd32[32];$/;"	m	struct:nvme_zns_desc
rsvd32	src/nvme/types.h	/^	__u8	rsvd32[480];$/;"	m	struct:nvme_sanitize_log_page
rsvd35	src/nvme/types.h	/^	__u8	rsvd35;$/;"	m	struct:nvme_change_ns_event
rsvd35	src/nvme/types.h	/^	__u8  rsvd35[5];$/;"	m	struct:nvme_fdp_event
rsvd358	src/nvme/types.h	/^	__u8			rsvd358[10];$/;"	m	struct:nvme_id_ctrl
rsvd37	src/nvme/types.h	/^	__u8	rsvd37[27];$/;"	m	struct:nvme_mi_vpd_mra
rsvd378	src/nvme/types.h	/^	__u8	rsvd378[102];$/;"	m	struct:nvme_persistent_event_log
rsvd384	src/nvme/types.h	/^	__u8			rsvd384[128];$/;"	m	struct:nvme_id_ctrl
rsvd394	src/nvme/types.h	/^	__u8			rsvd394[105];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd4	src/nvme/types.h	/^	__u8			rsvd4[4];$/;"	m	struct:nvme_nvmset_attr
rsvd4	src/nvme/types.h	/^	__u8		rsvd4[4];$/;"	m	struct:nvmf_dim_data
rsvd4	src/nvme/types.h	/^	__u8	 rsvd4[12];$/;"	m	struct:nvme_power_on_reset_info_list
rsvd4	src/nvme/types.h	/^	__u8	rsvd4[12];$/;"	m	struct:nvme_end_grp_config_desc
rsvd4	src/nvme/types.h	/^	__u8	rsvd4[28];$/;"	m	struct:nvme_nvmset_predictable_lat_log
rsvd4	src/nvme/types.h	/^	__u8	rsvd4[4];$/;"	m	struct:nvme_change_ns_event
rsvd4	src/nvme/types.h	/^	__u8	rsvd4[4];$/;"	m	struct:nvme_zns_desc
rsvd4	src/nvme/types.h	/^	__u8  rsvd4[60];$/;"	m	struct:nvme_fdp_events_log
rsvd4	src/nvme/types.h	/^	char		rsvd4[238];$/;"	m	struct:nvmf_connect_data
rsvd42	src/nvme/types.h	/^	__le16	rsvd42;$/;"	m	struct:nvme_change_ns_event
rsvd48	src/nvme/types.h	/^	__u8			rsvd48[80];$/;"	m	struct:nvme_nvmset_attr
rsvd48	src/nvme/types.h	/^	__u8	rsvd48[16];$/;"	m	struct:nvme_lba_range_type_entry
rsvd48	src/nvme/types.h	/^	__u8	rsvd48[16];$/;"	m	struct:nvme_primary_ctrl_cap
rsvd48	src/nvme/types.h	/^	__u8 rsvd48[16];$/;"	m	struct:nvme_fdp_stats_log
rsvd499	src/nvme/types.h	/^		__u8		rsvd499[13];$/;"	m	union:nvme_ns_mgmt_host_sw_specified::__anon6
rsvd5	src/nvme/types.h	/^	__u8			rsvd5[27];$/;"	m	struct:nvme_id_ns_granularity_list
rsvd5	src/nvme/types.h	/^	__u8	rsvd5[27];$/;"	m	struct:nvme_primary_ctrl_cap
rsvd5	src/nvme/types.h	/^	__u8	rsvd5[3];$/;"	m	struct:nvme_format_nvm_start_event
rsvd5	src/nvme/types.h	/^	__u8	rsvd5[3];$/;"	m	struct:nvme_lba_status
rsvd5	src/nvme/types.h	/^	__u8   rsvd5[3];$/;"	m	struct:nvme_secondary_ctrl
rsvd5	src/nvme/types.h	/^	char		rsvd5[256];$/;"	m	struct:nvmf_connect_data
rsvd53	src/nvme/types.h	/^	__u8			rsvd53[2763];$/;"	m	struct:nvme_zns_id_ns
rsvd56	src/nvme/types.h	/^	__u8	rsvd56[456];$/;"	m	struct:nvme_plm_config
rsvd564	src/nvme/types.h	/^	__u8			rsvd564[204];$/;"	m	struct:nvme_id_ctrl
rsvd6	src/nvme/types.h	/^	__u8	rsvd6;$/;"	m	struct:nvme_mi_vpd_hdr
rsvd6	src/nvme/types.h	/^	__u8	rsvd6;$/;"	m	struct:nvme_mi_vpd_tra
rsvd6	src/nvme/types.h	/^	__u8	rsvd6[10];$/;"	m	struct:nvme_media_unit_stat_log
rsvd6	src/nvme/types.h	/^	__u8	rsvd6[26];$/;"	m	struct:nvme_capacity_config_desc
rsvd6	src/nvme/types.h	/^	__u8	rsvd6[26];$/;"	m	struct:nvme_endurance_group_log
rsvd6	src/nvme/types.h	/^	__u8	rsvd6[2];$/;"	m	struct:nvme_sanitize_compln_event
rsvd600	src/nvme/types.h	/^	__u8		rsvd600[424];$/;"	m	struct:nvmf_dim_data
rsvd64	src/nvme/types.h	/^	__u8		rsvd64[192];$/;"	m	struct:nvmf_disc_log_entry
rsvd64	src/nvme/types.h	/^	__u8	rsvd64[16];$/;"	m	struct:nvme_end_grp_config_desc
rsvd64	src/nvme/types.h	/^	__u8	rsvd64[4032];$/;"	m	struct:nvme_id_directives
rsvd64	src/nvme/types.h	/^	__u8	rsvd64[64];$/;"	m	struct:nvme_id_domain_attr
rsvd7	src/nvme/types.h	/^	__u8			rsvd7[25];$/;"	m	struct:nvme_smart_log
rsvd7	src/nvme/types.h	/^	__u8	rsvd7[2];$/;"	m	struct:nvme_resv_status
rsvd7	src/nvme/types.h	/^	__u8	rsvd7[6];$/;"	m	struct:nvme_mi_vpd_mra
rsvd72	src/nvme/types.h	/^	__u8	rsvd72[56];$/;"	m	struct:nvme_nvmset_predictable_lat_log
rsvd768	src/nvme/types.h	/^	__u8			rsvd768[3328];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rsvd8	src/nvme/types.h	/^	__u8			rsvd8[56];$/;"	m	struct:nvme_zone_report
rsvd8	src/nvme/types.h	/^	__u8	rsvd8[2];$/;"	m	struct:nvme_mi_nvm_ss_health_status
rsvd8	src/nvme/types.h	/^	__u8	rsvd8[7];$/;"	m	struct:nvme_lbas_ns_element
rsvd8	src/nvme/types.h	/^	__u8	rsvd8[8];$/;"	m	struct:nvme_boot_partition
rsvd8	src/nvme/types.h	/^	__u8  rsvd8[8];$/;"	m	struct:nvme_fdp_config_log
rsvd80	src/nvme/types.h	/^	__u8	rsvd80[4016];$/;"	m	struct:nvme_primary_ctrl_cap
rsvd81	src/nvme/types.h	/^	__u8			rsvd81;$/;"	m	struct:nvme_id_ns
rsvd83	src/nvme/types.h	/^	__u8			rsvd83[9];$/;"	m	struct:nvme_id_ns
rsvd9	src/nvme/types.h	/^	__u8	rsvd9;$/;"	m	struct:nvme_id_independent_id_ns
rsvd9	src/nvme/types.h	/^	__u8	rsvd9[2];$/;"	m	struct:nvme_resv_notification_log
rsvd9	src/nvme/types.h	/^	__u8	rsvd9[3];$/;"	m	struct:nvme_nvm_id_ns
rsvd9	src/nvme/types.h	/^	__u8	rsvd9[7];$/;"	m	struct:nvme_mi_ctrl_health_status
rsvd9	src/nvme/types.h	/^	__u8	rsvd9[7];$/;"	m	struct:nvme_zns_lbafe
rsvd96	src/nvme/types.h	/^	__u8			rsvd96[3];$/;"	m	struct:nvme_id_ns
rsvd96	src/nvme/types.h	/^	__u8			rsvd96[4];$/;"	m	struct:nvme_ns_mgmt_host_sw_specified
rt	src/nvme/api-types.h	/^	enum nvme_virt_mgmt_rt rt;$/;"	m	struct:nvme_virtual_mgmt_args	typeref:enum:nvme_virtual_mgmt_args::nvme_virt_mgmt_rt
rtd3e	src/nvme/types.h	/^	__le32			rtd3e;$/;"	m	struct:nvme_id_ctrl
rtd3r	src/nvme/types.h	/^	__le32			rtd3r;$/;"	m	struct:nvme_id_ctrl
rtype	src/nvme/api-types.h	/^	enum nvme_resv_rtype rtype;$/;"	m	struct:nvme_resv_acquire_args	typeref:enum:nvme_resv_acquire_args::nvme_resv_rtype
rtype	src/nvme/api-types.h	/^	enum nvme_resv_rtype rtype;$/;"	m	struct:nvme_resv_release_args	typeref:enum:nvme_resv_release_args::nvme_resv_rtype
rtype	src/nvme/types.h	/^	__u8	rtype;$/;"	m	struct:nvme_resv_status
ruamw	src/nvme/types.h	/^	__le64 ruamw;$/;"	m	struct:nvme_fdp_ruh_status_desc
ruha	src/nvme/types.h	/^	__u8 ruha;$/;"	m	struct:nvme_fdp_ruhu_desc
ruhid	src/nvme/types.h	/^	__le16 ruhid;$/;"	m	struct:nvme_fdp_ruh_status_desc
ruhid	src/nvme/types.h	/^	__u8  ruhid;$/;"	m	struct:nvme_fdp_event
ruhs	src/nvme/types.h	/^	struct nvme_fdp_ruh_desc ruhs[];$/;"	m	struct:nvme_fdp_config_desc	typeref:struct:nvme_fdp_config_desc::nvme_fdp_ruh_desc
ruhss	src/nvme/types.h	/^	struct nvme_fdp_ruh_status_desc ruhss[];$/;"	m	struct:nvme_fdp_ruh_status	typeref:struct:nvme_fdp_ruh_status::nvme_fdp_ruh_status_desc
ruht	src/nvme/types.h	/^	__u8 ruht;$/;"	m	struct:nvme_fdp_ruh_desc
ruhus	src/nvme/types.h	/^	struct nvme_fdp_ruhu_desc ruhus[];$/;"	m	struct:nvme_fdp_ruhu_log	typeref:struct:nvme_fdp_ruhu_log::nvme_fdp_ruhu_desc
run_test	test/ioctl/discovery.c	/^static void run_test(const char *test_name, void (*test_fn)(nvme_ctrl_t))$/;"	f	file:
run_test	test/mi-mctp.c	/^static void run_test(struct test *test, FILE *logfd, nvme_mi_ep_t ep,$/;"	f	file:
run_test	test/mi.c	/^static void run_test(struct test *test, FILE *logfd, nvme_mi_ep_t ep)$/;"	f	file:
runs	src/nvme/types.h	/^	__le64 runs;$/;"	m	struct:nvme_fdp_config_desc
rv	src/nvme/types.h	/^	__u8	rv;$/;"	m	struct:nvme_persistent_event_log
rwl	src/nvme/types.h	/^	__u8			rwl;$/;"	m	struct:nvme_id_psd
rwt	src/nvme/types.h	/^	__u8			rwt;$/;"	m	struct:nvme_id_psd
rx_buf	test/mi-mctp.c	/^	unsigned char	rx_buf[MAX_BUFSIZ];$/;"	m	struct:test_peer	file:
rx_buf_len	test/mi-mctp.c	/^	size_t		rx_buf_len;$/;"	m	struct:test_peer	file:
rx_errno	test/mi-mctp.c	/^	int		rx_errno;$/;"	m	struct:test_peer	file:
rx_rc	test/mi-mctp.c	/^	ssize_t		rx_rc; \/* if zero, return the sendmsg len *\/$/;"	m	struct:test_peer	file:
rx_test_fn	test/mi-mctp.c	/^typedef int (*rx_test_fn)(struct test_peer *peer, void *buf, size_t len);$/;"	t	file:
s	src/nvme/private.h	/^	struct nvme_subsystem *s;$/;"	m	struct:nvme_ctrl	typeref:struct:nvme_ctrl::nvme_subsystem
s	src/nvme/private.h	/^	struct nvme_subsystem *s;$/;"	m	struct:nvme_ns	typeref:struct:nvme_ns::nvme_subsystem
s	test/tree.c	/^	nvme_subsystem_t s;$/;"	m	struct:test_data	file:
s16	ccan/ccan/short_types/short_types.h	/^typedef int16_t s16;$/;"	t
s32	ccan/ccan/short_types/short_types.h	/^typedef int32_t s32;$/;"	t
s64	ccan/ccan/short_types/short_types.h	/^typedef int64_t s64;$/;"	t
s8	ccan/ccan/short_types/short_types.h	/^typedef int8_t s8;$/;"	t
s_addr	src/nvme/mi-mctp.c	/^	mctp_eid_t		s_addr;$/;"	m	struct:mctp_addr	file:
safe_strlen	test/test-util.c	/^static size_t safe_strlen(const char *p) {$/;"	f	file:
sanact	src/nvme/api-types.h	/^	enum nvme_sanitize_sanact sanact;$/;"	m	struct:nvme_sanitize_nvm_args	typeref:enum:nvme_sanitize_nvm_args::nvme_sanitize_sanact
sani_cap	src/nvme/types.h	/^	__le32	sani_cap;$/;"	m	struct:nvme_sanitize_start_event
sani_cdw10	src/nvme/types.h	/^	__le32	sani_cdw10;$/;"	m	struct:nvme_sanitize_start_event
sani_cdw11	src/nvme/types.h	/^	__le32	sani_cdw11;$/;"	m	struct:nvme_sanitize_start_event
sani_prog	src/nvme/types.h	/^	__le16	sani_prog;$/;"	m	struct:nvme_sanitize_compln_event
sani_status	src/nvme/types.h	/^	__le16	sani_status;$/;"	m	struct:nvme_sanitize_compln_event
sanicap	src/nvme/types.h	/^	__le32			sanicap;$/;"	m	struct:nvme_id_ctrl
sanitize_discovery_log_entry	src/nvme/fabrics.c	/^static void sanitize_discovery_log_entry(struct nvmf_disc_log_entry  *e)$/;"	f	file:
save	src/nvme/api-types.h	/^	bool save;$/;"	m	struct:nvme_set_features_args
save_struct_actual	scripts/kernel-doc	/^sub save_struct_actual($) {$/;"	s
save_telemetry	examples/telemetry-listen.c	/^static void save_telemetry(nvme_ctrl_t c)$/;"	f	file:
sc	src/nvme/types.h	/^	__u8			sc;$/;"	m	struct:nvme_st_result
sc_entry	src/nvme/types.h	/^	struct nvme_secondary_ctrl sc_entry[NVME_ID_SECONDARY_CTRL_MAX];$/;"	m	struct:nvme_secondary_ctrl_list	typeref:struct:nvme_secondary_ctrl_list::nvme_secondary_ctrl
sc_fw	src/nvme/types.h	/^	__u8	sc_fw;$/;"	m	struct:nvme_fw_commit_event
sccn	src/nvme/types.h	/^	__u8	sccn;$/;"	m	struct:nvme_supported_cap_config_list_log
sccsid	src/nvme/util.c	/^const char sccsid[] = "@(#)libnvme " GIT_VERSION;$/;"	v
scdw10	src/nvme/types.h	/^	__le32	scdw10;$/;"	m	struct:nvme_sanitize_log_page
scid	src/nvme/types.h	/^	__le16 scid;$/;"	m	struct:nvme_secondary_ctrl
scp	src/nvme/api-types.h	/^	__u8 scp;$/;"	m	struct:nvme_lockdown_args
scs	src/nvme/types.h	/^	__u8   scs;$/;"	m	struct:nvme_secondary_ctrl
sct	src/nvme/types.h	/^	__u8			sct;$/;"	m	struct:nvme_st_result
sct_fw	src/nvme/types.h	/^	__u8	sct_fw;$/;"	m	struct:nvme_fw_commit_event
sd	src/nvme/mi-mctp.c	/^	int	sd;$/;"	m	struct:nvme_mi_transport_mctp	file:
sd	test/mi-mctp.c	/^	int		sd;$/;"	m	struct:test_peer	file:
sdlba	src/nvme/api-types.h	/^	__u64 sdlba;$/;"	m	struct:nvme_copy_args
seb	src/nvme/types.h	/^	__u8	seb[32];$/;"	m	struct:nvme_persistent_event_log
sec_chan_alg_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj sec_chan_alg_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
sec_hash_func_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj sec_hash_func_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
sec_index	src/nvme/nbft.h	/^	__u8 sec_index;$/;"	m	struct:nbft_discovery
sec_keypath_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj sec_keypath_obj;$/;"	m	struct:nbft_security	typeref:struct:nbft_security::nbft_heap_obj
sec_proto_description	examples/mi-mctp.c	/^static const char *sec_proto_description(uint8_t id)$/;"	f	file:
sec_protos	examples/mi-mctp.c	/^} sec_protos[] = {$/;"	v	typeref:struct:__anon10	file:
secl	src/nvme/nbft.h	/^	__le16 secl;$/;"	m	struct:nbft_control
seco	src/nvme/nbft.h	/^	__le32 seco;$/;"	m	struct:nbft_control
secondary_dns	src/nvme/nbft.h	/^	__u8 secondary_dns[16];$/;"	m	struct:nbft_hfi_info_tcp
secondary_dns_ipaddr	src/nvme/nbft.h	/^	char secondary_dns_ipaddr[40];$/;"	m	struct:nbft_info_hfi_info_tcp
secondary_hfi_assoc_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj secondary_hfi_assoc_obj;$/;"	m	struct:nbft_ssns	typeref:struct:nbft_ssns::nbft_heap_obj
secp	src/nvme/api-types.h	/^	__u8 secp;$/;"	m	struct:nvme_security_receive_args
secp	src/nvme/api-types.h	/^	__u8 secp;$/;"	m	struct:nvme_security_send_args
secret_type	src/nvme/nbft.h	/^	__u8 secret_type;$/;"	m	struct:nbft_security
sectype	src/nvme/types.h	/^		__u8	sectype;$/;"	m	struct:nvmf_tsas::tcp
sectypes	src/nvme/fabrics.c	/^static const char * const sectypes[] = {$/;"	v	file:
security	src/nvme/nbft.h	/^	struct nbft_info_security *security;$/;"	m	struct:nbft_info_discovery	typeref:struct:nbft_info_discovery::nbft_info_security
security	src/nvme/nbft.h	/^	struct nbft_info_security *security;$/;"	m	struct:nbft_info_subsystem_ns	typeref:struct:nbft_info_subsystem_ns::nbft_info_security
security_desc_index	src/nvme/nbft.h	/^	__u8 security_desc_index;$/;"	m	struct:nbft_ssns
security_from_index	src/nvme/nbft.c	/^static struct nbft_info_security *security_from_index(struct nbft_info *nbft, int i)$/;"	f	file:
security_list	src/nvme/nbft.h	/^	struct nbft_info_security **security_list;$/;"	m	struct:nbft_info	typeref:struct:nbft_info::nbft_info_security
secv	src/nvme/nbft.h	/^	__u8 secv;$/;"	m	struct:nbft_control
seg	src/nvme/types.h	/^	__u8			seg;$/;"	m	struct:nvme_st_result
segcap	src/nvme/types.h	/^	__u8	segcap[16];$/;"	m	struct:nvme_end_grp_config_desc
sel	src/nvme/api-types.h	/^	enum nvme_get_features_sel sel;$/;"	m	struct:nvme_get_features_args	typeref:enum:nvme_get_features_args::nvme_get_features_sel
sel	src/nvme/api-types.h	/^	enum nvme_ns_attach_sel sel;$/;"	m	struct:nvme_ns_attach_args	typeref:enum:nvme_ns_attach_args::nvme_ns_attach_sel
sel	src/nvme/api-types.h	/^	enum nvme_ns_mgmt_sel sel;$/;"	m	struct:nvme_ns_mgmt_args	typeref:enum:nvme_ns_mgmt_args::nvme_ns_mgmt_sel
sel_config	src/nvme/types.h	/^	__le16	sel_config;$/;"	m	struct:nvme_media_unit_stat_log
select_all	src/nvme/api-types.h	/^	bool select_all;$/;"	m	struct:nvme_zns_mgmt_send_args
sendmsg	src/nvme/private.h	/^	ssize_t (*sendmsg)(int, const struct msghdr *, int);$/;"	m	struct:__mi_mctp_socket_ops
serial	src/nvme/private.h	/^	char *serial;$/;"	m	struct:nvme_ctrl
serial	src/nvme/private.h	/^	char *serial;$/;"	m	struct:nvme_subsystem
ses	src/nvme/api-types.h	/^	enum nvme_cmd_format_ses ses;$/;"	m	struct:nvme_format_nvm_args	typeref:enum:nvme_format_nvm_args::nvme_cmd_format_ses
ses	test/mi.c	/^	__u8 ses;$/;"	m	struct:format_data	file:
setUp	libnvme/tests/test-nbft.py	/^    def setUp(self):$/;"	m	class:Testclass
set_local_mtu	examples/mi-conf.c	/^int set_local_mtu(DBusConnection *bus, unsigned int net, uint8_t eid,$/;"	f
set_mock_admin_cmds	test/ioctl/mock.c	/^void set_mock_admin_cmds(const struct mock_cmd *cmds, size_t len)$/;"	f
set_mock_cmds	test/ioctl/mock.c	/^static void set_mock_cmds($/;"	f	file:
set_mock_fd	test/ioctl/mock.c	/^void set_mock_fd(int fd)$/;"	f
set_mock_io_cmds	test/ioctl/mock.c	/^void set_mock_io_cmds(const struct mock_cmd *cmds, size_t len)$/;"	f
setup_unaligned_ctrl_list_resp	test/mi-mctp.c	/^static void setup_unaligned_ctrl_list_resp(struct test_peer *peer)$/;"	f	file:
sgls	src/nvme/types.h	/^	__le32			sgls;$/;"	m	struct:nvme_id_ctrl
sgs	src/nvme/types.h	/^	__le16	sgs;$/;"	m	struct:nvme_streams_directive_params
show_ctrl	examples/mi-mctp.c	/^static int show_ctrl(nvme_mi_ep_t ep, uint16_t ctrl_id)$/;"	f	file:
show_ctrl	test/tree.c	/^static void show_ctrl(nvme_ctrl_t c)$/;"	f	file:
show_port	examples/mi-mctp.c	/^static int show_port(nvme_mi_ep_t ep, int portid)$/;"	f	file:
show_port_pcie	examples/mi-mctp.c	/^static void show_port_pcie(struct nvme_mi_read_port_info *port)$/;"	f	file:
show_port_smbus	examples/mi-mctp.c	/^static void show_port_smbus(struct nvme_mi_read_port_info *port)$/;"	f	file:
show_warnings	scripts/kernel-doc	/^sub show_warnings($$) {$/;"	s
show_zns_properties	test/zns.c	/^static void show_zns_properties(nvme_ns_t n)$/;"	f	file:
sid	src/nvme/types.h	/^	__le16	sid[];$/;"	m	struct:nvme_streams_directive_status
signature	src/nvme/nbft.h	/^	char signature[4];$/;"	m	struct:nbft_header
size	src/nvme/types.h	/^	__le16 size;$/;"	m	struct:nvme_fdp_config_desc
size	src/nvme/types.h	/^	__le32 size;$/;"	m	struct:nvme_fdp_config_log
sizeof_args	src/nvme/ioctl.h	194;"	d
slba	src/nvme/api-types.h	/^	__u64 slba;$/;"	m	struct:nvme_get_lba_status_args
slba	src/nvme/api-types.h	/^	__u64 slba;$/;"	m	struct:nvme_io_args
slba	src/nvme/api-types.h	/^	__u64 slba;$/;"	m	struct:nvme_zns_mgmt_recv_args
slba	src/nvme/api-types.h	/^	__u64 slba;$/;"	m	struct:nvme_zns_mgmt_send_args
slba	src/nvme/types.h	/^	__le64			slba;$/;"	m	struct:nvme_copy_range
slba	src/nvme/types.h	/^	__le64			slba;$/;"	m	struct:nvme_copy_range_f1
slba	src/nvme/types.h	/^	__le64	slba;$/;"	m	struct:nvme_dsm_range
slba	src/nvme/types.h	/^	__le64	slba;$/;"	m	struct:nvme_lba_range_type_entry
slot	src/nvme/api-types.h	/^	__u8 slot;$/;"	m	struct:nvme_fw_commit_args
slot	test/mi.c	/^	__u8 slot;$/;"	m	struct:fw_commit_info	file:
slp	examples/discover-loop.py	/^slp = c.supported_log_pages()$/;"	v
sls	src/nvme/types.h	/^	__u8	sls;$/;"	m	struct:nvme_mi_port_pcie
smallest_fpi	src/nvme/types.h	/^	__u8	smallest_fpi;$/;"	m	struct:nvme_format_nvm_compln_event
smb	src/nvme/types.h	/^		struct nvme_mi_port_smb smb;$/;"	m	union:nvme_mi_read_port_info::__anon4	typeref:struct:nvme_mi_read_port_info::__anon4::nvme_mi_port_smb
smbus_freq_str	examples/mi-mctp.c	/^static const char *smbus_freq_str(enum nvme_mi_config_smbus_freq freq)$/;"	f	file:
smbus_freq_val	examples/mi-mctp.c	/^static int smbus_freq_val(const char *str, enum nvme_mi_config_smbus_freq *freq)$/;"	f	file:
smbus_freqs	examples/mi-mctp.c	/^} smbus_freqs[] = {$/;"	v	typeref:struct:__anon11
smctp_addr	src/nvme/mi-mctp.c	/^	struct mctp_addr	smctp_addr;$/;"	m	struct:sockaddr_mctp	typeref:struct:sockaddr_mctp::mctp_addr	file:
smctp_family	src/nvme/mi-mctp.c	/^	unsigned short int	smctp_family;$/;"	m	struct:sockaddr_mctp	file:
smctp_network	src/nvme/mi-mctp.c	/^	unsigned int		smctp_network;$/;"	m	struct:sockaddr_mctp	file:
smctp_tag	src/nvme/mi-mctp.c	/^	__u8			smctp_tag;$/;"	m	struct:sockaddr_mctp	file:
smctp_type	src/nvme/mi-mctp.c	/^	__u8			smctp_type;$/;"	m	struct:sockaddr_mctp	file:
sn	src/nvme/types.h	/^	char			sn[20];$/;"	m	struct:nvme_id_ctrl
sn	src/nvme/types.h	/^	char	sn[20];$/;"	m	struct:nvme_persistent_event_log
sockaddr_mctp	src/nvme/mi-mctp.c	/^struct sockaddr_mctp {$/;"	s	file:
socket	src/nvme/private.h	/^	int (*socket)(int, int, int);$/;"	m	struct:__mi_mctp_socket_ops
spare	src/nvme/types.h	/^	__u8	spare;$/;"	m	struct:nvme_mi_ctrl_health_status
spare_thresh	src/nvme/types.h	/^	__u8			spare_thresh;$/;"	m	struct:nvme_smart_log
sprog	src/nvme/types.h	/^	__le16	sprog;$/;"	m	struct:nvme_sanitize_log_page
spsp0	src/nvme/api-types.h	/^	__u8 spsp0;$/;"	m	struct:nvme_security_receive_args
spsp0	src/nvme/api-types.h	/^	__u8 spsp0;$/;"	m	struct:nvme_security_send_args
spsp1	src/nvme/api-types.h	/^	__u8 spsp1;$/;"	m	struct:nvme_security_receive_args
spsp1	src/nvme/api-types.h	/^	__u8 spsp1;$/;"	m	struct:nvme_security_send_args
sqes	src/nvme/types.h	/^	__u8			sqes;$/;"	m	struct:nvme_id_ctrl
sqid	src/nvme/types.h	/^	__le16	sqid;$/;"	m	struct:nvme_error_log_page
sqsize	src/nvme/private.h	/^	char *sqsize;$/;"	m	struct:nvme_ctrl
ssid	src/nvme/types.h	/^	__le16	ssid;$/;"	m	struct:nvme_mi_read_ctrl_info
ssns_extended_info_desc_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj ssns_extended_info_desc_obj;$/;"	m	struct:nbft_ssns	typeref:struct:nbft_ssns::nbft_heap_obj
ssns_index	src/nvme/nbft.h	/^	__le16 ssns_index;$/;"	m	struct:nbft_ssns_ext_info
ssnsl	src/nvme/nbft.h	/^	__le16 ssnsl;$/;"	m	struct:nbft_control
ssnso	src/nvme/nbft.h	/^	__le32 ssnso;$/;"	m	struct:nbft_control
ssnsv	src/nvme/nbft.h	/^	__u8 ssnsv;$/;"	m	struct:nbft_control
sstat	src/nvme/types.h	/^	__le16	sstat;$/;"	m	struct:nvme_sanitize_log_page
ssvid	src/nvme/types.h	/^	__le16			ssvid;$/;"	m	struct:nvme_id_ctrl
ssvid	src/nvme/types.h	/^	__le16	ssvid;$/;"	m	struct:nvme_mi_read_ctrl_info
ssvid	src/nvme/types.h	/^	__le16	ssvid;$/;"	m	struct:nvme_persistent_event_log
startswith	src/nvme/util.c	/^char *startswith(const char *s, const char *prefix)$/;"	f
state	src/nvme/private.h	/^	char *state;$/;"	m	struct:nvme_ctrl
state	src/nvme/types.h	/^	__u8	state;$/;"	m	struct:nvme_ana_group_desc
status	src/nvme/mi-mctp.c	/^	__u8	status;$/;"	m	struct:nvme_mi_msg_resp_mpr	file:
status	src/nvme/mi.h	/^	__u8	status;$/;"	m	struct:nvme_mi_admin_resp_hdr
status	src/nvme/mi.h	/^	__u8	status;$/;"	m	struct:nvme_mi_mi_resp_hdr
status	src/nvme/mi.h	/^	__u8	status;$/;"	m	struct:nvme_mi_msg_resp
status	src/nvme/types.h	/^	__u8	status;$/;"	m	struct:nvme_lba_status_desc
status	src/nvme/types.h	/^	__u8	status;$/;"	m	struct:nvme_nvmset_predictable_lat_log
status_field	src/nvme/types.h	/^	__le16	status_field;$/;"	m	struct:nvme_error_log_page
status_field	src/nvme/types.h	/^	__le32	status_field;$/;"	m	struct:nvme_format_nvm_compln_event
stc	src/nvme/api-types.h	/^	enum nvme_dst_stc stc;$/;"	m	struct:nvme_dev_self_test_args	typeref:enum:nvme_dev_self_test_args::nvme_dst_stc
storage_tag	src/nvme/api-types.h	/^	__u64 storage_tag;$/;"	m	struct:nvme_io_args
str	examples/mi-mctp.c	/^	const char *str;$/;"	m	struct:__anon11	file:
str	test/uuid.c	/^	const char *str;$/;"	m	struct:test_data	file:
str_check_arg_	ccan/ccan/str/str.h	188;"	d
str_check_arg_	ccan/ccan/str/str.h	193;"	d
str_isalnum	ccan/ccan/str/debug.c	/^int str_isalnum(int i)$/;"	f
str_isalpha	ccan/ccan/str/debug.c	/^int str_isalpha(int i)$/;"	f
str_isascii	ccan/ccan/str/debug.c	/^int str_isascii(int i)$/;"	f
str_isblank	ccan/ccan/str/debug.c	/^int str_isblank(int i)$/;"	f
str_iscntrl	ccan/ccan/str/debug.c	/^int str_iscntrl(int i)$/;"	f
str_isdigit	ccan/ccan/str/debug.c	/^int str_isdigit(int i)$/;"	f
str_isgraph	ccan/ccan/str/debug.c	/^int str_isgraph(int i)$/;"	f
str_islower	ccan/ccan/str/debug.c	/^int str_islower(int i)$/;"	f
str_isprint	ccan/ccan/str/debug.c	/^int str_isprint(int i)$/;"	f
str_ispunct	ccan/ccan/str/debug.c	/^int str_ispunct(int i)$/;"	f
str_isspace	ccan/ccan/str/debug.c	/^int str_isspace(int i)$/;"	f
str_isupper	ccan/ccan/str/debug.c	/^int str_isupper(int i)$/;"	f
str_isxdigit	ccan/ccan/str/debug.c	/^int str_isxdigit(int i)$/;"	f
str_strchr	ccan/ccan/str/debug.c	/^char *str_strchr(const char *haystack, int c)$/;"	f
str_strrchr	ccan/ccan/str/debug.c	/^char *str_strrchr(const char *haystack, int c)$/;"	f
str_strstr	ccan/ccan/str/debug.c	/^char *str_strstr(const char *haystack, const char *needle)$/;"	f
strchomp	src/nvme/fabrics.c	/^static void strchomp(char *str, int max)$/;"	f	file:
strchr	ccan/ccan/str/debug.c	91;"	d	file:
strchr	ccan/ccan/str/str.h	215;"	d
strchr	ccan/ccan/str/str.h	221;"	d
strcount	ccan/ccan/str/str.c	/^size_t strcount(const char *haystack, const char *needle)$/;"	f
strends	ccan/ccan/str/str.h	/^static inline bool strends(const char *str, const char *postfix)$/;"	f
streq	ccan/ccan/str/str.h	21;"	d
streq0	src/nvme/tree.c	/^static bool streq0(const char *s1, const char *s2)$/;"	f	file:
streqcase0	src/nvme/tree.c	/^static bool streqcase0(const char *s1, const char *s2)$/;"	f	file:
stringify	ccan/ccan/str/str.h	59;"	d
stringify_1	ccan/ccan/str/str.h	61;"	d
strrchr	ccan/ccan/str/debug.c	92;"	d	file:
strrchr	ccan/ccan/str/str.h	216;"	d
strrchr	ccan/ccan/str/str.h	223;"	d
strstarts	ccan/ccan/str/str.h	32;"	d
strstr	ccan/ccan/str/debug.c	90;"	d	file:
strstr	ccan/ccan/str/str.h	214;"	d
strstr	ccan/ccan/str/str.h	219;"	d
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_control
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_discovery
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_hfi
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_hfi_info_tcp
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_host
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_security
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_ssns
structure_id	src/nvme/nbft.h	/^	__u8 structure_id;$/;"	m	struct:nbft_ssns_ext_info
sts	src/nvme/api-types.h	/^	__u8 sts;$/;"	m	struct:nvme_io_args
submit	src/nvme/private.h	/^	int (*submit)(struct nvme_mi_ep *ep,$/;"	m	struct:nvme_mi_transport
submit_cb	test/mi.c	/^	test_submit_cb	submit_cb;$/;"	m	struct:test_transport_data	file:
submit_cb_data	test/mi.c	/^	void		*submit_cb_data;$/;"	m	struct:test_transport_data	file:
subnet_mask_prefix	src/nvme/nbft.h	/^	__u8 subnet_mask_prefix;$/;"	m	struct:nbft_hfi_info_tcp
subnet_mask_prefix	src/nvme/nbft.h	/^	__u8 subnet_mask_prefix;$/;"	m	struct:nbft_info_hfi_info_tcp
subnqn	src/nvme/types.h	/^	char			subnqn[NVME_NQN_LENGTH];$/;"	m	struct:nvme_id_ctrl
subnqn	src/nvme/types.h	/^	char		subnqn[NVME_NQN_LENGTH];$/;"	m	struct:nvmf_disc_log_entry
subnqn	src/nvme/types.h	/^	char	subnqn[NVME_NQN_LENGTH];$/;"	m	struct:nvme_persistent_event_log
subsys_nqn	src/nvme/nbft.h	/^	char *subsys_nqn;$/;"	m	struct:nbft_info_subsystem_ns
subsys_ns_nqn_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj subsys_ns_nqn_obj;$/;"	m	struct:nbft_ssns	typeref:struct:nbft_ssns::nbft_heap_obj
subsys_port_id	src/nvme/nbft.h	/^	__le16 subsys_port_id;$/;"	m	struct:nbft_ssns
subsys_port_id	src/nvme/nbft.h	/^	__u16 subsys_port_id;$/;"	m	struct:nbft_info_subsystem_ns
subsys_traddr_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj subsys_traddr_obj;$/;"	m	struct:nbft_ssns	typeref:struct:nbft_ssns::nbft_heap_obj
subsys_trsvcid_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj subsys_trsvcid_obj;$/;"	m	struct:nbft_ssns	typeref:struct:nbft_ssns::nbft_heap_obj
subsysname	test/tree.c	/^	const char *subsysname;$/;"	m	struct:test_data	file:
subsysnqn	libnvme/tests/create-ctrl-obj.py	/^subsysnqn = nvme.NVME_DISC_SUBSYS_NAME$/;"	v
subsysnqn	libnvme/tests/gc.py	/^        subsysnqn=nvme.NVME_DISC_SUBSYS_NAME,$/;"	v
subsysnqn	src/nvme/private.h	/^	char *subsysnqn;$/;"	m	struct:nvme_ctrl
subsysnqn	src/nvme/private.h	/^	char *subsysnqn;$/;"	m	struct:nvme_subsystem
subsysnqn	src/nvme/types.h	/^	char		subsysnqn[NVME_NQN_LENGTH];$/;"	m	struct:nvmf_connect_data
subsysnqn	test/tree.c	/^	const char *subsysnqn;$/;"	m	struct:test_data	file:
subsystem	libnvme/tests/gc.py	/^subsystem = host.subsystems()$/;"	v
subsystem	libnvme/tests/gc.py	/^subsystem= None$/;"	v
subsystem_ns_list	src/nvme/nbft.h	/^	struct nbft_info_subsystem_ns **subsystem_ns_list;$/;"	m	struct:nbft_info	typeref:struct:nbft_info::nbft_info_subsystem_ns
subsystems	src/nvme/private.h	/^	struct list_head subsystems;$/;"	m	struct:nvme_host	typeref:struct:nvme_host::list_head
subsystype	src/nvme/private.h	/^	char *subsystype;$/;"	m	struct:nvme_subsystem
subtype	src/nvme/types.h	/^	__u8			subtype;$/;"	m	struct:nvmf_ext_die
subtype	src/nvme/types.h	/^	__u8		subtype;$/;"	m	struct:nvmf_disc_log_entry
subtypes	src/nvme/fabrics.c	/^static const char * const subtypes[] = {$/;"	v	file:
supported	src/nvme/types.h	/^	__u8	supported[32];$/;"	m	struct:nvme_id_directives
sw	src/nvme/types.h	/^	__u8	sw;$/;"	m	struct:nvme_mi_nvm_ss_health_status
sws	src/nvme/types.h	/^	__le32	sws;$/;"	m	struct:nvme_streams_directive_params
syscall_munge	scripts/kernel-doc	/^sub syscall_munge() {$/;"	s
sysfs_dir	src/nvme/private.h	/^	char *sysfs_dir;$/;"	m	struct:nvme_ctrl
sysfs_dir	src/nvme/private.h	/^	char *sysfs_dir;$/;"	m	struct:nvme_ns
sysfs_dir	src/nvme/private.h	/^	char *sysfs_dir;$/;"	m	struct:nvme_path
sysfs_dir	src/nvme/private.h	/^	char *sysfs_dir;$/;"	m	struct:nvme_subsystem
tas	src/nvme/api-types.h	/^	__u8	tas;$/;"	m	struct:nvme_dim_args
tcp	src/nvme/types.h	/^	struct tcp {$/;"	s	union:nvmf_tsas
tcp	src/nvme/types.h	/^	} tcp;$/;"	m	union:nvmf_tsas	typeref:struct:nvmf_tsas::tcp
tcp_info	src/nvme/nbft.h	/^	struct nbft_info_hfi_info_tcp tcp_info;$/;"	m	struct:nbft_info_hfi	typeref:struct:nbft_info_hfi::nbft_info_hfi_info_tcp
tdl	src/nvme/types.h	/^	__le32		tdl;$/;"	m	struct:nvmf_dim_data
tegcap	src/nvme/types.h	/^	__u8	tegcap[16];$/;"	m	struct:nvme_end_grp_config_desc
tel	src/nvme/types.h	/^	__le32			tel;$/;"	m	struct:nvmf_ext_die
temp_sensor	src/nvme/types.h	/^	__le16			temp_sensor[8];$/;"	m	struct:nvme_smart_log
temperature	src/nvme/types.h	/^	__u8			temperature[2];$/;"	m	struct:nvme_smart_log
templates_path	doc/conf.py	/^templates_path = ['_templates']$/;"	v
test	test/mi-mctp.c	/^struct test {$/;"	s	file:
test	test/mi.c	/^struct test {$/;"	s	file:
test_admin_err_mi_resp	test/mi.c	/^static void test_admin_err_mi_resp(nvme_mi_ep_t ep)$/;"	f	file:
test_admin_err_mi_resp_cb	test/mi.c	/^static int test_admin_err_mi_resp_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_err_nvme_resp	test/mi.c	/^static void test_admin_err_nvme_resp(nvme_mi_ep_t ep)$/;"	f	file:
test_admin_err_nvme_resp_cb	test/mi.c	/^static int test_admin_err_nvme_resp_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_format_nvm	test/mi.c	/^static void test_admin_format_nvm(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_format_nvm_cb	test/mi.c	/^static int test_admin_format_nvm_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_fw_commit	test/mi.c	/^static void test_admin_fw_commit(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_fw_commit_cb	test/mi.c	/^static int test_admin_fw_commit_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_fw_download	test/mi.c	/^static void test_admin_fw_download(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_fw_download_cb	test/mi.c	/^static int test_admin_fw_download_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_get_features_cb	test/mi.c	/^static int test_admin_get_features_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_get_log_split	test/mi.c	/^static void test_admin_get_log_split(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_get_log_split_cb	test/mi.c	/^static int test_admin_get_log_split_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_id	test/mi.c	/^static void test_admin_id(nvme_mi_ep_t ep)$/;"	f	file:
test_admin_id_active_ns	test/mi.c	/^static void test_admin_id_active_ns(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_active_ns_list	test/mi.c	/^static void test_admin_id_active_ns_list(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_alloc_ns	test/mi.c	/^static void test_admin_id_alloc_ns(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_alloc_ns_list	test/mi.c	/^static void test_admin_id_alloc_ns_list(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_cb	test/mi.c	/^static int test_admin_id_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_id_ns_cb	test/mi.c	/^static int test_admin_id_ns_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_id_ns_list_cb	test/mi.c	/^static int test_admin_id_ns_list_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_id_nsid_ctrl_list	test/mi.c	/^static void test_admin_id_nsid_ctrl_list(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_nsid_ctrl_list_cb	test/mi.c	/^static int test_admin_id_nsid_ctrl_list_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_id_secondary_ctrl_list	test/mi.c	/^static void test_admin_id_secondary_ctrl_list(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_id_secondary_ctrl_list_cb	test/mi.c	/^static int test_admin_id_secondary_ctrl_list_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_invalid_formats	test/mi.c	/^static void test_admin_invalid_formats(nvme_mi_ep_t ep)$/;"	f	file:
test_admin_invalid_formats_cb	test/mi.c	/^static int test_admin_invalid_formats_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_ns_attach	test/mi.c	/^static void test_admin_ns_attach(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_ns_attach_cb	test/mi.c	/^static int test_admin_ns_attach_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_ns_detach	test/mi.c	/^static void test_admin_ns_detach(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_ns_mgmt_cb	test/mi.c	/^static int test_admin_ns_mgmt_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_ns_mgmt_create	test/mi.c	/^static void test_admin_ns_mgmt_create(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_ns_mgmt_delete	test/mi.c	/^static void test_admin_ns_mgmt_delete(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_resp_err	test/mi-mctp.c	/^static void test_admin_resp_err(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_admin_resp_sizes	test/mi-mctp.c	/^static void test_admin_resp_sizes(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_admin_sanitize_nvm	test/mi.c	/^static void test_admin_sanitize_nvm(struct nvme_mi_ep *ep)$/;"	f	file:
test_admin_sanitize_nvm_cb	test/mi.c	/^static int test_admin_sanitize_nvm_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_admin_set_features_cb	test/mi.c	/^static int test_admin_set_features_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_close_log	test/utils.c	/^void test_close_log(FILE *fd)$/;"	f
test_ctrl	test/test.c	/^static int test_ctrl(nvme_ctrl_t c)$/;"	f	file:
test_ctrl_lifetime	test/mi.c	/^static void test_ctrl_lifetime(nvme_mi_ep_t ep)$/;"	f	file:
test_data	test/tree.c	/^struct test_data test_data[] = {$/;"	v	typeref:struct:test_data
test_data	test/tree.c	/^struct test_data {$/;"	s	file:
test_data	test/uuid.c	/^static struct test_data test_data[] = {$/;"	v	typeref:struct:test_data	file:
test_data	test/uuid.c	/^struct test_data {$/;"	s	file:
test_endpoint_lifetime	test/mi.c	/^static void test_endpoint_lifetime(nvme_mi_ep_t ep)$/;"	f	file:
test_entries_error	test/ioctl/discovery.c	/^static void test_entries_error(nvme_ctrl_t c)$/;"	f	file:
test_five_entries	test/ioctl/discovery.c	/^static void test_five_entries(nvme_ctrl_t c)$/;"	f	file:
test_four_entries	test/ioctl/discovery.c	/^static void test_four_entries(nvme_ctrl_t c)$/;"	f	file:
test_genctr_change	test/ioctl/discovery.c	/^static void test_genctr_change(nvme_ctrl_t c)$/;"	f	file:
test_genctr_error	test/ioctl/discovery.c	/^static void test_genctr_error(nvme_ctrl_t c)$/;"	f	file:
test_get_features_data	test/mi.c	/^static void test_get_features_data(nvme_mi_ep_t ep)$/;"	f	file:
test_get_features_nodata	test/mi.c	/^static void test_get_features_nodata(nvme_mi_ep_t ep)$/;"	f	file:
test_header_error	test/ioctl/discovery.c	/^static void test_header_error(nvme_ctrl_t c)$/;"	f	file:
test_invalid_crc	test/mi.c	/^static void test_invalid_crc(nvme_mi_ep_t ep)$/;"	f	file:
test_invalid_crc_cb	test/mi.c	/^static int test_invalid_crc_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_ioctl_tag	test/mi-mctp.c	/^int test_ioctl_tag(int sd, unsigned long req, struct mctp_ioc_tag_ctl *ctl)$/;"	f
test_ipaddrs_eq	test/test-util.c	/^static bool test_ipaddrs_eq() {$/;"	f	file:
test_lookup_1	test/tree.c	/^static void test_lookup_1(void)$/;"	f	file:
test_lookup_2	test/tree.c	/^static void test_lookup_2(void)$/;"	f	file:
test_max_retries	test/ioctl/discovery.c	/^static void test_max_retries(nvme_ctrl_t c)$/;"	f	file:
test_meson	scripts/build.sh	/^test_meson() {$/;"	f
test_mi_config_get_mtu	test/mi.c	/^static void test_mi_config_get_mtu(nvme_mi_ep_t ep)$/;"	f	file:
test_mi_config_get_mtu_cb	test/mi.c	/^static int test_mi_config_get_mtu_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_mi_config_set_freq	test/mi.c	/^static void test_mi_config_set_freq(nvme_mi_ep_t ep)$/;"	f	file:
test_mi_config_set_freq_cb	test/mi.c	/^static int test_mi_config_set_freq_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_mi_config_set_freq_invalid	test/mi.c	/^static void test_mi_config_set_freq_invalid(nvme_mi_ep_t ep)$/;"	f	file:
test_mi_resp_err	test/mi-mctp.c	/^static void test_mi_resp_err(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mi_resp_unaligned	test/mi-mctp.c	/^static void test_mi_resp_unaligned(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mi_resp_unaligned_expected	test/mi-mctp.c	/^static void test_mi_resp_unaligned_expected(nvme_mi_ep_t ep,$/;"	f	file:
test_mpr_admin	test/mi-mctp.c	/^static void test_mpr_admin(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mpr_admin_quirked	test/mi-mctp.c	/^static void test_mpr_admin_quirked(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mpr_mi	test/mi-mctp.c	/^static void test_mpr_mi(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mpr_mprt_zero	test/mi-mctp.c	/^static void test_mpr_mprt_zero(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mpr_timeout_clamp	test/mi-mctp.c	/^static void test_mpr_timeout_clamp(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_mpr_timeouts	test/mi-mctp.c	/^static void test_mpr_timeouts(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_muon	scripts/build.sh	/^test_muon() {$/;"	f
test_namespace	test/test.c	/^static int test_namespace(nvme_ns_t n)$/;"	f	file:
test_no_entries	test/ioctl/discovery.c	/^static void test_no_entries(nvme_ctrl_t c)$/;"	f	file:
test_nvme_get_version	test/test-util.c	/^static bool test_nvme_get_version(enum nvme_version type, const char * exp_str) {$/;"	f	file:
test_peer	test/mi-mctp.c	/^static struct test_peer {$/;"	s	file:
test_peer	test/mi-mctp.c	/^} test_peer;$/;"	v	typeref:struct:test_peer	file:
test_poll_err	test/mi-mctp.c	/^static void test_poll_err(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_poll_timeout	test/mi-mctp.c	/^static void test_poll_timeout(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_poll_timeout_value	test/mi-mctp.c	/^static void test_poll_timeout_value(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_print_log_buf	test/utils.c	/^void test_print_log_buf(FILE *logfd)$/;"	f
test_rc	test/uuid.c	/^static int test_rc;$/;"	v	file:
test_read_mi_data	test/mi-mctp.c	/^static void test_read_mi_data(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_read_mi_data	test/mi.c	/^static void test_read_mi_data(nvme_mi_ep_t ep)$/;"	f	file:
test_read_mi_data_cb	test/mi.c	/^static int test_read_mi_data_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_read_nbft_file	libnvme/tests/test-nbft.py	/^    def test_read_nbft_file(self):$/;"	m	class:Testclass
test_resp_csi	test/mi.c	/^static void test_resp_csi(nvme_mi_ep_t ep)$/;"	f	file:
test_resp_csi_cb	test/mi.c	/^static int test_resp_csi_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_resp_hdr_small	test/mi.c	/^static void test_resp_hdr_small(nvme_mi_ep_t ep)$/;"	f	file:
test_resp_hdr_small_cb	test/mi.c	/^static int test_resp_hdr_small_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_resp_invalid_type	test/mi.c	/^static void test_resp_invalid_type(nvme_mi_ep_t ep)$/;"	f	file:
test_resp_invalid_type_cb	test/mi.c	/^static int test_resp_invalid_type_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_resp_req	test/mi.c	/^static void test_resp_req(nvme_mi_ep_t ep)$/;"	f	file:
test_resp_req_cb	test/mi.c	/^static int test_resp_req_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_rx_err	test/mi-mctp.c	/^static void test_rx_err(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_scan_ctrl_list	test/mi.c	/^static void test_scan_ctrl_list(nvme_mi_ep_t ep)$/;"	f	file:
test_scan_ctrl_list_cb	test/mi.c	/^static int test_scan_ctrl_list_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_set_features	test/mi.c	/^static void test_set_features(nvme_mi_ep_t ep)$/;"	f	file:
test_set_transport_callback	test/mi.c	/^static void test_set_transport_callback(nvme_mi_ep_t ep, test_submit_cb cb,$/;"	f	file:
test_set_tx_mic	test/mi-mctp.c	/^static void test_set_tx_mic(struct test_peer *peer)$/;"	f	file:
test_setup_log	test/utils.c	/^FILE *test_setup_log(void)$/;"	f
test_submit_cb	test/mi.c	/^typedef int (*test_submit_cb)(struct nvme_mi_ep *ep,$/;"	t	file:
test_transport	test/mi.c	/^static const struct nvme_mi_transport test_transport = {$/;"	v	typeref:struct:nvme_mi_transport	file:
test_transport_close	test/mi.c	/^static void test_transport_close(struct nvme_mi_ep *ep)$/;"	f	file:
test_transport_data	test/mi.c	/^struct test_transport_data {$/;"	s	file:
test_transport_desc_ep	test/mi.c	/^static int test_transport_desc_ep(struct nvme_mi_ep *ep,$/;"	f	file:
test_transport_describe	test/mi.c	/^static void test_transport_describe(nvme_mi_ep_t ep)$/;"	f	file:
test_transport_fail	test/mi.c	/^static void test_transport_fail(nvme_mi_ep_t ep)$/;"	f	file:
test_transport_fail_cb	test/mi.c	/^static int test_transport_fail_cb(struct nvme_mi_ep *ep,$/;"	f	file:
test_transport_magic	test/mi.c	/^static const int test_transport_magic = 0x74657374;$/;"	v	file:
test_transport_resp_calc_mic	test/mi.c	/^static void test_transport_resp_calc_mic(struct nvme_mi_resp *resp)$/;"	f	file:
test_transport_submit	test/mi.c	/^static int test_transport_submit(struct nvme_mi_ep *ep,$/;"	f	file:
test_tx_err	test/mi-mctp.c	/^static void test_tx_err(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_tx_none	test/mi-mctp.c	/^static void test_tx_none(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
test_tx_short	test/mi-mctp.c	/^static void test_tx_short(nvme_mi_ep_t ep, struct test_peer *peer)$/;"	f	file:
tests	test/mi-mctp.c	/^} tests[] = {$/;"	v	typeref:struct:test
tests	test/mi.c	/^} tests[] = {$/;"	v	typeref:struct:test
this_hfi_is_default_route	src/nvme/nbft.h	/^	bool this_hfi_is_default_route;$/;"	m	struct:nbft_info_hfi_info_tcp
thm_temp1_total_time	src/nvme/types.h	/^	__le32			thm_temp1_total_time;$/;"	m	struct:nvme_smart_log
thm_temp1_trans_count	src/nvme/types.h	/^	__le32			thm_temp1_trans_count;$/;"	m	struct:nvme_smart_log
thm_temp2_total_time	src/nvme/types.h	/^	__le32			thm_temp2_total_time;$/;"	m	struct:nvme_smart_log
thm_temp2_trans_count	src/nvme/types.h	/^	__le32			thm_temp2_trans_count;$/;"	m	struct:nvme_smart_log
threshold	src/nvme/types.h	/^	__u8	threshold;$/;"	m	struct:nvme_thermal_exc_event
timeout	src/nvme/api-types.h	/^	__u32	timeout;$/;"	m	struct:nvme_dim_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_capacity_mgmt_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_copy_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_dev_self_test_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_directive_recv_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_directive_send_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_dsm_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_format_nvm_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_fw_commit_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_fw_download_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_get_features_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_get_lba_status_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_get_log_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_get_property_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_identify_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_io_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_io_mgmt_recv_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_io_mgmt_send_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_lockdown_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_ns_attach_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_ns_mgmt_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_resv_acquire_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_resv_register_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_resv_release_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_resv_report_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_sanitize_nvm_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_security_receive_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_security_send_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_set_features_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_set_property_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_virtual_mgmt_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_zns_append_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_zns_mgmt_recv_args
timeout	src/nvme/api-types.h	/^	__u32 timeout;$/;"	m	struct:nvme_zns_mgmt_send_args
timeout	src/nvme/fabrics.h	/^	__u32 timeout;$/;"	m	struct:nvme_get_discovery_args
timeout	src/nvme/private.h	/^	unsigned int timeout;$/;"	m	struct:nvme_mi_ep
timeout_ms	src/nvme/ioctl.h	/^	__u32	timeout_ms;$/;"	m	struct:nvme_passthru_cmd
timeout_ms	src/nvme/ioctl.h	/^	__u32	timeout_ms;$/;"	m	struct:nvme_uring_cmd
timeout_ms	src/nvme/ioctl.h	/^	__u32   timeout_ms;$/;"	m	struct:nvme_passthru_cmd64
timeout_ms	test/ioctl/mock.h	/^	uint32_t timeout_ms;$/;"	m	struct:mock_cmd
timeouts	test/mi-mctp.c	/^	unsigned int timeouts[2];$/;"	m	struct:mpr_poll_info	file:
timespec_cmp	src/nvme/mi.c	198;"	d	file:
timespec_sub	src/nvme/mi.c	203;"	d	file:
timestamp	src/nvme/types.h	/^	__u8 timestamp[6];$/;"	m	struct:nvme_timestamp
tl	src/nvme/api-types.h	/^	__u32 tl;$/;"	m	struct:nvme_security_send_args
tll	src/nvme/types.h	/^	__le64	tll;$/;"	m	struct:nvme_persistent_event_log
tls	src/nvme/fabrics.h	/^	bool tls;$/;"	m	struct:nvme_fabrics_config
tls	src/nvme/private.h	/^	bool tls;$/;"	m	struct:nvme_fabric_options
tls_key	src/nvme/fabrics.h	/^	int tls_key;$/;"	m	struct:nvme_fabrics_config
tls_key	src/nvme/private.h	/^	bool tls_key;$/;"	m	struct:nvme_fabric_options
tmra	src/nvme/types.h	/^		struct nvme_mi_vpd_tra tmra;$/;"	m	union:nvme_mi_vpd_mr_common::__anon5	typeref:struct:nvme_mi_vpd_mr_common::__anon5::nvme_mi_vpd_tra
tnev	src/nvme/types.h	/^	__le32	tnev;$/;"	m	struct:nvme_persistent_event_log
tnvmcap	src/nvme/types.h	/^	__u8			tnvmcap[16];$/;"	m	struct:nvme_id_ctrl
tnvmcap	src/nvme/types.h	/^	__u8	tnvmcap[16];$/;"	m	struct:nvme_mi_vpd_mra
tnvmsetcap	src/nvme/types.h	/^	__u8			tnvmsetcap[16];$/;"	m	struct:nvme_nvmset_attr
tools_build_muon	scripts/build.sh	/^tools_build_muon() {$/;"	f
tools_build_samurai	scripts/build.sh	/^tools_build_samurai() {$/;"	f
tos	src/nvme/fabrics.h	/^	int tos;$/;"	m	struct:nvme_fabrics_config
tos	src/nvme/private.h	/^	bool tos;$/;"	m	struct:nvme_fabric_options
tostr_test	test/uuid.c	/^static void tostr_test(struct test_data *test)$/;"	f	file:
tracepoint_munge	scripts/kernel-doc	/^sub tracepoint_munge($) {$/;"	s
traddr	libnvme/tests/create-ctrl-obj.py	/^traddr    = '127.0.0.1'$/;"	v
traddr	src/nvme/nbft.h	/^	char traddr[40];$/;"	m	struct:nbft_info_subsystem_ns
traddr	src/nvme/private.h	/^	bool traddr;$/;"	m	struct:nvme_fabric_options
traddr	src/nvme/private.h	/^	char *traddr;$/;"	m	struct:nvme_ctrl
traddr	src/nvme/types.h	/^	char			traddr[NVMF_TRADDR_SIZE];$/;"	m	struct:nvmf_ext_die
traddr	src/nvme/types.h	/^	char		traddr[NVMF_TRADDR_SIZE];$/;"	m	struct:nvmf_disc_log_entry
traddr	test/tree.c	/^	const char *traddr;$/;"	m	struct:test_data	file:
traddr_is_hostname	src/nvme/fabrics.c	/^static bool traddr_is_hostname(nvme_root_t r, nvme_ctrl_t c)$/;"	f	file:
traddr_is_hostname	src/nvme/tree.c	/^static bool traddr_is_hostname(const char *transport, const char *traddr)$/;"	f	file:
transport	libnvme/tests/create-ctrl-obj.py	/^transport = 'loop'$/;"	v
transport	libnvme/tests/gc.py	/^        transport='loop',$/;"	v
transport	src/nvme/nbft.h	/^	char transport[8];$/;"	m	struct:nbft_info_hfi
transport	src/nvme/nbft.h	/^	char transport[8];$/;"	m	struct:nbft_info_subsystem_ns
transport	src/nvme/private.h	/^	bool transport;$/;"	m	struct:nvme_fabric_options
transport	src/nvme/private.h	/^	char *transport;$/;"	m	struct:nvme_ctrl
transport	src/nvme/private.h	/^	const struct nvme_mi_transport *transport;$/;"	m	struct:nvme_mi_ep	typeref:struct:nvme_mi_ep::nvme_mi_transport
transport	test/tree.c	/^	const char *transport;$/;"	m	struct:test_data	file:
transport_data	src/nvme/private.h	/^	void *transport_data;$/;"	m	struct:nvme_mi_ep
treq	src/nvme/types.h	/^	__u8			treq;$/;"	m	struct:nvmf_ext_die
treq	src/nvme/types.h	/^	__u8		treq;$/;"	m	struct:nvmf_disc_log_entry
treqs	src/nvme/fabrics.c	/^static const char * const treqs[] = {$/;"	v	file:
trflags	src/nvme/nbft.h	/^	__le16 trflags;$/;"	m	struct:nbft_ssns
trinfo_obj	src/nvme/nbft.h	/^	struct nbft_heap_obj trinfo_obj;$/;"	m	struct:nbft_hfi	typeref:struct:nbft_hfi::nbft_heap_obj
trinfo_version	src/nvme/nbft.h	/^	__u8 trinfo_version;$/;"	m	struct:nbft_hfi_info_tcp
trsvcid	libnvme/tests/create-ctrl-obj.py	/^trsvcid   = '8009'$/;"	v
trsvcid	src/nvme/nbft.h	/^	char *trsvcid;$/;"	m	struct:nbft_info_subsystem_ns
trsvcid	src/nvme/private.h	/^	bool trsvcid;$/;"	m	struct:nvme_fabric_options
trsvcid	src/nvme/private.h	/^	char *trsvcid;$/;"	m	struct:nvme_ctrl
trsvcid	src/nvme/types.h	/^	char			trsvcid[NVMF_TRSVCID_SIZE];$/;"	m	struct:nvmf_ext_die
trsvcid	src/nvme/types.h	/^	char		trsvcid[NVMF_TRSVCID_SIZE];$/;"	m	struct:nvmf_disc_log_entry
trsvcid	test/tree.c	/^	const char *trsvcid;$/;"	m	struct:test_data	file:
trtype	src/nvme/nbft.h	/^	__u8 trtype;$/;"	m	struct:nbft_hfi
trtype	src/nvme/nbft.h	/^	__u8 trtype;$/;"	m	struct:nbft_hfi_info_tcp
trtype	src/nvme/nbft.h	/^	__u8 trtype;$/;"	m	struct:nbft_ssns
trtype	src/nvme/types.h	/^	__u8			trtype;$/;"	m	struct:nvmf_ext_die
trtype	src/nvme/types.h	/^	__u8		trtype;$/;"	m	struct:nvmf_disc_log_entry
trtype	src/nvme/types.h	/^	__u8	trtype;$/;"	m	struct:nvme_error_log_page
trtype_spec_info	src/nvme/types.h	/^	__le16	trtype_spec_info;$/;"	m	struct:nvme_error_log_page
trtype_to_string	src/nvme/nbft.c	/^static char *trtype_to_string(__u8 transport_type)$/;"	f	file:
trtypes	src/nvme/fabrics.c	/^const char * const trtypes[] = {$/;"	v
ts	src/nvme/types.h	/^	__le64	ts;$/;"	m	struct:nvme_persistent_event_log
ts	src/nvme/types.h	/^	struct nvme_timestamp ts;$/;"	m	struct:nvme_fdp_event	typeref:struct:nvme_fdp_event::nvme_timestamp
tsas	src/nvme/types.h	/^	union nvmf_tsas		tsas;$/;"	m	struct:nvmf_ext_die	typeref:union:nvmf_ext_die::nvmf_tsas
tsas	src/nvme/types.h	/^	union nvmf_tsas	tsas;$/;"	m	struct:nvmf_disc_log_entry	typeref:union:nvmf_disc_log_entry::nvmf_tsas
tx_buf	test/mi-mctp.c	/^	unsigned char	tx_buf[MAX_BUFSIZ];$/;"	m	struct:test_peer	file:
tx_buf_len	test/mi-mctp.c	/^	size_t		tx_buf_len;$/;"	m	struct:test_peer	file:
tx_data	test/mi-mctp.c	/^	void		*tx_data;$/;"	m	struct:test_peer	file:
tx_errno	test/mi-mctp.c	/^	int		tx_errno;$/;"	m	struct:test_peer	file:
tx_fn	test/mi-mctp.c	/^	rx_test_fn	tx_fn;$/;"	m	struct:test_peer	file:
tx_fn_mpr_poll	test/mi-mctp.c	/^static int tx_fn_mpr_poll(struct test_peer *peer, void *buf, size_t len)$/;"	f	file:
tx_fn_res	test/mi-mctp.c	/^	int		tx_fn_res;$/;"	m	struct:test_peer	file:
tx_mpr	test/mi-mctp.c	/^static int tx_mpr(struct test_peer *peer, void *buf, size_t len)$/;"	f	file:
tx_none	test/mi-mctp.c	/^static int tx_none(struct test_peer *peer, void *buf, size_t len)$/;"	f	file:
tx_rc	test/mi-mctp.c	/^	ssize_t		tx_rc; \/* if zero, return the recvmsg len *\/$/;"	m	struct:test_peer	file:
type	src/nvme/mi.h	/^	__u8	type;$/;"	m	struct:nvme_mi_msg_hdr
type	src/nvme/types.h	/^	__u8	type;$/;"	m	struct:nvme_lba_range_type_entry
type	src/nvme/types.h	/^	__u8	type;$/;"	m	struct:nvme_metadata_element_desc
type	src/nvme/types.h	/^	__u8	type;$/;"	m	struct:nvme_mi_osc
type	src/nvme/types.h	/^	__u8	type;$/;"	m	struct:nvme_mi_vpd_mr_common
type	src/nvme/types.h	/^	__u8	type;$/;"	m	struct:nvme_mi_vpd_telem
type	src/nvme/types.h	/^	__u8  type;$/;"	m	struct:nvme_fdp_event
type_specific	src/nvme/types.h	/^	__u8  type_specific[16];$/;"	m	struct:nvme_fdp_event
typeid	examples/mi-mctp.c	/^	int typeid;$/;"	m	struct:__anon9	file:
u16	ccan/ccan/short_types/short_types.h	/^typedef uint16_t u16;$/;"	t
u32	ccan/ccan/short_types/short_types.h	/^typedef uint32_t u32;$/;"	t
u64	ccan/ccan/short_types/short_types.h	/^typedef uint64_t u64;$/;"	t
u8	ccan/ccan/short_types/short_types.h	/^typedef uint8_t u8;$/;"	t
uevent_fd	examples/telemetry-listen.c	/^	int uevent_fd;$/;"	m	struct:events	file:
unalloc_dom_cap	src/nvme/types.h	/^	__u8	unalloc_dom_cap[16];$/;"	m	struct:nvme_id_domain_attr
unique_discovery_ctrl	src/nvme/private.h	/^	bool unique_discovery_ctrl;$/;"	m	struct:nvme_ctrl
unsafe_shutdowns	src/nvme/types.h	/^	__u8			unsafe_shutdowns[16];$/;"	m	struct:nvme_smart_log
unvmcap	src/nvme/types.h	/^	__u8			unvmcap[16];$/;"	m	struct:nvme_id_ctrl
unvmsetcap	src/nvme/types.h	/^	__u8			unvmsetcap[16];$/;"	m	struct:nvme_nvmset_attr
uri	src/nvme/nbft.h	/^	char *uri;$/;"	m	struct:nbft_info_discovery
usage	scripts/build.sh	/^usage() {$/;"	f
usage	scripts/kernel-doc	/^sub usage {$/;"	s
usage	scripts/release.sh	/^usage() {$/;"	f
uuid	src/nvme/private.h	/^	unsigned char uuid[NVME_UUID_LEN];$/;"	m	struct:nvme_ns
uuid	src/nvme/types.h	/^	__u8			uuid[16];$/;"	m	struct:nvme_id_uuid_list_entry
uuid	test/uuid.c	/^	unsigned char uuid[NVME_UUID_LEN];$/;"	m	struct:test_data	file:
uuid_from_device_tree	src/nvme/fabrics.c	/^static int uuid_from_device_tree(char *system_uuid)$/;"	f	file:
uuid_from_dmi	src/nvme/fabrics.c	/^static int uuid_from_dmi(char *system_uuid)$/;"	f	file:
uuid_from_dmi_entries	src/nvme/fabrics.c	/^static int uuid_from_dmi_entries(char *system_uuid)$/;"	f	file:
uuid_from_product_uuid	src/nvme/fabrics.c	/^static int uuid_from_product_uuid(char *system_uuid)$/;"	f	file:
uuidx	src/nvme/api-types.h	/^	__u8 uuidx;$/;"	m	struct:nvme_get_features_args
uuidx	src/nvme/api-types.h	/^	__u8 uuidx;$/;"	m	struct:nvme_get_log_args
uuidx	src/nvme/api-types.h	/^	__u8 uuidx;$/;"	m	struct:nvme_identify_args
uuidx	src/nvme/api-types.h	/^	__u8 uuidx;$/;"	m	struct:nvme_lockdown_args
uuidx	src/nvme/api-types.h	/^	__u8 uuidx;$/;"	m	struct:nvme_set_features_args
val	src/nvme/types.h	/^	__u8	val[0];$/;"	m	struct:nvme_metadata_element_desc
value	src/nvme/api-types.h	/^	__u64 *value;$/;"	m	struct:nvme_get_property_args
value	src/nvme/api-types.h	/^	__u64 value;$/;"	m	struct:nvme_set_property_args
vdi	src/nvme/types.h	/^	__u8			vdi;$/;"	m	struct:nvme_st_result
ver	src/nvme/types.h	/^	__le32			ver;$/;"	m	struct:nvme_id_ctrl
verify	src/nvme/nbft.c	77;"	d	file:
version	src/nvme/nbft.h	/^	__u8 version;$/;"	m	struct:nbft_hfi_info_tcp
version	src/nvme/nbft.h	/^	__u8 version;$/;"	m	struct:nbft_ssns_ext_info
version	src/nvme/types.h	/^	__u8  version;$/;"	m	struct:nvme_fdp_config_log
vfn	src/nvme/types.h	/^	__le16 vfn;$/;"	m	struct:nvme_secondary_ctrl
vid	src/nvme/types.h	/^	__le16			vid;$/;"	m	struct:nvme_id_ctrl
vid	src/nvme/types.h	/^	__le16	vid;$/;"	m	struct:nvme_mi_read_ctrl_info
vid	src/nvme/types.h	/^	__le16	vid;$/;"	m	struct:nvme_persistent_event_log
vifrsm	src/nvme/types.h	/^	__le16	vifrsm;$/;"	m	struct:nvme_primary_ctrl_cap
vifrt	src/nvme/types.h	/^	__le32	vifrt;$/;"	m	struct:nvme_primary_ctrl_cap
vigran	src/nvme/types.h	/^	__le16	vigran;$/;"	m	struct:nvme_primary_ctrl_cap
viprt	src/nvme/types.h	/^	__le16	viprt;$/;"	m	struct:nvme_primary_ctrl_cap
virfa	src/nvme/types.h	/^	__le32	virfa;$/;"	m	struct:nvme_primary_ctrl_cap
virfap	src/nvme/types.h	/^	__le16	virfap;$/;"	m	struct:nvme_primary_ctrl_cap
vlan	src/nvme/nbft.h	/^	__le16 vlan;$/;"	m	struct:nbft_hfi_info_tcp
vlan	src/nvme/nbft.h	/^	__u16 vlan;$/;"	m	struct:nbft_info_hfi_info_tcp
vn	src/nvme/types.h	/^	__u8	vn;$/;"	m	struct:nvme_mi_vpd_tra
vndr_assign_fw_commit_rc	src/nvme/types.h	/^	__le16	vndr_assign_fw_commit_rc;$/;"	m	struct:nvme_fw_commit_event
vpd	src/nvme/types.h	/^	__u8	vpd[];$/;"	m	struct:nvme_mi_vpd_hdr
vpd_addr	src/nvme/types.h	/^	__u8	vpd_addr;$/;"	m	struct:nvme_mi_port_smb
vqfrsm	src/nvme/types.h	/^	__le16	vqfrsm;$/;"	m	struct:nvme_primary_ctrl_cap
vqfrt	src/nvme/types.h	/^	__le32	vqfrt;$/;"	m	struct:nvme_primary_ctrl_cap
vqgran	src/nvme/types.h	/^	__le16	vqgran;$/;"	m	struct:nvme_primary_ctrl_cap
vqprt	src/nvme/types.h	/^	__le16	vqprt;$/;"	m	struct:nvme_primary_ctrl_cap
vqrfa	src/nvme/types.h	/^	__le32	vqrfa;$/;"	m	struct:nvme_primary_ctrl_cap
vqrfap	src/nvme/types.h	/^	__le16	vqrfap;$/;"	m	struct:nvme_primary_ctrl_cap
vs	src/nvme/types.h	/^	__u8			vs[1024];$/;"	m	struct:nvme_id_ctrl
vs	src/nvme/types.h	/^	__u8			vs[256];$/;"	m	struct:nvme_zns_id_ns
vs	src/nvme/types.h	/^	__u8			vs[2];$/;"	m	struct:nvme_st_result
vs	src/nvme/types.h	/^	__u8			vs[3704];$/;"	m	struct:nvme_id_ns
vs	src/nvme/types.h	/^	__u8	vs;$/;"	m	struct:nvme_error_log_page
vs	src/nvme/types.h	/^	__u8  vs[24];$/;"	m	struct:nvme_fdp_event
vsil	src/nvme/types.h	/^	__le16	vsil;$/;"	m	struct:nvme_persistent_event_entry
vsl	src/nvme/types.h	/^	__u8     vsl;$/;"	m	struct:nvme_id_ctrl_nvm
vss	src/nvme/types.h	/^	__u8  vss;$/;"	m	struct:nvme_fdp_config_desc
vwc	src/nvme/types.h	/^	__u8			vwc;$/;"	m	struct:nvme_id_ctrl
vwci	src/nvme/types.h	/^	__u8			vwci;$/;"	m	struct:nvme_id_ctrl
wait_events	examples/telemetry-listen.c	/^static void wait_events(fd_set *fds, struct events *e, int nr)$/;"	f	file:
warning_temp_time	src/nvme/types.h	/^	__le32			warning_temp_time;$/;"	m	struct:nvme_smart_log
wctemp	src/nvme/types.h	/^	__le16			wctemp;$/;"	m	struct:nvme_id_ctrl
wp	src/nvme/types.h	/^	__le64	wp;$/;"	m	struct:nvme_zns_desc
wusl	src/nvme/types.h	/^	__u8     wusl;$/;"	m	struct:nvme_id_ctrl_nvm
wzsl	src/nvme/types.h	/^	__u8     wzsl;$/;"	m	struct:nvme_id_ctrl_nvm
za	src/nvme/types.h	/^	__u8	za;$/;"	m	struct:nvme_zns_desc
zai	src/nvme/types.h	/^	__u8	zai;$/;"	m	struct:nvme_zns_desc
zasl	src/nvme/types.h	/^	__u8	zasl;$/;"	m	struct:nvme_zns_id_ctrl
zcap	src/nvme/types.h	/^	__le64	zcap;$/;"	m	struct:nvme_zns_desc
zdes	src/nvme/types.h	/^	__u8	zdes;$/;"	m	struct:nvme_zns_lbafe
zid	src/nvme/types.h	/^	__le64		zid[NVME_ZNS_CHANGED_ZONES_MAX];$/;"	m	struct:nvme_zns_changed_zone_log
zns	src/nvme/types.h	/^		} __attribute__((packed)) zns;$/;"	m	union:nvme_ns_mgmt_host_sw_specified::__anon6	typeref:struct:nvme_ns_mgmt_host_sw_specified::__anon6::__anon7
znsco	src/nvme/types.h	/^			__u8	znsco;$/;"	m	struct:nvme_ns_mgmt_host_sw_specified::__anon6::__anon7
zoc	src/nvme/types.h	/^	__le16			zoc;$/;"	m	struct:nvme_zns_id_ns
zra	src/nvme/api-types.h	/^	enum nvme_zns_recv_action zra;$/;"	m	struct:nvme_zns_mgmt_recv_args	typeref:enum:nvme_zns_mgmt_recv_args::nvme_zns_recv_action
zras_feat	src/nvme/api-types.h	/^	bool zras_feat;$/;"	m	struct:nvme_zns_mgmt_recv_args
zrasf	src/nvme/api-types.h	/^	__u16 zrasf;$/;"	m	struct:nvme_zns_mgmt_recv_args
zrwacap	src/nvme/types.h	/^	__u8			zrwacap;$/;"	m	struct:nvme_zns_id_ns
zrwafg	src/nvme/types.h	/^	__le16			zrwafg;$/;"	m	struct:nvme_zns_id_ns
zrwasz	src/nvme/types.h	/^	__le16			zrwasz;$/;"	m	struct:nvme_zns_id_ns
zs	src/nvme/types.h	/^	__u8	zs;$/;"	m	struct:nvme_zns_desc
zsa	src/nvme/api-types.h	/^	enum nvme_zns_send_action zsa;$/;"	m	struct:nvme_zns_mgmt_send_args	typeref:enum:nvme_zns_mgmt_send_args::nvme_zns_send_action
zsaso	src/nvme/api-types.h	/^	__u8 zsaso;$/;"	m	struct:nvme_zns_mgmt_send_args
zslba	src/nvme/api-types.h	/^	__u64 zslba;$/;"	m	struct:nvme_zns_append_args
zslba	src/nvme/types.h	/^	__le64	zslba;$/;"	m	struct:nvme_zns_desc
zsze	src/nvme/types.h	/^	__le64	zsze;$/;"	m	struct:nvme_zns_lbafe
zt	src/nvme/types.h	/^	__u8	zt;$/;"	m	struct:nvme_zns_desc
